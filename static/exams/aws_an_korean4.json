[
    {
        "Question Number": "1",
        "Situation": "한 금융 서비스 회사가 AWS에 호스팅된 백엔드 서비스에 대한 안전한 접근이 필요한 새로운 웹 애플리케이션을 구현하고 있습니다. 이 애플리케이션은 서로 다른 지리적 지역에 위치한 사용자에게 높은 가용성과 낮은 지연 시간을 유지해야 합니다. 회사는 온프레미스 네트워크에서 AWS 호스팅 서비스에 접근할 수 있도록 공용 인터넷을 통과하지 않도록 보장하고자 합니다. 네트워크 엔지니어는 온프레미스 네트워크와 AWS 간의 안전하고 효율적인 연결을 제공하는 솔루션을 설계하는 임무를 맡고 있습니다.",
        "Question": "온프레미스 네트워크와 AWS 호스팅 서비스 간의 개인적이고 안전한 연결을 설정하는 데 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Site-to-Site VPN을 사용하여 VPN 연결을 설정하여 AWS 리소스에 대한 안전한 연결을 활성화합니다.",
            "2": "AWS Transit Gateway를 설정하고 VPC 연결을 생성하여 온프레미스 네트워크와 여러 VPC를 연결합니다.",
            "3": "온프레미스 네트워크와 AWS VPC 간에 VPC 피어링을 구현하여 직접 통신을 허용합니다.",
            "4": "AWS Direct Connect를 사용하여 개인 가상 인터페이스로 온프레미스 네트워크를 VPC에 직접 연결합니다."
        },
        "Correct Answer": "AWS Direct Connect를 사용하여 개인 가상 인터페이스로 온프레미스 네트워크를 VPC에 직접 연결합니다.",
        "Explanation": "AWS Direct Connect는 전통적인 인터넷 연결에 비해 낮은 지연 시간과 증가된 대역폭을 제공할 수 있는 전용 네트워크 연결을 제공합니다. 개인 가상 인터페이스를 사용함으로써 금융 서비스 회사는 공용 인터넷에 노출되지 않고 안전하게 AWS 호스팅 서비스에 접근할 수 있어 높은 가용성과 낮은 지연 시간을 보장합니다.",
        "Other Options": [
            "AWS Transit Gateway는 여러 VPC와 온프레미스 네트워크를 연결하는 데 유용하지만, 추가적인 복잡성을 초래할 수 있으며 Direct Connect와 같은 수준의 성능이나 보안을 제공하지 않을 수 있습니다.",
            "VPC 피어링은 두 VPC 간의 직접 통신을 허용하지만, 온프레미스 네트워크로 확장되지 않으며 여러 VPC가 관련된 경우 관리 문제를 초래할 수 있습니다.",
            "VPN 연결은 인터넷을 통해 안전한 연결을 제공하지만, 특히 높은 처리량 애플리케이션의 경우 Direct Connect와 같은 전용 연결의 성능 이점을 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 회사는 S3와 RDS에 저장된 민감한 데이터에 접근하기 위해 AWS VPC에 안전하게 연결해야 하는 여러 지사 사무소를 운영하고 있습니다. 그들은 지사 사무소와 AWS 리소스 간의 모든 트래픽이 암호화되도록 보장하고, 안정성과 성능을 위해 전용 연결을 선호합니다. 회사는 이 연결을 설정하기 위한 최선의 옵션을 고려하고 있습니다.",
        "Question": "지사 사무소를 AWS에 연결하면서 암호화된 트래픽을 보장하는 가장 안전하고 신뢰할 수 있는 방법은 무엇입니까?",
        "Options": {
            "1": "지사 사무소 네트워크와 AWS 리소스를 호스팅하는 VPC 간에 VPC 피어링 연결을 구성합니다.",
            "2": "AWS VPN을 사용하여 지사 사무소를 VPC에 연결하는 VPN 연결을 설정하여 모든 트래픽이 암호화되도록 합니다.",
            "3": "공용 VIF를 사용하여 AWS 서비스에 대한 안전한 접근을 허용하는 AWS Direct Connect를 설정합니다.",
            "4": "Direct Connect 게이트웨이를 생성하고 이를 Transit Gateway에 연결하여 여러 지사 사무소의 연결을 관리합니다."
        },
        "Correct Answer": "AWS VPN을 사용하여 지사 사무소를 VPC에 연결하는 VPN 연결을 설정하여 모든 트래픽이 암호화되도록 합니다.",
        "Explanation": "AWS VPN을 사용하여 VPN 연결을 설정하면 VPC에 직접 안전하고 암호화된 연결을 제공합니다. 이 방법은 모든 트래픽이 암호화되도록 보장하여 AWS 서비스에 저장된 민감한 데이터에 접근하는 데 적합합니다.",
        "Other Options": [
            "공용 VIF를 사용하여 AWS Direct Connect를 설정하면 암호화된 연결을 제공하지 않으며, 공용 VIF는 인터넷을 통해 AWS 서비스에 접근할 수 있도록 하여 민감한 데이터 접근에 적합하지 않습니다.",
            "Direct Connect 게이트웨이를 생성하고 이를 Transit Gateway에 연결하는 것은 여러 연결을 관리하는 유효한 솔루션이지만, 트래픽에 대한 암호화를 본질적으로 제공하지 않으며, 이는 이 시나리오의 중요한 요구 사항입니다.",
            "모든 서브넷에 대해 정적 경로를 구성하는 것은 유연하지 않은 라우팅 환경을 초래할 수 있으며, 네트워크의 변화에 효과적으로 대응하지 못해 잘못된 구성이나 CIDR 중복의 위험을 증가시킬 수 있습니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 글로벌 전자상거래 회사가 여러 지역에 걸쳐 AWS 인프라를 관리하고 있습니다. 회사는 효율적인 트래픽 흐름을 보장하기 위해 라우팅을 최적화하고자 합니다. 네트워크 아키텍트는 네트워크 관리를 위해 동적 및 정적 라우팅 프로토콜을 모두 사용하는 것을 고려하고 있습니다. 목표는 경로를 효과적으로 요약하고 CIDR 중복을 피하여 간소화된 라우팅 테이블을 유지하는 것입니다.",
        "Question": "CIDR 중복을 일으키지 않으면서 최적화된 라우팅을 달성하기 위해 네트워크 아키텍트가 구현해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "정적 경로에서 경로 요약을 구현하고 중복 CIDR 범위를 피하기 위해 동적 라우팅 프로토콜을 조정합니다.",
            "2": "모든 서브넷에 대해 정적 경로를 구성하고 이를 라우팅에만 의존하여 CIDR 중복을 방지합니다.",
            "3": "동적 라우팅 프로토콜만 사용하고 정적 경로를 비활성화하여 중복 없이 자동 경로 조정을 보장합니다.",
            "4": "지역 간 트래픽 관리를 위해 동적 라우팅 프로토콜을 설정하고, 특정 중요한 경로에 대해서만 정적 경로를 사용합니다."
        },
        "Correct Answer": "정적 경로에서 경로 요약을 구현하고 중복 CIDR 범위를 피하기 위해 동적 라우팅 프로토콜을 조정합니다.",
        "Explanation": "정적 경로에서 경로 요약을 구현함으로써 네트워크 아키텍트는 라우팅 테이블의 경로 수를 줄여 더 효율적으로 만들 수 있습니다. 동적 라우팅 프로토콜을 조정하여 CIDR 중복을 피하면 라우팅 결정이 명확하고 효율적으로 유지되어 잠재적인 충돌을 방지하고 최적의 트래픽 흐름을 유지할 수 있습니다.",
        "Other Options": [
            "동적 라우팅 프로토콜만 사용하는 것은 복잡한 라우팅 테이블과 증가된 오버헤드를 초래할 수 있으며, 정적 경로는 특정 시나리오에서 더 많은 제어와 효율성을 제공할 수 있습니다.",
            "모든 서브넷에 대해 정적 경로를 구성하는 것은 유연하지 않은 라우팅 환경을 초래할 수 있으며, 네트워크의 변화에 효과적으로 대응하지 못해 잘못된 구성이나 CIDR 중복의 위험을 증가시킬 수 있습니다.",
            "광범위한 트래픽 관리를 위해 동적 라우팅 프로토콜을 설정하고 중요한 경로에 대해서만 정적 경로에 의존하는 것은 일관되지 않은 라우팅 경험과 관리 문제를 초래할 수 있으며, 정적 경로는 네트워크 변화에 적응하지 않습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 회사가 웹 애플리케이션을 AWS로 마이그레이션하고 사용자들이 친숙한 도메인 이름을 사용하여 애플리케이션에 접근할 수 있도록 하기를 원합니다. 애플리케이션은 Amazon VPC에 호스팅되며 높은 가용성과 복원력이 필요합니다. 또한, 회사는 사용자의 지리적 위치에 따라 여러 리소스로 트래픽을 라우팅해야 하며, 최적의 성능과 낮은 지연 시간을 제공해야 합니다.",
        "Question": "다음 구성 중 회사의 요구 사항을 충족하기 위해 Amazon Route 53을 기존 AWS 네트워킹 서비스와 BEST하게 통합할 수 있는 구성은 무엇입니까?",
        "Options": {
            "1": "Route 53을 가중 라우팅 정책으로 구성하고 단일 VPC에 Amazon EC2 인스턴스를 배포합니다.",
            "2": "Route 53을 장애 조치 라우팅으로 설정하고 애플리케이션 앞에 Amazon CloudFront 배포를 배치합니다.",
            "3": "Route 53 지연 기반 라우팅을 구현하고 여러 가용 영역에 구성된 애플리케이션 로드 밸런서를 사용합니다.",
            "4": "Route 53을 지리적 위치 기반 라우팅으로 사용하고 단일 가용 영역에 네트워크 로드 밸런서를 설정합니다."
        },
        "Correct Answer": "Route 53 지연 기반 라우팅을 구현하고 여러 가용 영역에 구성된 애플리케이션 로드 밸런서를 사용합니다.",
        "Explanation": "Route 53 지연 기반 라우팅을 애플리케이션 로드 밸런서와 함께 사용하면 사용자가 가장 낮은 지연 시간을 가진 리소스로 안내되어 성능이 향상됩니다. 또한, 애플리케이션 로드 밸런서를 여러 가용 영역에 분산시키면 높은 가용성과 복원력을 제공하여 회사의 요구를 효과적으로 충족합니다.",
        "Other Options": [
            "Route 53을 지리적 위치 기반 라우팅과 단일 가용 영역의 네트워크 로드 밸런서와 함께 사용하는 것은 필요한 높은 가용성이나 복원력을 제공하지 않으며, 단일 AZ 설정은 단일 실패 지점을 생성합니다.",
            "Route 53을 가중 라우팅 정책과 단일 VPC의 단일 EC2 인스턴스로 구성하면 중복성이 제한되고 낮은 지연 시간이나 높은 가용성을 보장하지 않으므로 요구 사항을 충족하지 못합니다.",
            "Route 53을 장애 조치 라우팅으로 설정하고 CloudFront 배포를 배포하는 것은 글로벌 접근성을 개선할 수 있지만 지연 시간 최적화의 필요성을 직접적으로 해결하지 않으며, 애플리케이션 로드 밸런서 없이 라우팅을 복잡하게 만들 수 있습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "대규모 조직이 온프레미스 데이터 센터와 AWS 리소스를 연결하는 하이브리드 네트워크를 구축하려고 합니다. 이 조직은 대량 데이터 전송을 처리하고 낮은 지연 시간을 제공할 수 있는 신뢰할 수 있는 연결이 필요합니다. 그들은 네트워크 성능을 최적화하기 위해 AWS Direct Connect에 특히 관심이 있습니다. 팀은 AWS에 연결할 수 있는 옵션을 평가하고 있으며, 클라우드에서 작업량을 확장할 때 네트워크가 확장 가능하도록 보장하려고 합니다.",
        "Question": "어떤 연결 방법이 조직에 전용 고속 연결을 제공하면서 서로 다른 지역의 여러 VPC를 통합할 수 있게 해줄까요?",
        "Options": {
            "1": "하이브리드 연결을 처리하고 온프레미스와 클라우드 환경 간의 라우팅을 관리하기 위해 AWS Cloud WAN을 생성합니다.",
            "2": "AWS VPN 연결을 활용하여 온프레미스 데이터 센터를 각 VPC에 개별적으로 안전하게 연결합니다.",
            "3": "AWS Transit Gateway를 설정하여 온프레미스 데이터 센터를 단일 VPC에 연결하고 다른 VPC에 대해 VPC 피어링을 사용합니다.",
            "4": "AWS Direct Connect를 구현하고 Direct Connect 게이트웨이를 사용하여 서로 다른 지역의 여러 VPC에 연결합니다."
        },
        "Correct Answer": "AWS Direct Connect를 구현하고 Direct Connect 게이트웨이를 사용하여 서로 다른 지역의 여러 VPC에 연결합니다.",
        "Explanation": "AWS Direct Connect를 Direct Connect 게이트웨이와 함께 구현하면 조직이 높은 대역폭과 낮은 지연 시간을 가진 전용 연결을 설정할 수 있습니다. 이 설정은 서로 다른 AWS 지역의 여러 VPC에 연결할 수 있게 해주어 확장성과 성능에 대한 요구를 지원합니다.",
        "Other Options": [
            "AWS VPN 연결을 활용하면 오버헤드가 발생하고 대량 데이터 전송에 필요한 전용 대역폭을 제공하지 않을 수 있습니다. 또한 각 VPC에 대해 개별 구성이 필요하여 관리가 복잡해집니다.",
            "AWS Transit Gateway를 설정하여 온프레미스 데이터 센터를 단일 VPC에 연결하면 여러 VPC 연결을 효율적으로 관리할 수 있는 능력이 제한되며, Direct Connect의 고속 이점을 제공하지 않습니다.",
            "AWS Cloud WAN을 생성하면 하이브리드 네트워크 관리에 이점을 제공할 수 있지만, Direct Connect와 비교할 때 최적의 성능과 대량 데이터 전송에 필요한 전용 연결을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "네트워크 아키텍트는 Amazon CloudWatch를 사용하여 네트워크 성능 및 보안과 관련된 특정 메트릭을 모니터링하고 보고하는 책임이 있습니다. 아키텍트는 AWS 환경 내 특정 리소스에 대한 무단 접근 시도를 추적하기 위해 맞춤형 메트릭을 구현해야 합니다.",
        "Question": "아키텍트가 무단 접근 시도를 모니터링하기 위해 CloudWatch에서 맞춤형 메트릭을 생성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Systems Manager를 활용하여 접근 시도에 대한 준수 검사의 결과를 기반으로 맞춤형 CloudWatch 메트릭을 생성합니다.",
            "2": "AWS Lambda를 사용하여 접근 시도를 추적하는 애플리케이션 로그에서 CloudWatch로 직접 맞춤형 메트릭을 푸시합니다.",
            "3": "AWS CloudTrail을 설정하여 모든 API 호출을 기록하고 이러한 로그를 기반으로 CloudWatch 메트릭 생성을 자동화합니다.",
            "4": "Amazon CloudWatch Events를 구성하여 무단 접근과 관련된 특정 API 호출을 캡처하고 이를 메트릭으로 게시합니다."
        },
        "Correct Answer": "AWS Lambda를 사용하여 접근 시도를 추적하는 애플리케이션 로그에서 CloudWatch로 직접 맞춤형 메트릭을 푸시합니다.",
        "Explanation": "AWS Lambda를 사용하면 아키텍트가 특정 이벤트(예: 무단 접근을 나타내는 로그 항목)에 응답하여 코드를 실행하고 이러한 메트릭을 CloudWatch로 직접 푸시할 수 있습니다. 이 접근 방식은 무단 시도를 정의하는 데 유연성을 제공하며, 생성된 메트릭을 기반으로 실시간 모니터링 및 경고를 가능하게 합니다.",
        "Other Options": [
            "Amazon CloudWatch Events를 구성하는 것은 맞춤형 메트릭을 직접 생성하지 않으며, 이벤트에 따라 작업을 트리거할 수 있습니다. 무단 접근 시도와 관련된 로그에서 메트릭을 생성하는 간단한 메커니즘을 제공하지 않습니다.",
            "AWS CloudTrail을 설정하면 API 호출을 기록하지만 이러한 로그를 CloudWatch 메트릭으로 자동으로 변환하지는 않습니다. 이러한 로그를 처리하고 메트릭을 생성하기 위해 추가 단계가 필요하므로 즉각적인 모니터링을 위한 효율성이 떨어집니다.",
            "AWS Systems Manager를 준수 검사에 사용하는 것은 무단 접근 시도에 대한 맞춤형 메트릭 생성과 직접적으로 연관되지 않습니다. Systems Manager는 운영 작업에 더 중점을 두고 있으며, 애플리케이션 로그에서 실시간 메트릭 생성을 위한 것이 아닙니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 회사가 AWS 네트워크 보안 구성이 조직 정책에 따라 일관되게 모니터링되고 준수되는지 확인하고자 합니다. 그들은 관리하는 계정과 리소스가 많아 보안 그룹과 네트워크 접근 규칙을 감사하기 위한 중앙 집중식 솔루션이 필요합니다.",
        "Question": "회사가 여러 계정에 걸쳐 네트워크 보안 구성을 중앙에서 관리하고 감사하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Trusted Advisor를 사용하여 보안 그룹 구성에 대한 모범 사례 권장 사항을 제공합니다.",
            "2": "AWS Config와 Config Rules를 사용하여 보안 그룹과 네트워크 ACL의 준수를 모니터링합니다.",
            "3": "AWS Shield Advanced를 사용하여 네트워크 보안 구성에 대한 실시간 보호 및 감사 로그를 제공합니다.",
            "4": "AWS CloudTrail을 사용하여 모든 계정의 보안 그룹 변경과 관련된 API 호출을 기록합니다."
        },
        "Correct Answer": "AWS Config와 Config Rules를 사용하여 보안 그룹과 네트워크 ACL의 준수를 모니터링합니다.",
        "Explanation": "AWS Config는 구성 및 준수를 정의된 규칙에 따라 지속적으로 모니터링할 수 있게 해줍니다. Config Rules를 사용함으로써 회사는 보안 그룹과 네트워크 ACL이 조직 정책을 준수하도록 보장하고 비준수 구성에 대한 경고를 자동으로 받을 수 있습니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 API 호출 기록에 중점을 두며, 보안 구성의 실시간 준수 모니터링이나 감사 기능을 제공하지 않습니다.",
            "AWS Shield Advanced는 관리형 DDoS 보호 서비스로, 네트워크 보안 구성을 특별히 감사하거나 준수 보고서를 제공하지 않습니다.",
            "AWS Trusted Advisor는 모범 사례 권장 사항을 제공하지만, AWS Config가 제공하는 중앙 집중식 준수 모니터링 및 감사 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "한 기업이 Amazon Route 53에서 관리하는 도메인에 대해 DNSSEC를 구성하여 DNS 응답의 진위를 보장함으로써 보안을 강화하고자 합니다. 이 기업은 DNS 레코드가 서명되고 해당 DS 레코드가 상위 존에 게시되도록 보장하고 싶어합니다. 네트워크 엔지니어는 모범 사례를 준수하면서 이 구성을 구현해야 합니다.",
        "Question": "네트워크 엔지니어가 Amazon Route 53의 도메인에 대해 DNSSEC를 성공적으로 구성하기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "DNS 레코드에 대한 Route 53 헬스 체크를 구성하고, 자동 DNSSEC 서명을 활성화하며, 외부 DNS 서버를 사용합니다.",
            "2": "Route 53 Resolver 엔드포인트를 설정하고, DNSSEC를 비활성화하며, DNS 해석에만 Route 53을 사용합니다.",
            "3": "새로운 호스티드 존을 생성하고, DNSSEC를 비활성화하며, Route 53 외부에서 DNS 레코드를 수동으로 관리합니다.",
            "4": "Route 53 콘솔에서 DNSSEC를 활성화하고, 서명 키를 생성하며, 상위 존에 DS 레코드를 게시합니다."
        },
        "Correct Answer": "Route 53 콘솔에서 DNSSEC를 활성화하고, 서명 키를 생성하며, 상위 존에 DS 레코드를 게시합니다.",
        "Explanation": "Amazon Route 53에서 DNSSEC를 성공적으로 구성하려면 네트워크 엔지니어가 DNSSEC를 활성화하고 필요한 서명 키를 생성하며 상위 존에 DS 레코드를 게시해야 합니다. 이는 DNS 레코드가 적절하게 서명되어 DNS 응답의 인증성과 무결성을 제공하도록 보장합니다.",
        "Other Options": [
            "새로운 호스티드 존을 생성하고 DNSSEC를 비활성화하는 것은 DNSSEC를 통한 보안 강화를 위한 요구 사항을 충족하지 않으며, 레코드 서명이나 DS 레코드 게시를 포함하지 않습니다.",
            "헬스 체크를 구성하고 자동 DNSSEC 서명을 활성화하는 것은 Route 53에서 사용할 수 있는 옵션이 아니며, DNSSEC는 수동으로 활성화하고 구성해야 합니다.",
            "Route 53 Resolver 엔드포인트를 설정하고 DNSSEC를 비활성화하는 것은 보안 강화를 목표로 하지 않으며, DNS 응답에 필요한 보안을 제공하기 위해 DNSSEC를 활성화해야 합니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 금융 서비스 회사가 민감한 고객 데이터를 처리하고 보안 및 성능 기준을 엄격히 준수해야 하는 다계층 애플리케이션을 AWS에 배포하고 있습니다. 애플리케이션 구성 요소는 동일한 리전 내 여러 가용 영역에 분산되어 있습니다. 운영 팀은 최적의 운영과 준수를 보장하기 위해 네트워크 트래픽을 모니터링하고 성능 지표를 분석해야 합니다.",
        "Question": "준수 및 성능 기준을 유지하면서 네트워크 트래픽을 모니터링하고 분석하는 데 가장 적합한 AWS 서비스 조합은 무엇입니까?",
        "Options": {
            "1": "VPC 트래픽 미러링을 사용하여 트래픽을 캡처하고 분석하며, 데이터를 Amazon Kinesis로 전송하여 실시간 처리합니다.",
            "2": "AWS CloudTrail을 구현하여 API 호출을 기록하고 Amazon Inspector를 설정하여 취약성 평가를 수행합니다.",
            "3": "Amazon CloudWatch Logs를 활성화하고 VPC 흐름 로그를 구성하여 네트워크 트래픽 데이터를 캡처합니다.",
            "4": "AWS Config를 사용하여 구성 변경을 추적하고 Amazon CloudWatch를 사용하여 애플리케이션 성능을 시각화합니다."
        },
        "Correct Answer": "VPC 트래픽 미러링을 사용하여 트래픽을 캡처하고 분석하며, 데이터를 Amazon Kinesis로 전송하여 실시간 처리합니다.",
        "Explanation": "VPC 트래픽 미러링은 네트워크 트래픽을 실시간으로 캡처하고 검사할 수 있게 해주며, 이는 성능 분석 및 준수를 보장하는 데 필수적입니다. 이 데이터를 Amazon Kinesis로 전송하면 운영 팀이 트래픽을 효율적으로 처리하고 분석할 수 있습니다.",
        "Other Options": [
            "Amazon CloudWatch Logs를 활성화하고 VPC 흐름 로그를 구성하면 트래픽 패턴에 대한 통찰력을 제공할 수 있지만, VPC 트래픽 미러링이 제공하는 실시간 패킷 수준 가시성을 제공하지는 않습니다.",
            "AWS Config와 CloudWatch는 구성 변경 모니터링 및 지표 시각화에 유용하지만, 상세한 트래픽 분석의 필요성을 특별히 다루지 않습니다.",
            "AWS CloudTrail은 감사 목적으로 API 호출 기록에 중점을 두며, Amazon Inspector는 보안 평가를 위한 것입니다. 두 솔루션 모두 네트워크 트래픽의 실시간 분석을 다루지 않습니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 새로운 웹 애플리케이션을 배포하고 있으며, 전 세계에 분산된 사용자들에게 높은 가용성과 성능을 보장하고자 합니다. 이 회사는 DNS 관리를 위해 Amazon Route 53을 사용하기로 결정했습니다. 그들은 건강 검사를 통한 DNS 로드 밸런싱을 구현하여 사용자를 최상의 성능을 제공하는 인스턴스로 라우팅하고자 합니다.",
        "Question": "회사가 건강 검사가 포함된 DNS 로드 밸런싱을 달성하고 지연 시간에 따라 트래픽을 라우팅하기 위해 어떤 Route 53 기능을 사용해야 합니까?",
        "Options": {
            "1": "건강 검사를 포함한 단순 라우팅을 사용하여 트래픽이 건강한 엔드포인트로만 흐르도록 합니다.",
            "2": "지리적 위치 라우팅을 사용하여 사용자의 지리적 위치에 따라 리소스로 트래픽을 보냅니다.",
            "3": "가중치 라우팅을 사용하여 사용자 트래픽을 여러 리소스에 고르게 분배합니다.",
            "4": "건강 검사가 활성화된 지연 시간 기반 라우팅을 사용하여 트래픽을 가장 낮은 지연 시간 리소스로 유도합니다."
        },
        "Correct Answer": "건강 검사가 활성화된 지연 시간 기반 라우팅을 사용하여 트래픽을 가장 낮은 지연 시간 리소스로 유도합니다.",
        "Explanation": "Route 53의 지연 시간 기반 라우팅은 사용자에게 가장 낮은 지연 시간을 제공하는 AWS 리전으로 트래픽을 라우팅할 수 있게 해줍니다. 건강 검사를 활성화하면 Route 53은 건강한 리소스에만 트래픽을 유도하여 높은 가용성과 성능을 보장합니다.",
        "Other Options": [
            "지리적 위치 라우팅은 사용자의 지리적 위치에 따라 리소스로 사용자를 유도하지만, 글로벌 애플리케이션에서 성능에 중요한 지연 시간을 고려하지 않습니다.",
            "건강 검사가 포함된 단순 라우팅은 한 번에 단일 리소스로만 트래픽을 유도할 수 있으며, 로드 밸런싱 기능을 제공하지 않아 높은 가용성에 적합하지 않습니다.",
            "가중치 라우팅은 미리 정의된 가중치에 따라 트래픽을 분배하지만, 최적의 성능과 신뢰성을 위해 필수적인 지연 시간이나 건강을 고려하지 않습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 조직이 AWS에서 가상 사설 클라우드(VPC) 환경을 구현하고 있으며, 엄격한 보안 정책을 준수하면서 온프레미스 데이터 센터와 VPC 간의 안전한 통신을 보장해야 합니다.",
        "Question": "조직이 네트워크 경계 간의 보안을 강화하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "특정 애플리케이션으로 들어오는 웹 트래픽을 필터링하기 위해 AWS WAF를 설정합니다.",
            "2": "VPC로의 모든 트래픽을 허용하기 위해 네트워크 ACL을 사용합니다.",
            "3": "VPC에서 특정 IP 범위만 허용하도록 보안 그룹을 구성합니다.",
            "4": "암호화 없이 VPC 간의 통신을 허용하기 위해 VPC 피어링을 구현합니다.",
            "5": "IPsec을 사용하여 전송 중인 데이터를 암호화하기 위해 VPN 연결을 설정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "VPC에서 특정 IP 범위만 허용하도록 보안 그룹을 구성합니다.",
            "IPsec을 사용하여 전송 중인 데이터를 암호화하기 위해 VPN 연결을 설정합니다."
        ],
        "Explanation": "보안 그룹을 구성하면 승인된 IP 범위만 VPC의 리소스에 접근할 수 있도록 하여 보안을 강화합니다. IPsec을 사용하여 VPN 연결을 설정하면 온프레미스 데이터 센터와 VPC 간에 전송되는 데이터가 암호화되어 가로채기 및 도청으로부터 보호됩니다.",
        "Other Options": [
            "모든 트래픽을 허용하기 위해 네트워크 ACL을 사용하는 것은 VPC를 불필요한 위험에 노출시키며, 엄격한 보안 정책을 시행하지 않습니다. 네트워크 ACL은 특정 규칙에 따라 트래픽을 제한하도록 구성해야 합니다.",
            "VPC 피어링을 구현하면 여러 VPC 간의 통신이 가능하지만 본질적으로 암호화를 제공하지 않습니다. 암호화가 없으면 데이터가 전송 중에 가로채질 수 있습니다.",
            "AWS WAF를 설정하는 것은 웹 트래픽을 필터링하는 데 유용하지만, 온프레미스 네트워크와 VPC 간의 통신 보안을 구체적으로 다루지는 않습니다. 이는 애플리케이션 계층 보안에 더 중점을 둡니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 금융 서비스 회사가 민감한 고객 데이터를 처리할 새로운 애플리케이션을 AWS에 배포하고 있습니다. 이 회사는 전송 중 및 저장 중인 모든 애플리케이션 흐름이 규정 준수 규정에 따라 안전하게 보호되도록 해야 합니다. 네트워크 엔지니어는 애플리케이션과 데이터베이스 간의 통신을 암호화하고 접근 제어를 효과적으로 관리하는 솔루션을 구현하는 임무를 맡고 있습니다.",
        "Question": "네트워크 엔지니어가 애플리케이션 흐름을 보호하고 규정 준수 요구 사항을 충족하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Key Management Service (KMS)",
            "2": "Amazon CloudFront",
            "3": "AWS Shield Advanced",
            "4": "AWS Web Application Firewall (WAF)"
        },
        "Correct Answer": "AWS Key Management Service (KMS)",
        "Explanation": "AWS Key Management Service (KMS)는 데이터를 보호하는 데 사용되는 암호화 키를 생성하고 제어할 수 있게 해줍니다. 이는 키를 중앙에서 관리할 수 있는 방법을 제공하여, 전송 중 및 저장 중인 민감한 데이터가 암호화되도록 하여 안전한 통신 및 데이터 보호를 위한 규정 준수 요구 사항을 충족합니다.",
        "Other Options": [
            "AWS Shield Advanced는 주로 DDoS 보호 서비스이며, 애플리케이션 데이터 흐름을 보호하기 위한 암호화 또는 키 관리 기능을 제공하지 않습니다.",
            "AWS Web Application Firewall (WAF)는 일반적인 웹 공격으로부터 웹 애플리케이션을 보호하도록 설계되었지만, 민감한 데이터에 대한 규정 준수를 위해 필수적인 데이터 암호화나 암호화 키 관리에 중점을 두지 않습니다.",
            "Amazon CloudFront는 성능과 보안을 향상시키는 콘텐츠 전송 네트워크(CDN) 서비스이지만, 애플리케이션 흐름을 보호하는 데 필요한 암호화 키 관리나 직접적인 데이터 암호화 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "네트워크 아키텍트가 고가용성을 요구하고 트래픽에 따라 자동으로 확장할 수 있는 웹 애플리케이션 솔루션을 설계하고 있습니다. 이 애플리케이션은 서로 다른 가용 영역에 있는 여러 EC2 인스턴스 간에 효율적인 로드 밸런싱을 유지해야 합니다. 이를 달성하기 위한 최선의 접근 방식은 무엇입니까?",
        "Question": "아키텍트가 웹 애플리케이션의 고가용성을 보장하면서 자동 확장과 로드 밸런싱을 통합할 수 있는 방법은 무엇입니까?",
        "Options": {
            "1": "여러 가용 영역에 걸쳐 있는 여러 EC2 인스턴스와 함께 Auto Scaling 그룹 앞에 Application Load Balancer (ALB)를 배포합니다.",
            "2": "고정된 수의 EC2 인스턴스와 함께 Classic Load Balancer (CLB)를 구현하고 인스턴스 수정을 통해 수동으로 확장을 관리합니다.",
            "3": "단일 EC2 인스턴스 앞에 Network Load Balancer (NLB)를 사용하고 CloudWatch 메트릭을 기반으로 수동 확장을 구성합니다.",
            "4": "Auto Scaling 없이 정적 EC2 인스턴스 집합과 함께 Application Load Balancer (ALB)를 활용하여 일관된 성능을 보장합니다."
        },
        "Correct Answer": "여러 가용 영역에 걸쳐 있는 여러 EC2 인스턴스와 함께 Auto Scaling 그룹 앞에 Application Load Balancer (ALB)를 배포합니다.",
        "Explanation": "Application Load Balancer (ALB)를 Auto Scaling 그룹 앞에 배포하면 트래픽이 여러 EC2 인스턴스에 고르게 분산되어 수요에 따라 자동으로 확장됩니다. 이 구성은 여러 가용 영역을 활용하여 가용성과 성능을 극대화합니다.",
        "Other Options": [
            "단일 EC2 인스턴스 앞에 Network Load Balancer (NLB)를 사용하는 것은 중복성과 자동 확장 기능이 부족하여 원하는 고가용성을 제공하지 않습니다.",
            "고정된 수의 EC2 인스턴스와 함께 Classic Load Balancer (CLB)를 구현하면 동적 확장이 불가능합니다. 인스턴스를 수동으로 관리하면 트래픽 급증 시 성능 문제가 발생할 수 있습니다.",
            "정적 EC2 인스턴스 집합과 함께 Application Load Balancer (ALB)를 활용하면 다양한 작업 부하에 적응하고 최적의 자원 활용을 보장하는 데 필수적인 자동 확장의 이점을 무효화합니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "금융 기관은 데이터 보호 및 네트워크 보안에 대한 엄격한 규제 기준을 준수해야 합니다. 기관은 AWS 리소스 간의 모든 트래픽이 암호화되고 리소스에 대한 접근이 엄격하게 통제되도록 해야 합니다.",
        "Question": "어떤 솔루션이 금융 기관이 AWS 리소스에 대한 암호화 및 접근 제어 요구 사항을 충족하는 데 도움이 될까요?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 특정 IP 주소에서만 트래픽을 허용하는 보안 그룹을 생성합니다.",
            "2": "AWS Identity and Access Management (IAM) 정책을 구현하여 특정 리소스에 대한 접근을 제한하고 AWS Key Management Service (KMS)를 활성화하여 암호화합니다.",
            "3": "온프레미스와 AWS 리소스 간에 VPN 연결을 배포하고 AWS Config를 활성화하여 보안 정책 준수를 모니터링합니다.",
            "4": "AWS Shield를 활용하여 DDoS 공격으로부터 보호하고 Amazon CloudFront 배포를 구성하여 콘텐츠를 캐시합니다."
        },
        "Correct Answer": "AWS Identity and Access Management (IAM) 정책을 구현하여 특정 리소스에 대한 접근을 제한하고 AWS Key Management Service (KMS)를 활성화하여 암호화합니다.",
        "Explanation": "IAM 정책을 구현함으로써 금융 기관은 AWS 리소스에 대한 세분화된 접근 제어를 시행할 수 있어, 권한이 있는 사용자만 민감한 데이터에 접근할 수 있도록 보장합니다. AWS KMS를 사용하면 데이터의 저장 및 전송 시 강력한 암호화를 제공하여 데이터 보호에 대한 규제 준수 요구 사항을 충족합니다.",
        "Other Options": [
            "AWS CloudTrail을 사용하여 API 호출을 기록하는 것은 감사에 중요하지만, 전송 중이거나 저장된 데이터에 대한 암호화를 제공하지 않습니다. 트래픽을 제한하기 위한 보안 그룹 생성은 유용하지만 효과적인 암호화 필요성을 해결하지 않습니다.",
            "VPN 연결은 온프레미스와 AWS 간의 트래픽을 보호할 수 있지만 AWS 리소스에 대한 접근을 직접적으로 제어하지는 않습니다. AWS Config는 준수 모니터링에 유용하지만 암호화 기능을 제공하지 않습니다.",
            "AWS Shield는 DDoS 보호에 중점을 두고 있으며 암호화 또는 접근 제어 메커니즘을 제공하지 않습니다. Amazon CloudFront는 성능 및 캐싱에 도움이 될 수 있지만 민감한 데이터에 필요한 보안 및 규제 준수 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "네트워크 아키텍트가 AWS에 대한 인바운드 및 아웃바운드 연결이 모두 필요한 다계층 애플리케이션 솔루션을 설계하는 임무를 맡고 있습니다. 애플리케이션은 공용 및 사설 서브넷이 있는 VPC에 호스팅됩니다. 아키텍트는 이 시나리오에서 인터넷 접근을 위한 최선의 구현 옵션을 결정해야 합니다.",
        "Question": "아키텍트가 AWS에 대한 인바운드 및 아웃바운드 연결을 가능하게 하기 위해 어떤 솔루션 조합을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "사설 서브넷에서 AWS 서비스에 직접 접근하기 위해 VPC 엔드포인트를 구현합니다.",
            "2": "아웃바운드 트래픽을 위해 각 사설 서브넷에 NAT 게이트웨이를 배포합니다.",
            "3": "인터넷 게이트웨이를 생성하고 이를 VPC와 연결합니다.",
            "4": "온프레미스에서 VPC로 모든 트래픽을 라우팅하기 위해 VPN 연결을 구성합니다.",
            "5": "사설 인스턴스로의 인바운드 트래픽을 위해 Application Load Balancer를 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "인터넷 게이트웨이를 생성하고 이를 VPC와 연결합니다.",
            "사설 서브넷에서 AWS 서비스에 직접 접근하기 위해 VPC 엔드포인트를 구현합니다."
        ],
        "Explanation": "인터넷 게이트웨이를 생성하면 공용 서브넷의 인스턴스가 인바운드 및 아웃바운드 트래픽을 위해 인터넷과 직접 통신할 수 있습니다. VPC 엔드포인트를 구현하면 사설 서브넷이 인터넷 접근 없이 AWS 서비스와 통신할 수 있어 보안성과 성능이 향상됩니다.",
        "Other Options": [
            "각 사설 서브넷에 NAT 게이트웨이를 배포하는 것은 필요하지 않으며, 공용 서브넷에 단일 NAT 게이트웨이가 모든 사설 서브넷의 아웃바운드 트래픽을 처리할 수 있어 이 옵션은 비효율적입니다.",
            "VPN 연결 구성은 주로 온프레미스 환경에서 VPC로의 안전하고 사적인 연결을 위한 것이며, 인바운드 및 아웃바운드 트래픽에 대한 인터넷 접근을 직접적으로 촉진하지 않습니다.",
            "Application Load Balancer를 사용하는 것은 여러 대상에 대한 인바운드 트래픽을 분산하는 데 유용하지만 사설 인스턴스에서 아웃바운드 연결을 직접적으로 가능하게 하지는 않습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "네트워크 아키텍트가 AWS에서 공개 웹 계층, 애플리케이션 계층 및 데이터베이스 계층을 포함하는 다계층 애플리케이션 아키텍처를 설계하고 있습니다. 아키텍트는 아키텍처가 데이터 암호화 및 접근 제어와 관련된 엄격한 보안 및 규정 준수 요구 사항을 준수하는지 확인해야 합니다. 아키텍트는 들어오는 트래픽을 처리하고 내부 계층을 보호하기 위해 경계 VPC를 사용하기로 결정했습니다.",
        "Question": "아키텍트가 네트워크 보안 및 규정 준수를 강화하기 위해 구현해야 할 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Lambda를 사용하여 애플리케이션 계층의 사용자 인증을 관리합니다.",
            "2": "웹 계층 앞에 AWS 웹 애플리케이션 방화벽(WAF)을 배포하여 들어오는 트래픽을 필터링합니다.",
            "3": "공용 계층에서 애플리케이션 계층으로의 접근만 허용하는 보안 그룹을 구현합니다.",
            "4": "애플리케이션 계층과 데이터베이스 계층 간의 안전한 데이터 전송을 위해 AWS Direct Connect를 구성합니다.",
            "5": "VPC 흐름 로그를 활성화하여 계층 간의 트래픽 패턴을 모니터링하고 기록합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "웹 계층 앞에 AWS 웹 애플리케이션 방화벽(WAF)을 배포하여 들어오는 트래픽을 필터링합니다.",
            "VPC 흐름 로그를 활성화하여 계층 간의 트래픽 패턴을 모니터링하고 기록합니다."
        ],
        "Explanation": "AWS WAF를 구현하면 애플리케이션 가용성에 영향을 미치거나 보안을 손상시키거나 과도한 리소스를 소비할 수 있는 일반적인 웹 공격으로부터 웹 계층을 보호하는 데 도움이 됩니다. VPC 흐름 로그를 활성화하면 아키텍트가 VPC의 네트워크 인터페이스 간에 이동하는 IP 트래픽에 대한 정보를 캡처할 수 있어 규정 준수 및 보안 모니터링에 중요합니다.",
        "Other Options": [
            "AWS Lambda를 사용자 인증에 사용하는 것은 애플리케이션 보안을 개선할 수 있지만, 아키텍처 전체의 네트워크 보안이나 규정 준수를 직접적으로 강화하지는 않습니다.",
            "접근을 제한하기 위해 보안 그룹을 구현하는 것은 좋은 관행이지만, 설명에서는 규정 준수를 위한 WAF 또는 로깅과 같은 추가 계층의 필요성을 명시하지 않습니다.",
            "AWS Direct Connect는 안전한 데이터 전송에 유용하지만 다계층 설정의 네트워크 아키텍처 보안 및 규정 준수 요구 사항과는 직접적인 관련이 없습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "한 회사가 AWS Direct Connect를 사용하여 온프레미스 데이터 센터와 AWS 환경 간에 전용 네트워크 연결을 설정할 계획입니다. 이 구현을 위해 적절한 하드웨어와 문서가 준비되어 있는지 확인해야 합니다. 네트워크 구현에는 필요한 장비를 수용할 수 있는 콜로케이션 시설도 포함됩니다.",
        "Question": "회사가 네트워크 연결을 구현하기 위해 무엇을 준비해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "중복 인터넷 연결",
            "2": "AWS Direct Connect 게이트웨이",
            "3": "콜로케이션 시설 계약",
            "4": "VLAN 구성 문서",
            "5": "승인서(LOA)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "승인서(LOA)",
            "콜로케이션 시설 계약"
        ],
        "Explanation": "승인서(LOA)는 AWS Direct Connect 위치와의 연결을 설정하는 데 필요하며, 서비스 제공자가 고객을 대신하여 AWS에 연결할 수 있도록 합니다. 또한, 콜로케이션 시설 계약은 Direct Connect 연결을 용이하게 하는 데 필요한 하드웨어를 위한 공간과 전력을 확보하는 데 필요합니다.",
        "Other Options": [
            "VLAN 구성 문서는 Direct Connect 연결을 설정하는 데 필수는 아니지만, 연결이 활성화된 후 VLAN을 구성할 수 있습니다. 이는 초기 요구 사항이 아닙니다.",
            "중복 인터넷 연결은 AWS Direct Connect와 직접적인 관련이 없으며, 이는 전용 회선입니다. 이 옵션은 Direct Connect 구현을 위한 특정 요구 사항을 다루지 않습니다.",
            "AWS Direct Connect 게이트웨이는 Direct Connect 연결을 설정한 후에 사용되는 구성 요소입니다. 이는 준비 요구 사항이 아니라 연결이 활성화된 후 트래픽 라우팅에 사용되는 기능입니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 회사가 가상 사설 클라우드(VPC) 내에서 여러 가상 머신(VM) 간의 통신이 필요한 새로운 애플리케이션을 배포하고 있습니다. 네트워크 엔지니어는 VM들이 외부 간섭 없이 동일한 서브넷 내에서 서로 통신할 수 있도록 해야 합니다. 또한, 회사는 보안을 개선하고 서로 다른 애플리케이션 계층 간의 트래픽 흐름을 제어하기 위해 네트워크를 분할하고자 합니다.",
        "Question": "VM 간의 통신을 허용하면서 네트워크 분할을 달성하기 위해 엔지니어가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "여러 서브넷을 생성하고 트래픽을 허용하도록 라우팅 테이블을 구성합니다.",
            "2": "VM 간의 트래픽을 제한하기 위해 네트워크 접근 제어 목록(ACL)을 배포합니다.",
            "3": "VM을 동일한 서브넷에 유지하면서 VM 간의 트래픽을 제어하기 위해 보안 그룹을 사용합니다.",
            "4": "VLAN을 구현하고 각 VM을 동일한 서브넷 내의 다른 VLAN에 할당합니다."
        },
        "Correct Answer": "VM을 동일한 서브넷에 유지하면서 VM 간의 트래픽을 제어하기 위해 보안 그룹을 사용합니다.",
        "Explanation": "보안 그룹은 인스턴스에 대한 가상 방화벽 역할을 하여 인바운드 및 아웃바운드 트래픽을 제어합니다. 이를 통해 VM에 도달할 수 있는 트래픽을 지정하는 규칙을 생성할 수 있으며, 여전히 동일한 서브넷 내에서 쉽게 통신할 수 있도록 유지합니다.",
        "Other Options": [
            "여러 서브넷을 생성하면 VM이 격리되어 통신이 차단될 수 있으며, 적절한 라우팅 테이블이 구성되지 않는 한 이는 이 시나리오에 필요하지 않습니다.",
            "VLAN을 구현하는 것은 VPC 맥락에서 적용되지 않으며, AWS는 VPC 내에서 평면 네트워킹 모델을 사용하고 VLAN은 일반적으로 온프레미스 네트워크에서 사용됩니다.",
            "네트워크 접근 제어 목록(ACL)을 배포하는 것은 동일한 서브넷 내에서 세부적인 제어를 허용하기보다는 서브넷 수준에서 트래픽을 제어하는 것에 더 관련이 있으며, 이는 보안 그룹이 더 잘 처리합니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "클라우드 아키텍트가 Amazon VPC에 호스팅된 내부 애플리케이션에 대한 접근을 허용하는 보안 아키텍처를 설계하고 있으며, 특정 AWS 서비스만 연결할 수 있도록 보장하고자 합니다. 아키텍트는 이를 위해 AWS PrivateLink를 활용하고자 합니다. AWS PrivateLink를 구현할 때 아키텍트가 염두에 두어야 할 고려사항은 무엇입니까?",
        "Question": "클라우드 아키텍트가 보안 서비스 접근을 위한 아키텍처를 설계할 때 고려해야 할 AWS PrivateLink의 제한 사항은 무엇입니까?",
        "Options": {
            "1": "PrivateLink는 지역 간 접근을 지원하며 IPv6 및 UDP와 함께 사용할 수 있습니다.",
            "2": "PrivateLink는 동일 지역 내의 서비스에만 사용할 수 있으며, 가용성 영역을 조정하기 위해 AWS와 협력이 필요합니다.",
            "3": "PrivateLink는 모든 지역에서 TCP 및 UDP 프로토콜과 원활하게 작동하도록 설계되었습니다.",
            "4": "PrivateLink는 구성 없이 인터넷을 통해 서비스에 직접 접근할 수 있도록 허용합니다."
        },
        "Correct Answer": "PrivateLink는 동일 지역 내의 서비스에만 사용할 수 있으며, 가용성 영역을 조정하기 위해 AWS와 협력이 필요합니다.",
        "Explanation": "AWS PrivateLink는 실제로 동일 지역 내의 서비스에 제한되어 있으며, 높은 가용성을 보장하기 위해 인터페이스 엔드포인트에 대한 가용성 영역을 정확하게 구성하기 위해 AWS와의 조정이 필요할 수 있습니다.",
        "Other Options": [
            "이 옵션은 PrivateLink가 지역 간 접근을 지원하지 않으며, IPv4 및 TCP 프로토콜만 지원하기 때문에 잘못된 것입니다.",
            "이 옵션은 PrivateLink가 인터넷을 통한 직접 접근을 제공하지 않으며, 서비스를 인터넷에 노출하지 않고 사설 연결을 생성하기 때문에 잘못된 것입니다.",
            "이 옵션은 PrivateLink가 TCP만 지원하고 UDP와는 작동하지 않으며, 동일 지역에 제한되어 있기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 여러 지리적 지역의 사용자에게 낮은 지연 시간과 높은 가용성을 요구하는 글로벌 웹 애플리케이션을 배포하고 있습니다. 애플리케이션 아키텍처에는 콘텐츠 전송 네트워크로 Amazon CloudFront와 애플리케이션의 가용성과 성능을 최적화하기 위한 AWS Global Accelerator가 포함되어 있습니다. 솔루션 아키텍트는 애플리케이션의 트래픽이 효율적으로 관리되고 가장 가까운 지역 엔드포인트로 라우팅되도록 해야 합니다.",
        "Question": "최적의 트래픽 관리를 위해 Amazon CloudFront와 AWS Global Accelerator를 통합하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Global Accelerator를 엔드포인트로 하는 애플리케이션 로드 밸런서로 구성하고, CloudFront 배포를 Global Accelerator의 DNS 이름으로 지정하여 트래픽을 라우팅합니다.",
            "2": "Route 53을 사용하여 CloudFront 배포에 대한 DNS 레코드를 관리하고, AWS Global Accelerator를 구성하여 CloudFront 엔드포인트에 대한 지연 시간을 기반으로 트래픽을 라우팅합니다.",
            "3": "Amazon CloudFront와 AWS Global Accelerator 간의 직접 통합을 설정하고 API Gateway를 사용하여 트래픽을 적절한 지역 리소스로 관리하고 라우팅합니다.",
            "4": "각 AWS 지역에 CloudFront 배포를 배포하고 AWS Global Accelerator를 사용하여 지리적 위치에 따라 가장 가까운 배포로 트래픽을 유도합니다."
        },
        "Correct Answer": "AWS Global Accelerator를 엔드포인트로 하는 애플리케이션 로드 밸런서로 구성하고, CloudFront 배포를 Global Accelerator의 DNS 이름으로 지정하여 트래픽을 라우팅합니다.",
        "Explanation": "이 옵션은 AWS Global Accelerator의 가용성과 성능을 개선하는 능력을 활용하여 Amazon CloudFront와 효과적으로 통합하며, 애플리케이션 로드 밸런서가 관리하는 가장 가까운 지역 엔드포인트로 트래픽을 유도합니다. 이 설정은 지연 시간을 최적화하고 전 세계 사용자에게 원활한 경험을 제공합니다.",
        "Other Options": [
            "이 옵션은 CloudFront와 AWS Global Accelerator 간의 존재하지 않는 직접 통합을 제안합니다. API Gateway는 설명된 맥락에서 CloudFront 배포의 트래픽 라우팅을 관리할 수 없습니다.",
            "각 지역에 별도의 CloudFront 배포를 배포하면 복잡성이 증가하고 비효율성이 발생할 수 있습니다. Global Accelerator는 단일 엔드포인트로 트래픽을 지능적으로 라우팅하도록 설계되었으며, 여러 배포가 아닙니다.",
            "Route 53을 DNS 관리에 사용하는 것은 유효한 접근 방식이지만 AWS Global Accelerator의 기능을 효과적으로 활용하지 않습니다. Global Accelerator는 성능과 가용성을 최적화하기 위해 트래픽을 라우팅하는 주요 수단이어야 합니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 회사가 AWS에서 마이크로서비스 아키텍처를 배포하고 있으며, Amazon ECS를 컨테이너 오케스트레이션에, AWS Lambda를 서버리스 기능에 활용하고 있습니다. 보안 팀은 이 아키텍처와 관련된 다양한 위협 모델을 식별했으며, 이는 산업 규정을 준수하기 위해 해결해야 합니다.",
        "Question": "회사가 마이크로서비스와 제3자 서비스 간의 통신을 보호하기 위해 우선적으로 고려해야 할 위협 모델은 무엇입니까?",
        "Options": {
            "1": "마이크로서비스와 제3자 서비스 간의 모든 전송 데이터에 대해 종단 간 암호화를 설정합니다.",
            "2": "마이크로서비스 아키텍처를 대상으로 하는 DDoS 공격으로부터 보호하기 위해 AWS Shield를 사용합니다.",
            "3": "마이크로서비스와 제3자 서비스에서 AWS 리소스에 대한 접근을 제어하기 위해 엄격한 IAM 정책을 구현합니다.",
            "4": "마이크로서비스로 들어오는 트래픽을 필터링하고 일반적인 웹 공격으로부터 보호하기 위해 웹 애플리케이션 방화벽(WAF)을 배포합니다."
        },
        "Correct Answer": "마이크로서비스와 제3자 서비스 간의 모든 전송 데이터에 대해 종단 간 암호화를 설정합니다.",
        "Explanation": "종단 간 암호화를 설정하면 마이크로서비스와 제3자 서비스 간에 교환되는 데이터가 도청 및 중간자 공격에 대해 안전하게 보호되며, 이는 민감한 데이터가 전송될 수 있는 마이크로서비스 아키텍처에서 매우 중요합니다.",
        "Other Options": [
            "엄격한 IAM 정책을 구현하는 것은 접근을 제어하는 데 필수적이지만, 전송 중 데이터의 보안을 직접적으로 다루지 않으며, 이는 마이크로서비스 통신에서 중요한 문제입니다.",
            "AWS Shield는 DDoS 공격으로부터 보호를 제공하지만, 마이크로서비스와 제3자 서비스 간의 통신되는 데이터의 보안을 특별히 제공하지 않으며, 이는 보다 즉각적인 위협입니다.",
            "웹 애플리케이션 방화벽(WAF)을 배포하면 웹 공격으로부터 보호하는 데 도움이 될 수 있지만, 전송 중 데이터의 보안을 본질적으로 보장하지 않으며, 이는 기밀성과 무결성을 유지하는 데 중요합니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "한 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있으며, 자원에 대한 신뢰할 수 있는 DNS 솔루션을 구성해야 합니다. 이 회사는 애플리케이션에서 수행되는 DNS 쿼리가 서로 다른 AWS 계정에 호스팅된 도메인을 포함하여 내부 및 외부 도메인 이름을 모두 해결할 수 있어야 한다고 요구합니다.",
        "Question": "회사가 요구 사항을 충족하기 위해 어떤 DNS 구성을 구현해야 합니까?",
        "Options": {
            "1": "모든 도메인에 대해 개인 호스팅 영역을 설정합니다.",
            "2": "DNS 해석을 위해 Amazon CloudFront를 사용합니다.",
            "3": "조건부 포워딩 규칙이 있는 Route 53 Resolver를 사용합니다.",
            "4": "Amazon EC2 인스턴스를 DNS 서버로 구성합니다."
        },
        "Correct Answer": "조건부 포워딩 규칙이 있는 Route 53 Resolver를 사용합니다.",
        "Explanation": "조건부 포워딩 규칙이 있는 Route 53 Resolver를 사용하면 회사는 도메인 이름에 따라 다른 DNS 서버로 DNS 쿼리를 포워딩할 수 있어, 여러 AWS 계정에 걸쳐 내부 및 외부 도메인을 효과적으로 해결할 수 있습니다.",
        "Other Options": [
            "모든 도메인에 대해 개인 호스팅 영역을 설정하면 DNS 해석이 특정 VPC로 제한되며, 계정 간 해석이나 외부 도메인 이름 해석이 허용되지 않습니다.",
            "DNS 해석을 위해 Amazon CloudFront를 사용하는 것은 적절하지 않습니다. CloudFront는 주로 웹 콘텐츠를 배포하는 데 사용되는 콘텐츠 전송 네트워크이기 때문에 DNS 쿼리를 해석하는 데 사용되지 않습니다.",
            "Amazon EC2 인스턴스를 DNS 서버로 구성하는 것은 추가 관리가 필요하고 Route 53 Resolver와 동일한 수준의 신뢰성과 성능을 제공하지 않을 수 있으므로 이 시나리오에 최적이 아닙니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 회사가 여러 지리적 지역의 사용자에게 동적 콘텐츠를 제공하는 웹 애플리케이션의 성능을 개선할 계획입니다. 현재 애플리케이션은 단일 AWS 리전의 Amazon EC2 인스턴스에 호스팅되고 있습니다. 사용자 경험을 향상시키고 지연 시간을 줄이기 위해 회사는 콘텐츠 배포 네트워크(CDN)를 사용하는 것을 고려하고 있습니다.",
        "Question": "회사가 Amazon CloudFront를 효과적으로 활용하여 동적 콘텐츠를 배포하기 위해 어떤 디자인 패턴을 구현해야 합니까?",
        "Options": {
            "1": "CloudFront를 정적 콘텐츠에만 사용하고 동적 콘텐츠는 원본 서버에서 직접 제공합니다.",
            "2": "AWS Global Accelerator 앞에 CloudFront를 배포하여 성능과 가용성을 향상시킵니다.",
            "3": "CloudFront를 구성하여 엣지 위치에서 동적 콘텐츠를 캐시하고 캐시에 대한 짧은 TTL(생존 시간)을 설정합니다.",
            "4": "CloudFront를 설정하여 모든 헤더를 원본으로 전달하여 동적 콘텐츠가 개인화되도록 합니다."
        },
        "Correct Answer": "CloudFront를 구성하여 엣지 위치에서 동적 콘텐츠를 캐시하고 캐시에 대한 짧은 TTL(생존 시간)을 설정합니다.",
        "Explanation": "동적 콘텐츠를 짧은 TTL로 캐시하도록 CloudFront를 구성하면 엣지 위치에서 자주 접근되는 콘텐츠를 제공하여 최종 사용자에 대한 지연 시간을 줄이고 성능을 향상시킬 수 있습니다. 이 접근 방식은 동적 콘텐츠 제공의 필요성과 캐싱의 장점을 균형 있게 조화시킵니다.",
        "Other Options": [
            "CloudFront를 정적 콘텐츠에만 사용하는 것은 동적 콘텐츠 가속을 위한 기능을 활용하지 않으며, 이는 이 시나리오에서 성능을 개선하는 데 중요합니다.",
            "AWS Global Accelerator 앞에 CloudFront를 배포하는 것은 불필요합니다. CloudFront 자체가 콘텐츠 전달을 최적화하도록 설계되었기 때문에 추가 계층은 중복됩니다.",
            "CloudFront를 설정하여 모든 헤더를 전달하면 캐시 미스가 발생할 수 있으며, 이는 CDN 사용의 이점을 감소시켜 요청이 항상 원본 서버로 돌아가도록 하여 성능 개선을 무효화합니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "네트워크 아키텍트가 복잡한 AWS 네트워크 인프라의 건강과 성능을 모니터링하기 위한 솔루션을 설계하고 있습니다. 이 솔루션은 최적의 성능과 신속한 문제 해결을 보장하기 위해 지연 시간, 패킷 손실 및 처리량과 같은 네트워크 메트릭에 대한 실시간 가시성을 제공해야 합니다.",
        "Question": "아키텍트가 이러한 네트워크 메트릭을 효과적으로 수집하고 시각화하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "네트워크 구성과 관련된 API 호출을 모니터링하기 위해 AWS CloudTrail을 사용합니다.",
            "2": "모범 사례에 따라 네트워크 성능을 평가하기 위해 AWS Trusted Advisor를 사용합니다.",
            "3": "시간에 따른 네트워크 리소스 구성의 변경 사항을 추적하기 위해 AWS Config를 사용합니다.",
            "4": "실시간으로 네트워크 메트릭을 수집하고 시각화하기 위해 Amazon CloudWatch를 사용합니다."
        },
        "Correct Answer": "실시간으로 네트워크 메트릭을 수집하고 시각화하기 위해 Amazon CloudWatch를 사용합니다.",
        "Explanation": "Amazon CloudWatch는 실시간으로 메트릭을 수집하고 시각화하도록 설계되어 있으며, 지연 시간, 패킷 손실 및 처리량과 같은 네트워크 성능 메트릭을 모니터링하는 데 이상적인 선택입니다. 대시보드와 경고를 제공하여 사용자에게 문제를 알리고, 신속한 문제 해결 및 성능 최적화를 가능하게 합니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 AWS 서비스의 변경 사항을 추적하기 위해 API 호출을 기록하고 모니터링하는 데 중점을 두지만, 네트워크 성능에 대한 실시간 메트릭을 제공하지 않습니다.",
            "AWS Config는 시간에 따른 구성 준수 및 변경 사항을 모니터링하는 데 사용되며, 실시간 성능 메트릭을 위한 것이 아니므로 지연 시간 및 처리량 모니터링 요구 사항에 적합하지 않습니다.",
            "AWS Trusted Advisor는 모범 사례 권장 사항을 제공하지만, 네트워크 성능에 대한 실시간 모니터링이나 상세한 메트릭을 제공하지 않으므로 아키텍트의 요구를 충족하기에 불충분합니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "한 금융 기관이 AWS 서비스를 사용하여 민감한 결제 정보를 처리하고 있습니다. 그들은 규정 준수 요구 사항을 충족하기 위해 온프레미스 네트워크와 AWS 간에 전송되는 모든 데이터가 암호화되도록 해야 합니다. 그들은 전송 중 암호화를 구현하기 위한 다양한 AWS 솔루션을 고려하고 있습니다. 안전한 데이터 전송을 달성하기 위해 무엇을 선택해야 합니까?",
        "Question": "온프레미스 네트워크와 AWS 간의 전송 중 데이터 암호화를 제공하면서 산업 표준 준수를 보장하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "모든 데이터 전송이 전송 중 암호화를 사용하도록 요구하는 Amazon S3 버킷 정책을 구성합니다.",
            "2": "여러 VPC 간의 안전한 통신을 촉진하기 위해 암호화가 활성화된 Transit Gateway를 설정합니다.",
            "3": "수신 트래픽의 암호화를 처리하기 위해 SSL 종료가 있는 Application Load Balancer를 사용합니다.",
            "4": "온프레미스와 AWS 간에 전송되는 모든 데이터를 보호하기 위해 AWS Direct Connect를 통한 VPN 연결을 구현합니다."
        },
        "Correct Answer": "온프레미스와 AWS 간에 전송되는 모든 데이터를 보호하기 위해 AWS Direct Connect를 통한 VPN 연결을 구현합니다.",
        "Explanation": "AWS Direct Connect를 통한 VPN 사용은 온프레미스 네트워크와 AWS 간에 민감한 데이터를 전송하기 위한 안전하고 암호화된 연결을 제공하여 보안 표준 준수를 보장하고 전송 중 민감한 정보를 보호합니다.",
        "Other Options": [
            "SSL 종료가 있는 Application Load Balancer는 수신 트래픽만 보호하며 온프레미스에서 AWS로 이동하는 트래픽에 대한 암호화를 제공하지 않아 민감한 데이터가 노출될 수 있습니다.",
            "Amazon S3의 버킷 정책은 데이터가 정지 상태에서 암호화되도록 강제할 수 있지만, 온프레미스에서 AWS로 전송되는 동안 데이터가 암호화되도록 보장하지 않습니다.",
            "Transit Gateway는 VPC 간의 통신을 촉진할 수 있지만, VPN 또는 Direct Connect와 같은 다른 서비스와 결합되지 않는 한 전송 중 데이터에 대한 암호화를 본질적으로 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 회사가 AWS 환경에서 네트워크 운영을 자동화하기 위해 이벤트 기반 아키텍처를 구현하고 있습니다. 그들은 특정 이벤트(예: 새로운 인스턴스 시작)가 발생할 때마다 필요한 네트워크 구성이 자동으로 적용되도록 하기를 원합니다.",
        "Question": "회사가 이벤트 기반 네트워크 자동화를 효과적으로 구현하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Config와 함께 Amazon EC2 Auto Scaling",
            "2": "Amazon EventBridge와 함께 AWS Systems Manager",
            "3": "Amazon SNS와 함께 AWS Step Functions",
            "4": "Amazon CloudWatch Events와 함께 AWS Lambda"
        },
        "Correct Answer": "Amazon CloudWatch Events와 함께 AWS Lambda",
        "Explanation": "AWS Lambda는 Amazon CloudWatch Events에 의해 캡처된 이벤트에 의해 트리거될 수 있습니다. 이를 통해 특정 이벤트(예: 인스턴스 시작)가 발생할 때마다 네트워크 구성을 실시간으로 업데이트하여 매우 자동화되고 반응적인 네트워크 운영 환경을 제공합니다.",
        "Other Options": [
            "AWS Config와 함께 Amazon EC2 Auto Scaling은 주로 EC2 인스턴스 스케일링 및 규정 준수를 관리하는 데 사용되지만, 네트워크 운영에 대한 직접적인 이벤트 기반 자동화 기능을 제공하지 않습니다.",
            "Amazon SNS와 함께 AWS Step Functions는 각각 워크플로를 조정하고 알림을 전송하는 데 중점을 두며, 특정 이벤트에 대한 네트워크 구성을 직접 자동화하지 않습니다.",
            "Amazon EventBridge와 함께 AWS Systems Manager는 자동화 작업에 사용될 수 있지만, AWS Lambda와 CloudWatch Events의 조합에 비해 이벤트 기반 네트워크 자동화에 대해 직접적이거나 효율적이지 않습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "한 회사가 서로 다른 지역에 여러 AWS VPC를 보유하고 있으며, 각 VPC는 자체 라우팅 테이블을 가지고 있습니다. 네트워크 엔지니어는 보안 표준을 유지하면서 VPC 간 통신을 최적화하는 임무를 맡고 있습니다. 엔지니어는 자동 라우트 업데이트를 촉진하기 위해 동적 라우팅 프로토콜을 구현하는 것을 고려하고 있습니다. 회사는 현재 VPC 피어링 연결에 대해 정적 라우트를 사용하고 있습니다. 이러한 VPC 간의 라우팅 효율성을 향상시키기 위한 최선의 접근 방식은 무엇입니까?",
        "Question": "네트워크 엔지니어가 여러 AWS VPC 간의 라우팅 효율성을 개선하기 위해 구현해야 할 라우팅 프로토콜은 무엇입니까?",
        "Options": {
            "1": "향상된 제어를 위한 정적 라우트",
            "2": "간단한 라우팅 요구 사항을 위한 RIP",
            "3": "VPC 간 통신을 위한 BGP",
            "4": "VPC 내 통신을 위한 OSPF"
        },
        "Correct Answer": "VPC 간 통신을 위한 BGP",
        "Explanation": "BGP(경계 게이트웨이 프로토콜)는 여러 VPC 간의 동적 라우트 관리를 위해 잘 적합하여 자동 업데이트 및 효율적인 라우팅 결정을 가능하게 하며, 특히 대규모 또는 복잡한 네트워크 환경에서 효과적입니다. 이는 라우트 집합을 지원하고 정적 라우팅에 비해 더 나은 확장성을 제공합니다.",
        "Other Options": [
            "OSPF는 일반적으로 내부 도메인 라우팅에 사용되며, 여러 VPC 간의 통신에 적합하지 않을 수 있습니다. 이는 여러 VPC 간에 필요한 동일한 수준의 확장성과 유연성을 지원하지 않기 때문입니다.",
            "RIP(라우팅 정보 프로토콜)는 구식 프로토콜로 BGP의 확장성과 고급 기능이 부족하여 여러 VPC가 있는 현대 클라우드 환경에서 덜 효과적입니다.",
            "정적 라우트는 제어를 제공하지만 네트워크 토폴로지의 변경에 대해 수동 업데이트가 필요하여 동적 클라우드 환경에서 비효율성과 잠재적인 잘못된 구성으로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "대기업이 전용 회선 및 VPN 링크를 포함한 다양한 네트워크 연결에서 사용 가능한 대역폭을 비효율적으로 활용하여 성능 문제를 겪고 있습니다. 네트워크 운영 팀은 이러한 연결에서 처리량을 극대화하고 단편화를 최소화하기 위해 프레임 크기를 최적화하는 임무를 맡았습니다. 그들은 이 목표를 달성하기 위한 다양한 전략을 고려하고 있습니다.",
        "Question": "네트워크 운영 팀이 다양한 연결 유형에 대한 대역폭 효율성을 위해 프레임 크기를 최적화하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "VPN 연결의 MTU 설정을 전용 회선의 MTU 크기에 맞게 조정하여 네트워크 전반에 걸쳐 일관된 데이터 패킷 크기를 보장합니다.",
            "2": "서버 NIC에서 TCP 세분화 오프로드(TSO)를 활용하여 더 큰 프레임을 효율적으로 더 작은 세그먼트로 분해하여 전송할 수 있도록 합니다.",
            "3": "특정 유형의 트래픽을 우선시하는 품질 보증(QoS) 정책을 구성하여 고우선 순위 애플리케이션에 대한 효과적인 처리량을 최적화합니다.",
            "4": "모든 네트워크 인터페이스에서 점보 프레임을 구현하여 전용 연결 전반에 걸쳐 최대 전송 단위(MTU) 크기를 증가시킵니다."
        },
        "Correct Answer": "VPN 연결의 MTU 설정을 전용 회선의 MTU 크기에 맞게 조정하여 네트워크 전반에 걸쳐 일관된 데이터 패킷 크기를 보장합니다.",
        "Explanation": "VPN 연결의 MTU 설정을 전용 회선의 MTU 크기에 맞게 조정하면 단편화를 방지할 수 있어 성능 저하를 초래할 수 있습니다. 이는 모든 연결이 최적의 프레임 크기를 활용하도록 보장하여 대역폭 효율성을 극대화합니다.",
        "Other Options": [
            "점보 프레임을 구현하는 것은 네트워크에 더 큰 MTU 크기를 지원하지 않는 장치가 있는 경우 실현 가능하지 않을 수 있으며, 이로 인해 연결 문제를 초래할 수 있습니다.",
            "QoS 정책은 특정 애플리케이션에 대한 대역폭 할당을 관리하는 데 도움이 될 수 있지만, 모든 연결에서 프레임 크기 최적화를 직접적으로 해결하지는 않습니다.",
            "TCP 세분화 오프로드(TSO)를 활용하는 것은 프레임 크기를 최적화하지 않으며, 오히려 CPU에서 NIC로 세분화 작업을 오프로드할 수 있게 해주지만, 네트워크의 단편화 문제를 해결하지는 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 회사가 us-west-1 및 us-east-1 지역에 VPC를 두고 다중 지역 AWS 아키텍처를 운영하고 있습니다. 그들은 온프레미스 데이터 센터와 AWS 간의 동적 라우팅을 위해 BGP를 사용하여 Direct Connect 연결을 활용하고 있습니다. 최근 그들은 온프레미스 네트워크에서 us-east-1의 특정 VPC로의 트래픽이 올바르게 라우팅되지 않아 간헐적인 연결 문제를 겪고 있음을 알게 되었습니다. 경영진은 기존 라우트 테이블과 BGP 구성에 따라 트래픽이 올바르게 전송되도록 보장할 수 있는 솔루션을 찾고 있습니다.",
        "Question": "네트워크 엔지니어가 트래픽 라우팅 문제를 해결하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "us-east-1의 VPC와 관련된 보안 그룹 및 NACL을 확인하여 온프레미스 네트워크에서의 트래픽을 허용하는지 확인합니다.",
            "2": "두 VPC의 라우트 테이블을 검토하고 온프레미스 라우터에서 AWS Direct Connect로 BGP를 통해 올바른 접두사가 광고되고 있는지 확인합니다.",
            "3": "AWS 측의 BGP 구성을 수정하여 자동 라우트 전파를 비활성화하고 영향을 받는 VPC의 모든 접두사에 대해 정적 라우트를 수동으로 구성합니다.",
            "4": "AWS Transit Gateway를 설정하여 라우팅을 중앙 집중화하고 Transit Gateway에서 두 VPC로의 라우트 전파를 활성화하여 모든 라우트가 올바르게 광고되도록 합니다."
        },
        "Correct Answer": "두 VPC의 라우트 테이블을 검토하고 온프레미스 라우터에서 AWS Direct Connect로 BGP를 통해 올바른 접두사가 광고되고 있는지 확인합니다.",
        "Explanation": "첫 번째 옵션이 올바른 이유는 두 VPC의 라우트 테이블에 올바른 경로가 있고 필요한 접두사가 BGP를 통해 광고되고 있는지 확인하는 것이 올바른 트래픽 라우팅에 매우 중요하기 때문입니다. 이는 경험한 연결 문제를 직접적으로 해결합니다.",
        "Other Options": [
            "자동 라우트 전파를 비활성화하고 정적 라우트를 수동으로 구성하는 것은 라우트 관리의 복잡성과 잠재적인 잘못된 구성을 초래할 수 있으며, 특히 다중 지역 설정에서는 최선의 방법이 아닙니다.",
            "AWS Transit Gateway를 설정하는 것은 라우팅을 중앙 집중화하는 데 좋은 솔루션이 될 수 있지만, 잘못된 라우트 광고의 즉각적인 문제를 해결하지 않으며 필요하지 않은 경우 추가적인 복잡성을 초래할 수 있습니다.",
            "보안 그룹 및 NACL을 확인하는 것은 보안에 중요하지만 라우팅 문제를 직접적으로 해결하지는 않습니다. 문제는 접근 제어보다는 라우트 테이블 및 BGP 광고와 더 관련이 있을 가능성이 높습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "다국적 기업이 글로벌로 사업을 확장하고 있으며, 다양한 지역의 모든 Amazon VPC에서 표준화된 네트워킹 구성을 구현해야 합니다. 이 회사는 네트워크 구성의 변경 사항이 수동 개입 없이 새로운 VPC 및 지역에 쉽게 복제될 수 있도록 보장하고자 합니다.",
        "Question": "네트워크 아키텍트가 여러 AWS 계정 및 지역에서 반복 가능한 네트워크 구성을 생성하고 관리하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "AWS CloudFormation 템플릿을 활용하여 네트워크 아키텍처를 정의하고 여러 지역에 배포합니다.",
            "2": "각 지역에 대해 AWS Direct Connect를 구성하고 필요에 따라 네트워크 설정을 수동으로 복제합니다.",
            "3": "AWS CLI 스크립트를 사용하여 각 지역에 특정 구성으로 VPC와 서브넷을 생성합니다.",
            "4": "Amazon VPC Peering 연결을 구현하여 모든 지역에서 네트워크 구성을 공유합니다."
        },
        "Correct Answer": "AWS CloudFormation 템플릿을 활용하여 네트워크 아키텍처를 정의하고 여러 지역에 배포합니다.",
        "Explanation": "AWS CloudFormation 템플릿을 사용하면 네트워크 리소스 프로비저닝을 자동화할 수 있어 동일한 구성을 여러 VPC 및 지역에 일관되게 배포할 수 있습니다. 이 접근 방식은 인적 오류의 위험을 크게 줄이고 네트워크 아키텍처 확장 시 효율성을 높입니다.",
        "Other Options": [
            "AWS Direct Connect를 구성하는 것은 전용 네트워크 연결을 설정하는 데 유용하지만, 지역 간 네트워크 구성 복제를 촉진하지 않으므로 이 요구 사항에 적합하지 않습니다.",
            "AWS CLI 스크립트는 VPC와 서브넷 생성을 자동화할 수 있지만, 수동 업데이트 및 관리가 필요하므로 CloudFormation을 사용하는 것보다 반복 가능한 네트워크 구성을 달성하는 데 덜 효율적입니다.",
            "Amazon VPC Peering 연결을 구현하면 VPC 간 연결성을 제공하지만, 네트워크 구성을 관리하거나 복제하는 메커니즘을 제공하지 않으므로 이 시나리오의 주요 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "회사가 고가용성과 장애 허용이 필요한 웹 애플리케이션을 배포하고 있습니다. 그들은 여러 가용 영역에 걸쳐 EC2 인스턴스 앞에 Elastic Load Balancer (ELB)를 구현하기로 결정했습니다. 그러나 배포 후, 로드 밸런서가 인스턴스 간에 트래픽을 고르게 분배하지 않는 것을 발견했습니다.",
        "Question": "Elastic Load Balancer가 EC2 인스턴스 간에 트래픽을 고르게 분배하지 않는 이유는 무엇일 수 있습니까?",
        "Options": {
            "1": "ELB와 연결된 보안 그룹이 클라이언트로부터의 수신 트래픽을 허용하지 않습니다.",
            "2": "인스턴스가 서로 다른 VPC에 있으며, ELB가 그들 간의 트래픽을 라우팅할 수 없습니다.",
            "3": "ELB가 라운드 로빈 라우팅 알고리즘을 사용하도록 구성되어 있어 인스턴스 부하에 따라 트래픽을 균형 있게 분배하지 않습니다.",
            "4": "EC2 인스턴스의 상태 확인이 잘못 구성되어 일부 인스턴스가 비정상으로 표시됩니다."
        },
        "Correct Answer": "EC2 인스턴스의 상태 확인이 잘못 구성되어 일부 인스턴스가 비정상으로 표시됩니다.",
        "Explanation": "상태 확인이 잘못 구성되면 ELB가 일부 인스턴스를 비정상으로 표시하고 해당 인스턴스로의 트래픽 라우팅을 중단할 수 있습니다. 이로 인해 ELB는 건강한 것으로 표시된 인스턴스에만 트래픽을 전송하므로 트래픽이 고르게 분배되지 않습니다.",
        "Other Options": [
            "라운드 로빈 라우팅 알고리즘은 모든 건강한 인스턴스 간에 트래픽을 고르게 분배하도록 설계되었으므로, 이 옵션은 트래픽이 고르게 분배되지 않는 이유를 설명하지 않기 때문에 잘못된 것입니다.",
            "인스턴스가 서로 다른 VPC에 있었다면 ELB는 전혀 트래픽을 라우팅할 수 없었을 것이므로, 트래픽이 고르게 분배되지 않는 것이 아니라 전혀 분배되지 않았을 것입니다. 따라서 이 옵션은 적용되지 않습니다.",
            "보안 그룹이 인스턴스에 도달하는 트래픽을 차단할 수 있지만, 이는 불균형한 분배가 아니라 트래픽이 전혀 전송되지 않게 하므로 이 옵션은 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "AWS 아키텍트가 여러 EC2 인스턴스로 구성된 기존 애플리케이션 배포에 Application Load Balancers (ALBs)를 통합하는 작업을 맡았습니다. 목표는 통합 과정에서 다운타임을 최소화하면서 들어오는 트래픽의 고가용성과 효율적인 라우팅을 보장하는 것입니다.",
        "Question": "아키텍트가 기존 애플리케이션 배포와 ALBs를 성공적으로 통합하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "Application Load Balancer를 생성하고 기존 EC2 인스턴스를 대상으로 등록한 후, 애플리케이션 DNS를 ALB를 가리키도록 업데이트합니다.",
            "2": "Classic Load Balancer를 구현하고 기존 EC2 인스턴스를 등록한 후, AWS Auto Scaling을 사용하여 트래픽 급증을 관리합니다.",
            "3": "Application Load Balancer를 설정하고 대상 그룹을 구성한 후, 여러 대상 그룹에 EC2 인스턴스를 배치하고 Route 53 가중 라우팅 정책을 사용하여 트래픽을 분배합니다.",
            "4": "EC2 인스턴스 앞에 Network Load Balancer를 배포하고 상태 확인을 구성한 후, 트래픽을 로드 밸런서로 마이그레이션합니다."
        },
        "Correct Answer": "Application Load Balancer를 생성하고 기존 EC2 인스턴스를 대상으로 등록한 후, 애플리케이션 DNS를 ALB를 가리키도록 업데이트합니다.",
        "Explanation": "이 옵션은 기존 EC2 인스턴스를 대상으로 등록하여 Application Load Balancer의 통합을 올바르게 설명하며, 이는 효율적인 트래픽 라우팅과 고가용성을 가능하게 합니다. DNS를 업데이트하면 사용자가 새로 구성된 로드 밸런서로 안내되어 다운타임을 최소화할 수 있습니다.",
        "Other Options": [
            "Network Load Balancer를 배포하면 고가용성을 제공할 수 있지만, Application Load Balancers가 제공하는 고급 라우팅 기능이 필요한 애플리케이션에 대한 최상의 통합 방법은 아닙니다. 또한, 기존 EC2 인스턴스와의 통합 필요성을 직접적으로 해결하지 않습니다.",
            "Application Load Balancer로 여러 대상 그룹을 설정하는 것은 유효한 접근 방식이지만, Route 53 가중 라우팅 정책을 사용하는 것은 통합 과정을 복잡하게 만들며 ALB로 트래픽을 단순히 유도하는 데 필요하지 않습니다. 기존 인스턴스를 직접 등록하는 데 집중해야 합니다.",
            "Classic Load Balancer를 구현하는 것은 Application Load Balancers를 사용하는 것에 비해 구식 접근 방식이며, 경로 기반 라우팅 및 향상된 성능과 같은 더 나은 기능을 제공합니다. 이 옵션은 현대 로드 밸런싱 기술의 이점을 활용하지 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "네트워크 아키텍트가 개인 인터넷 연결 및 VPC 간 통신을 위한 강력한 솔루션이 필요한 회사의 안전하고 효율적인 AWS 환경을 설계하고 있습니다.",
        "Question": "아키텍트가 AWS 네트워크 트래픽 관리 모범 사례를 준수하면서 개인 서브넷 내 인스턴스에서 적절한 인터넷 액세스를 보장하기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "개인 서브넷에서 직접 인터넷 액세스를 허용하는 온프레미스 네트워크와 VPN 연결을 설정합니다.",
            "2": "AWS CloudHub를 활용하여 개인 서브넷을 온프레미스 데이터 센터에 연결하여 인터넷 연결을 제공합니다.",
            "3": "개인 서브넷과 인터넷 게이트웨이가 연결된 공용 서브넷 간에 VPC 피어링 연결을 구현합니다.",
            "4": "개인 서브넷에 NAT 게이트웨이를 배포하고 인터넷 액세스를 위해 Elastic IP 주소와 연결합니다."
        },
        "Correct Answer": "개인 서브넷에 NAT 게이트웨이를 배포하고 인터넷 액세스를 위해 Elastic IP 주소와 연결합니다.",
        "Explanation": "개인 서브넷에서 NAT 게이트웨이를 사용하면 인스턴스가 인터넷으로 아웃바운드 트래픽을 시작할 수 있지만 인터넷으로부터의 인바운드 트래픽은 차단됩니다. 이는 개인 서브넷의 리소스를 보호하기 위한 모범 사례입니다. NAT 게이트웨이를 Elastic IP와 연결하면 아웃바운드 트래픽에 일관된 공용 IP 주소가 보장됩니다.",
        "Other Options": [
            "VPC 피어링 연결은 인터넷 액세스를 제공하지 않으며, VPC 간의 통신만 허용합니다. 또한, 개인 서브넷과 공용 서브넷 간의 VPC 피어링 연결은 개인 서브넷의 인스턴스에 대한 인터넷 트래픽을 활성화하지 않습니다.",
            "VPN 연결은 주로 AWS와 온프레미스 네트워크 간의 안전한 네트워크 연결을 촉진하지만, 개인 서브넷의 인스턴스에 대한 인터넷 액세스를 본질적으로 제공하지 않습니다. 인스턴스는 여전히 인터넷에 액세스하기 위해 NAT 게이트웨이가 필요합니다.",
            "AWS CloudHub는 온프레미스 데이터 센터를 AWS VPC에 연결하기 위해 설계되었으며, 개인 서브넷의 인스턴스에 대한 직접 VPC 간 피어링이나 인터넷 액세스를 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 온프레미스 데이터 센터와 Amazon VPC 간의 데이터 전송을 위한 비용 효율적이고 신뢰할 수 있는 방법을 구축하려고 합니다. 그들은 예산과 성능 요구 사항을 충족하는 다양한 연결 옵션을 고려해야 합니다.",
        "Question": "VPC와 온프레미스 환경 간의 데이터 전송을 위한 비용 효율적인 연결 옵션에 대해 다음 중 어떤 진술이 사실입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Direct Connect와 AWS Site-to-Site VPN의 조합은 유연성과 비용 절감을 제공하는 하이브리드 솔루션을 제공할 수 있습니다.",
            "2": "AWS Site-to-Site VPN은 일반적으로 AWS Direct Connect보다 저용량 간헐적 데이터 전송에 더 비용 효율적입니다.",
            "3": "AWS Direct Connect는 데이터 전송 비용을 줄이는 데 도움이 될 수 있지만, 초기 투자와 지속적인 월 요금이 필요할 수 있습니다.",
            "4": "데이터 전송을 위해 공용 인터넷 연결을 사용하는 것은 온프레미스를 VPC에 연결하는 가장 안전한 옵션입니다.",
            "5": "AWS Direct Connect는 AWS에 전용 연결을 제공하며, 공용 인터넷을 사용하는 것보다 대량 데이터 전송에 더 비용 효율적일 수 있습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Direct Connect는 AWS에 전용 연결을 제공하며, 공용 인터넷을 사용하는 것보다 대량 데이터 전송에 더 비용 효율적일 수 있습니다.",
            "AWS Site-to-Site VPN은 일반적으로 AWS Direct Connect보다 저용량 간헐적 데이터 전송에 더 비용 효율적입니다."
        ],
        "Explanation": "AWS Direct Connect는 전용 특성으로 인해 대량 데이터 전송에 적합하며, 이는 공용 인터넷에 비해 비용을 낮출 수 있습니다. 마찬가지로, AWS Site-to-Site VPN은 전용 인프라가 필요 없는 비용 효율적인 솔루션을 제공하여 저용량 데이터 전송에 적합한 옵션입니다.",
        "Other Options": [
            "데이터 전송을 위해 공용 인터넷 연결을 사용하는 것은 다양한 보안 위험, 포함하여 가로채기 및 데이터 손실에 취약하므로 가장 안전한 옵션이 아닙니다.",
            "AWS Direct Connect는 데이터 전송 비용을 줄일 수 있지만, 인프라에 대한 약속과 지속적인 비용이 수반되므로 모든 시나리오에 대해 보편적으로 비용 효율적이지 않을 수 있습니다.",
            "AWS Direct Connect와 AWS Site-to-Site VPN을 결합한 하이브리드 솔루션은 이점을 제공할 수 있지만, 항상 비용 절감을 보장하지 않으며 네트워크 아키텍처를 복잡하게 만들 수 있습니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 Application Load Balancer (ALB) 뒤에 호스팅된 여러 EC2 인스턴스에서 웹 애플리케이션의 높은 트래픽을 경험하고 있습니다. 사용자 수요의 증가로 인해 로드 밸런싱 솔루션의 확장성에 대한 우려가 커지고 있습니다. 팀은 ALB가 성능과 가용성을 유지하면서 증가하는 트래픽을 처리할 수 있도록 해야 합니다.",
        "Question": "증가하는 트래픽 수요를 수용하기 위해 Application Load Balancer를 확장하는 데 가장 효과적인 설계 전략은 무엇입니까?",
        "Options": {
            "1": "ALB 뒤의 EC2 인스턴스에 대해 Auto Scaling을 구성하여 트래픽 패턴에 따라 용량을 동적으로 조정합니다.",
            "2": "ALB의 최대 대상 수를 늘려 더 많은 인스턴스에 트래픽을 분산할 수 있도록 합니다.",
            "3": "AWS Global Accelerator를 구현하여 최저 대기 시간에 따라 ALB로 트래픽을 라우팅합니다.",
            "4": "다른 가용 영역에 두 번째 ALB를 설정하여 여러 ALB 간에 부하를 분산합니다."
        },
        "Correct Answer": "ALB 뒤의 EC2 인스턴스에 대해 Auto Scaling을 구성하여 트래픽 패턴에 따라 용량을 동적으로 조정합니다.",
        "Explanation": "EC2 인스턴스에 대해 Auto Scaling을 구현하면 인프라가 트래픽 수요에 따라 인스턴스 수를 자동으로 조정할 수 있어 ALB가 들어오는 트래픽을 효과적으로 분산할 수 있습니다. 이 접근 방식은 확장성과 높은 가용성을 제공합니다.",
        "Other Options": [
            "ALB의 최대 대상 수를 늘리는 것은 기본 EC2 인스턴스가 증가된 부하를 처리할 수 없다면 본질적으로 확장성 문제를 해결하지 않으며, 트래픽 급증을 효과적으로 처리하지 않습니다.",
            "AWS Global Accelerator를 구현하면 사용자를 최적의 엔드포인트로 라우팅하여 성능을 개선하지만, ALB나 그 뒤의 EC2 인스턴스를 직접적으로 확장하여 증가하는 트래픽 수요를 처리하지는 않습니다.",
            "다른 가용 영역에 두 번째 ALB를 설정하면 중복성을 제공할 수 있지만, 애플리케이션의 확장을 직접적으로 해결하지는 않습니다. Auto Scaling이 없으면 각 ALB 뒤의 EC2 인스턴스는 여전히 용량 문제에 직면할 수 있습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 Amazon VPC에 영향을 미치는 간헐적인 네트워크 성능 문제를 경험하고 있습니다. 네트워크 운영 팀은 인프라에서 패킷 손실 및 대기 시간의 근본 원인을 식별해야 합니다. 그들은 다양한 AWS 모니터링 도구에 접근할 수 있습니다.",
        "Question": "팀이 네트워크 성능을 효과적으로 모니터링하고 도달 가능성 문제를 진단하기 위해 어떤 AWS 서비스를 활용해야 합니까?",
        "Options": {
            "1": "비용 최적화를 위한 AWS Trusted Advisor와 보안 취약점을 위한 Amazon Inspector.",
            "2": "사용자 정의 메트릭을 위한 Amazon CloudWatch와 네트워크 트래픽 분석을 위한 VPC Flow Logs.",
            "3": "리소스 준수를 위한 AWS Config와 API 활동 로깅을 위한 Amazon CloudTrail.",
            "4": "애플리케이션 성능을 위한 AWS X-Ray와 데이터 저장을 위한 Amazon S3."
        },
        "Correct Answer": "사용자 정의 메트릭을 위한 Amazon CloudWatch와 네트워크 트래픽 분석을 위한 VPC Flow Logs.",
        "Explanation": "Amazon CloudWatch는 네트워크 성능을 모니터링하기 위한 메트릭을 제공하며, VPC Flow Logs는 네트워크 인터페이스 간의 IP 트래픽에 대한 정보를 캡처하여 패킷 손실 및 도달 가능성 문제를 진단하는 데 도움을 줍니다.",
        "Other Options": [
            "AWS Trusted Advisor는 비용 최적화, 성능 및 보안에 대한 모범 사례를 제공하는 데 중점을 두지만, 네트워크 성능 모니터링을 구체적으로 다루지 않습니다.",
            "AWS Config는 리소스 구성 및 준수를 추적하는 데 사용되며, Amazon CloudTrail은 API 호출을 기록하지만 네트워크 성능 문제에 대한 직접적인 통찰력을 제공하지 않습니다.",
            "AWS X-Ray는 주로 애플리케이션 성능을 추적하고 분석하는 데 사용되며, Amazon S3는 저장 서비스로, 둘 다 네트워크 성능 모니터링이나 패킷 손실 진단에 직접적으로 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "한 회사는 온프레미스 데이터 센터가 VPN을 통해 AWS에 연결된 하이브리드 아키텍처를 가지고 있습니다. 이들은 애플리케이션의 고가용성과 저지연성을 보장하기 위해 온프레미스 네트워크와 AWS 간의 연결 전략을 강화하고자 합니다. 장애 조치 및 중복성을 지원하면서 최적의 성능을 유지하는 라우팅 전략을 설계해야 합니다.",
        "Question": "하이브리드 아키텍처의 고가용성과 저지연성을 달성하기 위해 어떤 라우팅 전략을 구현해야 합니까?",
        "Options": {
            "1": "VPN 백업과 함께 Direct Connect 연결을 구현합니다.",
            "2": "정적 라우팅을 사용하여 단일 VPN 연결을 설정합니다.",
            "3": "Direct Connect 없이 여러 VPN 연결을 활용합니다.",
            "4": "연결을 위해 공용 인터넷에만 의존합니다."
        },
        "Correct Answer": "VPN 백업과 함께 Direct Connect 연결을 구현합니다.",
        "Explanation": "Direct Connect 연결은 전용 네트워크 연결을 제공하여 지연 시간을 줄이고 대역폭을 높입니다. VPN을 백업으로 추가하면 Direct Connect 링크가 실패할 경우에도 트래픽이 AWS로 안전하게 흐를 수 있어 고가용성을 달성할 수 있습니다.",
        "Other Options": [
            "Direct Connect 없이 여러 VPN 연결을 활용하면 중복성을 제공할 수 있지만, Direct Connect와 동일한 수준의 성능과 대역폭을 제공하지 못할 수 있어 지연에 민감한 애플리케이션에는 최적이 아닙니다.",
            "연결을 위해 공용 인터넷에만 의존하는 것은 고유한 지연, 성능 변동성 및 잠재적인 보안 위험으로 인해 권장되지 않으며, 이는 고가용성과 저지연성 요구 사항을 충족하지 못합니다.",
            "정적 라우팅을 사용하여 단일 VPN 연결을 설정하면 중복성이 제공되지 않으며, 연결이 실패할 경우 대체 경로가 없어 가용성과 성능이 저하됩니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사는 AWS에서 네트워크 인프라를 확장하고 있으며, 가상 사설 클라우드(VPC) 내에서 적절한 라우팅을 설정해야 합니다. 이 회사는 온프레미스 데이터 센터와 AWS 간의 동적 라우팅을 위해 BGP를 사용합니다. 그들은 가상 사설 게이트웨이에서 VPC 내의 관련 라우팅 테이블로 경로가 자동으로 전파되도록 라우팅 테이블이 구성되기를 원합니다.",
        "Question": "이 시나리오에서 적절한 경로 전파와 효율적인 트래픽 관리를 보장하기 위해 라우팅 테이블을 구성하는 가장 좋은 접근 방식은 무엇입니까?",
        "Options": {
            "1": "가상 사설 게이트웨이에서 개인 서브넷의 라우팅 테이블로 경로의 자동 전파를 활성화합니다.",
            "2": "라우트 전파를 비활성화하고 VPC 내 모든 서브넷에 대해 정적 라우팅에만 의존합니다.",
            "3": "공용 서브넷에 대해서만 BGP 정적 경로를 사용하도록 라우팅 테이블을 구성합니다.",
            "4": "가상 사설 게이트웨이에서 받은 경로로 각 서브넷의 라우팅 테이블을 수동으로 업데이트합니다."
        },
        "Correct Answer": "가상 사설 게이트웨이에서 개인 서브넷의 라우팅 테이블로 경로의 자동 전파를 활성화합니다.",
        "Explanation": "경로의 자동 전파를 활성화하면 VPC가 가상 사설 게이트웨이가 광고하는 경로를 동적으로 통합할 수 있습니다. 이는 모든 필요한 경로가 수동 개입 없이 자동으로 업데이트되어 효율적인 트래픽 관리를 가능하게 하고 잘못된 구성의 가능성을 줄입니다.",
        "Other Options": [
            "라우팅 테이블을 수동으로 업데이트하면 오류와 오버헤드가 발생할 수 있으며, 특히 네트워크가 성장함에 따라 비효율적이고 경로 업데이트에 지연을 초래할 수 있습니다.",
            "라우트 전파를 비활성화하면 VPC가 가상 사설 게이트웨이에서 경로에 대한 업데이트를 자동으로 받지 않게 되어 연결성과 라우팅 효율성에 잠재적인 문제가 발생할 수 있습니다.",
            "공용 서브넷에 대해 BGP 정적 경로를 사용하는 것은 개인 서브넷의 동적 라우팅 필요성을 해결하지 않으며, BGP의 동적 기능의 이점을 제한합니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 회사는 온프레미스 데이터 센터와 AWS 간의 하이브리드 연결 솔루션을 구현할 계획입니다. 네트워크 아키텍트는 최적의 연결성과 성능을 위해 물리적 네트워크 요구 사항이 충족되도록 해야 합니다.",
        "Question": "하이브리드 연결 솔루션을 위한 물리적 네트워크 요구 사항을 구성할 때 네트워크 아키텍트가 가장 먼저 고려해야 할 사항은 무엇입니까?",
        "Options": {
            "1": "AWS 환경에서 네트워크 세분화를 구현하여 온프레미스 데이터 센터와 AWS 리소스 간의 트래픽을 분리합니다.",
            "2": "대역폭 요구 사항을 평가하고 AWS Direct Connect 또는 VPN과 같은 적절한 물리적 연결 유형을 선택합니다.",
            "3": "네트워크 중단 시 고가용성을 보장하기 위해 AWS 리소스에 대한 장애 조치 전략을 설계합니다.",
            "4": "온프레미스 데이터 센터와 AWS 리소스 간의 트래픽 흐름을 제어하기 위해 AWS 환경에서 보안 그룹 및 네트워크 ACL을 구성합니다."
        },
        "Correct Answer": "대역폭 요구 사항을 평가하고 AWS Direct Connect 또는 VPN과 같은 적절한 물리적 연결 유형을 선택합니다.",
        "Explanation": "하이브리드 연결 솔루션을 위한 물리적 네트워크 요구 사항을 구성할 때 대역폭 필요성을 이해하는 것이 중요합니다. 이를 통해 아키텍트는 전용 연결을 위한 AWS Direct Connect 또는 인터넷을 통한 암호화된 연결을 위한 VPN과 같은 적절한 연결 유형을 선택하여 성능과 신뢰성이 회사의 요구 사항을 충족하도록 보장할 수 있습니다.",
        "Other Options": [
            "네트워크 세분화는 보안에 중요하지만 물리적 연결 요구 사항을 설정할 때 가장 먼저 고려해야 할 사항은 아닙니다. 세분화를 다루기 전에 적절한 물리적 연결이 설정되어야 합니다.",
            "보안 그룹 및 네트워크 ACL은 접근 및 트래픽 흐름을 제어하는 데 필수적이지만 물리적 네트워크 요구 사항을 다루지 않습니다. 이러한 구성은 물리적 연결이 설정된 후에 이루어져야 합니다.",
            "장애 조치 전략을 설계하는 것은 고가용성에 중요하지만, 물리적 네트워크 연결 요구 사항을 처음 다룰 때 주요 관심사는 아닙니다. 기본 연결이 설정된 후에 장애 조치 전략을 구현해야 합니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "네트워크 엔지니어는 새로 생성된 VPC와 관련된 서브넷, 라우팅 테이블 및 보안 그룹의 구성이 인스턴스 간 통신이 필요한 애플리케이션의 설계 요구 사항을 충족하는지 확인하는 임무를 맡고 있습니다. 엔지니어는 인스턴스들이 의도한 대로 서로 통신할 수 있는지 확인해야 합니다.",
        "Question": "엔지니어가 네트워크 구성이 원하는 인스턴스 간 통신을 허용하고 설계 요구 사항을 충족하는지 확인하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon VPC Flow Logs",
            "2": "AWS Network Firewall",
            "3": "AWS Reachability Analyzer",
            "4": "AWS Config"
        },
        "Correct Answer": "AWS Reachability Analyzer",
        "Explanation": "AWS Reachability Analyzer는 VPC 내 리소스의 도달 가능성을 분석하도록 특별히 설계되었습니다. 특정 출처가 특정 목적지에 도달할 수 있는지를 확인하는 데 도움을 주어, 엔지니어가 네트워크 구성이 인스턴스 간 통신을 위한 설계 요구 사항을 충족하는지 확인할 수 있도록 합니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성을 모니터링하고 준수를 확인하는 데 주로 사용되며, 인스턴스 간의 도달 가능성을 확인하는 데 사용되지 않습니다.",
            "AWS Network Firewall은 트래픽 흐름을 제어하여 네트워크 보안을 제공하지만, 인스턴스 간의 도달 가능성을 구체적으로 확인하지는 않습니다.",
            "Amazon VPC Flow Logs는 VPC 내 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처하지만, 도달 가능성을 적극적으로 확인하거나 분석하지는 않습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "글로벌 전자상거래 회사가 여러 지역에서 애플리케이션 성능과 가용성을 최적화하려고 합니다. 이 회사는 사용자 트래픽을 가장 가까운 애플리케이션 엔드포인트로 효율적으로 라우팅하면서 지연 시간을 최소화할 수 있는 솔루션을 구현하고자 합니다.",
        "Question": "성능과 가용성을 개선하기 위해 글로벌 트래픽 관리를 위해 활용할 수 있는 AWS 서비스는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Transit Gateway",
            "2": "Elastic Load Balancing",
            "3": "AWS Direct Connect",
            "4": "Amazon Route 53",
            "5": "AWS Global Accelerator"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Global Accelerator",
            "Amazon Route 53"
        ],
        "Explanation": "AWS Global Accelerator와 Amazon Route 53은 사용자 트래픽의 글로벌 라우팅을 최적화하도록 설계되었습니다. AWS Global Accelerator는 건강 상태, 지리 및 라우팅 정책에 따라 트래픽을 최적의 엔드포인트로 유도하여 성능을 향상시킵니다. Amazon Route 53은 지연 기반 라우팅을 제공하는 DNS 서비스를 통해 트래픽을 가장 가까운 지역으로 라우팅하여 전체 사용자 경험을 개선합니다.",
        "Other Options": [
            "AWS Direct Connect는 귀하의 시설에서 AWS로 전용 네트워크 연결을 설정하는 데 주로 사용되지만, 글로벌 트래픽 관리 기능을 제공하지는 않습니다.",
            "Elastic Load Balancing은 단일 지역 내에서 여러 대상을 통해 들어오는 애플리케이션 트래픽을 분산하는 데 효과적이지만, 글로벌 트래픽을 관리하지는 않습니다.",
            "AWS Transit Gateway는 중앙 허브를 통해 VPC와 온프레미스 네트워크를 연결하도록 설계되었으며, 네트워크 관리를 단순화하지만 글로벌 트래픽 관리 기능은 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 회사는 서로 다른 AWS 지역에 두 개의 가상 사설 클라우드(VPC)를 보유하고 있으며, 각각 VPN 터널을 통해 온프레미스 데이터 센터에 연결되어 있습니다. 이 회사는 두 연결이 동일한 주소 공간을 가질 때에도 온프레미스 네트워크로 트래픽을 라우팅하기 위해 하나의 VPN 연결이 다른 연결보다 우선시되도록 해야 합니다.",
        "Question": "라우팅 목적으로 하나의 VPN 연결이 다른 연결보다 우선시되도록 보장하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "선호하는 VPN에 대한 라우팅 테이블에 자리 표시자 경로를 생성합니다.",
            "2": "선호하는 VPN 연결에서 더 구체적인 CIDR 블록을 광고합니다.",
            "3": "선호하는 VPN 연결에서 MED 값을 조정합니다.",
            "4": "덜 선호하는 VPN 연결에서 AS_PATH 전치사를 사용합니다."
        },
        "Correct Answer": "선호하는 VPN 연결에서 더 구체적인 CIDR 블록을 광고합니다.",
        "Explanation": "선호하는 VPN 연결에서 더 구체적인 CIDR 블록을 광고함으로써 이 경로가 덜 구체적인 경로보다 우선시되도록 하여, 원하는 VPN 연결을 통해 트래픽이 전달되도록 합니다.",
        "Other Options": [
            "덜 선호하는 VPN 연결에서 AS_PATH 전치사를 사용하는 것은 선호도를 줄일 수 있지만, 다른 요인에 따라 여전히 덜 선호될 수 있기 때문에 다른 VPN이 기본 경로로 선택된다는 보장은 없습니다.",
            "선호하는 VPN에 대한 라우팅 테이블에 자리 표시자 경로를 생성하는 것은 라우팅 결정에 영향을 미치지 않으며, VPN 연결의 우선 순위를 지정하는 인식된 방법이 아닙니다.",
            "선호하는 VPN 연결에서 MED 값을 조정하는 것은 더 구체적인 CIDR 블록을 사용하는 것보다 효과적이지 않으며, MED는 일반적으로 도메인 간 라우팅에 사용되므로 단일 도메인 내에서 경로 선택에 큰 영향을 미치지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "글로벌 전자상거래 회사가 AWS 서비스를 사용하여 새로운 다중 지역 아키텍처를 배포하고 있습니다. 이 아키텍처는 규정 준수 및 성능 최적화를 보장하기 위해 강력한 로깅 및 모니터링이 필요합니다. 네트워크 팀은 네트워크 인프라 전반에 걸쳐 가시성을 향상시키기 위해 필수적인 로깅 및 모니터링 요구 사항을 식별해야 합니다.",
        "Question": "다중 지역 아키텍처에 대해 어떤 로깅 및 모니터링 요구 사항을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "모든 지역에서 계정 내에서 이루어진 모든 API 호출을 로깅하기 위해 AWS CloudTrail을 활성화합니다.",
            "2": "다양한 지역에서 네트워크 구성 및 규정 준수의 변화를 모니터링하기 위해 AWS Config를 설정합니다.",
            "3": "여러 AWS 계정에서 사용된 네트워크 리소스의 비용을 분석하기 위해 상세 청구 보고서를 활성화합니다.",
            "4": "네트워크 트래픽 분석을 위해 VPC 흐름 로그에서 로그 데이터를 수집하기 위해 Amazon CloudWatch Logs를 구현합니다.",
            "5": "다양한 지역에 배포된 마이크로서비스 간의 요청을 추적하고 분석하기 위해 AWS X-Ray를 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "모든 지역에서 계정 내에서 이루어진 모든 API 호출을 로깅하기 위해 AWS CloudTrail을 활성화합니다.",
            "네트워크 트래픽 분석을 위해 VPC 흐름 로그에서 로그 데이터를 수집하기 위해 Amazon CloudWatch Logs를 구현합니다."
        ],
        "Explanation": "AWS CloudTrail을 활성화하면 조직이 AWS 계정 내에서 이루어진 모든 API 호출을 로깅하고 모니터링할 수 있어 보안 및 규정 준수 감사에 매우 중요합니다. VPC 흐름 로그에 대한 Amazon CloudWatch Logs를 구현하면 네트워크 트래픽 패턴에 대한 통찰력을 제공하여 팀이 네트워크 문제를 효과적으로 분석하고 해결하는 데 도움을 줍니다.",
        "Other Options": [
            "상세 청구 보고서를 활성화하는 것은 비용 관리에 중점을 두지만, 네트워크 성능이나 보안을 로깅하고 모니터링하는 데 직접적으로 기여하지는 않습니다.",
            "AWS Config를 설정하는 것은 구성 준수에 유익하지만, 네트워크 트래픽 및 API 호출의 로깅 및 모니터링을 구체적으로 다루지 않으며, 이는 운영 가시성에 중요합니다.",
            "AWS X-Ray를 사용하는 것은 마이크로서비스의 요청을 추적하는 데 도움이 되지만, 전체 아키텍처의 네트워크 트래픽 모니터링에 필요한 포괄적인 로깅을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "네트워크 엔지니어가 기본 CIDR 블록에서 사용 가능한 IP 주소가 거의 고갈된 Amazon VPC를 관리하고 있습니다. 엔지니어는 기존 리소스에 방해를 주지 않으면서 향후 사용을 위해 추가 IP 주소가 사용 가능하도록 해야 합니다.",
        "Question": "엔지니어가 VPC에 더 많은 IP 주소 공간을 추가하는 가장 효율적인 방법은 무엇입니까?",
        "Options": {
            "1": "현재 CIDR 블록을 재구성하여 더 큰 서브넷 마스크를 사용하여 사용 가능한 IP를 늘립니다.",
            "2": "충분한 IP 주소 범위를 포함하는 보조 CIDR 블록을 VPC에 할당합니다.",
            "3": "기존 리소스를 더 큰 기본 CIDR 블록을 가진 새로운 VPC로 마이그레이션합니다.",
            "4": "사용 가능한 IP 주소가 있는 다른 VPC와 VPC 피어링을 활성화합니다."
        },
        "Correct Answer": "충분한 IP 주소 범위를 포함하는 보조 CIDR 블록을 VPC에 할당합니다.",
        "Explanation": "보조 CIDR 블록을 할당하면 VPC가 기존 리소스에 영향을 주지 않고 IP 주소 공간을 원활하게 확장할 수 있어 고갈 문제에 대한 즉각적인 해결책을 제공합니다.",
        "Other Options": [
            "현재 CIDR 블록을 재구성하여 더 큰 서브넷 마스크를 사용하는 것은 기존 VPC에서는 불가능하며, CIDR 블록은 생성 후 수정할 수 없습니다. 이 옵션은 문제를 해결하지 않습니다.",
            "기존 리소스를 더 큰 기본 CIDR 블록을 가진 새로운 VPC로 마이그레이션하는 것은 복잡하고 시간이 많이 소요되는 과정으로, 다운타임이 발생하며 가장 효율적인 솔루션이 아닙니다.",
            "사용 가능한 IP 주소가 있는 다른 VPC와 VPC 피어링을 활성화하면 추가 IP 주소에 접근할 수 있지만, 원래 VPC의 IP 주소 공간을 늘리지 않으며 네트워크 관리에 복잡성을 도입할 수 있습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "금융 기관이 엄격한 데이터 규정을 준수하면서 직접 연결을 통해 온프레미스 데이터 센터를 AWS로 확장할 계획을 세우고 있습니다. 기관은 이 하이브리드 모델을 용이하게 하기 위해 강력한 네트워크 아키텍처를 구현해야 합니다. 안전하고 신뢰할 수 있는 데이터 전송을 보장하기 위해 Layer 1 연결을 위한 적절한 하드웨어와 서비스를 선택하는 것이 필수적입니다.",
        "Question": "Layer 1 네트워크 구현을 위한 가장 효과적인 하드웨어 및 서비스 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "데이터 전송을 위한 안전한 채널을 유지하기 위해 인터넷을 통한 VPN 연결을 설정합니다.",
            "2": "AWS Direct Connect 위치에 연결되는 네트워킹 장비를 호스팅하기 위해 공동 위치 시설을 활용합니다.",
            "3": "데이터 센터와 AWS 간의 트래픽 라우팅을 최적화하기 위해 소프트웨어 정의 WAN(SD-WAN) 솔루션을 구현합니다.",
            "4": "AWS와의 직접 상호 연결을 용이하게 하기 위해 제3자 네트워크 서비스 제공업체를 참여시킵니다.",
            "5": "온프레미스 데이터 센터에서 전용 회선을 제공하기 위해 AWS Direct Connect에 대한 승인서(LOA)를 받습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "온프레미스 데이터 센터에서 전용 회선을 제공하기 위해 AWS Direct Connect에 대한 승인서(LOA)를 받습니다.",
            "AWS Direct Connect 위치에 연결되는 네트워킹 장비를 호스팅하기 위해 공동 위치 시설을 활용합니다."
        ],
        "Explanation": "승인서(LOA)를 받는 것은 AWS Direct Connect를 프로비저닝하는 데 필수적이며, 이는 전용 네트워크 연결을 제공하여 지연 시간을 줄이고 대역폭을 높입니다. 공동 위치 시설을 활용하면 AWS Direct Connect 위치와의 근접성을 보장하여 데이터 전송의 신뢰성과 성능을 향상시킵니다.",
        "Other Options": [
            "인터넷을 통한 VPN 연결을 설정하는 것은 안전하지만, AWS Direct Connect와 같은 전용 연결만큼의 성능과 신뢰성을 제공하지 않습니다.",
            "SD-WAN 솔루션을 구현하면 트래픽 라우팅을 최적화할 수 있지만, AWS에 대한 전용 연결을 위한 Layer 1 하드웨어 요구 사항을 직접적으로 다루지 않습니다.",
            "제3자 네트워크 서비스 제공업체를 참여시키는 것은 복잡성을 추가하고 잠재적으로 지연을 초래할 수 있으며, AWS 인프라에 대한 직접 연결을 보장하지 않습니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 회사가 AWS에 호스팅된 웹 애플리케이션으로의 트래픽 증가를 경험하고 있습니다. 애플리케이션은 Elastic Load Balancing (ELB)와 함께 Auto Scaling을 사용하도록 구성되어 있습니다. 증가한 부하를 처리하기 위해 네트워크 팀은 고가용성과 내결함성을 유지하면서 서브넷이 최적의 스케일링을 위해 구성되어 있는지 확인해야 합니다.",
        "Question": "네트워크 팀이 증가한 애플리케이션 부하를 효과적으로 지원하기 위해 Auto Scaling 구성에 맞게 서브넷을 최적화하기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "Auto Scaling 그룹이 여러 가용 영역에 걸쳐 있고 각 영역의 서브넷을 사용하도록 구성되어 있는지 확인합니다.",
            "2": "애플리케이션의 네트워크 용량을 확장하기 위해 VPC Peering 연결을 설정합니다.",
            "3": "로드 밸런서를 구성하여 더 나은 관리를 위해 단일 서브넷의 인스턴스에만 트래픽을 라우팅합니다.",
            "4": "기존 서브넷의 CIDR 블록을 늘려 더 많은 IP 주소를 허용합니다."
        },
        "Correct Answer": "Auto Scaling 그룹이 여러 가용 영역에 걸쳐 있고 각 영역의 서브넷을 사용하도록 구성되어 있는지 확인합니다.",
        "Explanation": "Auto Scaling 그룹이 여러 가용 영역에 걸쳐 있고 이러한 영역의 서브넷을 활용하도록 함으로써 애플리케이션의 가용성과 내결함성을 높일 수 있습니다. 이 구성은 부하의 더 나은 분산을 가능하게 하며, 하나의 가용 영역이 실패하더라도 애플리케이션이 다른 영역에서 계속 운영될 수 있도록 보장합니다.",
        "Other Options": [
            "기존 서브넷의 CIDR 블록을 늘리면 더 많은 IP 주소를 제공할 수 있지만, 이는 고가용성의 필요를 직접적으로 해결하지 않으며, 적절히 계획되지 않으면 자원의 비효율적인 사용으로 이어질 수 있습니다.",
            "로드 밸런서를 단일 서브넷의 인스턴스에만 트래픽을 라우팅하도록 구성하면 단일 실패 지점이 발생할 수 있으며, 복원력과 확장성을 위한 다중 AZ 구성의 이점을 활용하지 못합니다.",
            "VPC Peering 연결을 설정하면 네트워크 연결성에 도움이 될 수 있지만, 기존 서브넷을 최적화하거나 동일한 VPC 내에서 Auto Scaling 기능을 향상시키지 않습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "글로벌 기업이 하이브리드 네트워크 아키텍처의 성능과 신뢰성을 개선하기 위해 AWS Direct Connect를 구축했습니다. 네트워크 엔지니어는 품질 보증(QoS) 정책을 구현하여 이 연결을 통해 트래픽 흐름을 최적화하는 임무를 맡고 있습니다. 엔지니어는 특정 유형의 트래픽이 전송 중에 적절한 우선 순위를 받을 수 있도록 해야 합니다. 엔지니어가 네트워크 트래픽을 효과적으로 분류하고 관리하기 위해 어떤 방법을 사용해야 합니까?",
        "Question": "엔지니어가 AWS Direct Connect를 통해 트래픽의 우선 순위를 지정하기 위해 어떤 QoS 메커니즘을 사용해야 합니까?",
        "Options": {
            "1": "AWS Direct Connect에서 가상 인터페이스를 설정하여 다양한 유형의 트래픽을 위한 여러 논리적 연결을 생성합니다.",
            "2": "효율적인 포워딩을 위해 유사한 QoS 요구 사항을 가진 패킷을 그룹화하는 포워딩 동등 클래스(FEC)를 구성합니다.",
            "3": "외부 네트워크의 라우팅 결정을 영향을 미치기 위해 다중 종료 판별기(MED)를 사용합니다.",
            "4": "네트워크 인터페이스에서 패킷을 우선 처리하도록 표시하기 위해 차별화된 서비스 코드 포인트(DSCP) 설정을 구현합니다."
        },
        "Correct Answer": "네트워크 인터페이스에서 패킷을 우선 처리하도록 표시하기 위해 차별화된 서비스 코드 포인트(DSCP) 설정을 구현합니다.",
        "Explanation": "차별화된 서비스 코드 포인트(DSCP)는 패킷에 표시하여 전송 중에 적절한 서비스 수준을 받을 수 있도록 네트워크 트래픽을 분류하고 관리하는 QoS 메커니즘입니다. 이를 통해 AWS Direct Connect를 통한 트래픽의 효과적인 우선 순위 지정을 가능하게 하여, 중요한 애플리케이션이 필요한 대역폭과 지연 특성을 받을 수 있도록 보장합니다.",
        "Other Options": [
            "다중 종료 판별기(MED)는 자율 시스템의 경계에서 수신 트래픽 라우팅 결정을 영향을 미치는 데 사용되며, Direct Connect와 같은 연결을 통해 QoS를 직접 관리하지 않습니다.",
            "포워딩 동등 클래스(FEC)는 MPLS 네트워크의 맥락에서 패킷을 분류하는 데 사용되지만, QoS 측면에서 AWS Direct Connect를 통한 트래픽 관리에 직접 적용되지 않습니다.",
            "가상 인터페이스를 설정하면 트래픽 유형의 분리를 가능하게 하지만, 트래픽의 우선 순위를 지정하는 메커니즘을 제공하지 않으며, QoS 관리 기능 없이 단순히 논리적 분리를 제공합니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "한 회사가 성능 문제를 해결하고 보안을 강화하기 위해 Amazon VPC로 흐르는 네트워크 트래픽을 모니터링하고자 합니다. 팀은 특정 EC2 인스턴스에서 패킷 수준 데이터를 캡처하고 분석할 수 있는 솔루션이 필요하지만, 해당 인스턴스에서 실행 중인 애플리케이션의 성능에 영향을 주지 않아야 합니다.",
        "Question": "팀이 추가 데이터 전송 요금 없이 실시간 트래픽 분석을 달성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "VPC에 대한 API 호출을 기록하도록 구성된 AWS CloudTrail",
            "2": "지정된 서브넷의 모든 트래픽을 캡처하도록 구성된 VPC Flow Logs",
            "3": "애플리케이션 수준 로깅과 통합된 Amazon CloudWatch Logs",
            "4": "EC2 인스턴스의 네트워크 인터페이스에서 구성된 VPC 트래픽 미러링"
        },
        "Correct Answer": "EC2 인스턴스의 네트워크 인터페이스에서 구성된 VPC 트래픽 미러링",
        "Explanation": "VPC 트래픽 미러링을 사용하면 EC2 인스턴스에서 패킷을 실시간으로 캡처하고 검사할 수 있어 애플리케이션의 성능에 영향을 주지 않고도 깊이 있는 패킷 분석이 가능합니다. 이 솔루션은 네트워크 모니터링, 보안 분석 및 문제 해결에 이상적입니다.",
        "Other Options": [
            "VPC Flow Logs는 IP 트래픽에 대한 메타데이터(예: 출발지 및 목적지 IP 및 포트)를 제공하지만, 상세 분석에 필요한 실제 패킷 데이터를 캡처하지 않습니다.",
            "Amazon CloudWatch Logs는 애플리케이션 및 서비스의 로그를 수집하고 모니터링하는 데 중점을 두지만, 패킷 수준 분석이나 트래픽 모니터링 기능을 제공하지 않습니다.",
            "AWS CloudTrail은 AWS 서비스에 대한 API 호출을 기록하며, 감사 및 규정 준수에 유용하지만, 네트워크 트래픽을 캡처하거나 네트워크 성능에 대한 통찰력을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "회사가 메일 서버를 운영하기 위해 EC2 인스턴스를 설정하고 있습니다. 발신 이메일이 스팸으로 분류되지 않도록 하기 위해 네트워크 엔지니어는 인스턴스에 할당된 정적 IP 주소를 AWS에 알려야 합니다. 엔지니어는 또한 EC2 인스턴스를 재부팅하는 것과 중지한 후 다시 시작하는 것의 공용 IP 주소에 대한 영향을 고려하고 있습니다.",
        "Question": "EC2 인스턴스를 재부팅할 때 공용 IP 주소는 중지한 후 다시 시작할 때와 비교하여 어떻게 됩니까?",
        "Options": {
            "1": "인스턴스를 재부팅하면 공용 IP 주소가 유지되지만, 중지하고 다시 시작하면 공용 IP 주소가 해제됩니다.",
            "2": "인스턴스를 재부팅하거나 중지해도 공용 IP 주소가 유지됩니다.",
            "3": "인스턴스를 재부팅하면 공용 IP 주소가 변경되지만, 중지하고 다시 시작하면 동일한 공용 IP 주소가 유지됩니다.",
            "4": "인스턴스를 재부팅하면 공용 IP 주소가 해제되지만, 중지하고 다시 시작하면 공용 IP 주소가 유지됩니다."
        },
        "Correct Answer": "인스턴스를 재부팅하면 공용 IP 주소가 유지되지만, 중지하고 다시 시작하면 공용 IP 주소가 해제됩니다.",
        "Explanation": "EC2 인스턴스를 재부팅하면 동일한 호스트에 남아 공용 IP 주소를 유지합니다. 그러나 인스턴스를 중지한 후 다시 시작하면 공용 IP 주소를 잃고 새 IP 주소를 받게 됩니다.",
        "Other Options": [
            "이 옵션은 EC2 인스턴스를 중지하고 다시 시작하면 공용 IP 주소가 해제되므로 잘못된 것입니다.",
            "이 옵션은 재부팅이 공용 IP 주소를 변경하지 않으며, 인스턴스를 중지하면 공용 IP 주소를 잃게 되므로 잘못된 것입니다.",
            "이 옵션은 인스턴스를 재부팅하면 공용 IP 주소가 유지되지만, 중지하면 공용 IP 주소가 해제되므로 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "회사가 온프레미스 리소스와 AWS를 통합하는 하이브리드 클라우드 아키텍처를 구현할 계획입니다. 여러 AWS 계정과 리전에서 DNS 관리를 위해 Amazon Route 53을 사용하는 것을 고려하고 있습니다. 목표는 온프레미스와 AWS 리소스 모두에 대해 DNS 레코드의 원활한 해석을 보장하면서 높은 가용성과 낮은 대기 시간을 유지하는 것입니다.",
        "Question": "이 하이브리드 클라우드 아키텍처에서 DNS 관리를 위한 회사의 목표를 가장 잘 달성할 수 있는 구성은 무엇입니까?",
        "Options": {
            "1": "온프레미스 DNS와 통합하지 않고 여러 AWS 계정 간의 DNS 해석을 관리하기 위해 Route 53 헬스 체크 및 라우팅 정책을 사용합니다.",
            "2": "Route 53을 구성하여 DNS 관리를 온프레미스 DNS 서버에만 위임하고 AWS 리소스를 무시합니다.",
            "3": "각 AWS 계정에 Route 53 프라이빗 호스티드 존을 생성하고 인터넷에 노출된 리소스를 위해 별도의 Route 53 퍼블릭 호스티드 존을 설정합니다.",
            "4": "각 AWS 리전에서 인바운드 및 아웃바운드 엔드포인트와 함께 Route 53 Resolver를 구현하고 온프레미스 DNS 쿼리를 위한 포워딩 규칙을 구성합니다."
        },
        "Correct Answer": "각 AWS 리전에서 인바운드 및 아웃바운드 엔드포인트와 함께 Route 53 Resolver를 구현하고 온프레미스 DNS 쿼리를 위한 포워딩 규칙을 구성합니다.",
        "Explanation": "인바운드 및 아웃바운드 엔드포인트와 함께 Route 53 Resolver를 구현하면 온프레미스 DNS와 AWS 리소스 간의 효율적인 통합이 가능합니다. 이 설정은 AWS에서 온프레미스 DNS 서버로의 DNS 쿼리 포워딩을 가능하게 하여 하이브리드 아키텍처 전반에 걸쳐 원활한 해석을 보장합니다. 또한 Route 53의 지역 기능을 활용하여 높은 가용성과 낮은 대기 시간을 제공합니다.",
        "Other Options": [
            "프라이빗 및 퍼블릭 리소스에 대해 별도의 호스티드 존을 생성하는 것은 온프레미스 DNS와의 원활한 통합을 촉진하지 않으며, 환경 간 DNS 해석의 불일치를 초래할 수 있습니다.",
            "온프레미스 DNS와 통합하지 않고 헬스 체크 및 라우팅 정책을 사용하는 것은 온프레미스 리소스에서 발생하는 DNS 쿼리를 해결하지 않으므로 하이브리드 아키텍처에 대한 회사의 요구를 지원하지 않습니다.",
            "DNS 관리를 온프레미스 DNS 서버에만 위임하는 것은 AWS 리소스의 기능을 무시하며 하이브리드 환경을 위한 원하는 통합이나 높은 가용성을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "조직이 여러 AWS 리전 간의 트래픽을 라우팅하는 글로벌 네트워크에서 간헐적인 연결 문제를 겪고 있습니다. 라우팅 패턴을 문제 해결하고 분석하기 위해 네트워크 운영 팀은 AWS 도구를 사용하는 것을 고려하고 있습니다.",
        "Question": "다중 리전 설정에서 네트워크 토폴로지를 시각화하고 연결 문제를 식별하는 데 가장 효과적인 AWS 도구는 무엇입니까?",
        "Options": {
            "1": "AWS VPC Flow Logs",
            "2": "AWS Reachability Analyzer",
            "3": "AWS Transit Gateway Network Manager",
            "4": "AWS CloudTrail"
        },
        "Correct Answer": "AWS Transit Gateway Network Manager",
        "Explanation": "AWS Transit Gateway Network Manager는 여러 리전에서 네트워크의 중앙 집중식 뷰를 제공하여 다중 리전 환경에서 토폴로지를 시각화하고 연결 문제를 효과적으로 문제 해결할 수 있게 합니다. AWS 리소스 간의 트래픽 흐름을 확인하고 잠재적인 라우팅 문제를 식별하는 데 도움을 줍니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 AWS API 호출을 기록하고 계정 활동을 모니터링하는 데 사용되지만, 네트워크 토폴로지를 시각화하거나 연결 문제를 진단하는 도구를 제공하지 않습니다.",
            "AWS Reachability Analyzer는 VPC 내 특정 리소스의 도달 가능성을 확인하는 데 유용하지만, 다중 리전 네트워크 토폴로스에 대한 포괄적인 뷰를 제공하도록 설계되지 않았습니다.",
            "AWS VPC Flow Logs는 VPC를 통해 흐르는 트래픽에 대한 통찰력을 제공하지만, 시각화 기능이나 다중 리전 연결 패턴에 대한 전체적인 뷰를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "한 회사가 Amazon EC2 인스턴스를 사용하여 저지연 통신이 필요한 새로운 애플리케이션을 배포하고 있습니다. 아키텍처 팀은 성능 최적화를 위해 배치 그룹의 사용을 고려하고 있습니다. 그들은 다양한 배치 그룹 전략의 의미와 제한 사항을 이해할 필요가 있습니다.",
        "Question": "EC2 인스턴스를 저지연 성능을 위해 배포할 때 AWS 배치 그룹에 대한 어떤 설명이 사실입니까?",
        "Options": {
            "1": "기존 EC2 인스턴스를 배치 그룹으로 이동하여 네트워크 성능을 향상시킬 수 있습니다.",
            "2": "스프레드 배치 그룹 내의 인스턴스는 실패 위험을 줄이기 위해 서로 다른 가용 영역에 배포됩니다.",
            "3": "클러스터 배치 그룹 내의 인스턴스는 성능 최적화를 위해 여러 VPC에 걸쳐 시작될 수 있습니다.",
            "4": "배치 그룹 내의 모든 인스턴스는 최적화된 네트워크 성능을 얻기 위해 동시에 시작되어야 합니다."
        },
        "Correct Answer": "배치 그룹 내의 모든 인스턴스는 최적화된 네트워크 성능을 얻기 위해 동시에 시작되어야 합니다.",
        "Explanation": "최적화된 네트워크 성능을 달성하기 위해서는 배치 그룹 내의 모든 인스턴스가 동시에 시작되어야 합니다. 이는 AWS 인프라 내에서 서로 가까운 위치에 배치되도록 보장하며, 저지연 통신에 매우 중요합니다.",
        "Other Options": [
            "클러스터 배치 그룹 내의 인스턴스는 여러 VPC에 걸쳐 시작될 수 없으며, 저지연 연결을 보장하기 위해 동일한 VPC 내에 있어야 합니다.",
            "기존 EC2 인스턴스는 배치 그룹으로 이동할 수 없으며, 생성 시 배치 그룹으로 직접 시작되어야 합니다.",
            "스프레드 배치 그룹은 실패 위험을 완화하기 위해 서로 다른 가용 영역에 인스턴스를 배포하지만, 이는 애플리케이션의 저지연 성능 요구 사항과 직접적으로 관련이 없습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 회사가 여러 AWS 리전에서 애플리케이션 가용성과 성능을 개선하고자 합니다. 그들은 리소스의 상태와 사용자 위치에 따라 트래픽을 지능적으로 라우팅하고 싶어합니다. 네트워크 아키텍트는 Amazon Route 53 기능을 활용한 솔루션 설계를 맡았습니다.",
        "Question": "아키텍트가 애플리케이션 엔드포인트의 상태와 지리적 위치에 따라 사용자 요청을 라우팅하기 위해 어떤 Route 53 기능을 사용해야 합니까?",
        "Options": {
            "1": "CloudFront 배포를 가리키는 별칭 레코드와 함께 Route 53 지리적 라우팅을 구현합니다.",
            "2": "대기 리전으로 트래픽을 유도하기 위해 상태 검사를 포함한 Route 53 장애 조치 라우팅을 사용합니다.",
            "3": "각 엔드포인트에 대한 상태 검사를 포함한 Route 53 지연 라우팅 정책을 생성합니다.",
            "4": "상태 검사와 지리적 위치를 기반으로 라우팅을 관리하기 위해 Route 53 트래픽 정책을 설정합니다."
        },
        "Correct Answer": "상태 검사와 지리적 위치를 기반으로 라우팅을 관리하기 위해 Route 53 트래픽 정책을 설정합니다.",
        "Explanation": "Route 53 트래픽 정책은 상태 검사와 지리적 위치를 모두 포함할 수 있는 복잡한 라우팅 구성을 허용하므로, 애플리케이션 가용성과 성능에 두 가지 요소가 중요한 이 시나리오에 이상적인 선택입니다.",
        "Other Options": [
            "지연 라우팅 정책은 지연을 줄이는 데 유용하지만, 의사 결정 과정에 지리적 위치를 포함하지 않으므로 이 요구 사항에 덜 적합합니다.",
            "별칭 레코드와 함께 지리적 라우팅은 지역에 따라 트래픽을 유도할 수 있지만, 애플리케이션 가용성을 보장하는 데 필요한 상태 검사를 포함하지 않습니다.",
            "장애 조치 라우팅은 기본/대기 구성에 맞춰 설계되었으며 상태 검사를 포함하지만, 이 시나리오에서 중요한 지리적 위치를 고려하지 않습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 회사가 AWS 서비스에 대한 안전하고 비공식적인 접근을 요구하는 새로운 애플리케이션을 배포하고 있습니다. 아키텍처 팀은 높은 수준의 보안을 유지하면서 VPC를 다양한 AWS 서비스에 연결하기 위해 AWS PrivateLink를 고려하고 있습니다. 그들은 VPC 내의 애플리케이션 서버가 제3자 서비스에 안전하고 비공식적으로 접근할 수 있도록 보장하고 싶어합니다.",
        "Question": "아키텍처 팀이 AWS PrivateLink를 활용하여 VPC를 제3자 서비스에 안전하게 연결하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "VPN 게이트웨이",
            "2": "Direct Connect 게이트웨이",
            "3": "VPC 엔드포인트 서비스",
            "4": "인터넷 게이트웨이"
        },
        "Correct Answer": "VPC 엔드포인트 서비스",
        "Explanation": "AWS PrivateLink를 사용하면 트래픽을 공용 인터넷에 노출하지 않고 AWS에서 호스팅되는 서비스에 안전하게 접근할 수 있습니다. VPC 엔드포인트 서비스는 제3자 서비스에 대한 PrivateLink 연결을 생성하는 올바른 솔루션으로, VPC 내의 엔드포인트를 통해 비공식적인 접근을 가능하게 합니다.",
        "Other Options": [
            "VPN 게이트웨이는 주로 암호화된 VPN 연결을 통해 온프레미스 네트워크를 AWS에 연결하는 데 사용됩니다. AWS PrivateLink가 제공하는 AWS 서비스에 대한 비공식 연결을 제공하지 않습니다.",
            "Direct Connect 게이트웨이는 온프레미스 인프라에서 AWS로의 전용 네트워크 연결을 용이하게 하는 데 사용되지만, PrivateLink와 같은 AWS 서비스에 대한 비공식 접근을 가능하게 하지 않습니다.",
            "인터넷 게이트웨이는 VPC 내의 인스턴스와 인터넷 간의 통신을 허용하는 데 사용됩니다. AWS 서비스에 대한 비공식 연결을 제공하지 않으며, 명시된 안전한 접근 요구 사항과 호환되지 않습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "네트워크 아키텍트가 온프레미스 인프라와 AWS를 모두 활용하는 하이브리드 아키텍처를 설계하고 있습니다. 아키텍트는 두 환경 간의 최적의 연결성과 보안을 보장하기 위해 다양한 프로토콜의 역할과 해당 OSI 계층을 이해해야 합니다. 아키텍트는 특히 전송 중인 데이터에 대한 보안 조치의 구현에 집중하고 있습니다.",
        "Question": "다음 중 하이브리드 아키텍처에서 OSI 계층과 해당 네트워크 프로토콜을 올바르게 설명하는 문장은 무엇입니까?",
        "Options": {
            "1": "DNS와 DHCP는 네트워크 계층에서 작동하여 장치의 호스트 이름 해석과 동적 IP 주소 할당을 용이하게 합니다.",
            "2": "BGP는 자율 시스템 간에 데이터를 라우팅하는 애플리케이션 계층 프로토콜로, 인터넷 전반에 걸쳐 경로 선택을 최적화합니다.",
            "3": "FTP와 SMTP는 전송 계층에서 작동하여 네트워크를 통한 신뢰할 수 있는 데이터 전송 및 이메일 통신을 가능하게 합니다.",
            "4": "IPSec는 네트워크 계층에서 작동하여 각 IP 패킷을 암호화하고 인증함으로써 IP를 통한 안전한 통신을 제공합니다."
        },
        "Correct Answer": "IPSec는 네트워크 계층에서 작동하여 각 IP 패킷을 암호화하고 인증함으로써 IP를 통한 안전한 통신을 제공합니다.",
        "Explanation": "IPSec는 네트워크 계층에서 작동하는 프로토콜로, IP 네트워크에서 안전한 통신을 위한 암호화 및 인증을 제공합니다. 이는 온프레미스와 클라우드 리소스를 모두 포함하는 하이브리드 아키텍처에서 보안을 유지하는 데 필수적입니다.",
        "Other Options": [
            "FTP와 SMTP는 전송 계층이 아닌 애플리케이션 계층에서 작동합니다. 이들은 각각 파일 전송 및 이메일 서비스에 사용되며 전송 계층 기능을 제공하지 않습니다.",
            "DNS와 DHCP는 네트워크 계층이 아닌 애플리케이션 계층 프로토콜입니다. 이들은 도메인 이름을 IP 주소로 해석하고 IP 주소를 동적으로 할당하여 장치가 네트워크에 연결되는 방식에 영향을 미칩니다.",
            "BGP는 애플리케이션 계층에서 작동하는 경로 벡터 프로토콜이지만, 주로 인터넷의 자율 시스템 간 라우팅에 사용되며 로컬 네트워크 라우팅에는 사용되지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "조직은 AWS 인프라 전반에 걸쳐 네트워크 트래픽을 모니터링하고 활동을 기록하여 내부 보안 정책 및 규제 요구 사항을 준수해야 합니다. 팀은 실시간 탐지 및 경고를 도와줄 수 있는 포괄적인 네트워크 모니터링 및 로깅 솔루션을 구현하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "보안 정책 준수를 보장하면서 네트워크 활동을 모니터링하고 로깅하기 위한 효과적인 솔루션을 제공하는 AWS 서비스 조합은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail은 API 로깅을, VPC Flow Logs는 네트워크 트래픽 로깅을 제공합니다.",
            "2": "Amazon CloudFront는 콘텐츠 전송을, AWS Direct Connect는 개인 네트워크 연결을 제공합니다.",
            "3": "Amazon S3는 데이터 저장을, AWS Config는 구성 준수 추적을 제공합니다.",
            "4": "AWS Lambda는 이벤트 기반 자동화를, Transit Gateway Network Manager는 중앙 집중식 네트워크 모니터링을 제공합니다."
        },
        "Correct Answer": "AWS CloudTrail은 API 로깅을, VPC Flow Logs는 네트워크 트래픽 로깅을 제공합니다.",
        "Explanation": "AWS CloudTrail은 AWS 계정에서 이루어진 API 호출을 캡처하여 리소스에서 수행된 작업의 세부 로깅을 가능하게 하며, VPC Flow Logs는 VPC 내 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 가시성을 제공합니다. 이 조합은 네트워크 활동 모니터링 및 로깅 요구 사항을 효과적으로 충족합니다.",
        "Other Options": [
            "Amazon S3는 저장 서비스이며 AWS Config는 네트워크 트래픽 모니터링보다는 AWS 리소스 구성에 중점을 두고 있어 이 조합은 요구 사항을 충족하지 못합니다.",
            "AWS Lambda는 이벤트에 대한 자동 응답을 촉진하지만 네트워크 활동을 직접 모니터링하거나 로깅하지 않습니다. Transit Gateway Network Manager는 연결 관리를 위해 유용하지만 트래픽 데이터를 로깅하지 않습니다.",
            "Amazon CloudFront는 주로 콘텐츠 전송 네트워크이며 네트워크 트래픽의 로깅이나 모니터링을 제공하지 않습니다. AWS Direct Connect는 전용 연결 서비스로, 로깅이나 모니터링 서비스가 아닙니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "조직은 직원들에게 가상 데스크톱을 제공하기 위해 AWS WorkSpaces를 배포하고 있습니다. 배포는 VPC 내에 두 개의 프라이빗 서브넷과 하나의 퍼블릭 서브넷으로 구성되어 있습니다. 조직은 인증을 위해 Microsoft Active Directory를 사용하고 있으며, 다단계 인증을 위해 온프레미스 RADIUS를 설정했습니다. 네트워크 엔지니어는 WorkSpaces가 연결 문제 없이 올바르게 작동하도록 해야 합니다.",
        "Question": "AWS WorkSpaces 배포를 효과적으로 지원하기 위해 네트워크 엔지니어가 네트워크 구성에 대해 보장해야 하는 것은 무엇입니까?",
        "Options": {
            "1": "AWS WorkSpaces 네트워크 인터페이스를 지원하기 위해 VPC를 최소 MTU 1400으로 구성합니다.",
            "2": "AWS WorkSpaces의 네트워크 구성을 단순화하기 위해 RADIUS 인증을 비활성화합니다.",
            "3": "MTU 문제를 피하고 성능을 향상시키기 위해 모든 AWS WorkSpaces에 대해 퍼블릭 서브넷을 구현합니다.",
            "4": "AWS WorkSpaces의 두 네트워크 인터페이스를 지원하기 위해 VPC의 최소 MTU가 1200인지 확인합니다."
        },
        "Correct Answer": "AWS WorkSpaces의 두 네트워크 인터페이스를 지원하기 위해 VPC의 최소 MTU가 1200인지 확인합니다.",
        "Explanation": "AWS WorkSpaces는 올바른 기능을 위해 최소 MTU 1200이 필요합니다. 이 구성은 네트워크 인터페이스가 조각화 문제 없이 통신할 수 있도록 보장하며, 이는 원활한 사용자 경험에 필수적입니다.",
        "Other Options": [
            "이 옵션은 MTU 1400을 제안하는데, 이는 최소 요구 사항을 초과하여 특정 네트워크 경로에서 조각화를 유발할 수 있으며, 성능 문제로 이어질 수 있습니다.",
            "이 옵션은 모든 WorkSpaces에 대해 퍼블릭 서브넷을 구현할 것을 잘못 추천합니다. 퍼블릭 서브넷은 사용 사례가 있지만, WorkSpaces는 일반적으로 프라이빗 서브넷을 사용하여 보다 안전하게 배포됩니다.",
            "RADIUS 인증을 비활성화하면 다단계 인증을 위한 보안 프로토콜이 약화되어 AWS WorkSpaces 배포에서 보안을 우선시하는 조직에는 바람직하지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "한 회사가 VPC 내 여러 가용 영역에 웹 애플리케이션을 배포하고 있습니다. 안전한 통신과 적절한 트래픽 흐름을 보장하기 위해 네트워크 엔지니어는 보안 그룹과 네트워크 ACL을 효과적으로 구성해야 합니다. 이 애플리케이션은 반환 트래픽을 위해 인터넷에 대한 아웃바운드 액세스가 필요한 EC2 인스턴스를 활용할 것입니다. 또한, 엔지니어는 잠재적인 DDoS 공격에 대해 우려하고 있으며 임시 트래픽 차단 전략을 구현하고자 합니다.",
        "Question": "네트워크 엔지니어가 잠재적인 DDoS 공격에 대비하면서 안전하고 효율적인 트래픽 흐름을 보장하기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "포트 80과 443에서만 액세스를 허용하는 사용자 지정 보안 그룹을 생성합니다. EC2 인스턴스가 보안 그룹과 연결되어 있고 DDoS 보호를 위해 기본 NACL이 유지되도록 합니다.",
            "2": "모든 트래픽을 허용하는 보안 그룹을 설정하고 이를 EC2 인스턴스와 연결합니다. 특정 트래픽 유형을 허용하는 사용자 지정 NACL을 구현하고 DDoS 이벤트 중에 기본 NACL을 일시적으로 제거합니다.",
            "3": "보안 그룹을 구성하여 임시 포트에서 인터넷으로부터의 인바운드 트래픽을 허용하고 이를 EC2 인스턴스와 연결합니다. DDoS 공격 발생 시 기본 NACL을 일시적으로 제거합니다.",
            "4": "모든 인바운드 및 아웃바운드 트래픽을 허용하는 네트워크 ACL을 설정한 다음, 보안 그룹을 구성하여 특정 IP에만 액세스를 제한합니다. DDoS 공격 발생 시 기본 NACL을 일시적으로 제거합니다."
        },
        "Correct Answer": "보안 그룹을 구성하여 임시 포트에서 인터넷으로부터의 인바운드 트래픽을 허용하고 이를 EC2 인스턴스와 연결합니다. DDoS 공격 발생 시 기본 NACL을 일시적으로 제거합니다.",
        "Explanation": "이 옵션은 웹 서버로부터의 반환 트래픽을 위해 임시 포트에서 트래픽을 허용하도록 보안 그룹을 구성해야 할 필요성을 올바르게 식별하며, 기본 NACL의 임시 제거를 제안하여 DDoS 우려를 해결합니다.",
        "Other Options": [
            "이 옵션은 네트워크 ACL을 사용하여 모든 인바운드 및 아웃바운드 트래픽을 허용하라고 잘못 제안하고 있으며, 이는 애플리케이션을 보안 위험에 노출시킬 수 있습니다. 기본 NACL을 제거한다고 언급하지만, 임시 포트 액세스 요구 사항을 다루지 않습니다.",
            "이 옵션은 네트워크 ACL을 통해 모든 트래픽을 허용하므로 트래픽 흐름 관리에 효과적이지 않으며, 액세스를 제한하는 목표와 모순됩니다. 또한 아웃바운드 연결을 위한 임시 포트의 특정 필요성을 언급하지 않습니다.",
            "이 옵션은 포트 80과 443에만 액세스를 제한하는데, 이는 반환 트래픽을 위해 임시 포트가 필요한 웹 서버에는 불충분합니다. 또한 DDoS 완화 전략을 적절히 다루지 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 회사가 온프레미스 데이터 센터와 AWS를 연결하기 위해 하이브리드 네트워크 아키텍처를 구현할 계획입니다. 이 회사는 AWS Transit Gateway를 사용하여 트래픽 관리를 용이하게 하고 네트워크 성능을 최적화하고자 합니다. 또한, 여러 지역에서 원활한 연결성과 로드 밸런싱을 보장하기 위해 기존 SD-WAN 솔루션을 Transit Gateway와 통합하고자 합니다.",
        "Question": "이 시나리오에서 회사가 AWS Transit Gateway와 함께 SD-WAN 트래픽 관리를 구현하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "온프레미스 데이터 센터에 Direct Connect 연결을 설정하고 SD-WAN 트래픽을 이를 통해 라우팅합니다.",
            "2": "Transit Gateway Connect를 활용하여 SD-WAN 솔루션을 Transit Gateway와 직접 통합합니다.",
            "3": "AWS Site-to-Site VPN 연결을 사용하여 온프레미스 SD-WAN을 Transit Gateway에 연결합니다.",
            "4": "SD-WAN 장치와 Transit Gateway에 연결된 VPC 간에 VPC 피어링을 구현합니다."
        },
        "Correct Answer": "Transit Gateway Connect를 활용하여 SD-WAN 솔루션을 Transit Gateway와 직접 통합합니다.",
        "Explanation": "Transit Gateway Connect는 서드파티 SD-WAN 솔루션을 AWS Transit Gateway와 통합하기 위해 특별히 설계되었습니다. 이를 통해 최적화된 트래픽 라우팅 및 관리를 가능하게 하여 회사의 요구에 가장 적합한 선택입니다.",
        "Other Options": [
            "AWS Site-to-Site VPN 연결은 온프레미스 SD-WAN을 Transit Gateway에 연결할 수 있지만, SD-WAN 트래픽 관리를 최적화하기 위해 Transit Gateway Connect와 동일한 수준의 성능과 유연성을 제공하지 않을 수 있습니다.",
            "Direct Connect 연결은 주로 AWS에 대한 전용 네트워크 연결을 설정하는 데 사용되지만, SD-WAN 솔루션을 Transit Gateway와 통합하는 것을 구체적으로 다루지 않으므로 이 시나리오에 덜 적합합니다.",
            "VPC 피어링은 VPC 간의 연결을 허용하지만, SD-WAN 솔루션을 Transit Gateway와 직접 통합하는 것을 지원하지 않으므로 이 경우 효과적인 트래픽 관리를 위해 필수적입니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "클라우드 아키텍트가 AWS에서 새로운 애플리케이션을 위한 네트워크 인프라의 배포 및 구성을 자동화하는 업무를 맡고 있습니다. 이 아키텍처는 여러 VPC, 서브넷, 라우팅 테이블 및 보안 그룹의 설정을 요구합니다. 아키텍트는 수동 개입을 최소화하면서 배포가 일관되고 반복 가능하도록 하기를 원합니다.",
        "Question": "이 시나리오에서 네트워크 인프라를 자동화하고 구성하는 데 가장 적합한 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Systems Manager를 활용하여 VPC 및 서브넷 배포를 자동화하는 문서를 생성합니다. AWS Lambda를 사용하여 구성을 트리거합니다.",
            "2": "AWS Elastic Beanstalk를 구현하여 네트워크 리소스를 자동으로 관리하고 플랫폼이 보안 그룹 및 로드 밸런서를 구성하도록 허용합니다.",
            "3": "AWS CloudFormation을 사용하여 전체 네트워크 구성을 코드로 정의하고 스택을 사용하여 배포합니다. AWS Config를 활성화하여 준수를 모니터링하고 관리합니다.",
            "4": "Amazon EC2 사용자 데이터 스크립트를 활용하여 인스턴스 시작 시 네트워크 설정을 구성하고 수동으로 VPC 및 서브넷 리소스를 생성합니다."
        },
        "Correct Answer": "AWS CloudFormation을 사용하여 전체 네트워크 구성을 코드로 정의하고 스택을 사용하여 배포합니다. AWS Config를 활성화하여 준수를 모니터링하고 관리합니다.",
        "Explanation": "AWS CloudFormation은 전체 네트워크 인프라를 코드로 정의할 수 있게 하여 자동화되고 반복 가능한 배포를 가능하게 합니다. 이는 정의된 구성에 대한 준수를 모니터링하기 위해 AWS Config와 통합됩니다.",
        "Other Options": [
            "AWS Systems Manager는 네트워크 인프라를 코드로 정의하고 배포하는 데 주로 사용되지 않으며, 작업을 자동화할 수 있지만 CloudFormation과 같은 수준의 인프라 관리 기능을 제공하지 않습니다.",
            "AWS Elastic Beanstalk는 애플리케이션 배포 및 관리를 위해 설계되었으며, 직접적인 네트워크 인프라 구성을 위한 것이 아닙니다. 이는 기본 인프라 관리의 추상화를 제공하므로 이 요구 사항에 적합하지 않습니다.",
            "Amazon EC2 사용자 데이터 스크립트는 인스턴스 시작 시 설정을 구성하는 데 제한적이며, VPC, 서브넷 및 기타 네트워킹 구성 요소를 관리하기 위한 포괄적인 솔루션을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "한 금융 서비스 회사가 VPC와 파트너의 온프레미스 데이터 센터 간의 안전한 통신을 요구하는 새로운 애플리케이션을 개발하고 있습니다. 이 애플리케이션은 또한 회사의 내부 서비스에 대한 원활한 접근을 허용해야 하며, 이를 공용 인터넷에 노출하지 않아야 합니다. 네트워크 엔지니어는 높은 보안과 낮은 대기 시간을 유지하면서 개인 연결을 보장하는 솔루션을 선택해야 합니다.",
        "Question": "VPC와 파트너의 온프레미스 데이터 센터 간의 안전하고 개인적인 연결을 제공하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS PrivateLink를 구현하여 내부 서비스를 파트너에게 노출하되 트래픽이 AWS 네트워크 내에 유지되도록 합니다.",
            "2": "VPC와 파트너의 VPC 간에 VPC 피어링 연결을 설정하여 개인 IP 연결을 가능하게 합니다.",
            "3": "파트너의 데이터 센터와 VPC 간에 전용 개인 연결을 위한 Direct Connect 연결을 생성합니다.",
            "4": "AWS Site-to-Site VPN을 사용하여 파트너의 온프레미스 데이터 센터에서 VPC로 VPN 연결을 설정합니다."
        },
        "Correct Answer": "파트너의 데이터 센터와 VPC 간에 전용 개인 연결을 위한 Direct Connect 연결을 생성합니다.",
        "Explanation": "AWS Direct Connect를 사용하면 파트너의 데이터 센터에서 AWS VPC로 전용 네트워크 연결이 설정되어 높은 처리량, 낮은 대기 시간 및 개인 통신을 위한 향상된 보안을 보장합니다. 이 솔루션은 일관된 성능과 안전한 연결이 필요한 애플리케이션에 이상적입니다.",
        "Other Options": [
            "VPC 피어링은 동일 지역 내 VPC 간의 연결로 제한되며 온프레미스 데이터 센터에 대한 직접 접근을 제공하지 않으므로 이 시나리오에 적합하지 않습니다.",
            "AWS PrivateLink는 AWS 내 서비스에 대한 개인 접근을 제공하도록 설계되었지만, 이 경우 필요한 온프레미스 환경에서 AWS로의 직접 개인 연결을 촉진하지 않습니다.",
            "Site-to-Site VPN은 안전한 연결을 제공할 수 있지만, 일반적으로 Direct Connect 연결에 비해 대기 시간이 더 길고 대역폭이 낮아 성능에 민감한 애플리케이션에는 덜 적합합니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사가 온프레미스 데이터 센터와의 AWS Direct Connect 연결을 통해 하이브리드 클라우드 환경을 운영하고 있습니다. 네트워크 관리자는 온프레미스 데이터 센터와 AWS 리소스 간의 대용량 데이터 전송을 개선하기 위해 이 연결에서 점보 프레임 지원을 활성화하는 임무를 맡고 있습니다. 이 연결은 여러 VPC에 연결되도록 구성된 개인 가상 인터페이스를 사용합니다.",
        "Question": "관리자가 Direct Connect 연결에서 적절한 점보 프레임 지원을 보장하기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "Direct Connect 연결과 온프레미스 라우터 간에 MTU 크기가 일관되도록 구성합니다.",
            "2": "AWS 측에서 MTU 크기를 9000으로 설정하고 온프레미스 라우터는 기본 MTU 크기로 둡니다.",
            "3": "온프레미스 라우터의 MTU 크기를 1500으로 조정하고 AWS MTU 크기는 9000으로 유지합니다.",
            "4": "AWS 측에서만 점보 프레임을 활성화합니다; 온프레미스 라우터는 점보 프레임을 구성할 필요가 없습니다."
        },
        "Correct Answer": "Direct Connect 연결과 온프레미스 라우터 간에 MTU 크기가 일관되도록 구성합니다.",
        "Explanation": "점보 프레임 지원을 성공적으로 활성화하려면 MTU(최대 전송 단위) 크기를 AWS Direct Connect 연결과 온프레미스 라우터 모두에서 일관되게 구성해야 합니다. 이는 패킷이 단편화 없이 전송될 수 있도록 보장하며, 이는 점보 프레임의 이점을 달성하는 데 중요합니다.",
        "Other Options": [
            "이 옵션은 온프레미스 라우터와 AWS 측에서 MTU 크기가 다르면 패킷 단편화가 발생할 수 있으므로 점보 프레임 사용의 이점을 무효화합니다.",
            "이 옵션은 AWS 측에서만 점보 프레임을 활성화하면 온프레미스 라우터가 구성되지 않아 MTU 설정이 불일치하게 되어 패킷 손실이나 단편화가 발생할 수 있습니다.",
            "이 옵션은 온프레미스 라우터의 MTU 크기를 1500으로 설정하고 AWS를 9000으로 유지하면 불일치가 발생하여 단편화가 발생하고 점보 프레임의 이점을 잃게 됩니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 금융 기관이 AWS에서 호스팅되는 애플리케이션 아키텍처의 장애 조치 및 복원력을 테스트해야 하는 규정 준수 감사에 직면해 있습니다. 이 애플리케이션은 여러 가용 영역에 배포되어 있으며 Amazon Route 53을 사용하여 DNS 관리를 수행합니다. 네트워크 보안 팀은 장애 조치 메커니즘이 의도한 대로 작동하는지 확인하고 애플리케이션이 중단 동안 가용성을 유지할 수 있는지 검증해야 합니다.",
        "Question": "네트워크 보안 팀이 장애 조치 기능을 테스트하고 필요한 요구 사항을 준수하기 위해 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "하나의 가용 영역에서 장애를 시뮬레이션하고 트래픽이 건강한 영역으로 리라우팅되는지 확인합니다.",
            "2": "DNS 레코드를 수동으로 업데이트하여 다른 엔드포인트를 가리키게 하고 트래픽 흐름을 확인합니다.",
            "3": "Route 53 헬스 체크를 일시적으로 비활성화하고 애플리케이션 동작을 관찰합니다.",
            "4": "정상 조건에서 지연 시간과 처리량을 측정하기 위해 애플리케이션 성능 테스트를 실행합니다."
        },
        "Correct Answer": "하나의 가용 영역에서 장애를 시뮬레이션하고 트래픽이 건강한 영역으로 리라우팅되는지 확인합니다.",
        "Explanation": "하나의 가용 영역에서 장애를 시뮬레이션하는 것은 애플리케이션 아키텍처의 장애 조치 기능을 직접 테스트하는 가장 효과적인 방법입니다. 이 접근 방식은 팀이 시스템의 반응을 관찰할 수 있게 하여 트래픽이 원활하게 건강한 영역으로 리라우팅되는지 확인하고, 규정 준수에 필요한 애플리케이션의 복원력을 검증합니다.",
        "Other Options": [
            "Route 53 헬스 체크를 비활성화하는 것은 장애 조치 기능을 효과적으로 테스트하지 않으며, 실제 장애 조건에서 애플리케이션이 어떻게 동작하는지 관찰할 수 없습니다.",
            "DNS 레코드를 수동으로 업데이트하는 것은 특정 시나리오에서 작동할 수 있지만, 가용성을 유지하는 데 중요한 자동 장애 조치 메커니즘을 포괄적으로 테스트하지 않습니다.",
            "정상 조건에서 애플리케이션 성능 테스트를 실행하는 것은 중단 동안의 장애 조치 기능이나 애플리케이션의 복원력을 평가하지 않으며, 이는 규정 준수 테스트의 핵심 초점입니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "회사가 특정 리소스에 접근하기 전에 사용자가 인증해야 하는 새로운 다계층 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 웹 계층, 애플리케이션 계층 및 데이터베이스 계층으로 구성됩니다. 웹 계층은 HTTP(S) 요청을 처리하며 고가용성을 위해 여러 인스턴스에 트래픽을 분산해야 합니다. 애플리케이션 계층은 요청을 처리하고 데이터베이스 계층과 통신하며, 데이터베이스 계층은 인터넷에 노출되지 않아야 합니다.",
        "Question": "회사가 웹 계층에서 HTTP 및 HTTPS 트래픽을 처리하고 고급 라우팅 기능을 제공할 수 있도록 어떤 로드 밸런서를 선택해야 합니까?",
        "Options": {
            "1": "Application Load Balancer",
            "2": "Gateway Load Balancer",
            "3": "Classic Load Balancer",
            "4": "Network Load Balancer"
        },
        "Correct Answer": "Application Load Balancer",
        "Explanation": "Application Load Balancer는 HTTP 및 HTTPS 트래픽을 위해 설계되었으며, 호스트 기반 및 경로 기반 라우팅과 같은 고급 라우팅 기능을 제공하여 사용자 인증 및 여러 인스턴스 간의 트래픽 분산이 필요한 다계층 웹 애플리케이션에 적합합니다.",
        "Other Options": [
            "Network Load Balancer는 TCP 트래픽 처리를 최적화한 것으로, 극한의 성능과 낮은 대기 시간이 필요한 애플리케이션에 주로 사용되지만 고급 HTTP 기능을 지원하지 않습니다.",
            "Gateway Load Balancer는 아키텍처에 서드파티 가상 어플라이언스를 통합하기 위한 것이며, 웹 애플리케이션의 HTTP 또는 HTTPS 트래픽 분산에는 적합하지 않습니다.",
            "Classic Load Balancer는 기본 로드 밸런싱 기능을 지원하는 구형 기술이지만, 경로 기반 라우팅과 같은 현대 웹 애플리케이션에 필요한 고급 기능이 부족합니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "금융 서비스 회사가 온프레미스 데이터 센터와 AWS 간의 신뢰할 수 있고 안전한 데이터 전송을 보장하기 위해 Amazon Direct Connect (DX) 연결을 설정하고 있습니다. 네트워크 팀은 자동 협상 비활성화 및 BGP 한계 인식 등 연결 설정에 대한 특정 요구 사항을 준수해야 합니다.",
        "Question": "네트워크 팀이 Direct Connect 요구 사항을 준수하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "DX 포트에 대해 자동 협상을 활성화하고 속도를 1 Gbps로 설정합니다.",
            "2": "자동 협상을 비활성화하고 DX 연결에 대해 10 Gbps 링크 속도를 구성합니다.",
            "3": "DX 포트 속도를 100 Mbps로 설정하고 자동 협상을 비활성화합니다.",
            "4": "자동 협상을 비활성화하고 BGP 라우트 테이블이 100개 광고된 라우트를 초과하지 않도록 합니다."
        },
        "Correct Answer": "자동 협상을 비활성화하고 BGP 라우트 테이블이 100개 광고된 라우트를 초과하지 않도록 합니다.",
        "Explanation": "자동 협상을 비활성화하는 것은 Direct Connect 요구 사항을 충족하는 데 중요합니다. 또한, 라우트 테이블당 광고된 BGP 라우트의 한계는 100개로, 옵션 3이 두 요구 사항 모두에 부합하므로 올바른 선택입니다.",
        "Other Options": [
            "자동 협상을 활성화하는 것은 Direct Connect 설정에 대한 요구 사항에 위배되므로 옵션 1은 잘못되었습니다.",
            "자동 협상을 비활성화하는 것은 맞지만, 10 Gbps 링크 속도를 구성하는 것은 허용되지 않으며 기존 연결의 포트 속도를 변경할 수 없으므로 옵션 2는 잘못되었습니다.",
            "DX 포트 속도를 100 Mbps로 설정하는 것은 DX 파트너의 최저 대역폭이 50 Mbps이므로 허용되지 않으며, 옵션 4는 잘못되었습니다."
        ]
    }
]