[
    {
        "Question Number": "1",
        "Situation": "ある会社が特定のチームメンバーにAmazon S3バケットへのアクセスを付与する必要がありますが、バケット内の特定のオブジェクトへのアクセスのみを制限したいと考えています。IAM管理者は、管理の負担を軽減しつつ、チームメンバーが必要な権限のみを持つようにしたいと考えています。",
        "Question": "管理者はどのタイプのポリシーを使用すべきで、バケット内のオブジェクトへのアクセスを制限するためにどのリソースARN形式を指定すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "インラインポリシーを使用し、ARNをarn:aws:s3:::bucket-name/*として指定する。",
            "2": "カスタマーマネージドポリシーを使用し、ARNをarn:aws:s3:::bucket-nameとして指定する。",
            "3": "AWSマネージドポリシーを使用し、ARNをarn:aws:s3:::bucket-name/*として指定する。",
            "4": "インラインポリシーを使用し、ARNをarn:aws:s3:::bucket-nameとして指定する。",
            "5": "バケットポリシーを使用し、ARNをarn:aws:s3:::bucket-name/specific-object-keyとして指定する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "インラインポリシーを使用し、ARNをarn:aws:s3:::bucket-name/*として指定する。",
            "バケットポリシーを使用し、ARNをarn:aws:s3:::bucket-name/specific-object-keyとして指定する。"
        ],
        "Explanation": "インラインポリシーは、単一のIAMアイデンティティ（ユーザー、グループ、またはロール）に埋め込まれたポリシーです。これにより、管理者は特定のユーザーに特定の権限を付与でき、これはこのケースの要件です。ARN 'arn:aws:s3:::bucket-name/*'は、バケット内のすべてのオブジェクトへのアクセスを許可します。バケットポリシーはリソースベースのポリシーであり、ポリシーを作成してS3バケットに直接添付することができます。ARN 'arn:aws:s3:::bucket-name/specific-object-key'は、バケット内の特定のオブジェクトへのアクセスを制限します。",
        "Other Options": [
            "カスタマーマネージドポリシーを使用し、ARNを'arn:aws:s3:::bucket-name'として指定することは、バケット内の特定のオブジェクトへのアクセスを制限しません。代わりに、バケット全体へのアクセスを許可します。",
            "AWSマネージドポリシーを使用し、ARNを'arn:aws:s3:::bucket-name/*'として指定することは理想的ではありません。AWSマネージドポリシーは一般的なユースケースのための権限を提供するように設計されており、AWSによって管理されています。このシナリオで必要な詳細な制御を提供しない可能性があります。",
            "インラインポリシーを使用し、ARNを'arn:aws:s3:::bucket-name'として指定することは、バケット内の特定のオブジェクトへのアクセスを制限しません。代わりに、バケット全体へのアクセスを許可します。"
        ]
    },
    {
        "Question Number": "2",
        "Situation": "ある会社が組織内の異なるチームからの多数のIAMユーザーの権限を管理したいと考えています。各チームに対して個別のポリシーをすべてのユーザーに割り当てる必要がない構造が必要です。さらに、個々のユーザーがリソースポリシーで直接参照されることを防ぎたいと考えています。",
        "Question": "これらの要件を満たすために最も効果的なIAM機能はどれですか？",
        "Options": {
            "1": "各ユーザーのためにチーム固有のポリシーを添付した個別のIAMロールを作成する。",
            "2": "IAMグループを使用してユーザーをチームごとに整理し、各グループにチーム固有のポリシーを添付する。",
            "3": "すべてのユーザーのために単一のIAMロールを設定し、AWS Organizationsに権限を管理させる。",
            "4": "各ユーザーに特定のチーム権限に基づいてインラインポリシーを割り当てる。"
        },
        "Correct Answer": "IAMグループを使用してユーザーをチームごとに整理し、各グループにチーム固有のポリシーを添付する。",
        "Explanation": "IAMグループを使用することは、個別にではなくチームレベルで権限を管理できるため、最も効果的な解決策です。各チームのためにグループを作成することで、会社はそのグループ内のすべてのユーザーの権限を定義するポリシーを添付できます。これにより、ポリシーの変更がグループ内のすべてのユーザーに自動的に適用されるため、権限管理が簡素化されます。さらに、IAMグループは個々のユーザーがリソースポリシーで直接参照されることを防ぎ、会社の要件に合致します。",
        "Other Options": [
            "各ユーザーのためにチーム固有のポリシーを添付した個別のIAMロールを作成することは、特に多数のユーザーがいる場合、複雑で管理が難しい構造につながります。このアプローチでは、各ロールの更新と管理が常に必要となり、非効率的です。",
            "すべてのユーザーのために単一のIAMロールを設定し、AWS Organizationsに権限を管理させることは、チーム固有の権限に必要な詳細さを提供しません。これにより、すべてのユーザーが同じ権限を持つことになり、チームごとの権限管理の要件を満たしません。",
            "各ユーザーに特定のチーム権限に基づいてインラインポリシーを割り当てることはスケーラブルではありません。インラインポリシーはユーザーに直接添付されるため、チーム全体の権限を一括管理することが難しくなります。このアプローチは冗長性を生み出し、管理の負担を増加させることにもつながります。"
        ]
    },
    {
        "Question Number": "3",
        "Situation": "ある会社がAWSでプライベートサブネットとパブリックサブネットの両方を持つVPCを構成しています。彼らは、パブリックサブネット内のインスタンスにインターネットアクセスを有効にしつつ、プライベートサブネット内のインスタンスを直接インターネットアクセスから隔離する必要があります。",
        "Question": "会社はパブリックサブネットのインターネットアクセスを構成し、VPC内での安全なルーティングを確保するためにどのステップを踏むべきですか？",
        "Options": {
            "1": "VPCにインターネットゲートウェイ（IGW）を接続し、パブリックサブネットに0.0.0.0/0トラフィックをIGWに向けるルートテーブルを関連付け、パブリックサブネット内のインスタンスにパブリックIPv4アドレスを割り当てる。",
            "2": "プライベートサブネットにNATゲートウェイを設定し、VPCに接続し、パブリックサブネットからNATゲートウェイに向ける0.0.0.0/0トラフィックのルートテーブルを作成する。",
            "3": "インターネットゲートウェイ（IGW）を作成し、パブリックサブネット内の各インスタンスに個別に接続してインターネットアクセスを提供し、ルーティングにはデフォルトのルートテーブルを使用する。",
            "4": "プライベートサブネットとパブリックサブネットの間にVPCピアリング接続を使用してインターネットトラフィックをルーティングし、両方のサブネット内のすべてのインスタンスに接続のためのパブリックIPv4アドレスを持たせる。"
        },
        "Correct Answer": "VPCにインターネットゲートウェイ（IGW）を接続し、パブリックサブネットに0.0.0.0/0トラフィックをIGWに向けるルートテーブルを関連付け、パブリックサブネット内のインスタンスにパブリックIPv4アドレスを割り当てる。",
        "Explanation": "パブリックサブネット内のインスタンスにインターネットアクセスを有効にするために、会社はVPCにインターネットゲートウェイ（IGW）を接続する必要があります。IGWは、パブリックサブネット内のインスタンスとインターネット間の通信を可能にします。さらに、すべてのアウトバウンドトラフィック（0.0.0.0/0）をIGWに向けるルートテーブルをパブリックサブネットに関連付ける必要があります。最後に、パブリックサブネット内のインスタンスには、インターネットから到達可能であるためにパブリックIPv4アドレスが必要です。この構成により、インスタンスはインターネットからトラフィックを送受信できる一方で、プライベートサブネットは隔離されます。",
        "Other Options": [
            "プライベートサブネットにNATゲートウェイを構成することは、パブリックサブネットにインターネットアクセスを提供するためには不正解です。NATゲートウェイは、プライベートサブネット内のインスタンスがインターネットへのアウトバウンドトラフィックを開始できるようにし、インターネットからのインバウンドトラフィックを防ぐために使用されますが、これはパブリックサブネットには適用されません。",
            "インターネットゲートウェイ（IGW）を作成し、パブリックサブネット内の各インスタンスに個別に接続することは不正解です。IGWはVPC全体に接続される必要があり、個々のインスタンスに接続することはできません。さらに、トラフィックをIGWに向けるためにルートテーブルを構成する必要があり、デフォルトのルートテーブルに依存することはできません。",
            "プライベートサブネットとパブリックサブネットの間にVPCピアリング接続を使用することは、インターネットトラフィックをルーティングするための有効な方法ではありません。VPCピアリングは2つのVPCを接続するために使用され、インターネットアクセスを有効にするためには使用されません。さらに、プライベートサブネット内のインスタンスは、直接インターネットアクセスから隔離されるためにパブリックIPv4アドレスを持つべきではありません。"
        ]
    },
    {
        "Question Number": "4",
        "Situation": "多国籍小売企業がオンラインプレゼンスをヨーロッパとアジアに拡大しています。新しい地域のユーザーに対して顧客データベースへの低遅延アクセスを確保しつつ、データ主権要件を維持したいと考えています。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのAWSアーキテクチャ戦略を推奨すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "プライマリAWSリージョンに単一のAmazon RDSインスタンスをデプロイし、Amazon CloudFrontを使用してデータベースクエリをグローバルにキャッシュします。",
            "2": "Amazon Aurora Global Databaseを設定し、ヨーロッパとアジアリージョンにセカンダリ読み取りレプリカを配置します。",
            "3": "Amazon DynamoDBを使用し、グローバルテーブルを有効にして地域間で自動的にレプリケーションします。",
            "4": "各新しい地域のオンプレミスデータセンターにVPN接続を実装し、データベースを手動でレプリケートします。",
            "5": "AWS DataSyncを利用して地域間のデータレプリケーションを自動化します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon Aurora Global Databaseを設定し、ヨーロッパとアジアリージョンにセカンダリ読み取りレプリカを配置します。",
            "Amazon DynamoDBを使用し、グローバルテーブルを有効にして地域間で自動的にレプリケーションします。"
        ],
        "Explanation": "Amazon Aurora Global Databaseを設定し、ヨーロッパとアジアリージョンにセカンダリ読み取りレプリカを配置することは、低遅延の読み取りと災害復旧を可能にするため、正しい答えです。データは複数のリージョンにレプリケートされ、データ主権と低遅延アクセスが確保されます。Amazon DynamoDBを使用し、グローバルテーブルを有効にして地域間で自動的にレプリケーションすることも正しいです。グローバルテーブルは、データを複数のAWSリージョンにレプリケートし、グローバルに分散したアプリケーションに対してデータへの迅速なローカルアクセスを提供し、低遅延アクセスとデータ主権を確保します。",
        "Other Options": [
            "プライマリAWSリージョンに単一のAmazon RDSインスタンスをデプロイし、Amazon CloudFrontを使用してデータベースクエリをグローバルにキャッシュすることは、CloudFrontがコンテンツ配信ネットワークであり、データベースキャッシングサービスではないため、実行可能なソリューションではありません。データベースクエリをキャッシュするために設計されていません。",
            "各新しい地域のオンプレミスデータセンターにVPN接続を実装し、データベースを手動でレプリケートすることは、効率的なソリューションではありません。これは多大な手動作業を必要とし、新しい地域のユーザーに必要な低遅延アクセスを提供しません。",
            "AWS DataSyncを利用して地域間のデータレプリケーションを自動化することは、最適なソリューションではありません。なぜなら、DataSyncは主にオンプレミスストレージとAWS間、またはAWSストレージサービス間でデータを転送するために使用されるからです。新しい地域のユーザーに必要な低遅延アクセスを提供しません。"
        ]
    },
    {
        "Question Number": "5",
        "Situation": "グローバルなeコマースプラットフォームは、セールイベント中にトラフィックの急増を経験し、数百万のユーザーが異なる地域から同時にプラットフォームにアクセスしています。すべてのユーザーにスムーズな体験を提供するために、プラットフォームはレイテンシや可用性を損なうことなく、高いトラフィック量を処理する必要があります。",
        "Question": "次の戦略のうち、これらの要件に最も適したものはどれですか？",
        "Options": {
            "1": "強力なサーバーを持つ単一のデータセンターを使用する",
            "2": "ユーザーに最も近い場所からサービスを提供するために、マルチリージョンの分散アーキテクチャを実装する",
            "3": "データベースレベルでのデータキャッシングのみに依存する",
            "4": "主要なアプリケーションサーバーにCPUとメモリを追加する"
        },
        "Correct Answer": "ユーザーに最も近い場所からサービスを提供するために、マルチリージョンの分散アーキテクチャを実装する",
        "Explanation": "マルチリージョンの分散アーキテクチャを実装することで、eコマースプラットフォームはトラフィックの高いボリュームを処理でき、異なる地理的地域にある複数のサーバーに負荷を分散します。このアプローチは、最寄りのデータセンターからユーザーにサービスを提供することでレイテンシを最小限に抑え、応答時間を改善し、高可用性を確保します。また、冗長性も提供します。1つのリージョンで問題が発生した場合、他のリージョンがユーザーにサービスを提供し続けることができ、トラフィックの急増時にプラットフォーム全体のパフォーマンスを維持します。",
        "Other Options": [
            "強力なサーバーを持つ単一のデータセンターを使用することは、トラフィックの急増を効果的に処理できません。これは単一障害点を作成し、そのデータセンターから遠くにいるユーザーに対してレイテンシを増加させる可能性があります。このアプローチはスケーラビリティを制限し、冗長性を提供しません。",
            "データベースレベルでのデータキャッシングのみに依存することは、パフォーマンスを改善する可能性がありますが、異なる地域での高トラフィック量の問題には対処できません。キャッシングはデータベースへの負荷を軽減できますが、アプリケーションサーバーやネットワークインフラストラクチャが受信トラフィックを処理できない場合、ユーザーは依然として遅延や障害を経験する可能性があります。",
            "主要なアプリケーションサーバーにCPUとメモリを追加することは、一時的なパフォーマンス向上を提供するかもしれませんが、サーバーから遠くにいるユーザーのスケーラビリティとレイテンシの根本的な問題を解決するものではありません。このアプローチは収益の減少を招く可能性があり、グローバルトラフィックの急増を効果的に管理するための必要な地理的分散を提供しません。"
        ]
    },
    {
        "Question Number": "6",
        "Situation": "ある企業がAWS上にミッションクリティカルなアプリケーションをデプロイしており、インフラストラクチャの障害が発生した場合に高可用性と迅速な復旧を確保したいと考えています。ダウンタイムを最小限に抑えるために、さまざまなフェイルオーバー戦略を検討しています。",
        "Question": "次のフェイルオーバー戦略のうち、最小限のダウンタイムでサービスの可用性を維持するのに最も適したものはどれですか？（2つ選択してください。）",
        "Options": {
            "1": "複数のアベイラビリティゾーンにわたるアクティブ-アクティブフェイルオーバー戦略を使用して、トラフィックが自動的に正常なリソースにルーティングされるようにします。",
            "2": "アプリケーションの状態を定期的にバックアップし、障害が発生したときに復元するバックアップと復元の戦略を使用します。",
            "3": "バックアップリージョンで少量のリソースのみが稼働し、必要に応じてフルキャパシティをスケールアップするウォームスタンバイフェイルオーバー戦略を使用します。",
            "4": "セカンダリリージョンで最小限のインフラストラクチャを稼働させ、障害が発生したときにのみリソースをスケールアップするパイロットライトフェイルオーバー戦略を使用します。",
            "5": "バックアップリージョンでリソースが稼働していないコールドスタンバイフェイルオーバー戦略を実装し、障害が発生したときにリソースを完全にデプロイします。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "複数のアベイラビリティゾーンにわたるアクティブ-アクティブフェイルオーバー戦略を使用して、トラフィックが自動的に正常なリソースにルーティングされるようにします。",
            "バックアップリージョンで少量のリソースのみが稼働し、必要に応じてフルキャパシティをスケールアップするウォームスタンバイフェイルオーバー戦略を使用します。"
        ],
        "Explanation": "アクティブ-アクティブフェイルオーバー戦略は、最小限のダウンタイムでサービスの可用性を維持するための非常に効果的な方法です。これは、アプリケーションのインスタンスを複数のアベイラビリティゾーンで同時に稼働させることを含みます。1つのインスタンスが失敗した場合、トラフィックは自動的に他のアクティブなインスタンスにルーティングされ、継続的なサービス可用性が確保されます。ウォームスタンバイフェイルオーバー戦略もダウンタイムを最小限に抑えるのに役立ちます。この戦略では、スタンバイリージョンでアプリケーションの縮小版が常に稼働しており、障害が発生した場合にシステムが迅速にスケールアップしてフルロードを処理できるため、ユーザーが経験するダウンタイムを減少させます。",
        "Other Options": [
            "バックアップと復元の戦略は、データ復旧には役立ちますが、最小限のダウンタイムでサービスの可用性を維持するための最良の選択肢ではありません。バックアップからの復元は時間がかかるプロセスであり、長期間のダウンタイムを引き起こす可能性があります。",
            "パイロットライトフェイルオーバー戦略は、セカンダリリージョンで環境の最小限のバージョンを稼働させることを含みます。この戦略は効果的ですが、ウォームスタンバイ戦略ほど迅速にフルキャパシティにスケールアップできない可能性があり、ダウンタイムが長くなる可能性があります。",
            "コールドスタンバイ戦略は、障害が発生するまでバックアップリージョンでリソースが稼働していないことを含みます。この戦略は、障害が発生した後にリソースを完全にデプロイする必要があるため、最も長いダウンタイムを引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "7",
        "Situation": "スタートアップが、入札処理のために極めて低遅延かつ高スループットを必要とするオンライン広告のリアルタイム入札システムを開発しています。このシステムは、手動介入なしで高可用性とスケーラビリティを持つ必要があります。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのAWSデータベースソリューションを推奨すべきですか？",
        "Options": {
            "1": "Amazon RDS for MySQL with provisioned IOPS",
            "2": "Amazon DynamoDB with on-demand capacity mode",
            "3": "Amazon ElastiCache for Redis in a clustered configuration",
            "4": "Amazon Aurora Serverless with in-memory optimization"
        },
        "Correct Answer": "Amazon DynamoDB with on-demand capacity mode",
        "Explanation": "Amazon DynamoDBは、単一桁ミリ秒の応答時間を提供する完全管理型NoSQLデータベースサービスであり、極めて低遅延を必要とするアプリケーションに最適です。そのオンデマンドキャパシティモードにより、トラフィックに基づいてデータベースが自動的にスケールアップおよびスケールダウンし、手動介入なしで高スループットを確保します。これは、入札数が大きく変動するリアルタイム入札システムに特に有益です。さらに、DynamoDBは高可用性と耐久性を考慮して設計されており、スタートアップのシステムの要件と完全に一致します。",
        "Other Options": [
            "Amazon RDS for MySQL with provisioned IOPSは高性能を提供できるリレーショナルデータベースサービスですが、高速なワークロードに対してDynamoDBと同じ低遅延を達成できない可能性があります。さらに、RDSはDynamoDBに比べてスケーリングと可用性の管理がより多く必要です。",
            "Amazon ElastiCache for Redis in a clustered configurationは低遅延を提供できるインメモリデータストアですが、主にキャッシングに使用され、プライマリデータベースとしては使用されません。入札システムに必要な耐久性と永続性の機能を本質的に提供しません。",
            "Amazon Aurora Serverless with in-memory optimizationは自動的にスケールできるリレーショナルデータベースですが、特にリアルタイム入札シナリオで典型的な予測不可能なワークロードの下では、DynamoDBと同じレベルの低遅延と高スループットを提供できない可能性があります。"
        ]
    },
    {
        "Question Number": "8",
        "Situation": "ある会社がAWS Lambda関数を使用してサーバーレスアプリケーションを開発しています。このアプリケーションは、ユーザーがアップロードした画像を処理し、その結果をデータベースに保存する必要があります。アーキテクチャは、同じ画像が複数回アップロードされても、各画像が正確に1回だけ処理されることを保証しなければなりません。",
        "Question": "この要件を達成するために、ソリューションアーキテクトはどのAWSサービスの組み合わせを使用すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "Amazon S3",
            "2": "Amazon DynamoDB with conditional writes",
            "3": "Amazon Simple Queue Service (SQS)",
            "4": "Amazon Simple Notification Service (SNS)",
            "5": "AWS Step Functions"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3",
            "Amazon DynamoDB with conditional writes"
        ],
        "Explanation": "Amazon S3は、ユーザーがアップロードした画像を保存するために使用できます。また、新しい画像がアップロードされるとAWS Lambda関数をトリガーし、その画像を処理することができます。Amazon DynamoDB with conditional writesは、画像処理の結果を保存するために使用できます。条件付き書き込みにより、指定された条件が満たされる場合にのみアイテムがテーブルに書き込まれることが保証されます。この場合、条件は画像が以前に処理されていないことにすることで、各画像が正確に1回だけ処理されることを保証します。",
        "Other Options": [
            "Amazon Simple Queue Service (SQS)は、マイクロサービス、分散システム、サーバーレスアプリケーションをデカップリングしてスケールさせることを可能にする完全管理型メッセージキューサービスです。しかし、同じメッセージが複数回処理されることを本質的に防ぐものではありません。",
            "Amazon Simple Notification Service (SNS)は、アプリケーション間（A2A）およびアプリケーションから人（A2P）への通信のための完全管理型メッセージングサービスです。しかし、同じメッセージが複数回処理されることを本質的に防ぐものではありません。",
            "AWS Step Functionsは、複数のAWSサービスをサーバーレスワークフローに統合するためのサーバーレスワークフローサービスです。AWS Lambda関数をオーケストレーションするために使用できますが、同じ入力に対して同じ関数が複数回実行されることを本質的に防ぐものではありません。"
        ]
    },
    {
        "Question Number": "9",
        "Situation": "ある会社がEC2インスタンスのオートスケーリンググループを設定しており、全体のセットアップを再作成することなく構成を更新できるようにしたいと考えています。",
        "Question": "どのオプションを選択すべきか、またその理由は何ですか？",
        "Options": {
            "1": "Launch Configurationsを使用する。バージョン管理をサポートし、再作成なしで更新が可能です。",
            "2": "Launch Templatesを使用する。バージョン管理をサポートし、新しいテンプレートを作成することなく構成の更新が可能です。",
            "3": "Launch Configurationsを使用する。管理が容易で、組み込みのバージョン管理機能があります。",
            "4": "Launch Templatesを使用する。バージョン管理なしでオートスケーリンググループ内でライブ更新をサポートします。"
        },
        "Correct Answer": "Launch Templatesを使用する。バージョン管理をサポートし、新しいテンプレートを作成することなく構成の更新が可能です。",
        "Explanation": "Launch Templatesは、AWSのオートスケーリンググループを設定するための推奨オプションです。バージョン管理をサポートしているため、構成を更新する必要がある場合、新しいバージョンのLaunch Templateを作成することで、全体のセットアップを再作成する必要がありません。この機能により、時間の経過とともに構成の柔軟性と管理の容易さが向上し、頻繁な更新や変更が必要な環境に最適です。",
        "Other Options": [
            "Launch Configurationsを使用する。バージョン管理をサポートし、再作成なしで更新が可能です。- このオプションは不正確です。Launch Configurationsはバージョン管理をサポートしていません。一度作成されたLaunch Configurationは変更できず、更新には新しいLaunch Configurationの作成が必要です。",
            "Launch Configurationsを使用する。管理が容易で、組み込みのバージョン管理機能があります。- このオプションは不正確です。Launch Configurationsには組み込みのバージョン管理機能がありません。更新が必要な場合、Launch Templatesよりも柔軟性が低く、管理の負担が増える可能性があります。",
            "Launch Templatesを使用する。バージョン管理なしでオートスケーリンググループ内でライブ更新をサポートします。- このオプションは誤解を招くものです。Launch Templatesはバージョン管理をサポートしていますが、オートスケーリンググループ内でのライブ更新を直接サポートしていません。更新には新しいバージョンのテンプレートを作成する必要があり、それが新しいインスタンスに使用されます。"
        ]
    },
    {
        "Question Number": "10",
        "Situation": "医療アプリケーションは、効率的な処理のために、複数のAmazon EC2インスタンスに受信トラフィックを分散させながら、毎秒数百万のリクエストを処理する必要があります。コンプライアンス要件により、アプリケーションは安全なデータ転送のためにエンドツーエンドの暗号化をサポートする必要があります。さらに、アプリケーションは、時間に敏感な医療データを処理するために、超低遅延で動作しなければなりません。",
        "Question": "これらの要件を最も満たすAWSのロードバランシングソリューションはどれですか？",
        "Options": {
            "1": "SSL終端を使用したApplication Load Balancer (ALB)",
            "2": "TCPおよびTLSリスナーを使用したNetwork Load Balancer (NLB)",
            "3": "HTTPおよびHTTPSリスナーを使用したClassic Load Balancer",
            "4": "HTTPSキャッシングを使用したAmazon CloudFront"
        },
        "Correct Answer": "TCPおよびTLSリスナーを使用したNetwork Load Balancer (NLB)",
        "Explanation": "Network Load Balancer (NLB)は、毎秒数百万のリクエストを処理しながら超低遅延を維持するように設計されており、時間に敏感な医療データ処理に最適です。これはトランスポート層（レイヤー4）で動作し、複数のEC2インスタンスにTCPトラフィックを効率的に分散できます。さらに、NLBはTLSリスナーをサポートしており、エンドツーエンドの暗号化を可能にし、安全なデータ転送のためのコンプライアンス要件を満たします。この高スループット、低遅延、暗号化サポートの組み合わせが、医療アプリケーションにとってNLBを最適な選択にしています。",
        "Other Options": [
            "SSL終端を使用したApplication Load Balancer (ALB)は、主にHTTP/HTTPSトラフィック用に設計されており、レイヤー7で動作します。SSL終端をサポートしていますが、アプリケーション層での処理により追加の遅延が発生する可能性があり、超低遅延要件には理想的ではありません。",
            "HTTPおよびHTTPSリスナーを使用したClassic Load Balancerは、NLBと同じレベルのパフォーマンスとスケーラビリティを提供しない古いオプションです。これはレイヤー4とレイヤー7の両方で動作しますが、NLBに見られる高度な機能や最適化が不足しており、毎秒数百万のリクエストを効率的に処理するには不適切です。",
            "HTTPSキャッシングを使用したAmazon CloudFrontは、エッジロケーションでコンテンツをキャッシュできるコンテンツ配信ネットワーク（CDN）であり、静的コンテンツの配信に有益です。しかし、これはロードバランサーではなく、EC2インスタンス間でトラフィックを直接分散することはできないため、医療データ処理のための受信トラフィックを分散する要件には不適切です。"
        ]
    },
    {
        "Question Number": "11",
        "Situation": "グローバルなeコマース企業は、トラフィックを複数のリージョンに分散させることで、ウェブサイトの高可用性と耐障害性を確保したいと考えています。プライマリリージョンが利用できなくなった場合、自動的にバックアップリージョンにフェイルオーバーしたいと考えています。",
        "Question": "この企業がレジリエントなDNSフェイルオーバーを実現するために使用すべきAmazon Route 53の設定はどれで、この機能を有効にする機能は何ですか？",
        "Options": {
            "1": "Route 53 Weighted Routingを使用して、定義された重みに基づいてリージョン間でトラフィックを分散し、フェイルオーバー用のヘルスチェックを設定します。",
            "2": "Route 53 Latency-Based Routingを使用して、ユーザーを最も低遅延のリージョンにルーティングし、必要に応じて別のリージョンにフェイルオーバーするためのヘルスチェックを行います。",
            "3": "Route 53 Geolocation Routingを使用して、ユーザーの位置に基づいてトラフィックを誘導し、リージョンが失敗した場合にユーザーをリダイレクトするためのヘルスチェックを設定します。",
            "4": "Route 53 Failover Routingを使用して、プライマリリージョンにトラフィックをルーティングし、失敗した場合に自動的にセカンダリリージョンにリダイレクトし、プライマリリージョンの可用性を監視するためのヘルスチェックを使用します。"
        },
        "Correct Answer": "Route 53 Failover Routingを使用して、プライマリリージョンにトラフィックをルーティングし、失敗した場合に自動的にセカンダリリージョンにリダイレクトし、プライマリリージョンの可用性を監視するためのヘルスチェックを使用します。",
        "Explanation": "Route 53 Failover Routingは、高可用性が重要なシナリオ向けに特別に設計されています。これにより、プライマリリソース（この場合はプライマリリージョン）とセカンダリリソース（バックアップリージョン）を指定できます。ヘルスチェックがプライマリリージョンが利用できないと判断した場合、Route 53は自動的にトラフィックをセカンダリリージョンにリダイレクトします。この設定により、ユーザーは最小限の中断を経験し、1つのリージョンが失敗してもウェブサイトにアクセスできる状態が保たれます。",
        "Other Options": [
            "Route 53 Weighted Routingを使用すると、定義された重みに基づいてトラフィックが分散されますが、自動フェイルオーバーを本質的に提供するものではありません。ヘルスチェックを設定することはできますが、このオプションはフェイルオーバーシナリオ向けに特別に設計されていないため、企業のニーズにはあまり適していません。",
            "Route 53 Latency-Based Routingは、ユーザーを最も低遅延のリージョンに誘導しますが、パフォーマンスには有益ですが、明確なフェイルオーバーメカニズムを提供しません。ヘルスチェックを実装することはできますが、このオプションは主に障害時の可用性を確保するのではなく、ユーザーエクスペリエンスの最適化に焦点を当てています。",
            "Route 53 Geolocation Routingは、ユーザーの位置に基づいてトラフィックを誘導しますが、自動フェイルオーバー機能を提供しません。ヘルスチェックを設定することはできますが、このルーティング方法はフェイルオーバールーティングが持つような可用性を優先していません。"
        ]
    },
    {
        "Question Number": "12",
        "Situation": "ある企業が、ユーザーのアップロードを処理し、それを特定の形式に変換するサーバーレスアプリケーションを設計しています。アプリケーションは、変動するトラフィックに対応して自動的にスケールし、複数のファイルアップロードを同時に処理できる必要があります。企業は、サーバーやインフラストラクチャを管理せずに、変換プロセスが迅速かつ信頼性高く完了することを望んでいます。",
        "Question": "このソリューションを実装するために企業が使用すべきAWSサービスはどれですか？（2つ選択）",
        "Options": {
            "1": "AWS Lambdaを使用して、ファイルがAmazon S3にアップロードされたときに処理関数をトリガーし、Amazon SQSを使用して変換タスクをキューに入れます。",
            "2": "AWS Fargateを使用して、アップロード数に基づいて自動スケーリングを可能にするコンテナ化された処理ジョブを実行します。",
            "3": "Amazon EC2を使用してインフラストラクチャを管理し、ファイルを手動で処理します。",
            "4": "Amazon S3 Event Notificationsを使用して、アップロードされた各ファイルの処理のためにAWS Lambda関数をトリガーします。",
            "5": "Amazon S3を使用して、追加の関数やサービスをトリガーすることなく、直接アップロードを処理します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambdaを使用して、ファイルがAmazon S3にアップロードされたときに処理関数をトリガーし、Amazon SQSを使用して変換タスクをキューに入れます。",
            "Amazon S3 Event Notificationsを使用して、アップロードされた各ファイルの処理のためにAWS Lambda関数をトリガーします。"
        ],
        "Explanation": "AWS Lambdaは、Amazon S3バケット内のデータの変更などのイベントに応じてコードを実行するサーバーレスコンピュートサービスです。これにより、企業がサーバーを管理することなく、ユーザーのアップロードを処理し、特定の形式に変換する要件に適した選択肢となります。Amazon SQSは、マイクロサービス、分散システム、サーバーレスアプリケーションをデカップルし、スケールさせることを可能にする完全管理型メッセージキューサービスです。SQSは、メッセージ指向ミドルウェアの管理と運用に伴う複雑さとオーバーヘッドを排除し、開発者が差別化された作業に集中できるようにします。AWS LambdaとAmazon S3 Event Notificationsを組み合わせて使用することで、企業はファイルがアップロードされた直後に処理関数をトリガーでき、迅速かつ信頼性の高い変換の要件を満たします。",
        "Other Options": [
            "AWS Fargateは、コンテナ用のサーバーレスコンピュートエンジンです。自動スケーリングを可能にしますが、この特定のユースケースに対してはAWS Lambdaを使用するよりも複雑で直接的ではありません。また、企業が避けたいコンテナ化されたアプリケーションの管理が必要になります。",
            "Amazon EC2は、クラウド内でリサイズ可能なコンピュート容量を提供するウェブサービスです。ウェブスケールのクラウドコンピューティングを容易にするように設計されていますが、企業が避けたいインフラストラクチャの手動管理が必要です。",
            "Amazon S3はストレージサービスであり、アップロードを直接処理したり、特定の形式に変換したりする能力はありません。データを任意の量だけ保存および取得できますが、そのデータに対して計算や変換を行うことはできません。"
        ]
    },
    {
        "Question Number": "13",
        "Situation": "ある企業がeコマースアプリケーションを開発しており、顧客の注文、支払い処理、在庫更新を処理するためにイベント駆動型アーキテクチャを実装する必要があります。彼らは、システムが高可用性でスケーラブルかつ疎結合であることを確保したいと考えています。",
        "Question": "これらの目標を達成するために、企業はどのアーキテクチャを使用すべきですか？",
        "Options": {
            "1": "Amazon SQSを使用してサービスを疎結合にし、イベントの非同期処理を確保します。AWS Lambdaを使用してイベントを処理し、Amazon SNSを使用して複数のサブスクライバーにイベントをブロードキャストし、効率的な通知を行います。",
            "2": "メッセージキューを持つAmazon EC2インスタンスを使用し、各EC2インスタンスがイベントを処理し、Amazon RDSデータベースに更新を送信します。",
            "3": "Amazon DynamoDB Streamsを使用してイベントデータをキャプチャし、AWS Step Functionsを設定してイベント処理のワークフローをオーケストレーションします。",
            "4": "Amazon S3を使用してイベントデータを保存し、新しいイベントを処理するためにEC2インスタンスをポーリングします。"
        },
        "Correct Answer": "Amazon SQSを使用してサービスを疎結合にし、イベントの非同期処理を確保します。AWS Lambdaを使用してイベントを処理し、Amazon SNSを使用して複数のサブスクライバーにイベントをブロードキャストし、効率的な通知を行います。",
        "Explanation": "このオプションは、高可用性でスケーラブルかつ疎結合のイベント駆動型アーキテクチャを効果的に実装します。Amazon SQS（Simple Queue Service）は、サービス間の非同期通信を可能にし、疎結合を助けます。AWS Lambdaは、サーバーを管理することなくイベントを処理でき、受信イベントの数に基づいて自動的にスケーリングします。さらに、Amazon SNS（Simple Notification Service）は、複数のサブスクライバーにメッセージをブロードキャストでき、アプリケーションのさまざまなコンポーネントがイベントに効率的に反応できるようにします。この組み合わせは、顧客の注文、支払い処理、在庫更新をスケーラブルな方法で処理するための堅牢なソリューションを提供します。",
        "Other Options": [
            "メッセージキューを持つAmazon EC2インスタンスを使用すると、より多くの複雑さと管理オーバーヘッドが導入されます。EC2インスタンスはプロビジョニング、スケーリング、メンテナンスが必要であり、高可用性でスケーラブルなアーキテクチャの目標に反します。さらに、このオプションはサーバーレス機能を活用しておらず、リソース利用の非効率を招く可能性があります。",
            "Amazon DynamoDB StreamsとAWS Step Functionsを使用することは実行可能なオプションですが、最初のオプションほど簡単ではないかもしれません。DynamoDB Streamsはデータベースの変更をキャプチャできますが、追加の設定と管理が必要です。AWS Step Functionsはワークフローのオーケストレーションに役立ちますが、SQSとLambdaを使用した直接的なイベント駆動型アプローチと比較して、単純なイベント処理タスクに対して不必要な複雑さを加える可能性があります。",
            "Amazon S3を使用してイベントデータを保存し、EC2インスタンスをポーリングして新しいイベントを処理することは、イベント駆動型アーキテクチャにとって理想的なソリューションではありません。ポーリングはレイテンシを引き起こし、システムがリアルタイムでイベントに反応するのではなく、処理されるのを待つことになるため、非効率を招く可能性があります。このアプローチは、メッセージキューやサーバーレス機能が提供する疎結合とスケーラビリティの利点も欠いています。"
        ]
    },
    {
        "Question Number": "14",
        "Situation": "大規模なeコマースプラットフォームは、特にセールイベント中に高トラフィックを経験し、データベース接続の数が大幅に増加します。データベースのパフォーマンスを最適化し、過負荷を防ぐために、これらの接続を効率的に管理するためのプロキシサービスを使用することを決定しました。",
        "Question": "データベース接続を効率的に処理するためにどのAWSサービスを実装すべきであり、スケーリングとフェイルオーバーの観点でどのような利点がありますか？",
        "Options": {
            "1": "Amazon RDS Proxyを使用します。これはデータベース接続をプールし、共有することで、データベースのオーバーヘッドを削減し、アプリケーションのスケーラビリティを向上させます。",
            "2": "AWS App Meshはサービス間通信を管理しますが、データベース接続の処理には特化していません。",
            "3": "Amazon API GatewayはAPIリクエストのプロキシを提供しますが、主にRESTful API用に設計されており、データベース接続には適していません。",
            "4": "AWS Direct Connectは専用のネットワーク接続を提供しますが、データベース接続を管理またはプールすることはありません。"
        },
        "Correct Answer": "Amazon RDS Proxyを使用します。これはデータベース接続をプールし、共有することで、データベースのオーバーヘッドを削減し、アプリケーションのスケーラビリティを向上させます。",
        "Explanation": "Amazon RDS Proxyは、データベース接続を効率的に管理するために特別に設計されています。データベースへの接続をプールし、共有することで、オープン接続の数とデータベースサーバーへの関連オーバーヘッドを削減します。これは、特にセールイベントなどの高トラフィック期間中に有益であり、アプリケーションがデータベースを圧倒することなく、より効果的にスケールできるようにします。さらに、RDS Proxyはフェイルオーバー機能を提供し、障害が発生した場合にアプリケーションがスタンバイデータベースに自動的に再接続できるようにし、可用性と信頼性を向上させます。",
        "Other Options": [
            "AWS App Meshはサービス間通信を管理するサービスメッシュですが、データベース接続の処理には特化していません。マイクロサービス間の通信に焦点を当てており、データベース接続のプールや管理には関与していません。",
            "Amazon API Gatewayは、任意のスケールでAPIを作成、公開、維持、監視、保護するために設計されています。APIリクエストのプロキシとして機能しますが、データベース接続を管理することを目的としていないため、このシナリオの主な要件には適していません。",
            "AWS Direct Connectは、オンプレミスからAWSへの専用ネットワーク接続を提供し、帯域幅を改善し、レイテンシを削減できます。しかし、データベース接続を管理またはプールすることはないため、高トラフィック時のデータベースパフォーマンスを最適化する特定のニーズには不適切です。"
        ]
    },
    {
        "Question Number": "15",
        "Situation": "バイオテクノロジー企業は、DNAシーケンシングのために計算集約的なワークロードを実行しており、毎日数時間だけ計算リソースを必要としています。彼らはコストを最小限に抑えつつ、これらの時間枠内でジョブを完了できることを確保したいと考えています。",
        "Question": "このワークロードのコストを最適化するために最適な購入オプションはどれですか？",
        "Options": {
            "1": "1年間のコミットメントを伴うリザーブドインスタンス",
            "2": "3年間のコミットメントを伴うセービングプラン",
            "3": "キャパシティ最適化されたアロケーションを持つスポットインスタンス",
            "4": "スケジュールされたオートスケーリングを伴うオンデマンドインスタンス"
        },
        "Correct Answer": "キャパシティ最適化されたアロケーションを持つスポットインスタンス",
        "Explanation": "スポットインスタンスは、オンデマンドまたはリザーブドインスタンスと比較して、未使用の計算容量を大幅に低い価格で利用できるようにします。バイオテクノロジー企業は毎日数時間だけ計算リソースを必要とするため、スポットインスタンスを使用することでコストを大幅に削減できます。特に中断を許容できる場合は、キャパシティ最適化されたアロケーションにより、必要なときにスポットインスタンスが利用可能である可能性が高くなり、特定の時間枠を持つ計算集約的なワークロードに適した選択肢となります。",
        "Other Options": [
            "1年間のコミットメントを伴うリザーブドインスタンスは、毎日数時間だけ必要なワークロードにはコスト効果が低く、使用に関係なく容量の支払いを約束する必要があります。",
            "3年間のコミットメントを伴うセービングプランも、ワークロードの不規則な性質に合わない長期的な財務コミットメントを伴い、リソースとコストの無駄につながる可能性があります。",
            "スケジュールされたオートスケーリングを伴うオンデマンドインスタンスは柔軟性を提供しますが、一般的にスポットインスタンスよりも高価であり、特に断続的に実行できるワークロードに対して同じレベルのコスト削減を提供しません。"
        ]
    },
    {
        "Question Number": "16",
        "Situation": "金融サービス会社が、クライアントデバイスとバックエンドサーバー間でシームレスかつ継続的な暗号化を要求する新しいアプリケーションを導入しています。さらに、アプリケーションはIPホワイトリストを利用するために静的IPアドレスを使用する必要があります。",
        "Question": "この要件を満たすために、会社はどのタイプのAWSロードバランサーを展開すべきですか？また、その選択の主な理由は何ですか？",
        "Options": {
            "1": "Application Load Balancer (ALB) は、コンテンツベースのルーティングを実行し、SSLターミネーションを処理できるため。",
            "2": "Network Load Balancer (NLB) は、Layer 4で動作し、静的IPアドレスをサポートし、TCPフォワーディングを通じてエンドツーエンドの暗号化を維持できるため。",
            "3": "Classic Load Balancer (CLB) は、HTTPSをサポートし、安全な接続のためにスティッキーセッションを管理できるため。",
            "4": "Application Load Balancer (ALB) は、静的IPアドレスを提供し、高スループットを確保するため。"
        },
        "Correct Answer": "Network Load Balancer (NLB) は、Layer 4で動作し、静的IPアドレスをサポートし、TCPフォワーディングを通じてエンドツーエンドの暗号化を維持できるため。",
        "Explanation": "Network Load Balancer (NLB) は、このシナリオに最適な選択です。なぜなら、OSIモデルのLayer 4で動作し、TCPトラフィックを効率的に処理できるからです。静的IPアドレスをサポートしており、これは会社のIPホワイトリストの要件に不可欠です。さらに、NLBはTCPトラフィックを復号化せずに転送することでエンドツーエンドの暗号化を維持でき、クライアントデバイスとバックエンドサーバー間のデータが安全に保たれます。これは、シームレスで継続的な暗号化の必要性と完全に一致します。",
        "Other Options": [
            "Application Load Balancer (ALB) は主にLayer 7（アプリケーション層）トラフィック用に設計されており、コンテンツベースのルーティングとSSLターミネーションに優れています。しかし、静的IPアドレスをネイティブにサポートしていないため、このケースでは重要な要件を満たしていません。",
            "Classic Load Balancer (CLB) はHTTPSをサポートし、スティッキーセッションを管理できますが、Layer 4とLayer 7の両方で動作します。静的IPアドレスを提供する能力がなく、高スループットシナリオでは一般的にNLBよりも効率が劣ると見なされるため、要件には適していません。",
            "Application Load Balancer (ALB) は静的IPアドレスを直接提供しないため、IPホワイトリストのための重要な要件を満たしていません。高スループットと高度なルーティング機能を提供しますが、NLBほど効果的にエンドツーエンドの暗号化を維持することはできません。"
        ]
    },
    {
        "Question Number": "17",
        "Situation": "医療提供者が、サービスの中断を防ぎ、重要な患者データを保護するためのアプリケーションを設計しています。このアプリケーションは、コンポーネントの障害が発生しても運用を続ける必要がありますが、災害が発生した場合には重要なデータを回復するための戦略も必要です。",
        "Question": "次のアプローチのうち、これらの要件を最もよく満たすものはどれですか？（2つ選択してください）",
        "Options": {
            "1": "複数のアベイラビリティゾーンにリソースを展開することで高可用性を実現し、コンポーネント障害時のダウンタイムを最小限に抑え、迅速な回復を確保します。",
            "2": "複数のサーバーにアクティブ-アクティブモードでリソースを構成することでフォールトトレランスに焦点を当て、1つのコンポーネントが故障してもアプリケーションが中断なく続行できるようにします。",
            "3": "定期的なバックアップをスケジュールし、別のリージョンにスタンバイサーバーを設置することで災害復旧（DR）計画を策定し、地域的な災害が発生した場合にアプリケーションを復元できるようにします。",
            "4": "複数のアベイラビリティゾーンに展開し、定期的なバックアップをスケジュールすることで高可用性と災害復旧を組み合わせ、障害や災害時に稼働時間を維持し、データを保護します。",
            "5": "サーバー障害時のデータ回復を確保するために、自動スナップショットを使用した単一アベイラビリティゾーンの展開を行います。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "複数のアベイラビリティゾーンにリソースを展開することで高可用性を実現し、コンポーネント障害時のダウンタイムを最小限に抑え、迅速な回復を確保します。",
            "複数のアベイラビリティゾーンに展開し、定期的なバックアップをスケジュールすることで高可用性と災害復旧を組み合わせ、障害や災害時に稼働時間を維持し、データを保護します。"
        ],
        "Explanation": "最初の正解は高可用性の実装に関するものです。このアプローチは、1つ以上のコンポーネントが故障してもアプリケーションが運用を続けることを保証します。複数のアベイラビリティゾーンにリソースを展開することで、コンポーネント障害時のダウンタイムを最小限に抑え、迅速な回復を実現します。2つ目の正解は高可用性と災害復旧を組み合わせたものです。このアプローチは、コンポーネント障害時のアプリケーションの稼働時間を確保するだけでなく、定期的なバックアップをスケジュールすることで重要な患者データを保護します。災害が発生した場合、データを回復できるため、アプリケーションの継続性が確保されます。",
        "Other Options": [
            "複数のサーバーにアクティブ-アクティブモードでリソースを構成するフォールトトレランスに焦点を当てるだけでは不十分です。1つのコンポーネントが故障してもアプリケーションが中断なく続行できることを保証しますが、災害が発生した場合のデータ回復の戦略を提供しません。",
            "定期的なバックアップをスケジュールし、別のリージョンにスタンバイサーバーを設置することで災害復旧（DR）計画を策定することは、データ回復のための良い戦略です。しかし、コンポーネント障害時にアプリケーションの中断のないサービスを保証するものではありません。",
            "自動スナップショットを使用した単一アベイラビリティゾーンの展開は、サーバー障害時のデータ回復を確保できます。しかし、単一のアベイラビリティゾーンでの障害がアプリケーションのダウンタイムにつながる可能性があるため、高可用性やフォールトトレランスを提供しません。"
        ]
    },
    {
        "Question Number": "18",
        "Situation": "金融取引プラットフォームがAmazon EC2インスタンス上にホストされており、レイテンシに敏感な高頻度データベースのために非常に高いIOPS（入力/出力操作毎秒）をサポートできるEBSボリュームが必要です。このプラットフォームは、最適なパフォーマンスのために最大250,000 IOPSと高スループットを必要としています。",
        "Question": "どのEBSボリュームタイプがこれらの要件を最もよく満たしますか？",
        "Options": {
            "1": "General Purpose SSD (gp3)",
            "2": "Provisioned IOPS SSD (io2)",
            "3": "Throughput Optimized HDD (st1)",
            "4": "Cold HDD (sc1)"
        },
        "Correct Answer": "Provisioned IOPS SSD (io2)",
        "Explanation": "Provisioned IOPS SSD (io2) ボリュームタイプは、高パフォーマンスと低レイテンシを必要とするI/O集約型アプリケーション向けに特別に設計されています。ボリュームあたり最大256,000 IOPSをサポートできるため、金融取引プラットフォームの250,000 IOPSの要件に適しています。さらに、io2ボリュームは高スループットを提供し、レイテンシに敏感なワークロードに最適化されているため、高頻度データベースに最適な選択です。",
        "Other Options": [
            "General Purpose SSD (gp3) ボリュームは最大16,000 IOPSを提供でき、さまざまなワークロードに適していますが、この特定のアプリケーションに必要な250,000 IOPSの要件を満たしていません。",
            "Throughput Optimized HDD (st1) ボリュームは、高スループットを必要とするワークロード向けに設計されており、高IOPSを必要とするアプリケーションには適していません。最大500 IOPSをボリュームあたり提供できるため、高頻度データベースには不適切です。",
            "Cold HDD (sc1) ボリュームは、アクセス頻度の低いデータ向けに設計されており、EBSボリュームタイプの中で最低のパフォーマンスを提供し、ボリュームあたり最大250 IOPSを提供します。これにより、高パフォーマンスでレイテンシに敏感なアプリケーションには不適切です。"
        ]
    },
    {
        "Question Number": "19",
        "Situation": "金融機関は、リアルタイムデータ処理と取引活動をサポートするために、オンプレミスのデータセンターとAWS間で安定した高帯域幅かつ低遅延の接続を必要とするミッションクリティカルなアプリケーションを運用しています。彼らは、すべてのデータ転送が公共インターネットをバイパスする安全でプライベートな接続を介して行われ、潜在的なセキュリティリスクやパフォーマンスの変動から保護されることを確保したいと考えています。",
        "Question": "どのオプションが彼らの要件を最も満たしますか？（2つ選択してください。）",
        "Options": {
            "1": "通信事業者からAWSへの高速専用線を使用する",
            "2": "公共インターネット上にAWS Site-to-Site VPNを確立する",
            "3": "プライベートで専用のネットワーク接続のためにAWS Direct Connectを展開する",
            "4": "定期的なデータ同期のために暗号化されたファイル転送プロトコル（FTP）を設定する",
            "5": "マルチリージョン接続のためにAWS Transit GatewayとDirect Connect Gatewayを実装する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "通信事業者からAWSへの高速専用線を使用する",
            "プライベートで専用のネットワーク接続のためにAWS Direct Connectを展開する"
        ],
        "Explanation": "通信事業者からAWSへの高速専用線を使用し、プライベートで専用のネットワーク接続のためにAWS Direct Connectを展開することが、この金融機関にとって最良の選択肢です。これらのオプションは、公共インターネットをバイパスする安定した高帯域幅かつ低遅延の接続を提供し、機関のリアルタイムデータ処理と取引活動にとって重要です。特にAWS Direct Connectは、機関のオンプレミスデータセンターからAWSへの専用ネットワーク接続を提供し、安全で信頼性の高い接続を確保します。",
        "Other Options": [
            "公共インターネット上にAWS Site-to-Site VPNを確立することは、公共インターネットを使用するため、パフォーマンスの変動や潜在的なセキュリティリスクを引き起こす可能性があるため、最良の選択肢ではありません。",
            "定期的なデータ同期のために暗号化されたファイル転送プロトコル（FTP）を設定することは、リアルタイムデータ処理と取引活動の要件を満たしていません。これは定期的なデータ転送用に設計されているためです。",
            "マルチリージョン接続のためにAWS Transit GatewayとDirect Connect Gatewayを実装することは、機関のニーズには必ずしも必要ではありません。マルチリージョン接続を提供しますが、リアルタイムデータ処理と取引活動に必要な高帯域幅かつ低遅延の接続を本質的に提供するわけではありません。"
        ]
    },
    {
        "Question Number": "20",
        "Situation": "ビデオファイルをトランスコーディングするアプリケーションを管理しており、需要が変動しています。レジリエントで効率的な処理を確保するために、メッセージキューイングにAmazon SQSを使用し、ワーカープールにAuto Scaling Groups（ASG）を使用しています。しかし、時折メッセージが失敗し、システムの過負荷を避けるために特別な処理が必要です。",
        "Question": "レジリエンスを向上させ、失敗したメッセージが効果的に処理されるようにするために、どのアプローチを実装すべきですか？",
        "Options": {
            "1": "SQS内でデッドレターキュー（DLQ）を使用して、複数回処理に失敗した問題のあるメッセージをキャッチする。",
            "2": "CPU使用率が80％を超えたときのみインスタンスを追加するようにASGのスケーリングポリシーを設定する。",
            "3": "Amazon RDSを使用して失敗したメッセージを保存し、成功するまで再試行する。",
            "4": "メッセージが失敗するたびに通知するCloudWatchアラームを設定し、手動で再処理できるようにする。"
        },
        "Correct Answer": "SQS内でデッドレターキュー（DLQ）を使用して、複数回処理に失敗した問題のあるメッセージをキャッチする。",
        "Explanation": "デッドレターキュー（DLQ）は、指定された回数の試行後に正常に処理できないメッセージを処理するために特別に設計されています。DLQを使用することで、他のメッセージの処理に影響を与えることなく、これらの問題のあるメッセージを隔離してさらなる調査を行うことができます。このアプローチは、メッセージ処理の失敗がシステムを圧倒するのを防ぎ、失敗したメッセージのデバッグと処理を容易にすることで、アプリケーションのレジリエンスを向上させます。",
        "Other Options": [
            "CPU使用率が80％を超えたときのみインスタンスを追加するようにASGのスケーリングポリシーを設定することは、失敗したメッセージ処理の問題に直接対処するものではありません。リソースの割り当てを管理するのに役立つかもしれませんが、処理に失敗したメッセージを処理するためのメカニズムを提供しないため、これはこのシナリオの核心的な問題です。",
            "Amazon RDSを使用して失敗したメッセージを保存し、成功するまで再試行することは最適な解決策ではありません。RDSはリレーショナルデータベースサービスであり、メッセージキューイング用に設計されていません。このアプローチは、メッセージの状態と再試行を管理するための追加のロジックが必要になるため、不必要な複雑さと遅延を引き起こします。",
            "メッセージが失敗するたびに通知するCloudWatchアラームを設定することは、プロアクティブなアプローチではなく、リアクティブなアプローチを生み出します。失敗を監視するのに役立つかもしれませんが、失敗したメッセージを処理するための自動化された方法を提供しないため、システムのレジリエンスと効率を維持するためには不可欠です。"
        ]
    },
    {
        "Question Number": "21",
        "Situation": "金融サービス会社が、クライアントとバックエンドインスタンス間で高速で途切れのない暗号化を必要とし、ホワイトリストのために静的IPを使用するアプリケーションを展開しています。",
        "Question": "このシナリオに最も適したAWSのロードバランサーのタイプはどれで、なぜですか？",
        "Options": {
            "1": "アプリケーションロードバランサー（ALB）、なぜならコンテンツベースのルーティングを許可し、SSL終端を提供するからです。",
            "2": "ネットワークロードバランサー（NLB）、なぜならLayer 4で動作し、静的IPをサポートし、TCPフォワーディングで途切れのない暗号化を許可するからです。",
            "3": "クラシックロードバランサー（CLB）、なぜならHTTPSと互換性があり、安全な接続のためにスティッキーセッションをサポートするからです。",
            "4": "アプリケーションロードバランサー（ALB）、なぜなら静的IPアドレスをサポートし、高スループットを提供するからです。"
        },
        "Correct Answer": "ネットワークロードバランサー（NLB）、なぜならLayer 4で動作し、静的IPをサポートし、TCPフォワーディングで途切れのない暗号化を許可するからです。",
        "Explanation": "ネットワークロードバランサー（NLB）は、このシナリオに最も適した選択肢です。なぜなら、OSIモデルのLayer 4（トランスポート層）で動作し、TCPトラフィックを直接処理できるからです。この機能により、クライアントとバックエンドインスタンス間で途切れのない暗号化を維持でき、TCPパケットを復号化せずに転送できます。さらに、NLBは静的IPアドレスをサポートしており、ホワイトリストの目的に不可欠です。この機能の組み合わせにより、静的IPを持つ高速で安全な接続を必要とするアプリケーションに最適です。",
        "Other Options": [
            "アプリケーションロードバランサー（ALB）は、SSL終端とコンテンツベースのルーティングを提供しますが、Layer 7（アプリケーション層）で動作するため、トラフィックを復号化し、途切れのない暗号化の要件を破る可能性があるため、適していません。",
            "クラシックロードバランサー（CLB）は、HTTPSをサポートしていますが、NLBと同じレベルのパフォーマンスと機能を提供しない古い技術であるため、最良の選択肢ではありません。また、NLBのように静的IPをサポートしていません。",
            "アプリケーションロードバランサー（ALB）は静的IPアドレスをサポートすると誤って記載されていますが、直接静的IPを提供しません。代わりに動的IPを使用し、静的IP機能を実現するためには（NLBを前に使用するなど）追加の設定が必要です。"
        ]
    },
    {
        "Question Number": "22",
        "Situation": "ある会社が「secretcatproject」という名前のS3バケットを持っており、その中には機密データが含まれています。この会社は、データが公共のアクセスから安全であることを確保しながら、パートナーアカウントの特定のユーザーにこのバケットへのアクセスを許可する必要があります。",
        "Question": "会社は、匿名ユーザーによる不正アクセスを防ぎつつ、必要なアクセスを付与するためにどの方法を使用すべきですか？",
        "Options": {
            "1": "バケットポリシーを設定して、すべてのユーザーに公共アクセスを許可し、アクセス管理を簡素化する。",
            "2": "パートナーアカウントのIAMロールをプリンシパルとして指定し、バケットへのアクセス権を持つS3バケットポリシーを使用する。",
            "3": "バケットで「公共アクセスをブロック」を有効にし、アクセス制御リスト（ACL）を使用してパートナーアカウントのアクセスを管理する。",
            "4": "IAMポリシーをバケットに直接アタッチして、パートナーアカウントのユーザーのアクセスを制御する。"
        },
        "Correct Answer": "パートナーアカウントのIAMロールをプリンシパルとして指定し、バケットへのアクセス権を持つS3バケットポリシーを使用する。",
        "Explanation": "S3バケットポリシーを使用してパートナーアカウントのIAMロールをプリンシパルとして指定することで、誰がバケットにアクセスできるかを細かく制御できます。この方法により、指定されたパートナーアカウントのユーザーのみが機密データにアクセスできるようになり、公共アクセスを防ぐことができます。バケットポリシーは権限管理の強力なツールであり、特定のセキュリティ要件に合わせて調整できるため、説明された状況に最も安全で適切な方法です。",
        "Other Options": [
            "バケットポリシーを設定してすべてのユーザーに公共アクセスを許可すると、機密データがインターネット上の誰にでも公開されることになり、データを公共アクセスから安全に保つという要件に反します。",
            "バケットで「公共アクセスをブロック」を有効にし、アクセス制御リスト（ACL）を使用することは、アクセス管理のベストプラクティスではありません。公共アクセスを防ぐことはできますが、ACLは複雑で、特にクロスアカウントアクセスを扱う際にはバケットポリシーよりも管理が難しい場合があります。この目的には一般的にバケットポリシーが好まれます。",
            "IAMポリシーをバケットに直接アタッチすることはできません。IAMポリシーはIAMユーザー、グループ、またはロールにアタッチされ、S3バケットに直接アタッチされることはありません。S3バケットのアクセス制御はバケットポリシーまたはACLを通じて管理されるため、このオプションは不正解です。"
        ]
    },
    {
        "Question Number": "23",
        "Situation": "ある医療会社が、災害復旧のために患者データをAWSにバックアップする必要があります。コストを削減するために、バックアップの長期保存を確保しつつ、ストレージコストを最小限に抑えるソリューションが必要です。また、必要に応じて数時間以内にデータを取得できるオプションも求めています。",
        "Question": "これらの要件を最もよく満たすバックアップ戦略はどれですか？（2つ選択してください。）",
        "Options": {
            "1": "バックアップをAmazon S3 Standardに保存する",
            "2": "アーカイブストレージのためにAmazon S3 Glacier Flexible Retrievalを使用する",
            "3": "バックアップをAmazon S3 Standard-IAに保存する",
            "4": "同じリージョンに保存されたAmazon EBSスナップショットを使用する",
            "5": "AWS Backupを実装し、ライフサイクルポリシーを使用してバックアップを低コストのストレージクラスに移行する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "アーカイブストレージのためにAmazon S3 Glacier Flexible Retrievalを使用する",
            "AWS Backupを実装し、ライフサイクルポリシーを使用してバックアップを低コストのストレージクラスに移行する"
        ],
        "Explanation": "Amazon S3 Glacier Flexible Retrievalは、長期データストレージのためのコスト効果の高いソリューションであり、数時間以内にデータを取得できるため、会社の要件に合致しています。AWS Backupとライフサイクルポリシーを使用することで、一定期間後にバックアップを低コストのストレージクラスに自動的に移行でき、長期的にストレージコストを大幅に削減できます。",
        "Other Options": [
            "バックアップをAmazon S3 Standardに保存することは、長期データ保持のための最もコスト効果の高いソリューションではありません。高い耐久性、可用性、パフォーマンスを提供しますが、S3 GlacierやS3 Standard-IAなどの他のストレージクラスと比較してコストが高くなります。",
            "バックアップをAmazon S3 Standard-IA（Infrequent Access）に保存することは、あまり頻繁にアクセスされないデータにとってコスト効果の高いソリューションとなる可能性がありますが、S3 GlacierやAWS Backupとライフサイクルポリシーを使用する場合と同じレベルのコスト削減を提供するわけではありません。",
            "同じリージョンに保存されたAmazon EBSスナップショットを使用することは、特に長期保持のためにストレージコストを最小限に抑えるわけではありません。さらに、同じリージョンにバックアップを保存することは、災害復旧の目的でしばしば望まれる地理的冗長性を提供しません。"
        ]
    },
    {
        "Question Number": "24",
        "Situation": "あるニュースサイトがAmazon S3にマルチメディアファイルを保存しています。これらのファイルはアップロード後の最初の7日間に頻繁にアクセスされますが、その後はほとんどアクセスされません。サイトはこれらのアクセスパターンに基づいてストレージコストを削減したいと考えています。",
        "Question": "どのストレージ構成がコストを最適化するのに最も適していますか？",
        "Options": {
            "1": "すべてのファイルをS3 Standardに保存する",
            "2": "ファイルをS3 Intelligent-Tieringに保存する",
            "3": "7日後にファイルをS3 Standard-IAに移動する",
            "4": "すべてのマルチメディアファイルにS3 Glacierを使用する"
        },
        "Correct Answer": "7日後にファイルをS3 Standard-IAに移動する",
        "Explanation": "7日後にファイルをS3 Standard-IA（Infrequent Access）に移動することは、あまり頻繁にアクセスされないデータに対して迅速なアクセスが必要な場合に最適なオプションです。マルチメディアファイルは最初の7日間に頻繁にアクセスされ、その後はほとんどアクセスされないため、この期間後にStandard-IAに移行することで、ストレージコストを大幅に削減しつつ、必要なときに迅速にアクセスできるようになります。S3 Standard-IAはS3 Standardと比較してストレージコストが低いため、説明されたアクセスパターンに対するコスト効果の高いソリューションです。",
        "Other Options": [
            "すべてのファイルをS3 Standardに保存することは、S3 StandardがS3 Standard-IAよりも高価であるため、コストを最適化しません。このオプションは、最初の7日間以降に頻繁にアクセスされないデータに対して利用可能な低コストを活用していません。",
            "ファイルをS3 Intelligent-Tieringに保存することは実行可能なオプションですが、監視と自動ティアリングによる追加コストが発生します。アクセスパターンが予測可能であるため（最初の7日間に頻繁にアクセスされ、その後はあまりアクセスされない）、7日後に手動でファイルをStandard-IAに移動する方が、Intelligent-Tieringを使用するよりもコスト効果が高いです。",
            "すべてのマルチメディアファイルにS3 Glacierを使用することは適切ではありません。Glacierはアーカイブストレージ用に設計されており、取得時間が数分から数時間かかる場合があります。これは、初回アップロード後にすぐに必要とされるファイルへの迅速なアクセスの要件を満たしません。"
        ]
    },
    {
        "Question Number": "25",
        "Situation": "ある会社が最近新しいAWSアカウントを作成し、創業者は現在、アカウント内のリソースを管理するためにルートユーザーを使用しています。ルートユーザーはアカウント内のすべてのリソースに対して完全かつ制限のない管理権限を持ち、デフォルトでは他のユーザーには明示的に付与されるまで権限がありません。より良いセキュリティのために、創業者は日常業務にルートアカウントを使用するのではなく、特定の権限を持つIAMユーザーを作成して他のチームメンバーに責任を委譲したいと考えています。",
        "Question": "AWSアカウントのセキュリティを維持しつつ、アクセスを効果的に管理するために、創業者はどのような行動を取るべきですか？（2つ選択してください。）",
        "Options": {
            "1": "すべての日常的な管理業務にルートユーザーを使用し続け、チームメンバーには読み取り専用アクセスのIAMユーザーを作成する。",
            "2": "ルートアカウントに対して多要素認証（MFA）を有効にし、各チームメンバーに必要な権限を持つIAMユーザーを作成し、日常的な活動にルートアカウントを使用しないようにする。",
            "3": "ルートアカウントの認証情報をチームメンバーと共有し、権限を整理するためにIAMグループを設定する。",
            "4": "各チームメンバーに直接AWSアカウントへのアクセスを与えるために、別々のルートユーザーを作成する。",
            "5": "定期的にルートアクセスキーをローテーションし、ルートアカウントの使用を重要なタスクに制限する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "ルートアカウントに対して多要素認証（MFA）を有効にし、各チームメンバーに必要な権限を持つIAMユーザーを作成し、日常的な活動にルートアカウントを使用しないようにする。",
            "定期的にルートアクセスキーをローテーションし、ルートアカウントの使用を重要なタスクに制限する。"
        ],
        "Explanation": "ルートアカウントに多要素認証（MFA）を有効にすることで、ログイン時に2つの身分証明を要求する追加のセキュリティ層が追加されます。各チームメンバーのためにIAMユーザーを作成することで、創業者は責任を委譲し、各ユーザーに特定の権限を付与することでアクセスを効果的に管理できます。このようにして、すべてのリソースに対して完全な制御を持つルートアカウントが日常的な活動に使用されず、偶発的な変更やセキュリティ侵害のリスクが軽減されます。ルートアクセスキーを定期的にローテーションすることも、セキュリティを維持するためのベストプラクティスです。キーが侵害された場合でも、有効期限が限られていることを保証します。ルートアカウントの使用を重要なタスクに制限することも、偶発的な変更やセキュリティ侵害のリスクを最小限に抑えます。",
        "Other Options": [
            "すべての日常的な管理業務にルートユーザーを使用し続けることは良いプラクティスではなく、偶発的な変更やセキュリティ侵害のリスクを高めます。チームメンバーのために読み取り専用アクセスのIAMユーザーを作成することは、必要なタスクを実行する能力を制限します。",
            "ルートアカウントの認証情報をチームメンバーと共有することは深刻なセキュリティリスクです。これにより、アカウント内のすべてのリソースに対して完全かつ制限のない制御が与えられます。権限を整理するためにIAMグループを設定することは良いプラクティスですが、ルートアカウントではなくIAMユーザーで行うべきです。",
            "各チームメンバーのために別々のルートユーザーを作成することは不可能です。AWSはアカウントごとに1つのルートユーザーのみを許可しています。さらに、チームメンバーにAWSアカウントへの直接アクセスを与えることは深刻なセキュリティリスクです。"
        ]
    },
    {
        "Question Number": "26",
        "Situation": "ある会社が顧客のフィードバックを分析して主要なテーマや感情を特定し、その分析を音声要約に変換してアクセシビリティを向上させる顧客サービスアプリケーションを構築したいと考えています。",
        "Question": "これらのタスクに最も適切なAWSのマネージドサービスの組み合わせはどれで、なぜですか？（2つ選択してください。）",
        "Options": {
            "1": "Amazon SageMakerとAmazon Rekognition、これにより高度な機械学習モデリングと画像認識機能が可能になります。",
            "2": "Amazon ComprehendとAmazon Polly、Comprehendはテーマや感情を分析でき、Pollyはテキストを自然な音声に変換できます。",
            "3": "AWS GlueとAmazon Athena、フィードバックからデータを処理し、構造化データに対して複雑なクエリを実行します。",
            "4": "Amazon TranslateとAmazon Lex、顧客のフィードバックを異なる言語に翻訳し、会話型インターフェースを構築します。",
            "5": "Amazon TranscribeとAmazon Translate、話されたフィードバックを文字起こしし、複数の言語に翻訳します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon SageMakerとAmazon Rekognition、これにより高度な機械学習モデリングと画像認識機能が可能になります。",
            "Amazon ComprehendとAmazon Polly、Comprehendはテーマや感情を分析でき、Pollyはテキストを自然な音声に変換できます。"
        ],
        "Explanation": "Amazon SageMakerは、すべての開発者とデータサイエンティストが機械学習（ML）モデルを迅速に構築、トレーニング、デプロイできる完全に管理されたサービスです。SageMakerは、機械学習プロセスの各ステップから重労働を取り除き、高品質なモデルの開発を容易にします。Amazon Rekognitionは、証明された高スケーラブルな深層学習技術を使用して、アプリケーションに画像および動画分析を簡単に追加できるようにします。これは、機械学習の専門知識がなくても使用できます。Amazon Comprehendは、機械学習を使用してテキストの洞察や関係を見つけます。テキストの言語を特定し、重要なフレーズ、場所、人、ブランド、またはイベントを抽出し、テキストがどれだけポジティブまたはネガティブであるかを理解し、トークン化や品詞を使用してテキストを分析し、トピックごとにテキストファイルのコレクションを自動的に整理します。Amazon Pollyは、テキストをリアルな音声に変換するサービスで、話すアプリケーションを作成し、音声対応製品の新しいカテゴリを構築できます。",
        "Other Options": [
            "AWS GlueとAmazon AthenaはETL（抽出、変換、ロード）ジョブやデータのクエリに使用され、感情分析やテキストから音声への変換には使用されません。",
            "Amazon TranslateとAmazon Lexは言語翻訳や会話型インターフェースの構築に使用され、感情分析やテキストから音声への変換には使用されません。",
            "Amazon TranscribeとAmazon Translateは話されたフィードバックを文字起こしし、複数の言語に翻訳するために使用され、感情分析やテキストから音声への変換には使用されません。"
        ]
    },
    {
        "Question Number": "27",
        "Situation": "あなたのチームは、高速なデータ取得と耐久性を必要とするバックエンドデータベースに依存する、高度にレジリエントなアプリケーションを設計しています。",
        "Question": "Amazon DynamoDBのどの機能が、地域的な障害が発生した場合のレジリエンスを高め、データの可用性を確保するのに最も適していますか？",
        "Options": {
            "1": "DynamoDB Streams、他のAWSサービスへの変更のリアルタイムレプリケーションを可能にします。",
            "2": "DynamoDB Global Tables、マルチリージョンレプリケーションを有効にし、自動フェイルオーバーとクロスリージョンのレジリエンスを実現します。",
            "3": "DynamoDB Accelerator (DAX)、ピーク負荷時の読み取り時間を短縮するためのインメモリキャッシングを提供します。",
            "4": "DynamoDB Auto Scaling、需要の急増に応じて読み取りおよび書き込みスループットを動的に調整します。"
        },
        "Correct Answer": "DynamoDB Global Tables、マルチリージョンレプリケーションを有効にし、自動フェイルオーバーとクロスリージョンのレジリエンスを実現します。",
        "Explanation": "DynamoDB Global Tablesは、マルチリージョンで完全にレプリケートされたデータベースを展開するための完全に管理されたソリューションを提供します。この機能により、地域的な障害が発生した場合でもアプリケーションが引き続き動作できるようになり、データが複数のAWSリージョンに自動的にレプリケートされます。このレプリケーションにより、自動フェイルオーバーが可能になり、1つのリージョンが利用できなくなった場合でも、アプリケーションはデータにアクセスできる別のリージョンにシームレスに切り替えることができるため、レジリエンスが向上し、データの可用性が確保されます。",
        "Other Options": [
            "DynamoDB Streamsは、他のAWSサービスへの変更のリアルタイムレプリケーションを可能にしますが、マルチリージョンレプリケーションや自動フェイルオーバー機能は提供しません。これは、地域的な障害に対するレジリエンスを確保するためのものではなく、イベント駆動型アーキテクチャにより適しています。",
            "DynamoDB Accelerator (DAX)は、インメモリキャッシングを提供して読み取りパフォーマンスを向上させるように設計されていますが、地域的な障害が発生した場合のデータの可用性の問題には対処していません。",
            "DynamoDB Auto Scalingは、需要の急増に応じて読み取りおよび書き込みスループットを調整しますが、障害が発生した場合の地域間のレジリエンスやデータの可用性を高めるものではありません。"
        ]
    },
    {
        "Question Number": "28",
        "Situation": "ある企業は、Amazon S3に保存されている機密データが顧客管理のキーを使用して静止状態で暗号化されていることを確認する必要があります。",
        "Question": "企業は暗号化キーを管理するためにどのサービスを使用すべきですか？",
        "Options": {
            "1": "AWS Certificate Manager (ACM)",
            "2": "AWS Key Management Service (AWS KMS)",
            "3": "Amazon S3 Server-Side Encryption with AES-256",
            "4": "AWS Secrets Manager"
        },
        "Correct Answer": "AWS Key Management Service (AWS KMS)",
        "Explanation": "AWS Key Management Service (AWS KMS)は、暗号化キーを管理するために特別に設計されており、AWSサービス全体で暗号鍵の作成、管理、使用を制御するための集中管理方式を提供します。AWS KMSを使用すると、Amazon S3に保存されたデータを暗号化するために使用できる顧客管理のキー（CMK）を作成できます。これにより、誰がキーを使用できるか、どのように使用できるかを細かく制御でき、企業のセキュリティ要件に従って機密データが静止状態で暗号化されることが保証されます。",
        "Other Options": [
            "AWS Certificate Manager (ACM)は、ウェブサイトやアプリケーションのセキュリティのためにSSL/TLS証明書を管理するために主に使用されます。Amazon S3のようなサービスで静止状態のデータの暗号化キーを管理する機能は提供していません。",
            "Amazon S3 Server-Side Encryption with AES-256は静止状態での暗号化を提供しますが、デフォルトではAWS管理のキーを使用します。顧客管理のキーも使用できますが、AWS KMSが提供するキー管理機能はありませんので、暗号化キーを管理するためにはAWS KMSがより適切な選択です。",
            "AWS Secrets Managerは、APIキー、データベースの認証情報、その他の機密情報を管理するために設計されています。Amazon S3の静止状態のデータの暗号化キーを管理するためのものではありません。"
        ]
    },
    {
        "Question Number": "29",
        "Situation": "あるソーシャルメディアアプリは、人気のあるコンテンツに対して頻繁に読み取りリクエストを受けるMySQLデータベースを持っています。データベースのコストを削減し、応答時間を改善するために、データベースからの読み取りをオフロードするキャッシングレイヤーを実装したいと考えています。",
        "Question": "このシナリオに最もコスト効果の高いキャッシング戦略はどれですか？",
        "Options": {
            "1": "Amazon S3を使用して頻繁にアクセスされるコンテンツをキャッシュする",
            "2": "Amazon ElastiCacheのような管理されたキャッシュでインメモリキャッシングを実装する",
            "3": "MySQLデータベースの複数のリードレプリカを作成する",
            "4": "バッチ処理システムを使用して人気のあるクエリを事前計算する"
        },
        "Correct Answer": "Amazon ElastiCacheのような管理されたキャッシュでインメモリキャッシングを実装する",
        "Explanation": "Amazon ElastiCacheのような管理サービスでインメモリキャッシングを実装することは、このシナリオにおいて最もコスト効果の高い戦略です。これにより、頻繁に要求されるデータに迅速にアクセスでき、MySQLデータベースへの負荷を大幅に削減できます。インメモリキャッシュはRAMにデータを保存し、ディスクベースのストレージソリューションと比較してはるかに高速な読み取り時間を提供します。このアプローチは、高い読み取りトラフィックを効率的に処理でき、必要に応じてスケールアップできるため、人気のあるコンテンツに対する頻繁な読み取りリクエストを持つアプリケーションに最適です。",
        "Other Options": [
            "Amazon S3を使用して頻繁にアクセスされるコンテンツをキャッシュすることは適切ではありません。S3は主に耐久性と可用性のために最適化されたオブジェクトストレージサービスであり、速度のためではありません。S3からデータにアクセスすることは、インメモリキャッシングと比較して遅延が高く、高い読み取りシナリオでの応答時間を削減するのには効果的ではありません。",
            "MySQLデータベースの複数のリードレプリカを作成することで、負荷を複数のレプリカに分散させることで読み取り性能を向上させることができますが、コスト効果の面ではキャッシングほど効果的ではありません。各レプリカはストレージとメンテナンスのために追加のコストがかかり、読み取りのスケーラビリティには役立ちますが、インメモリキャッシュと同じ速度の利点を提供しません。",
            "人気のあるクエリを事前計算するためにバッチ処理システムを使用することは、直接的なキャッシングソリューションではなく、頻繁にアクセスされるコンテンツへのリアルタイムアクセスを提供しない可能性があります。結果を事前計算することでデータベースへの負荷を軽減できますが、動的コンテンツリクエストに対してインメモリキャッシュが提供する即時の応答時間を提供しません。"
        ]
    },
    {
        "Question Number": "30",
        "Situation": "ある企業はカスタマーサポートプラットフォームを構築しており、顧客のフィードバックを分析し、自動音声応答を生成するためにAWSサービスを使用したいと考えています。テキストデータから重要な洞察を抽出し、テキスト応答を音声に変換したいと考えています。",
        "Question": "企業はこれらの目標を達成するためにどのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "Amazon Pollyを使用してテキストを音声に変換し、Amazon Comprehendを使用して顧客の感情を分析し、フィードバックから重要なフレーズを抽出する。",
            "2": "Amazon Lexを使用して会話型チャットボットを構築し、Amazon Pollyを使用して音声からテキストへの変換を行う。",
            "3": "Amazon S3を使用してフィードバックを保存し、AWS Lambdaを使用してテキストを分析し、音声を生成する。",
            "4": "Amazon Transcribeを使用して音声をテキストに変換し、Amazon Rekognitionを使用して感情分析を行う。"
        },
        "Correct Answer": "Amazon Pollyを使用してテキストを音声に変換し、Amazon Comprehendを使用して顧客の感情を分析し、フィードバックから重要なフレーズを抽出する。",
        "Explanation": "この選択肢は正しいです。なぜなら、Amazon Pollyはテキストをリアルな音声に変換するために特別に設計されており、企業の自動音声応答生成の目標に合致しているからです。さらに、Amazon Comprehendは自然言語処理（NLP）サービスであり、テキストデータを分析して感情や重要なフレーズなどの洞察を抽出することができ、顧客のフィードバックを分析するのに最適です。",
        "Other Options": [
            "この選択肢は不正解です。なぜなら、Amazon Lexは会話型インターフェース（チャットボット）を構築するために使用され、感情分析や重要なフレーズの抽出のためのテキストデータの分析に主に焦点を当てていないからです。音声変換のためにAmazon Pollyが含まれていますが、顧客のフィードバックの分析には対応していません。",
            "この選択肢は不正解です。なぜなら、Amazon S3はストレージサービスであり、分析機能を提供しないからです。AWS Lambdaはサーバーレスコンピューティングに使用できますが、テキスト分析や音声生成のためには追加のサービスが必要であり、正しい回答よりも効率的ではありません。",
            "この選択肢は不正解です。なぜなら、Amazon Transcribeは音声をテキストに変換するために使用され、企業のテキストフィードバックの分析の目標には関連しないからです。さらに、Amazon Rekognitionは画像および動画分析サービスであり、テキストデータの感情分析には適していません。"
        ]
    },
    {
        "Question Number": "31",
        "Situation": "ある企業がAmazon S3に機密データを保存したいと考えており、AWSが平文データにアクセスできないことを確保する必要があります。また、キー管理と暗号化処理に対する完全な制御を望んでいます。",
        "Question": "この要件を満たすために、企業はどの暗号化方法を使用すべきですか？",
        "Options": {
            "1": "S3管理キーによるサーバーサイド暗号化 (SSE-S3)",
            "2": "AWS KMS管理キーによるサーバーサイド暗号化 (SSE-KMS)",
            "3": "クライアントサイド暗号化",
            "4": "顧客提供キーによるサーバーサイド暗号化 (SSE-C)"
        },
        "Correct Answer": "クライアントサイド暗号化",
        "Explanation": "クライアントサイド暗号化を使用することで、企業はデータをAmazon S3に送信する前に暗号化でき、AWSが平文データにアクセスできないことを確保します。この方法により、企業は暗号化プロセスとキー管理を完全に制御でき、自分自身の暗号化キーとアルゴリズムを使用してデータをS3にアップロードする前に保護できます。これにより、AWSが平文データにアクセスできないという要件を満たします。",
        "Other Options": [
            "S3管理キーによるサーバーサイド暗号化 (SSE-S3) は、Amazonの独自のキーを使用して暗号化を管理するため、AWSが平文データにアクセスでき、企業の要件を満たしません。",
            "AWS KMS管理キーによるサーバーサイド暗号化 (SSE-KMS) は、SSE-S3に比べてキー管理に対するより多くの制御を提供しますが、暗号化と復号化のプロセスがサーバーサイドで行われるため、AWSは依然として平文データにアクセスできます。",
            "顧客提供キーによるサーバーサイド暗号化 (SSE-C) は、顧客が暗号化のために独自のキーを提供できるようにしますが、AWSが暗号化と復号化のプロセスを処理するため、AWSが平文データにアクセスできる可能性があり、企業の要件を満たしません。"
        ]
    },
    {
        "Question Number": "32",
        "Situation": "世界中に数百万の読者を持つグローバルニュースウェブサイトが、Amazon CloudFrontを使用して低遅延で効率的にコンテンツを配信しています。ウェブサイトチームは、視聴者の国に基づいてコンテンツをパーソナライズする機能を追加したいと考えており、ローカルニュースのハイライトなどを提供し、記事の異なるレイアウトをテストするためのA/Bテストを実施する必要があります。このソリューションは、世界中の視聴者にシームレスで低遅延の体験を提供するためにエッジロケーションで動作する必要があります。",
        "Question": "ソリューションアーキテクトはどのAWSサービスと構成を推奨すべきですか？",
        "Options": {
            "1": "コンテンツパーソナライズのために国別ルーティングルールを持つVPCにAWS Lambdaをデプロイする",
            "2": "CloudFront Viewer RequestおよびOrigin RequestイベントによってトリガーされるLambda@Edge関数を使用して、国に基づいてコンテンツをカスタマイズし、エッジロケーションでA/Bテストを実施する",
            "3": "複数のリージョンにAmazon EC2インスタンスを立ち上げ、各インスタンスに国別のコンテンツをローカルに保存する",
            "4": "国ごとに特定のキャッシュ動作を持つAmazon CloudFrontを構成して、国別にカスタマイズされたコンテンツを提供する"
        },
        "Correct Answer": "CloudFront Viewer RequestおよびOrigin RequestイベントによってトリガーされるLambda@Edge関数を使用して、国に基づいてコンテンツをカスタマイズし、エッジロケーションでA/Bテストを実施する",
        "Explanation": "Lambda@Edgeを使用することで、ウェブサイトはCloudFrontのエッジロケーションでユーザーに近い場所でコードを実行でき、遅延を最小限に抑え、ユーザー体験を向上させます。Viewer RequestおよびOrigin Requestイベントで関数をトリガーすることにより、ウェブサイトはユーザーの国に基づいてコンテンツを動的にカスタマイズし、異なるレイアウトのA/Bテストを実施できます。このソリューションは効率的で、CloudFrontの機能を活用してパーソナライズされたコンテンツを迅速かつ効果的に提供します。",
        "Other Options": [
            "国別ルーティングルールを持つVPCにAWS Lambdaをデプロイすることは最適ではありません。なぜなら、トラフィックをエッジロケーションではなくVPCを経由してルーティングする必要があるため、遅延が発生するからです。この設定はCloudFrontの低遅延の利点を効果的に活用していません。",
            "Lambda@Edge関数を使用することは正しいアプローチですが、このオプションは関数を適切なタイミングでトリガーするために必要なCloudFrontイベントの使用を明記していません。したがって、完全なソリューションに必要な詳細が欠けています。",
            "複数のリージョンにAmazon EC2インスタンスを立ち上げることは非効率的でコストがかかります。複数のインスタンスを管理し、それらの間でコンテンツを同期する必要があるため、アーキテクチャが複雑になり、低遅延のコンテンツ配信のためのエッジコンピューティングの利点を活用できません。"
        ]
    },
    {
        "Question Number": "33",
        "Situation": "あるビデオストリーミング会社が、AWS上にホストされたコンテンツ配信サービスを本社ネットワークと別の都市で接続する必要があります。会社は、大きなビデオファイルを転送するための高スループット接続と、ビデオ再生中のバッファリング問題を防ぐための低遅延を要求しています。また、接続はプライベートである必要があり、機密のビデオコンテンツが公共のインターネットにさらされないようにし、これらの目標を達成するためのコスト効果の高いソリューションを探しています。",
        "Question": "どのアプローチが彼らのニーズを最もよく満たしますか？",
        "Options": {
            "1": "AWS PrivateLinkを使用して、本社に直接ビデオコンテンツのプライベートリンクを作成する",
            "2": "AWS Direct Connectを使用して、AWSとオンプレミスネットワーク間に高帯域幅のプライベート接続を確立する",
            "3": "通信事業者からのポイントツーポイントMPLS回線を使用して、AWSへのプライベート接続を作成する",
            "4": "専用VPNを使用した管理されたインターネットサービスで安全なデータ転送を行う"
        },
        "Correct Answer": "AWS Direct Connectを使用して、AWSとオンプレミスネットワーク間に高帯域幅のプライベート接続を確立する",
        "Explanation": "AWS Direct Connectは、会社の本社からAWSへの専用ネットワーク接続を提供し、高スループット要件と低遅延に最適です。このサービスは、公共のインターネットを経由しないプライベート接続を可能にし、機密のビデオコンテンツが安全に保たれることを保証します。Direct Connectは、大量のデータ転送を効率的に処理できるため、再生中のバッファリングリスクなしに大きなビデオファイルを転送するためのコスト効果の高いソリューションです。",
        "Other Options": [
            "AWS PrivateLinkは、AWS内でサービスを安全に接続するために設計されており、オンプレミスネットワークへの直接接続を提供しません。大きなファイルをAWSと外部ネットワーク間で転送するよりも、AWSサービスにプライベートにアクセスするためにより適しています。",
            "通信事業者からのポイントツーポイントMPLS回線はプライベート接続を提供できますが、AWS Direct Connectほどコスト効果が高く柔軟ではない可能性があります。さらに、MPLS回線の設定と管理はより複雑で、Direct Connectと同じレベルのパフォーマンスを保証しない場合があります。",
            "専用VPNを使用した管理されたインターネットサービスは安全な接続を提供できますが、通常、AWS Direct Connectと同じレベルのスループットと低遅延を提供しません。インターネット上のVPNはパフォーマンスの変動を引き起こす可能性があり、ビデオ再生中のバッファリング問題を引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "34",
        "Situation": "製造会社は、オンプレミスの施設でセンサーデータを収集し、長期保存と分析のためにAWSにデータをアーカイブする必要があります。コストを最小限に抑えたいが、手動の手間を最小限に抑えつつ、データをクラウドにシームレスに転送する方法を求めています。",
        "Question": "これらの要件を最も満たすハイブリッドストレージオプションはどれですか？",
        "Options": {
            "1": "AWS Direct Connect",
            "2": "AWS Storage Gateway",
            "3": "Amazon S3 with Transfer Acceleration",
            "4": "AWS DataSync"
        },
        "Correct Answer": "AWS Storage Gateway",
        "Explanation": "AWS Storage Gatewayは、ハイブリッドクラウドストレージソリューション専用に設計されており、オンプレミスのアプリケーションがクラウドストレージをシームレスに利用できるようにします。手動の手間を最小限に抑えつつ、AWSにデータを転送する方法を提供し、センサーデータのアーカイブに最適です。ファイル、ボリューム、テープゲートウェイなど、さまざまな構成をサポートしており、コストを最小限に抑えつつ、クラウドでの分析のためにデータをすぐに利用できるようにします。",
        "Other Options": [
            "AWS Direct Connectは、オンプレミスからAWSへの専用ネットワーク接続を提供し、帯域幅を改善し、データ転送のコストを削減できます。ただし、自動的にデータを管理および転送するシームレスな方法を提供せず、追加の設定と管理が必要です。",
            "Amazon S3 with Transfer Accelerationは、長距離でのS3へのファイル転送を高速化しますが、ハイブリッドストレージソリューションを提供しません。オンプレミスのデータをクラウドストレージとシームレスに統合するよりも、ファイル転送に適しています。",
            "AWS DataSyncは、オンプレミスストレージとAWSストレージサービス間でデータを自動的に移動するサービスです。大量のデータ転送には効果的ですが、AWS Storage Gatewayと比較して、既存のワークフローにより統合されているため、手動の設定と管理がより多く必要になる場合があります。"
        ]
    },
    {
        "Question Number": "35",
        "Situation": "メディア会社は、Amazon S3に大きなビデオファイルを保存しています。ビデオはアップロード後すぐに頻繁にアクセスされますが、1か月後にはほとんどアクセスされません。会社は、最近アップロードされたビデオのアクセスパフォーマンスを損なうことなく、ストレージコストを最適化したいと考えています。",
        "Question": "ソリューションアーキテクトはどのS3ストレージクラスを推奨すべきですか？",
        "Options": {
            "1": "S3 Standard",
            "2": "S3 Intelligent-Tiering",
            "3": "S3 Standard-Infrequent Access (S3 Standard-IA)",
            "4": "S3 One Zone-Infrequent Access (S3 One Zone-IA)"
        },
        "Correct Answer": "S3 Intelligent-Tiering",
        "Explanation": "S3 Intelligent-Tieringは、このシナリオに最適なオプションです。なぜなら、アクセスパターンの変化に基づいてデータを2つのアクセスティア（頻繁と非頻繁）間で自動的に移動するからです。ビデオはアップロード後すぐに頻繁にアクセスされますが、1か月後にはほとんどアクセスされないため、このストレージクラスは初期アクセス期間後にデータを非頻繁アクセスティアに移動させ、最近アップロードされたビデオのアクセスパフォーマンスを損なうことなくコストを最適化します。",
        "Other Options": [
            "S3 Standardは、このユースケースにとって最もコスト効果の高いオプションではありません。なぜなら、頻繁にアクセスされるデータ用に設計されており、短期間で非頻繁にアクセスされるデータに対してコスト削減を提供しないからです。",
            "S3 Standard-Infrequent Access (S3 Standard-IA)は、非頻繁にアクセスされるデータには安価ですが、取得料金が発生し、アップロード後すぐに頻繁にアクセスされるデータには最適化されていません。",
            "S3 One Zone-Infrequent Access (S3 One Zone-IA)も適していません。なぜなら、データを単一のアベイラビリティゾーンに保存し、アベイラビリティゾーンの障害が発生した場合にデータ損失のリスクがあるからです。さらに、非頻繁にアクセスされるデータ用に設計されており、アップロード後すぐに迅速にアクセスする必要には合致しません。"
        ]
    },
    {
        "Question Number": "36",
        "Situation": "ソフトウェア開発会社は、Dockerコンテナを使用したマイクロサービスベースのアプリケーションを展開しています。このアプリケーションは、EC2インスタンスのクラスター全体でのコンテナの自動デプロイ、スケーリング、および管理を必要としています。",
        "Question": "ソリューションアーキテクトは、コンテナ化されたアプリケーションをオーケストレーションするためにどのAWSサービスを推奨すべきですか？（2つ選択してください）",
        "Options": {
            "1": "Amazon Elastic Container Service (ECS)",
            "2": "AWS Lambda",
            "3": "Amazon EC2 Auto Scaling",
            "4": "AWS Batch",
            "5": "Amazon Elastic Kubernetes Service (EKS)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon Elastic Container Service (ECS)",
            "Amazon Elastic Kubernetes Service (EKS)"
        ],
        "Explanation": "Amazon Elastic Container Service (ECS)とAmazon Elastic Kubernetes Service (EKS)は、コンテナ化されたアプリケーションをオーケストレーションするために特に設計されたAWSサービスです。ECSは、高性能でスケーラブルなサービスで、Amazon EC2インスタンスのクラスター全体でDocker対応アプリケーションを実行および管理できます。一方、EKSは、KubernetesをAWS上で簡単に実行できるようにするマネージドサービスで、自分自身でKubernetesコントロールプレーンやノードをインストール、運用、維持する必要がありません。両方のサービスは、コンテナの自動デプロイ、スケーリング、および管理を提供し、まさにこの質問のシナリオが求めているものです。",
        "Other Options": [
            "AWS Lambdaは、サーバーレスコンピューティングサービスで、サーバーをプロビジョニングまたは管理することなくコードを実行できます。コンテナ化されたアプリケーションと併用することはできますが、コンテナをオーケストレーションするために特に設計されたサービスではありません。",
            "Amazon EC2 Auto Scalingは、アプリケーションの可用性を維持し、定義した条件に従ってEC2インスタンスを自動的に追加または削除できるサービスです。基盤となるEC2インスタンスをスケールするために使用できますが、コンテナオーケストレーション機能は提供しません。",
            "AWS Batchは、ITプロフェッショナルがバッチ処理ジョブをスケジュールおよび実行できるサービスです。コンテナ化されたジョブを実行できますが、コンテナ化されたアプリケーションをオーケストレーションするために特に設計されたものではありません。"
        ]
    },
    {
        "Question Number": "37",
        "Situation": "あるeコマースウェブサイトは、ドメイン名に基づいて異なるアプリケーションにトラフィックをルーティングするためのコスト効率の良い方法を必要としており、複雑なルーティングによる追加料金を避けたいと考えています。",
        "Question": "この要件を最も満たすAWSネットワークサービスはどれですか？",
        "Options": {
            "1": "AWS Global Acceleratorを使用してグローバルルーティングを行う",
            "2": "Amazon Route 53を展開してDNSベースのルーティングを行う",
            "3": "パスベースのルーティングを使用したアプリケーションロードバランサーを利用する",
            "4": "VPCピアリングを設定して直接トラフィックをルーティングする"
        },
        "Correct Answer": "Amazon Route 53を展開してDNSベースのルーティングを行う",
        "Explanation": "Amazon Route 53は、ドメイン名に基づいてトラフィックをルーティングできるスケーラブルで高可用性のドメインネームシステム（DNS）ウェブサービスです。これは、ユーザーをアクセスするドメインに基づいて異なるアプリケーションに誘導するためのコスト効率の良いDNSベースのルーティングを可能にします。このサービスは、シンプルなルーティング、加重ルーティング、レイテンシベースのルーティングなどのルーティングポリシーを処理でき、複雑なルーティング設定による追加料金が発生しません。この目的のために特別に設計されており、eコマースウェブサイトのニーズに最適な選択肢です。",
        "Other Options": [
            "AWS Global Acceleratorは、アプリケーションの可用性とパフォーマンスを向上させるために、健康状態、地理、ルーティングポリシーに基づいてトラフィックを最適なエンドポイントに誘導するように設計されています。ただし、追加コストが発生し、シンプルなドメインベースのルーティングよりもグローバルアプリケーションにより適しています。",
            "パスベースのルーティングを使用したアプリケーションロードバランサーは、リクエストパスに基づいて複数のターゲット（EC2インスタンスなど）に対して受信アプリケーショントラフィックを分散するために主に使用されます。効果的にトラフィックをルーティングできますが、ドメイン名に基づくルーティングに対して最もコスト効率の良いソリューションではなく、追加の設定や潜在的なコストが関与します。",
            "VPCピアリングは、2つのVPC（仮想プライベートクラウド）間で直接ネットワークトラフィックをルーティングすることを可能にしますが、ドメイン名に基づくルーティングは処理しません。これは、内部ネットワーク通信により適しており、ドメイン名に基づいて外部トラフィックを誘導するには不適切な選択肢です。"
        ]
    },
    {
        "Question Number": "38",
        "Situation": "あるスタートアップはデータベースの費用を懸念しており、時間の経過とともにコストを監視したいと考えています。予算内に収めるためのコストアラートを設定し、支出傾向を分析して潜在的な節約を特定したいと考えています。",
        "Question": "どのAWSコスト管理ツールの組み合わせを使用すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "AWS Trusted AdvisorとAWS Cost Explorer",
            "2": "AWS BudgetsとAWS Cost Explorer",
            "3": "AWS Cost and Usage ReportとAWS Support",
            "4": "AWS Trusted AdvisorとAWS Budgets",
            "5": "AWS Cost Anomaly DetectionとAWS Budgets"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS BudgetsとAWS Cost Explorer",
            "AWS Cost Anomaly DetectionとAWS Budgets"
        ],
        "Explanation": "AWS Budgetsは、ユーザーがカスタムコストと使用量の予算を設定できるようにし、コストや使用量が予算を超えた場合（または超えると予測される場合）にアラートを送信します。これにより、スタートアップはコストを監視し、予算内に収めることができます。AWS Cost Explorerは、ユーザーがAWSのコストと使用量を時間の経過とともに視覚化、理解、管理できるようにします。これにより、スタートアップは支出傾向を分析し、潜在的な節約を特定できます。AWS Cost Anomaly Detectionは、コストと使用量データを自動的に分析して異常な支出パターンを検出し、コスト管理のもう一つのレイヤーを提供します。",
        "Other Options": [
            "AWS Trusted AdvisorとAWS Cost Explorer：AWS Cost Explorerは正しいツールですが、AWS Trusted Advisorは主にAWSのベストプラクティスに従ってリソースをプロビジョニングするためのリアルタイムガイダンスを提供し、特にコスト管理には特化していません。",
            "AWS Cost and Usage ReportとAWS Support：AWS Cost and Usage Reportはコストに関する包括的なデータを提供しますが、スタートアップが必要とするアラート機能は提供していません。AWS Supportは技術サポートのサービスであり、コスト管理に直接役立つものではありません。",
            "AWS Trusted AdvisorとAWS Budgets：AWS Budgetsは正しいツールですが、AWS Trusted Advisorは主にAWSのベストプラクティスに従ってリソースをプロビジョニングするためのリアルタイムガイダンスを提供し、特にコスト管理には特化していません。"
        ]
    },
    {
        "Question Number": "39",
        "Situation": "企業アプリケーションは、Amazon S3に保存されたデータへの低レイテンシアクセスを必要としています。データは世界中のさまざまな地理的場所からユーザーによってアクセスされます。会社は、頻繁にアクセスされるデータをユーザーの近くにキャッシュすることで、データアクセス速度を向上させたいと考えています。",
        "Question": "この要件を達成するためにソリューションアーキテクトはどのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "Amazon CloudFront",
            "2": "AWS Global Accelerator",
            "3": "Amazon Route 53",
            "4": "AWS Direct Connect"
        },
        "Correct Answer": "Amazon CloudFront",
        "Explanation": "Amazon CloudFrontは、世界中のエッジロケーションでコンテンツをキャッシュするコンテンツ配信ネットワーク（CDN）サービスです。CloudFrontを使用することで、Amazon S3に保存された頻繁にアクセスされるデータをユーザーの近くにキャッシュでき、レイテンシを大幅に削減し、アクセス速度を向上させることができます。ユーザーがデータを要求すると、CloudFrontは最寄りのエッジロケーションからデータを提供し、さまざまな地理的地域にいるユーザーのパフォーマンスを向上させます。",
        "Other Options": [
            "AWS Global Acceleratorは、アプリケーションの可用性とパフォーマンスを向上させるために、トラフィックを最適なエンドポイントに誘導しますが、コンテンツをキャッシュすることはありません。これは、S3からの静的コンテンツのキャッシュよりもTCPおよびUDPアプリケーションのパフォーマンス向上により適しています。",
            "Amazon Route 53は、ドメイン登録、DNSルーティング、ヘルスチェックを提供するスケーラブルなドメインネームシステム（DNS）ウェブサービスです。ユーザーを最寄りのリソースに誘導するのに役立ちますが、データをキャッシュしたり、データアクセス速度を直接改善したりすることはありません。",
            "AWS Direct Connectは、あなたの施設からAWSへの専用ネットワーク接続を提供し、データ転送の帯域幅を向上させ、レイテンシを削減することができます。ただし、データをキャッシュしたり、コンテンツ配信メカニズムを提供したりすることはなく、頻繁にアクセスされるデータをキャッシュする要件には不適切です。"
        ]
    },
    {
        "Question Number": "40",
        "Situation": "ある企業がAWS上で動作するマルチティアWebアプリケーションを設計しています。このアプリケーションは、フロントエンドWebティア、ビジネスロジックティア、データベースティアで構成されています。企業はアプリケーションの高可用性とフォールトトレランスを必要としています。",
        "Question": "ソリューションアーキテクトはどのアーキテクチャを推奨すべきですか？",
        "Options": {
            "1": "すべてのティアを単一のアベイラビリティゾーンにデプロイし、オートスケーリングとロードバランシングを使用する。",
            "2": "Webティアとビジネスロジックティアを複数のアベイラビリティゾーンにデプロイし、データベースティアを単一のアベイラビリティゾーンにMulti-AZ RDSでデプロイする。",
            "3": "Webティアを複数のアベイラビリティゾーンにデプロイし、ビジネスロジックティアを単一のアベイラビリティゾーンにデプロイし、データベースティアをAmazon DynamoDBを使用してデプロイする。",
            "4": "すべてのティアを複数のAWSリージョンにデプロイして、グローバルな可用性を確保する。"
        },
        "Correct Answer": "Webティアとビジネスロジックティアを複数のアベイラビリティゾーンにデプロイし、データベースティアを単一のアベイラビリティゾーンにMulti-AZ RDSでデプロイする。",
        "Explanation": "このオプションは、Webティアとビジネスロジックティアを複数のアベイラビリティゾーン（AZ）にデプロイすることで、高可用性とフォールトトレランスを提供します。これにより、1つのAZがダウンしても、他のAZのリソースを使用してアプリケーションが機能し続けることができます。さらに、Amazon RDSのMulti-AZを使用することで、データベースティアの可用性と耐久性が向上し、別のAZにあるスタンバイインスタンスにデータベースを自動的にレプリケートし、障害が発生した場合にフェイルオーバーを可能にします。このアーキテクチャは、高可用性のニーズをコストと複雑さを管理しながら効果的にバランスさせます。",
        "Other Options": [
            "すべてのティアを単一のアベイラビリティゾーンにデプロイし、オートスケーリングとロードバランシングを使用することは、高可用性やフォールトトレランスを提供しません。AZ内での障害が発生すると、アプリケーション全体がダウンしてしまいます。",
            "Webティアとビジネスロジックティアを複数のアベイラビリティゾーンにデプロイし、データベースティアを単一のアベイラビリティゾーンにMulti-AZ RDSでデプロイすることは部分的に正しいですが、データベースティアの高可用性の利点を完全には活用していません。データベースは完全なフォールトトレランスのために複数のAZに配置されるべきです。",
            "Webティアを複数のアベイラビリティゾーンにデプロイし、ビジネスロジックティアを単一のアベイラビリティゾーンにデプロイし、データベースティアをAmazon DynamoDBを使用してデプロイすることは、ビジネスロジックティアのフォールトトレランスを提供しません。これはアプリケーションにとって重要です。DynamoDBは高可用性ですが、全体のアーキテクチャはビジネスロジックティアの冗長性に欠けています。"
        ]
    },
    {
        "Question Number": "41",
        "Situation": "開発チームは新しいバージョンのAPIをデプロイし、エンドユーザーへの影響を最小限に抑えて本番環境でテストしたいと考えています。彼らはカナリアデプロイメントを使用して、新しいバージョンに少量の本番トラフィックをルーティングすることに決めました。",
        "Question": "このテストアプローチを最もサポートするデプロイメント戦略はどれですか、そしてその理由は何ですか？",
        "Options": {
            "1": "エッジ最適化エンドポイント、なぜならトラフィックをCloudFront経由でルーティングし、グローバルなオーディエンスに対して低遅延を提供するからです。",
            "2": "リージョナルエンドポイント、特定のAWSリージョン内でトラフィックを維持することを可能にするため、地域特有のアプリケーションに適しています。",
            "3": "プライベートエンドポイント、APIが内部テストのためにVPC内でのみアクセス可能であることを保証します。",
            "4": "ステージデプロイメントとカナリアリリース、これにより新しいAPIバージョンの制御されたロールアウトが可能になり、徐々にトラフィックを増加させることができます。"
        },
        "Correct Answer": "ステージデプロイメントとカナリアリリース、これにより新しいAPIバージョンの制御されたロールアウトが可能になり、徐々にトラフィックを増加させることができます。",
        "Explanation": "ステージデプロイメントとカナリアリリースは、新しいバージョンのアプリケーションやAPIを本番環境でリスクを最小限に抑えてテストするために特別に設計されています。この戦略により、開発チームは新しいバージョンに少量のトラフィックをルーティングし、そのパフォーマンスを監視し、新しいバージョンが良好に機能する場合は徐々にトラフィックを増加させることができます。この制御されたロールアウトは、エンドユーザーへの影響を最小限に抑え、問題が発生した場合には迅速にロールバックを可能にします。",
        "Other Options": [
            "エッジ最適化エンドポイントは、主にCloudFrontを介してトラフィックをルーティングすることでグローバルユーザーの遅延を削減することに焦点を当てています。パフォーマンスを向上させますが、バージョン間のトラフィック分配を制御するメカニズムが必要なカナリアデプロイメント戦略を本質的にサポートするものではありません。",
            "リージョナルエンドポイントは、特定のAWSリージョン内でトラフィックを維持する必要があるアプリケーションに適しています。ただし、カナリアデプロイメントに必要な機能を提供せず、APIの異なるバージョン間でトラフィックを徐々にシフトさせる能力が必要です。",
            "プライベートエンドポイントは、APIへのアクセスを仮想プライベートクラウド（VPC）内に制限し、内部テストに適しています。ただし、新しいバージョンを外部ユーザーのサブセットに公開してフィードバックを収集し、パフォーマンスを監視するカナリアデプロイメント戦略を促進するものではありません。"
        ]
    },
    {
        "Question Number": "42",
        "Situation": "あるゲノム研究機関がAWS上で大規模なDNAシーケンス分析を実行しています。これらのワークロードは高い計算能力を必要とし、激しい処理要求に対応するために迅速にスケールする必要があります。チームは、アプリケーションがピークパフォーマンスのニーズに動的にスケールできることを確認し、低需要期間中に運用コストを最適化する必要があります。",
        "Question": "これらの高パフォーマンスとコスト効率の要件を最も満たすアプローチはどれですか？",
        "Options": {
            "1": "ピークワークロードのために最大vCPUとメモリを持つEC2インスタンスをプロビジョニングし、手動でスケールダウンする。",
            "2": "コンピュート最適化EC2インスタンスを使用したオートスケーリンググループを使用し、CPU使用率に基づいてスケーリングポリシーを設定する。",
            "3": "すべての計算タスクをサーバーレス方式で処理するためにAmazon Lambda関数を設定する。",
            "4": "高いストレージを持つ単一のEC2インスタンスを実行し、必要に応じて手動でリソースを割り当てる。"
        },
        "Correct Answer": "コンピュート最適化EC2インスタンスを使用したオートスケーリンググループを使用し、CPU使用率に基づいてスケーリングポリシーを設定する。",
        "Explanation": "コンピュート最適化EC2インスタンスを使用したオートスケーリンググループを使用することで、組織はワークロードに基づいてインスタンスの数を自動的に調整できます。このアプローチにより、ピークパフォーマンスのニーズ時に追加のインスタンスをプロビジョニングして増加した計算要求に対応でき、低需要期間中にはコストを最適化するためにインスタンスを終了できます。CPU使用率に基づくスケーリングポリシーは、実際のリソース使用量とスケーリングアクションを直接関連付けるため、アプリケーションがワークロードの変化に動的に効率よく応答できることを保証します。",
        "Other Options": [
            "ピークワークロードのために最大vCPUとメモリを持つEC2インスタンスをプロビジョニングし、手動でスケールダウンすることは効率的ではありません。このアプローチは、低需要期間中に過剰プロビジョニングを引き起こし、不必要なコストが発生します。手動スケーリングは人為的なエラーが発生しやすく、ワークロードの変化に迅速に対応できない可能性があります。",
            "すべての計算タスクをサーバーレス方式で処理するためにAmazon Lambda関数を設定することは、 significantな計算能力とメモリを必要とする高パフォーマンスのDNAシーケンス分析には適していない可能性があります。Lambdaには実行時間とリソース割り当てに制限があり、集中的なゲノムワークロードのニーズを満たさない可能性があります。",
            "高いストレージを持つ単一のEC2インスタンスを実行し、必要に応じて手動でリソースを割り当てることは、スケーラブルなソリューションではありません。このアプローチは動的スケーリングを許可せず、変動するワークロードに効率的に対応するために重要です。さらに、単一のインスタンスに依存することは単一障害点を生み出し、パフォーマンスのボトルネックを引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "43",
        "Situation": "ある金融サービス会社は、毎日オンプレミスで大量の顧客データを生成し、保存しています。厳格な規制およびコンプライアンス要件により、彼らはこのデータをローカルに保持する必要がありますが、ストレージコストを削減するために、古いアクセス頻度の低いデータをAWSにオフロードしたいと考えています。既存のアプリケーションやワークフローを中断することなく、アーカイブデータにアクセスできるように、現在のストレージインフラをAWSにシームレスに拡張できるソリューションが必要です。",
        "Question": "どのAWSサービスが会社の要件を最も満たすでしょうか？",
        "Options": {
            "1": "Amazon S3 with lifecycle policies",
            "2": "AWS Direct Connect",
            "3": "AWS Storage Gateway",
            "4": "Amazon EBS Snapshot Export"
        },
        "Correct Answer": "AWS Storage Gateway",
        "Explanation": "AWS Storage Gatewayは、オンプレミス環境とクラウドストレージをシームレスに統合するように設計されています。これにより、企業はデータをローカルに保持しつつ、AWSへのストレージ機能を拡張するハイブリッドクラウドストレージソリューションを提供します。このシナリオでは、金融サービス会社はStorage Gatewayを使用して、古いアクセス頻度の低いデータをAWSにオフロードし、規制要件を遵守しながらストレージコストを削減できます。このサービスは、既存のアプリケーションやワークフローを中断することなくアーカイブデータに簡単にアクセスできるため、会社のニーズに最適です。",
        "Other Options": [
            "Amazon S3 with lifecycle policiesは、ユーザーがデータライフサイクルを管理できるストレージサービスですが、会社が必要とするオンプレミスインフラとのシームレスな統合を提供しません。データをオンプレミスからS3に移動するためには追加のステップが必要であり、既存のワークフローを中断する可能性があります。",
            "AWS Direct Connectは、オンプレミスからAWSへの専用ネットワーク接続を提供するサービスです。データ転送の帯域幅を改善し、レイテンシを削減できますが、アーカイブデータへのシームレスなアクセスを可能にするハイブリッドストレージソリューションの必要性には直接対応していません。",
            "Amazon EBS Snapshot Exportは、ユーザーがEBSスナップショットをS3にエクスポートできるようにしますが、主にEBSボリュームのバックアップと復元に焦点を当てており、AWS Storage Gatewayが提供するようなアーカイブデータへの継続的なアクセスを促進するものではありません。"
        ]
    },
    {
        "Question Number": "44",
        "Situation": "ある会社は、オンプレミス環境とAWS VPCの間にVPN接続とAWS Direct Connectリンクの両方を確立しています。高度に安全なデータ伝送のために、ネットワークを通過するすべてのトラフィックが暗号化されていることを確認したいと考えています。",
        "Question": "データセンターとAWSの間で交換されるすべてのデータの暗号化通信を最も確実に保証するアプローチはどれですか？",
        "Options": {
            "1": "AWS Direct Connectのみに依存し、プライベートで専用のリンクを提供するため、追加の暗号化は不要です。",
            "2": "AWS Direct Connect上にVPNを構成し、プライベート接続でデータを暗号化してエンドツーエンドの暗号化を確保します。",
            "3": "インターネットゲートウェイ（IGW）をHTTPSで使用して、データがインターネットを通過する際に保護します。",
            "4": "Direct ConnectでAWS Shieldを有効にしてトラフィックを暗号化し、不正アクセスを防ぎます。"
        },
        "Correct Answer": "AWS Direct Connect上にVPNを構成し、プライベート接続でデータを暗号化してエンドツーエンドの暗号化を確保します。",
        "Explanation": "AWS Direct Connectは、オンプレミス環境とAWSの間にプライベートで専用のリンクを提供しますが、送信されるデータを暗号化するものではありません。すべての交換データが暗号化されることを確実にするためには、Direct Connectリンク上にVPNを構成するのが最良のアプローチです。この設定により、専用の帯域幅と低レイテンシを活用しながら、安全で暗号化された通信が可能になります。VPNはデータパケットを暗号化することで追加のセキュリティ層を提供し、プライベートリンクが侵害された場合でもデータが安全であることを保証します。",
        "Other Options": [
            "AWS Direct Connectのみに依存することは、暗号化を保証するには不十分です。プライベート接続を提供しますが、データを転送中に暗号化しないため、傍受される危険があります。",
            "このオプションは実際に正しい答えです。AWS Direct Connect上にVPNを構成することが、暗号化通信を確保するための最良のアプローチです。",
            "インターネットゲートウェイ（IGW）をHTTPSで使用することは、このシナリオには適用できません。なぜなら、質問はデータセンターとAWSの間のプライベート接続を望んでいることを指定しているからです。IGWは公共のインターネットアクセスに使用され、HTTPSは暗号化を提供しますが、プライベートで安全な接続の要件を満たしません。"
        ]
    },
    {
        "Question Number": "45",
        "Situation": "ある会社は、複数のアカウントにわたる異常で不正な活動を検出することで、AWS環境のセキュリティを向上させたいと考えています。彼らは、AI/MLと脅威インテリジェンスを使用して潜在的な脅威を監視し特定するためにAmazon GuardDutyを検討しています。",
        "Question": "Amazon GuardDutyはどのようにセキュリティ脅威を検出し、発見された内容はどのように処理されますか？",
        "Options": {
            "1": "GuardDutyはDNS、VPCフロー、およびCloudTrailログを分析し、発見された内容を直接ルートユーザーに送信して手動レビューを行います。",
            "2": "GuardDutyはDNS、VPCフロー、およびCloudTrailログにAI/MLを使用し、CloudWatch Eventsを介して自動応答をトリガーできる発見を作成します。これには、SNS通知や修復のためのLambda呼び出しが含まれます。",
            "3": "GuardDutyは1つのアカウントのトラフィックのみを監視し、ユーザーがクロスアカウントの脅威について手動でログをレビューする必要があります。",
            "4": "GuardDutyは静的ルールを使用して活動を検出し、VPCフローログのネットワーク異常に対してのみ通知します。"
        },
        "Correct Answer": "GuardDutyはDNS、VPCフロー、およびCloudTrailログにAI/MLを使用し、CloudWatch Eventsを介して自動応答をトリガーできる発見を作成します。これには、SNS通知や修復のためのLambda呼び出しが含まれます。",
        "Explanation": "Amazon GuardDutyは、DNSログ、VPCフローログ、CloudTrailログなどのさまざまなデータソースを分析するために人工知能（AI）と機械学習（ML）を活用しています。この分析により、異常なパターンや潜在的なセキュリティ脅威を特定します。GuardDutyが脅威を検出すると、AWSサービス（CloudWatch Eventsなど）と統合できる発見を生成します。この統合により、Amazon SNSを介して通知を送信したり、修復アクションのためにAWS Lambda関数を呼び出したりする自動応答が可能になり、AWS環境のセキュリティ姿勢が強化されます。",
        "Other Options": [
            "GuardDutyはDNS、VPCフロー、およびCloudTrailログを分析しますが、発見された内容を直接ルートユーザーに送信して手動レビューを行うことはありません。代わりに、発見は自動的に生成され、他のAWSサービスと統合して自動応答を行うことができます。",
            "GuardDutyはAWS Organizationsを通じて複数のアカウントを監視でき、組織全体での集中型脅威検出を可能にします。これにより、ユーザーがクロスアカウントの脅威について手動でログをレビューする必要はありません。",
            "GuardDutyは静的ルールのみに依存せず、AIとMLを利用して広範な活動を検出します。VPCフローログのネットワーク異常だけでなく、さまざまな種類のログを分析して潜在的な脅威を包括的に特定します。"
        ]
    },
    {
        "Question Number": "46",
        "Situation": "金融サービス会社が顧客取引をより適切に処理するために、モノリシックアーキテクチャからマイクロサービスに移行しています。会社は、高可用性、スケーラビリティ、フォールトトレランスを確保するために、ステートレスなマイクロサービスを実装したいと考えています。",
        "Question": "会社は、レジリエントで疎結合のマイクロサービスを確保するためにどの設計アプローチを採用すべきですか？",
        "Options": {
            "1": "各マイクロサービスをステートレスに設計し、リクエスト間でセッション情報を保持せず、パフォーマンスと耐久性のためにAmazon ElastiCacheのような分散キャッシュに状態を保存します。",
            "2": "各マイクロサービスがサービス内でセッション状態を維持するように設計し、外部システムなしで他のサービスが状態に簡単にアクセスできるようにします。",
            "3": "すべてのマイクロサービスのセッションデータを保存するモノリシックデータベースを実装し、システムが中央でアクセスしてサービス間で状態を維持できるようにします。",
            "4": "各マイクロサービスのセッション状態を管理するために、Amazon RDSをマルチAZデプロイメントで使用し、データの整合性と可用性を確保します。"
        },
        "Correct Answer": "各マイクロサービスをステートレスに設計し、リクエスト間でセッション情報を保持せず、パフォーマンスと耐久性のためにAmazon ElastiCacheのような分散キャッシュに状態を保存します。",
        "Explanation": "各マイクロサービスをステートレスに設計することは、高可用性、スケーラビリティ、フォールトトレランスを達成するために重要です。ステートレスなマイクロサービスはセッション情報を保持しないため、容易に複製および水平スケーリングが可能です。Amazon ElastiCacheのような分散キャッシュに状態を保存することで、会社は特定の状態管理システムにサービスを結びつけることなく、データにアクセス可能で耐久性を持たせることができます。このアプローチは、サービス間の疎結合を促進し、共有状態に依存せずに独立して動作できるようにします。",
        "Other Options": [
            "各マイクロサービスがサービス内でセッション状態を維持するように設計することは、ステートレス性の原則に反します。このアプローチはサービス間の強い結合を引き起こし、独立してスケールおよび管理することが難しくなり、フォールトトレランスや回復においても課題を生じさせる可能性があります。",
            "すべてのセッションデータを保存するためにモノリシックデータベースを実装することは、状態管理を中央集権化し、マイクロサービスアーキテクチャの分散化の目標に反します。これにより、単一障害点が生じ、すべてのサービスがモノリシックデータベースの可用性に依存するため、スケーラビリティとレジリエンスが制限されます。",
            "セッション状態管理のためにAmazon RDSをマルチAZデプロイメントで使用することは、リレーショナルデータベースへの依存を引き起こし、ボトルネックやパフォーマンスの低下を招く可能性があります。データの整合性と可用性を提供しますが、マイクロサービスが従うべきステートレス設計原則には合致せず、サービス間の結合を増加させます。"
        ]
    },
    {
        "Question Number": "47",
        "Situation": "組織は、機密データを保護するために使用される暗号化キーが毎年自動的にローテーションされる必要があります。",
        "Question": "組織はこの要件を満たすためにどのAWS機能を使用できますか？",
        "Options": {
            "1": "Amazon S3でライフサイクルポリシーを設定する",
            "2": "AWS KMSで自動キー回転を有効にする",
            "3": "Amazon GuardDutyを使用してキーの使用状況を監視する",
            "4": "AWS Certificate Manager (ACM)を使用して転送中の暗号化を有効にする"
        },
        "Correct Answer": "AWS KMSで自動キー回転を有効にする",
        "Explanation": "AWS Key Management Service (KMS)は、暗号化キーを自動的にローテーションする機能を提供します。自動キー回転を有効にすることで、組織は機密データを暗号化するために使用されるキーが毎年手動介入なしにローテーションされることを確保できます。この機能は、暗号化キーを定期的に変更することでセキュリティのベストプラクティスを維持し、キーの侵害リスクを低減します。",
        "Other Options": [
            "Amazon S3でライフサイクルポリシーを設定することは、S3内のオブジェクトのストレージライフサイクルを管理することに関連しており、オブジェクトを異なるストレージクラスに移行したり、一定期間後に削除したりすることが含まれます。これは暗号化キーの自動ローテーションには関係ありません。",
            "Amazon GuardDutyを使用してキーの使用状況を監視することは、AWSアカウント内の悪意のある活動の脅威検出と監視に焦点を当てています。これにより、無許可のアクセスやキーの使用における異常を特定するのに役立ちますが、キーのローテーションのメカニズムを提供するものではありません。",
            "AWS Certificate Manager (ACM)を使用して転送中の暗号化を有効にすることは、ネットワーク上でデータを保護することに関係しています。これは転送中のデータを保護するために重要ですが、暗号化キーの自動ローテーションの要件には対応していません。"
        ]
    },
    {
        "Question Number": "48",
        "Situation": "ある会社が、us-east-1リージョンでウェブ層、アプリケーション層、データベース層を含む三層アーキテクチャのカスタムVPCを設計しています。各層は3つのアベイラビリティゾーン（AZ）で隔離され、パブリックおよびプライベートリソースの制御されたアクセスが必要です。会社はまた、VPC内での内部ホスト名解決のためにDNSサポートを有効にしたいと考えています。",
        "Question": "会社は、制御されたパブリックアクセスと内部DNS機能を確保しながら、これらの要件を満たすためにどの構成を実装すべきですか？",
        "Options": {
            "1": "VPCに/16 CIDRブロックを割り当て、各AZの各層にプライベートサブネットを使用し、プライベートサブネットからのインターネットアクセスのために各AZにNATゲートウェイを設定し、DNS機能のためにenableDnsHostnamesとenableDnsSupportを有効にします。",
            "2": "VPCに/24 CIDRブロックを使用し、ウェブ層のために各AZにパブリックサブネットを作成し、直接パブリックアクセスのためにインターネットゲートウェイを展開し、内部ホスト名解決を防ぐためにenableDnsSupportを無効にします。",
            "3": "VPCに/28 CIDRブロックを割り当て、すべての層に対してパブリックサブネットのみを設定し、インターネットアクセスのためにバスティオンホストを使用し、DNS機能をプライベートIPのみに制限するためにenableDnsHostnamesを無効にします。",
            "4": "VPCを/20 CIDRブロックで構成し、ウェブ層のために各AZにプライベートサブネットを設定し、アウトバウンドトラフィックのためにNATインスタンスを使用し、追加のセキュリティのためにenableDnsHostnamesを無効にします。"
        },
        "Correct Answer": "VPCに/16 CIDRブロックを割り当て、各AZの各層にプライベートサブネットを使用し、プライベートサブネットからのインターネットアクセスのために各AZにNATゲートウェイを設定し、DNS機能のためにenableDnsHostnamesとenableDnsSupportを有効にします。",
        "Explanation": "このオプションは、シナリオで示されたすべての要件を満たしています。/16 CIDRブロックを割り当てることで、会社は三層アーキテクチャに十分なIPアドレス空間を確保します。各AZの各層にプライベートサブネットを使用することで、必要な隔離とセキュリティが提供されます。NATゲートウェイは、プライベートサブネット内のインスタンスが更新や外部サービスのためにインターネットにアクセスできるようにし、同時にパブリックインターネットからはアクセスできないようにします。enableDnsHostnamesとenableDnsSupportの両方を有効にすることで、内部リソースがホスト名を解決でき、VPC内での通信が円滑になります。",
        "Other Options": [
            "VPCに/24 CIDRブロックを使用することは、複数のAZにまたがる三層アーキテクチャには不十分であり、利用可能なIPアドレスの数を制限します。ウェブ層のためにパブリックサブネットを作成することは、インターネットに直接露出させることになり、制御されたアクセスの要件に合致しません。enableDnsSupportを無効にすると、内部ホスト名解決が妨げられ、これは重要な要件です。",
            "VPCに/28 CIDRブロックを割り当てることは、3つのAZにわたる複数の層をサポートするには非常に小さく、IP枯渇を引き起こします。すべての層に対してパブリックサブネットを設定することは、隔離と制御されたアクセスの要件に反します。さらに、enableDnsHostnamesを無効にすると、DNS機能が制限され、内部ホスト名解決が妨げられます。",
            "VPCを/20 CIDRブロックで構成することは、/28よりも多くのIPアドレスを提供しますが、三層アーキテクチャには最適ではありません。ウェブ層のためにプライベートサブネットのみを設定することは、アプリケーション層とデータベース層の必要な隔離を提供しません。NATインスタンスを使用することは、パフォーマンスの問題や管理の負担を引き起こす可能性があります。enableDnsHostnamesを無効にすると、再びDNS機能が制限され、要件に対して受け入れられません。"
        ]
    },
    {
        "Question Number": "49",
        "Situation": "スタートアップは、予算超過を避けるために月々のAWS費用を厳密に監視し、支出が予測された限度を超えた場合にアラートを設定したいと考えています。さらに、スタートアップは、時間の経過に伴う支出パターンのトレンドを分析し、コスト削減の機会を特定し、AWSの使用を最適化したいと考えています。",
        "Question": "これらの要件を最も満たすAWSコスト管理ツールの組み合わせはどれですか？",
        "Options": {
            "1": "AWS Budgetsを使用して支出アラートを設定し、AWS Cost Explorerを使用して時間の経過に伴う支出パターンとトレンドを分析する",
            "2": "AWS Trusted Advisorを実装してコスト削減の推奨事項を特定し、詳細なコスト追跡のためにAWS Cost and Usage Reportを使用する",
            "3": "AWS Cost and Usage Reportを有効にして包括的な追跡を行い、追加のコスト管理インサイトのためにAWS Supportに加入する",
            "4": "AWS Cost Explorerを使用してコストトレンドを視覚化し、AWS Trusted Advisorを使用してコスト最適化に関する定期的な推奨事項を受け取る"
        },
        "Correct Answer": "AWS Budgetsを使用して支出アラートを設定し、AWS Cost Explorerを使用して時間の経過に伴う支出パターンとトレンドを分析する",
        "Explanation": "このオプションは、AWS Budgetsを使用して支出限度のアラートを設定することで、予算超過を防ぐのに役立ち、スタートアップの要件に直接対応しています。さらに、AWS Cost Explorerは、時間の経過に伴う支出パターンとトレンドを分析するための強力なツールを提供し、スタートアップがコスト削減の機会を特定し、AWSの使用を効果的に最適化できるようにします。",
        "Other Options": [
            "AWS Trusted Advisorを実装してコスト削減の推奨事項を得ることは有用ですが、支出アラートを設定する機能は提供されません。AWS Cost and Usage Reportは詳細ですが、トレンド分析よりも生データに重点を置いているため、この組み合わせはスタートアップのニーズにはあまり効果的ではありません。",
            "AWS Cost and Usage Reportを有効にすることはコストを包括的に追跡するのに有益ですが、AWS Supportに加入することは直接的にコスト管理のインサイトを提供しません。このオプションは、支出を監視するために重要なAWS Budgetsが提供するプロアクティブなアラート機能を欠いています。",
            "AWS Cost Explorerを使用してトレンドを視覚化することは良い選択ですが、コスト管理のための推奨事項を得るためにAWS Trusted Advisorのみに依存することは、支出限度の監視とアラートに関するスタートアップの要件を完全には満たしていません。"
        ]
    },
    {
        "Question Number": "50",
        "Situation": "ある企業がAWSでセキュアなVPCを設定しており、プライベートサブネット内のインスタンスに対してインターネットへのアウトバウンドアクセスを有効にする必要があります。彼らはNATインスタンスまたはNATゲートウェイのいずれかを使用することを検討しています。",
        "Question": "NATインスタンスとNATゲートウェイの主な違い、特にセキュリティ設定とメンテナンスに関して正しく説明しているのはどれですか？",
        "Options": {
            "1": "NATインスタンスはセキュリティグループの使用をサポートし、高可用性を持つのに対し、NATゲートウェイはセキュリティグループをサポートせず、トラフィックフィルタリングにはネットワークACLに依存します。",
            "2": "NATゲートウェイは高い可用性と帯域幅を提供し、NATインスタンスよりもメンテナンスが少なくて済みますが、トラフィックフィルタリングにはネットワークACLのみをサポートし、セキュリティグループはサポートしていません。",
            "3": "NATインスタンスは可用性ゾーン内での自動スケーリングと高可用性を提供し、生産ワークロードに最適です。",
            "4": "NATゲートウェイは、バスティオンホストとして機能するなどの多目的使用を可能にしますが、NATインスタンスではAWSの管理制限によりそれは不可能です。"
        },
        "Correct Answer": "NATゲートウェイは高い可用性、帯域幅を提供し、NATインスタンスよりもメンテナンスが少なくて済みますが、トラフィックフィルタリングにはネットワークACLのみをサポートし、セキュリティグループはサポートしていません。",
        "Explanation": "NATゲートウェイは、プライベートサブネット内のインスタンスに対してアウトバウンドインターネットアクセスを有効にするための管理された高可用性ソリューションを提供するように設計されています。トラフィックの帯域幅ニーズに応じて自動的にスケールし、生産ワークロードに適しています。さらに、NATゲートウェイはAWSによって管理されているため、最小限のメンテナンスが必要です。NATインスタンスは手動での設定、スケーリング、メンテナンスが必要です。NATゲートウェイはセキュリティグループをサポートしていませんが、ネットワークACLを使用して制御できます。これは、セキュリティグループをサポートするNATインスタンスとの重要な違いです。",
        "Other Options": [
            "NATインスタンスはセキュリティグループの使用をサポートし、高可用性を持つのに対し、NATゲートウェイはセキュリティグループをサポートせず、トラフィックフィルタリングにはネットワークACLに依存します。この記述は不正確です。NATインスタンスはセキュリティグループをサポートしますが、NATゲートウェイはセキュリティグループを全くサポートせず、トラフィックフィルタリングにはネットワークACLのみに依存します。さらに、NATゲートウェイは高可用性のために設計されています。",
            "NATインスタンスは可用性ゾーン内での自動スケーリングと高可用性を提供し、生産ワークロードに最適です。この記述は不正確です。NATインスタンスは自動スケーリングを提供せず、スケーリングには手動の介入が必要であり、可用性ゾーン全体に複数のインスタンスを構成しない限り、本質的に高可用性ではありません。",
            "NATゲートウェイは、バスティオンホストとして機能するなどの多目的使用を可能にしますが、NATインスタンスではAWSの管理制限によりそれは不可能です。この記述は不正確です。NATゲートウェイはバスティオンホストとして機能できず、NAT機能のために特に設計されています。バスティオンホストは通常、プライベートサブネット内のインスタンスへの安全なアクセスを許可するように構成されたEC2インスタンスです。"
        ]
    },
    {
        "Question Number": "51",
        "Situation": "小売会社ShopSmartは、Amazon S3バケットにPIIを含む顧客データを保存しています。データプライバシー規制に準拠するため、機密情報を自動的に特定し分類できるソリューションが必要です。さらに、彼らはビジネスに特有のユニークなデータパターンを検出するためのカスタムルールを作成するオプションを望んでいます。ShopSmartはこれらのニーズに対処するためにAmazon Macieを検討しています。",
        "Question": "Amazon Macieは、S3バケット内の機密情報のデータセキュリティとプライバシーをどのように確保し、データ識別子を作成するためのオプションは何ですか？",
        "Options": {
            "1": "Amazon Macieは事前定義されたデータ識別子のみを提供し、金融情報や医療記録など特定のデータタイプに限定され、他の機密データパターンのカスタマイズオプションはありません。",
            "2": "Amazon Macieは機械学習と管理されたデータ識別子を使用して、PIIや金融情報を含む機密データの自動発見と分類を行います。また、正規表現やキーワードの近接を使用してカスタムデータ識別子を作成することも可能で、独自の組織ニーズに基づいたより詳細なデータ識別が可能です。",
            "3": "Amazon Macieは主にネットワークトラフィックの異常パターンを監視し、データの移動に関するアラートを提供しますが、S3バケットに保存された機密情報を直接特定することはありません。",
            "4": "Amazon Macieはデータ発見と分類のためにAWS Security Hubのみに依存し、ユーザーは事前定義された基準に基づいてデータを検出し分類するためにカスタムEventBridgeルールを設定する必要があります。"
        },
        "Correct Answer": "Amazon Macieは機械学習と管理されたデータ識別子を使用して、PIIや金融情報を含む機密データの自動発見と分類を行います。また、正規表現やキーワードの近接を使用してカスタムデータ識別子を作成することも可能で、独自の組織ニーズに基づいたより詳細なデータ識別が可能です。",
        "Explanation": "Amazon Macieは、Amazon S3に保存された機密データを自動的に発見、分類、保護するために設計されています。機械学習アルゴリズムを利用して、個人識別情報（PII）や金融データを含む機密情報を特定し分類します。さらに、Macieはカスタムデータ識別子を作成する柔軟性を提供し、特定のビジネス要件に合わせて調整できます。これは、正規表現やキーワードの近接を使用して行われ、組織が自社の業務に関連するユニークなパターンを定義できるようにし、データセキュリティとコンプライアンスの取り組みを強化します。",
        "Other Options": [
            "Amazon Macieは機能を事前定義されたデータ識別子のみに制限しません。管理されたデータ識別子とカスタム識別子を作成する機能の両方を提供し、より広範な機密データ検出を可能にします。",
            "Amazon Macieは主にネットワークトラフィックの監視に焦点を当てているわけではありません。むしろ、その主な機能はS3バケット内の機密データを特定し分類することであり、データプライバシーとセキュリティのための重要なツールです。",
            "Amazon Macieはデータ発見と分類に関して独立して機能します。AWS Security Hubと統合してより広範なセキュリティ管理を行うことができますが、そのコア機能に関してはそれにのみ依存していません。"
        ]
    },
    {
        "Question Number": "52",
        "Situation": "オンラインゲーム会社は世界中にユーザーを持ち、エンドユーザーに近い場所にアプリケーションを展開することでレイテンシを最小限に抑えたいと考えています。さらに、異なる地域のユーザーがアプリケーションにアクセスする際の地域間データ転送料金を回避することでコストを最適化したいと考えています。",
        "Question": "これらの要件を満たすために最適なアプローチはどれですか？",
        "Options": {
            "1": "すべてのリソースを単一のAWSリージョンに展開し、CloudFrontを使用してキャッシュする",
            "2": "1つのAWSリージョン内の複数のアベイラビリティゾーンにリソースを展開する",
            "3": "ユーザーの所在地に基づいて複数のAWSリージョンにアプリケーションを展開する",
            "4": "単一のアベイラビリティゾーンを使用し、グローバルDNSルーティングに依存する"
        },
        "Correct Answer": "ユーザーの所在地に基づいて複数のAWSリージョンにアプリケーションを展開する",
        "Explanation": "複数のAWSリージョンにアプリケーションを展開することで、ゲーム会社はリソースをエンドユーザーに近い場所に配置でき、レイテンシを大幅に削減できます。さまざまなリージョンにインスタンスを持つことで、ユーザーは最寄りのサーバーに接続でき、データの移動にかかる時間を最小限に抑えることができます。さらに、このアプローチは地域間データ転送料金を回避するのにも役立ちます。ローカルリージョンからアプリケーションにアクセスするユーザーは、リージョン間のデータ転送に関連するコストを負担しません。",
        "Other Options": [
            "すべてのリソースを単一のAWSリージョンに展開し、CloudFrontを使用してキャッシュすることは、レイテンシの改善にある程度役立ちますが、異なる地域のユーザーがアプリケーションにアクセスする際の地域間データ転送料金の問題には対処していません。CloudFrontはコンテンツをキャッシュできますが、全世界のすべてのユーザーに対してレイテンシを完全に軽減することはできません。",
            "1つのAWSリージョン内の複数のアベイラビリティゾーンにリソースを展開することは、可用性とフォールトトレランスを向上させますが、そのリージョンから遠くにいるユーザーのレイテンシを大幅に削減することはできません。また、すべてのユーザーが同じリージョンにアクセスするため、地域間データ転送コストにも役立ちません。",
            "単一のアベイラビリティゾーンを使用し、グローバルDNSルーティングに依存することは、そのゾーンから遠くにいるユーザーのレイテンシを効果的に最小限に抑えることはできません。DNSルーティングはユーザーを最寄りのエンドポイントに誘導できますが、単一のアベイラビリティゾーンから地理的に遠くにいるユーザーの高レイテンシの問題を解決することはできず、地域間データ転送料金にも対処できません。"
        ]
    },
    {
        "Question Number": "53",
        "Situation": "データ分析会社はクライアントのために大規模な処理ジョブを実行していますが、需要は週の間で大きく変動します。会社は、低需要の期間中にコストを最小限に抑えながら、これらのワークロードを処理できるコスト効果の高いコンピューティングソリューションを求めています。",
        "Question": "このワークロードのコストを最適化するための最適なアプローチはどれですか？（2つ選択してください）",
        "Options": {
            "1": "オンデマンドEC2インスタンスを使用し、必要に応じて手動でインスタンスを起動する",
            "2": "固定数のEC2インスタンスに対してリザーブドインスタンスを使用する",
            "3": "処理ジョブのためにスポットインスタンスを使用したオートスケーリンググループを展開する",
            "4": "AWS Lambdaを使用してすべての処理ジョブをオンデマンドで実行する",
            "5": "予測可能なワークロードのコストを削減するためにEC2セービングプランを実装する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "処理ジョブのためにスポットインスタンスを使用したオートスケーリンググループを展開する",
            "AWS Lambdaを使用してすべての処理ジョブをオンデマンドで実行する"
        ],
        "Explanation": "処理ジョブのためにスポットインスタンスを使用したオートスケーリンググループを展開することは、変動するワークロードに対してコスト効果の高いソリューションです。スポットインスタンスは、オンデマンド価格に比べて最大90%の割引で利用可能で、開始および終了時間が柔軟なアプリケーションや中断に耐えられるアプリケーションに最適です。オートスケーリングは、会社が任意の時点で負荷を処理するために必要な容量を確保することを保証し、コストを最適化します。AWS Lambdaを使用してすべての処理ジョブをオンデマンドで実行することも良い選択肢です。これにより、会社はサーバーをプロビジョニングまたは管理することなくコードを実行でき、消費したコンピューティング時間に対してのみ支払うため、断続的なワークロードに対して非常にコスト効果が高くなります。",
        "Other Options": [
            "オンデマンドEC2インスタンスを使用し、必要に応じて手動でインスタンスを起動することは、変動するワークロードに対して最もコスト効果の高いソリューションではありません。柔軟性は提供しますが、スポットインスタンスやAWS Lambdaからのコスト削減を活用していません。",
            "固定数のEC2インスタンスに対してリザーブドインスタンスを使用することは、変動するワークロードには理想的ではありません。需要に応じてスケールアップまたはスケールダウンする柔軟性を提供しないためです。リザーブドインスタンスは、オンデマンド価格に比べて大幅な割引を提供しますが、1年または3年のコミットメントが必要であり、変動するワークロードには適していない可能性があります。",
            "予測可能なワークロードのコストを削減するためにEC2セービングプランを実装することは、このシナリオに最適な選択肢ではありません。セービングプランはAWSのコンピューティング使用量に対して割引を提供しますが、1年または3年の間に一定の使用量（$/時間で測定）に対するコミットメントが必要であり、変動するワークロードには適していない可能性があります。"
        ]
    },
    {
        "Question Number": "54",
        "Situation": "分析チームが使用するレポーティングアプリケーションは、高いボリュームの読み取りクエリを処理し、迅速かつ効率的にインサイトを生成する必要があります。データベースには書き込み操作の単一のソースがありますが、プライマリインスタンスが重いワークロードを処理している間でも、低レイテンシで高い読み取りトラフィックをサポートする必要があります。チームは、読み取り負荷をバランスさせ、分析クエリのためにデータベースへの中断のないアクセスを提供できるセットアップを求めています。",
        "Question": "この要件を最もよく達成するデータベースレプリケーション戦略はどれですか？",
        "Options": {
            "1": "プライマリデータベースのためにマルチAZデプロイメントを有効にし、可用性を向上させるためにスタンバイインスタンスへの自動フェイルオーバーを許可する",
            "2": "読み取りトラフィックをプライマリデータベースからオフロードするためにリードレプリカを使用し、ワークロードを分散させ、読み取りリクエストのレイテンシを削減する",
            "3": "高可用性をサポートし、異なるリージョン間で読み取りおよび書き込みトラフィックをバランスさせるためにマルチリージョンアクティブ-アクティブセットアップを展開する",
            "4": "高い読み取りトラフィックの期間中にデータの整合性を確保するためにデータベースを同期レプリケーションのみに設定する"
        },
        "Correct Answer": "読み取りトラフィックをプライマリデータベースからオフロードするためにリードレプリカを使用し、ワークロードを分散させ、読み取りリクエストのレイテンシを削減する",
        "Explanation": "リードレプリカを使用することは、このシナリオで高ボリュームの読み取りクエリを処理するための最も効果的な戦略です。リードレプリカは、プライマリデータベースが書き込み操作に集中できるようにし、読み取りリクエストを複数のレプリカに分散させます。このセットアップは、読み取り負荷をバランスさせるだけでなく、レイテンシを削減します。読み取りクエリは、読み取り操作に最適化されたレプリカによって処理されるためです。さらに、プライマリインスタンスが重い負荷の下にある場合でも、リードレプリカはデータへの中断のないアクセスを提供でき、分析クエリを迅速かつ効率的に実行できるようにします。",
        "Other Options": [
            "マルチAZデプロイメントを有効にすることは、主に可用性とフェイルオーバー機能を向上させますが、高い読み取りトラフィックを処理する必要には特に対処していません。フェイルオーバーのためのスタンバイインスタンスを提供しますが、読み取りワークロードを分散させることはできず、これは分析チームの要件にとって重要です。",
            "マルチリージョンアクティブ-アクティブセットアップを展開することは高可用性と負荷分散を提供できますが、より複雑であり、リージョン間のデータ同期によってレイテンシを引き起こす可能性があります。このオプションは、読み取りトラフィックを効率的に管理することに焦点を当てているため、与えられたシナリオには必要ありません。",
            "データベースを同期レプリケーションのみに設定することは、データの整合性を確保しますが、高い読み取りトラフィックの期間中にレイテンシを引き起こす可能性があります。同期レプリケーションは、プライマリが進行する前にすべてのレプリカがデータの受信を確認する必要があるため、読み取り操作が遅くなり、低レイテンシの読み取りアクセスの必要性に効果的に対処できません。"
        ]
    },
    {
        "Question Number": "55",
        "Situation": "スタートアップがユーザーデータをAmazon S3に保存しており、データライフサイクルポリシーを実装することでストレージコストを最適化したいと考えています。データは最初の30日間は頻繁にアクセスされ、その後はほとんどアクセスされませんが、コンプライアンスのために5年間保持する必要があります。",
        "Question": "最もコスト効果の高いデータライフサイクルポリシーはどれですか？",
        "Options": {
            "1": "データをS3 Standardに保存し、30日後にGlacierに移動する",
            "2": "データをライフサイクル全体でS3 Intelligent-Tieringに保存する",
            "3": "データを30日後にS3 Standard-IAに移動し、その後1年後にGlacier Deep Archiveに移動する",
            "4": "すべてのデータをS3 Standardに保存し、5年後に削除する"
        },
        "Correct Answer": "データを30日後にS3 Standard-IAに移動し、その後1年後にGlacier Deep Archiveに移動する",
        "Explanation": "このオプションは、データが頻繁にアクセスされる最初の30日間にS3 Standardを活用するため、アクティブデータに対して最適なパフォーマンスとコストを確保できるため、最もコスト効果が高いです。30日後、データをS3 Standard-IA（不頻繁アクセス）に移動することで、ほとんどアクセスされないデータのストレージコストを削減します。最後に、1年後にGlacier Deep Archiveに移行することで、長期保持のための最低ストレージコストを提供し、コンプライアンスのためにデータを5年間保持するという要件に合致します。この戦略は、データのライフサイクル全体にわたってコストとアクセスニーズのバランスを効果的に取ります。",
        "Other Options": [
            "データをS3 Standardに保存し、30日後にGlacierに移動する: このオプションは、データをS3 Standardに保持するため、最初の30日間に高いコストが発生します。Standard-IAよりも高価です。さらに、30日後にGlacierに移動することは最適ではないかもしれません。なぜなら、データは5年間保持する必要があり、Glacierは頻繁なアクセスには設計されていないからです。",
            "データをライフサイクル全体でS3 Intelligent-Tieringに保存する: S3 Intelligent-Tieringは、アクセスパターンの変化に基づいてデータを2つのアクセスティア間で自動的に移動しますが、この特定のユースケースにとって最もコスト効果の高いソリューションではないかもしれません。データが最初の30日間は頻繁にアクセスされ、その後はほとんどアクセスされないことを考えると、より特化したアプローチ（Standard-IAに移動するなど）が、Intelligent-Tieringの料金と比較してコストをより節約できる可能性があります。",
            "すべてのデータをS3 Standardに保存し、5年後に削除する: このオプションは、すべてのデータをS3 Standardに保持するため、最もコスト効果が低いです。これは、最も高価なストレージクラスです。さらに、最初の30日後にほとんどアクセスされないデータに対して、低コストのストレージオプションを活用していません。"
        ]
    },
    {
        "Question Number": "56",
        "Situation": "あるeコマース企業は、システム障害が発生した場合に取引データを保護したいと考えています。潜在的なデータ損失を制限するために、5分の厳格な復旧ポイント目標（RPO）を設定しており、これは障害が発生した場合に最大5分分のデータしか失うことができないことを意味します。彼らは、この最小限のRPOを達成するためにデータ複製を最新の状態に保つソリューションが必要です。",
        "Question": "次のアプローチのうち、どれがこのRPO要件を最もよく満たしますか？",
        "Options": {
            "1": "データベースの毎時スナップショットを取得して定期的なデータ復旧ポイントを提供し、最後の毎時バックアップまで復元できるようにする",
            "2": "二次データベースへの継続的なデータ複製を実装し、ほぼリアルタイムの更新を確保して潜在的なデータ損失を最小限に抑える",
            "3": "10分ごとにデータをAmazon S3にバックアップし、必要に応じて復元できる定期的な復旧ポイントを作成する",
            "4": "コスト効果の高い方法でデータの変更をキャプチャするために、毎週のフルバックアップと毎日の増分バックアップを使用する"
        },
        "Correct Answer": "二次データベースへの継続的なデータ複製を実装し、ほぼリアルタイムの更新を確保して潜在的なデータ損失を最小限に抑える",
        "Explanation": "継続的なデータ複製により、プライマリデータベースのリアルタイムまたはほぼリアルタイムの更新が二次データベースに行われます。このアプローチにより、プライマリデータベースで行われた変更が即座に二次データベースに反映され、潜在的なデータ損失を数秒または数分に最小限に抑えることができ、eコマース企業が設定した5分の厳格な復旧ポイント目標（RPO）に完全に合致します。この方法は、データ複製を最新の状態に保つ要件を満たす最も効果的な方法です。",
        "Other Options": [
            "データベースの毎時スナップショットを取得することは、RPO要件の5分を満たすことができません。なぜなら、最後のスナップショットが取得された直後に障害が発生した場合、最大59分のデータ損失が発生する可能性があるからです。",
            "10分ごとにデータをAmazon S3にバックアップすることは、5分のRPOを十分に満たすことができません。次のバックアップの直前に障害が発生した場合、最大9分のデータ損失が発生する可能性があります。",
            "毎週のフルバックアップと毎日の増分バックアップを使用することは、5分のRPOには適していません。この方法では、最後の増分バックアップが取得された時期によっては、最大24時間の重大なデータ損失が発生する可能性があります。"
        ]
    },
    {
        "Question Number": "57",
        "Situation": "大規模なeコマースプラットフォームは、在庫の更新、注文処理、顧客通知を管理するためにイベント駆動型アーキテクチャを実装する必要があります。プラットフォームは、システムが高可用性で、障害に対して弾力性があり、トラフィックに基づいて自動的にスケールできることを確保する必要があります。",
        "Question": "これらの目標を達成するために実装すべきアーキテクチャデザインはどれですか？（2つ選択してください。）",
        "Options": {
            "1": "サービスを分離し、非同期メッセージ処理を確保するためにAmazon SQSを使用し、複数のサブスクライバーにイベントをブロードキャストするためにAmazon SNSを使用します。イベントを処理し、自動的にスケールするためにAWS Lambdaを実装します。",
            "2": "イベントソースからのメッセージを処理するためにカスタムアプリケーションを実行するAmazon EC2インスタンスを使用し、負荷に基づいてトラフィックをルーティングするためにAmazon Route 53を設定します。",
            "3": "イベント処理を行うためにマルチアベイラビリティゾーン展開のAmazon RDSを使用し、スケーラビリティのためにメッセージをAmazon DynamoDBに保存します。",
            "4": "リアルタイムでイベントデータを処理するためにAmazon Kinesis Data Streamsを使用し、データをクエリするためにAmazon Elasticsearch Serviceと統合します。",
            "5": "イベント処理ワークフローをオーケストレーションするためにAWS Step Functionsを実装し、メッセージブローカーとしてAmazon MQを使用します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "サービスを分離し、非同期メッセージ処理を確保するためにAmazon SQSを使用し、複数のサブスクライバーにイベントをブロードキャストするためにAmazon SNSを使用します。イベントを処理し、自動的にスケールするためにAWS Lambdaを実装します。",
            "リアルタイムでイベントデータを処理するためにAmazon Kinesis Data Streamsを使用し、データをクエリするためにAmazon Elasticsearch Serviceと統合します。"
        ],
        "Explanation": "Amazon SQSとSNSは、サービスを分離し、複数のサブスクライバーにイベントをブロードキャストするために使用されます。これにより、高可用性と障害への弾力性が確保されます。AWS Lambdaはサーバーレスであり、ワークロードに基づいて自動的にスケールするため、イベント処理に適しています。一方、Amazon Kinesis Data Streamsはリアルタイムのイベントデータを処理するために設計されており、eコマースプラットフォームにとって重要です。Amazon Elasticsearch Serviceは、このデータの効率的なクエリを可能にします。",
        "Other Options": [
            "イベントソースからのメッセージを処理するためにカスタムアプリケーションを実行するAmazon EC2インスタンスを使用し、負荷に基づいてトラフィックをルーティングするためにAmazon Route 53を設定することは最良の選択肢ではありません。EC2インスタンスはアプリケーションを実行するために使用できますが、Route 53は負荷を分散するのに役立ちますが、このアプローチは本質的にイベント駆動型アーキテクチャ、高可用性、障害への弾力性、自動スケーリングを提供しません。",
            "イベント処理を行うためにマルチアベイラビリティゾーン展開のAmazon RDSを使用し、スケーラビリティのためにメッセージをAmazon DynamoDBに保存することは理想的ではありません。RDSとDynamoDBは堅牢なAWSサービスですが、イベント駆動型アーキテクチャには設計されていません。RDSはリレーショナルデータベースサービスであり、イベント処理サービスではなく、DynamoDBはスケーラブルですが、イベントメッセージングには設計されていません。",
            "AWS Step Functionsを使用してイベント処理ワークフローをオーケストレーションし、Amazon MQをメッセージブローカーとして使用することは最良の選択肢ではありません。Step Functionsはワークフローをオーケストレーションできますが、Amazon MQはメッセージをブローカーしますが、これらはこのシナリオに必要な高可用性、障害への弾力性、自動スケーリングを本質的に提供しません。"
        ]
    },
    {
        "Question Number": "58",
        "Situation": "ある企業がAmazon EC2上で高性能コンピューティングアプリケーションを展開し、インスタンス間で可能な限り低いネットワーク遅延と高いパケット毎秒のパフォーマンスを最適化したいと考えています。同時に、各インスタンスを異なるラックに隔離することで最大の可用性と耐障害性を必要とする別のアプリケーションもあります。",
        "Question": "このアプリケーションに対して、企業はどの配置グループタイプを使用すべきで、なぜですか？",
        "Options": {
            "1": "高性能アプリケーションにはCluster Placement Groupsを使用して低遅延と高スループットを実現し、高可用性とラック間の隔離を必要とするアプリケーションにはSpread Placement Groupsを使用します。",
            "2": "両方のアプリケーションにSpread Placement Groupsを使用して、耐障害性を確保し、複数のラックにインスタンスを隔離します。",
            "3": "高性能アプリケーションにはPartition Placement Groupsを使用して高スループットを提供し、隔離されたアプリケーションにはCluster Placement Groupsを使用して遅延を減少させます。",
            "4": "両方のアプリケーションにCluster Placement Groupsを使用して遅延を最小限に抑え、インスタンス間のパフォーマンスを向上させます。"
        },
        "Correct Answer": "高性能アプリケーションにはCluster Placement Groupsを使用して低遅延と高スループットを実現し、高可用性とラック間の隔離を必要とするアプリケーションにはSpread Placement Groupsを使用します。",
        "Explanation": "Cluster Placement Groupsは、インスタンスを単一のアベイラビリティゾーン内に近接して配置することで低遅延と高スループットを提供するように設計されています。これは、高速なインスタンス間通信を必要とする高性能コンピューティングアプリケーションに最適です。一方、Spread Placement Groupsはインスタンスを異なるラックに配置することで、同時障害のリスクを減少させ、可用性と耐障害性を向上させます。これにより、互いに隔離される必要があるアプリケーションに適しています。",
        "Other Options": [
            "両方のアプリケーションにSpread Placement Groupsを使用すると耐障害性と隔離が確保されますが、高性能アプリケーションの低遅延と高スループットを最適化することはできません。これは重要な要件です。",
            "高性能アプリケーションにPartition Placement Groupsを使用するのは誤りです。Partition Placement Groupsは高可用性と耐障害性を必要とするアプリケーション向けに設計されており、特に低遅延と高スループットのためではありません。さらに、隔離されたアプリケーションにCluster Placement Groupsを使用すると、ラック間で必要な耐障害性を提供できません。",
            "両方のアプリケーションにCluster Placement Groupsを使用すると、遅延とパフォーマンスを最適化できますが、高可用性を必要とするアプリケーションには必要な隔離と耐障害性を提供できません。すべてのインスタンスが同じラックに配置されるためです。"
        ]
    },
    {
        "Question Number": "59",
        "Situation": "ある企業が顧客にウェブインターフェースを通じてAPIを公開するアプリケーションを開発しています。企業は、APIが需要に基づいて自動的にスケールし、トラフィックの急増に対応し、効率的なAPI管理を提供できることを確保する必要があります。",
        "Question": "この目的を達成するために企業が使用すべきAWSサービスは何で、スケーラビリティと耐障害性を確保するために従うべき設計原則は何ですか？",
        "Options": {
            "1": "APIを作成および管理するためにAmazon API Gatewayを使用し、予測不可能なワークロードを処理するためにAWS Lambdaと組み合わせて無状態計算を行います。遅延を減少させ、パフォーマンスを向上させるためにキャッシング戦略を実装します。",
            "2": "APIをホストするためにAmazon EC2を使用し、Auto Scalingグループでトラフィックを管理し、データをAmazon RDSに保存して高可用性を確保します。",
            "3": "AWS Fargateを使用してAPIを実行するDockerコンテナを管理し、アプリケーションデータを保存するためにAmazon DynamoDBへの直接API呼び出しを実装します。",
            "4": "AWS Elastic Load Balancerを使用してAPIトラフィックをEC2インスタンスにルーティングし、APIデータをAmazon S3に保存して高いスケーラビリティを確保します。"
        },
        "Correct Answer": "APIを作成および管理するためにAmazon API Gatewayを使用し、予測不可能なワークロードを処理するためにAWS Lambdaと組み合わせて無状態計算を行います。遅延を減少させ、パフォーマンスを向上させるためにキャッシング戦略を実装します。",
        "Explanation": "Amazon API Gatewayは、スケールでAPIを作成、公開、管理するために特別に設計されています。トラフィックの急増を自動的に処理でき、キャッシング、スロットリング、モニタリングのための組み込み機能を提供します。AWS Lambdaと組み合わせることで、サーバーレスでコードを実行でき、サーバーのプロビジョニングなしで需要に基づいて自動的にスケールできます。この組み合わせは無状態計算をサポートし、予測不可能なワークロードを処理するのに理想的です。キャッシング戦略は、バックエンドサービスへの呼び出し回数を減少させることでパフォーマンスをさらに向上させ、応答時間を改善し、コストを削減します。",
        "Other Options": [
            "APIをホストするためにAmazon EC2を使用すると、インスタンスとスケーリング構成の手動管理が必要になり、アーキテクチャが複雑になり、サーバーレスソリューションほど効率的にトラフィックの急増に対応できない可能性があります。Auto Scalingグループは役立ちますが、サーバーレスアプローチに比べてオーバーヘッドが多くなります。",
            "AWS Fargateはコンテナを管理するための良いオプションですが、API GatewayとLambdaを使用するよりも複雑さが増します。DynamoDBへの直接API呼び出しは機能しますが、API GatewayのAPI管理機能がないため、必要なスケーラビリティとモニタリング機能が欠ける可能性があります。",
            "AWS Elastic Load BalancerはEC2インスタンスにトラフィックを分配できますが、この設定でもインスタンスを管理し、手動でスケーリングする必要があります。APIデータをAmazon S3に保存することは、動的なAPI応答には適しておらず、S3は主にオブジェクトストレージ用であり、データベースソリューションと同じレベルのパフォーマンスやクエリ機能を提供しません。"
        ]
    },
    {
        "Question Number": "60",
        "Situation": "ある企業がウェブアプリケーションで顧客トラフィックの増加を経験しており、負荷を処理するためにインフラストラクチャをスケールする必要があります。彼らは水平スケーリングと垂直スケーリングの両方のオプションを検討しています。",
        "Question": "水平スケーリングと垂直スケーリングの主な違いは何で、どちらがアプリケーションの中断を最小限に抑えるのにより適していますか？",
        "Options": {
            "1": "垂直スケーリングはインスタンスのサイズを増加させることを含み、再起動が必要で、一時的な中断を引き起こす可能性があります。一方、水平スケーリングは再起動の必要なくインスタンスを追加することを含み、中断を回避します。",
            "2": "水平スケーリングは同じインスタンスにリソースを追加し、再起動なしで容量を増加させるのに対し、垂直スケーリングはより多くのトラフィックを処理するために新しいインスタンスを追加します。",
            "3": "垂直スケーリングは各新しいインスタンスサイズに対してアプリケーションの修正を必要としますが、水平スケーリングはアプリケーションの修正を必要としません。",
            "4": "水平スケーリングには追加できるインスタンスの数に厳しい制限がありますが、垂直スケーリングは無制限の容量を提供します。"
        },
        "Correct Answer": "垂直スケーリングはインスタンスのサイズを増加させることを含み、再起動が必要で、一時的な中断を引き起こす可能性があります。一方、水平スケーリングは再起動の必要なくインスタンスを追加することを含み、中断を回避します。",
        "Explanation": "水平スケーリングと垂直スケーリングの主な違いは、リソースがどのように追加されて負荷の増加に対応するかにあります。垂直スケーリング（「スケールアップ」とも呼ばれる）は、既存のサーバーのリソース（CPU、RAM、ストレージなど）をアップグレードすることを含みます。このプロセスはしばしばサーバーの再起動を必要とし、アプリケーションの一時的なダウンタイムを引き起こす可能性があります。対照的に、水平スケーリング（「スケールアウト」とも呼ばれる）は、負荷を分散するためにより多くのインスタンスやサーバーを追加することを含みます。この方法では、アプリケーションが中断することなく実行を続けることができ、トラフィックの増加時に中断を最小限に抑えるのにより適しています。",
        "Other Options": [
            "このオプションは、水平スケーリングが同じインスタンスにリソースを追加すると誤って述べていますが、これは正確ではありません。水平スケーリングは、単一のインスタンスの容量を増加させるのではなく、より多くのインスタンスを追加します。",
            "このオプションは誤りで、垂直スケーリングが各新しいインスタンスサイズに対してアプリケーションの修正を必要とすると示唆しています。実際には、垂直スケーリングはアプリケーション自体の修正を必要としませんが、再起動が必要であり、これが中断を引き起こす可能性があります。",
            "このオプションは誤解を招くもので、水平スケーリングにはインスタンスの厳しい制限があると主張していますが、これは普遍的に真実ではありません。インフラストラクチャやクラウドプロバイダーの能力に基づく実際的な制限があるかもしれませんが、一般的に水平スケーリングは、単一のサーバーの最大容量によって制限される垂直スケーリングよりも柔軟です。"
        ]
    },
    {
        "Question Number": "61",
        "Situation": "2つのビジネスサイト間でIPSEC VPN接続を設定する際、セキュアな接続を確立するためのIKE（Internet Key Exchange）フェーズ1とフェーズ2の役割について正しく説明しているのはどれですか？",
        "Question": "IKEフェーズ1とフェーズ2に関して正しいのはどれですか？（2つ選んでください。）",
        "Options": {
            "1": "IKEフェーズ1は対称暗号を使用してセキュアなトンネルを確立し、IKEフェーズ2はトンネルを介した大量データ転送のために非対称暗号を使用します。",
            "2": "IKEフェーズ1は非対称暗号を使用して認証とセキュアな接続を確立し、対称鍵を設定し、IKEセキュリティアソシエーション（SA）を作成します。次に、IKEフェーズ2はこの鍵を使用して迅速で暗号化された大量データ転送を行い、IPSEC SAを作成します。",
            "3": "IKEフェーズ1は公開ネットワーク上で交換された対称鍵を使用して直接IPSEC SAを確立し、IKEフェーズ2は各セッションの再認証を管理します。",
            "4": "IKEフェーズ1とフェーズ2は、接続設定とデータ転送プロセス全体で非対称暗号を使用して最高レベルのセキュリティを確保します。",
            "5": "IKEフェーズ1はIPSECトンネルのパラメータを交渉し、IKEフェーズ2は送信されるデータの実際の暗号化を処理します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "IKEフェーズ1は非対称暗号を使用して認証とセキュアな接続を確立し、対称鍵を設定し、IKEセキュリティアソシエーション（SA）を作成します。次に、IKEフェーズ2はこの鍵を使用して迅速で暗号化された大量データ転送を行い、IPSEC SAを作成します。",
            "IKEフェーズ1はIPSECトンネルのパラメータを交渉し、IKEフェーズ2は送信されるデータの実際の暗号化を処理します。"
        ],
        "Explanation": "IKEフェーズ1はピアの認証、セキュアな接続の確立、およびデータ暗号化のための対称鍵の設定を担当します。これらのタスクには非対称暗号を使用してセキュリティを確保します。これが完了すると、IKEセキュリティアソシエーション（SA）を作成します。IKEフェーズ2は、フェーズ1で設定された対称鍵を使用して迅速で暗号化された大量データ転送を行います。実際のデータ転送に使用されるIPSEC SAを作成します。フェーズ1はIPSECトンネルのパラメータも交渉し、フェーズ2は送信されるデータの実際の暗号化を処理します。",
        "Other Options": [
            "IKEフェーズ1はセキュアな接続の確立と対称鍵の設定に非対称暗号を使用し、対称暗号は使用しません。IKEフェーズ2はデータ転送のためにフェーズ1からの対称鍵を使用し、非対称暗号は使用しません。",
            "IKEフェーズ1は直接IPSEC SAを確立せず、IKE SAを確立します。IPSEC SAはフェーズ2で確立されます。また、対称鍵は公開ネットワーク上で交換されず、フェーズ1で非対称暗号を使用して安全に設定されます。",
            "IKEフェーズ1はセキュアな接続の確立と対称鍵の設定に非対称暗号を使用しますが、フェーズ2はデータ転送のためにフェーズ1からの対称鍵を使用し、非対称暗号は使用しません。"
        ]
    },
    {
        "Question Number": "62",
        "Situation": "ある金融会社は、データの耐久性とアクセス可能性を確保するために、重要なトランザクションデータを高可用性かつ耐障害性のあるストレージソリューションに保存する必要があります。また、データの誤削除から保護し、災害が発生した場合に迅速に回復できるようにしたいと考えています。",
        "Question": "Amazon S3でこれらの要件を最もよく満たす構成はどれですか？（2つ選んでください。）",
        "Options": {
            "1": "Amazon S3 Standardストレージクラスを使用し、バージョニングを有効にし、クロスリージョンレプリケーションを行って誤削除から保護し、複数のリージョンでのデータの可用性を確保します。",
            "2": "低コストのストレージのためにAmazon S3 Glacierを使用し、オブジェクトロックを有効にして誤削除を防ぎつつ、データへの迅速なアクセスを維持します。",
            "3": "Amazon S3 Intelligent-Tieringにデータを保存してコストを削減し、AWS Backupを利用してリージョン間の災害復旧を行います。",
            "4": "Amazon S3 One Zone-Infrequent Accessを使用してデータを単一のアベイラビリティゾーンに保存し、バージョニングを有効にしてデータ損失から保護します。",
            "5": "Amazon S3バケットでマルチファクター認証（MFA）削除を有効にして、誤削除に対する追加の保護層を提供します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3 Standardストレージクラスを使用し、バージョニングを有効にし、クロスリージョンレプリケーションを行って誤削除から保護し、複数のリージョンでのデータの可用性を確保します。",
            "Amazon S3バケットでマルチファクター認証（MFA）削除を有効にして、誤削除に対する追加の保護層を提供します。"
        ],
        "Explanation": "Amazon S3 Standardストレージクラスは、頻繁にアクセスされるデータのために高い耐久性、可用性、およびパフォーマンスを提供します。バージョニングが有効になっていると、バケット内のオブジェクトのすべてのバージョン（すべての書き込みと削除を含む）を保持します。クロスリージョンレプリケーションは、異なるリージョンのバケット間でオブジェクトの自動的かつ非同期的なコピーを可能にし、コンプライアンス要件を満たし、レイテンシを最小限に抑えるのに役立ちます。マルチファクター認証（MFA）削除は、オブジェクトバージョンを削除したり、バケットのバージョニングを一時停止したりするためにMFAを要求することで、追加のセキュリティ層を提供します。",
        "Other Options": [
            "Amazon S3 Glacierは、データアーカイブと長期バックアップのための安全で耐久性があり、低コストのストレージクラスですが、データへの迅速なアクセスは提供しません。取得時間は数分から数時間かかることがあります。",
            "Amazon S3 Intelligent-Tieringは、パフォーマンスに影響を与えず、運用上のオーバーヘッドなしに、データを最もコスト効果の高いアクセスティアに自動的に移動させるように設計されています。AWS Backupは災害復旧に使用できますが、このオプションは誤削除からの保護を提供しません。",
            "Amazon S3 One Zone-Infrequent Accessは、アクセス頻度の低いデータのための低コストのオプションですが、単一のアベイラビリティゾーンにデータを保存するため、耐障害性が低く、高可用性の要件を満たしません。"
        ]
    },
    {
        "Question Number": "63",
        "Situation": "ある金融サービス会社がオンプレミスのアプリケーションをAWSに移行しています。このアプリケーションは、ウェブ層、アプリケーション層、およびデータベース層で構成されています。会社はセキュリティとコンプライアンスの目的で層間の厳格な分離を要求しています。また、将来の成長に対応するためにIPアドレスの最適化も必要です。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのようなネットワークアーキテクチャを設計すべきですか？（2つ選んでください。）",
        "Options": {
            "1": "すべての層を単一のパブリックサブネットにデプロイし、セキュリティグループでアクセスを制御します。",
            "2": "すべての層に対して単一のプライベートサブネットを使用し、ネットワークACLで分離します。",
            "3": "複数のアベイラビリティゾーンにわたって各層のために別々のプライベートサブネットを作成し、将来の拡張を可能にするCIDRブロックを持つVPCを使用します。",
            "4": "ウェブ層をパブリックサブネットに配置し、アプリケーション層とデータベース層の両方を単一のプライベートサブネットに配置し、IP範囲が重複するようにします。",
            "5": "VPC内の各層に対して複数のプライベートサブネットを実装し、層間のトラフィックを分離するためにVPCピアリングを使用します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "複数のアベイラビリティゾーンにわたって各層のために別々のプライベートサブネットを作成し、将来の拡張を可能にするCIDRブロックを持つVPCを使用します。",
            "VPC内の各層に対して複数のプライベートサブネットを実装し、層間のトラフィックを分離するためにVPCピアリングを使用します。"
        ],
        "Explanation": "複数のアベイラビリティゾーンにわたって各層のために別々のプライベートサブネットを作成することで、層間の厳格な分離が可能になり、これは会社の要件です。将来の拡張を可能にするCIDRブロックを持つVPCを使用することで、将来の成長に対応するためのIPアドレスの最適化が図れます。VPC内の各層に対して複数のプライベートサブネットを実装し、層間のトラフィックを分離するためにVPCピアリングを使用することも、必要な分離とセキュリティを提供します。",
        "Other Options": [
            "すべての層を単一のパブリックサブネットにデプロイし、セキュリティグループでアクセスを制御することは、層間の必要な分離を提供せず、アプリケーションを潜在的なセキュリティリスクにさらすため、良いプラクティスではありません。",
            "すべての層に対して単一のプライベートサブネットを使用し、ネットワークACLで分離することは、すべての層が同じサブネットにあるため、必要な分離を提供しません。",
            "ウェブ層をパブリックサブネットに配置し、アプリケーション層とデータベース層の両方を単一のプライベートサブネットに配置し、IP範囲が重複するようにすることは、層間の必要な分離を提供せず、重複するIP範囲によるIPの競合を引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "64",
        "Situation": "ある企業がデータベースにAmazon RDSを使用しており、コンプライアンスの目的でデータ暗号化が必要です。この企業は、データが静止時と転送時の両方で暗号化され、暗号化キーが安全に管理されることを確保したいと考えています。さらに、データベースエンジンとしてOracleを使用しています。",
        "Question": "これらのセキュリティ要件を最も満たすアプローチはどれですか？（2つ選択してください。）",
        "Options": {
            "1": "RDSの組み込みSSL/TLSを使用して転送中の暗号化を行い、Oracleデータベースエンジン内で静止時の暗号化のためにTransparent Data Encryption (TDE)を有効にします。",
            "2": "Amazon RDSが静止時の暗号化のためにKMS管理キーを使用できるようにし、転送中の暗号化を処理するためにSSL/TLSを設定します。",
            "3": "CloudHSMをAmazon RDSと統合してOracleの暗号化キーを管理し、AWSがキーにアクセスできないようにし、転送中の暗号化のためにSSL/TLSを有効にします。",
            "4": "RDSのデフォルトの暗号化設定を使用し、転送中の暗号化のための追加設定なしで静止時のデータにEBSボリューム暗号化を依存します。",
            "5": "アプリケーションレベルの暗号化を実装してデータをRDSに送信する前に暗号化を行い、転送中の暗号化のためにVPN接続を使用します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "RDSの組み込みSSL/TLSを使用して転送中の暗号化を行い、Oracleデータベースエンジン内で静止時の暗号化のためにTransparent Data Encryption (TDE)を有効にします。",
            "Amazon RDSが静止時の暗号化のためにKMS管理キーを使用できるようにし、転送中の暗号化を処理するためにSSL/TLSを設定します。"
        ],
        "Explanation": "最初の正しい答えは、RDSの組み込みSSL/TLSを使用して転送中の暗号化を行い、Oracleデータベースエンジン内で静止時の暗号化のためにTransparent Data Encryption (TDE)を有効にすることです。SSL/TLSはネットワーク上でのデータの安全な送信を確保するプロトコルであり、TDEは静止データの暗号化を提供するOracleの機能です。2つ目の正しい答えは、Amazon RDSが静止時の暗号化のためにKMS管理キーを使用できるようにし、転送中の暗号化を処理するためにSSL/TLSを設定することです。Amazon Key Management Service (KMS)は、データを暗号化するために使用される暗号化キーを作成および管理するのを容易にするマネージドサービスです。",
        "Other Options": [
            "CloudHSMをAmazon RDSと統合してOracleの暗号化キーを管理し、転送中の暗号化のためにSSL/TLSを有効にする必要はありません。AWS KMSがRDSのキー管理を処理できるため、よりシンプルでコスト効果が高いです。",
            "RDSのデフォルトの暗号化設定を使用し、転送中の暗号化のための追加設定なしで静止時のデータにEBSボリューム暗号化を依存することは不十分です。なぜなら、転送中の暗号化を確保しないからです。",
            "アプリケーションレベルの暗号化を実装してデータをRDSに送信する前に暗号化を行い、転送中の暗号化のためにVPN接続を使用することは最良のアプローチではありません。なぜなら、不要な複雑さとオーバーヘッドを追加するからです。静止時と転送中の暗号化には、組み込みのAWSサービスを使用する方が効率的です。"
        ]
    },
    {
        "Question Number": "65",
        "Situation": "ある映像制作会社は、初期制作後にほとんどアクセスされない数千のビデオファイルを保存しています。彼らは、これらのファイルをアーカイブできるコスト効果の高いストレージソリューションを求めており、必要なときに数分以内にそれらを取得できることを望んでいます。",
        "Question": "これらの要件を最も満たすAWSストレージサービスはどれですか？（2つ選択してください。）",
        "Options": {
            "1": "Amazon EFS",
            "2": "Amazon S3 Glacier Instant Retrieval",
            "3": "Amazon FSx for Windows File Server",
            "4": "Amazon EBS Provisioned IOPS",
            "5": "Amazon S3 Intelligent-Tiering"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3 Glacier Instant Retrieval",
            "Amazon S3 Intelligent-Tiering"
        ],
        "Explanation": "Amazon S3 Glacier Instant Retrievalは、データアーカイブのためのコスト効果の高いストレージソリューションです。これは、アクセス頻度が低いデータの長期保存のために設計されており、必要なときには数分以内に取得できます。これにより、映像制作会社にとって適切な選択となります。Amazon S3 Intelligent-Tieringも適切な選択であり、データを最もコスト効果の高いアクセスティアに自動的に移動させ、パフォーマンスへの影響や運用オーバーヘッドなしで行います。これは、アクセスパターンが不明または変化するデータに最適であり、ほとんどアクセスされないビデオファイルの保存に適しています。",
        "Other Options": [
            "Amazon EFS（Elastic File System）は、Amazon EC2で使用するためのファイルストレージサービスです。技術的にはビデオファイルの保存に使用できますが、ほとんどアクセスされないデータに対して最もコスト効果の高いソリューションではありません。",
            "Amazon FSx for Windows File Serverは、完全に管理されたネイティブのMicrosoft Windowsファイルシステムを提供します。これは、ほとんどアクセスされないビデオファイルの保存に対して最もコスト効果の高いソリューションではなく、Windowsファイルシステムを必要とするエンタープライズワークロードにより適しています。",
            "Amazon EBS（Elastic Block Store）Provisioned IOPSは、99.9%の時間でプロビジョニングされたIOPSパフォーマンスの10%以内で提供されるように設計されたストレージの一種です。これは、ほとんどアクセスされないデータのコスト効果の高い長期保存よりも、高パフォーマンスを必要とするワークロードにより適しています。"
        ]
    }
]