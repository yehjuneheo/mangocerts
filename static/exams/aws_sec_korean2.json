[
    {
        "Question Number": "1",
        "Situation": "한 금융 서비스 회사가 개발, 테스트 및 운영 작업을 분리하기 위해 다중 계정 AWS 환경을 구현했습니다. 최근 보안 사건을 고려하여, 회사는 사건 대응 능력을 강화하고자 합니다. 보안 팀은 모든 계정에서 잠재적인 보안 위협을 신속하게 식별, 조사 및 대응할 수 있는 솔루션이 필요합니다.",
        "Question": "다음 중 조직에 가장 효과적인 사건 대응 전략을 제공하는 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail을 구현하여 API 호출을 기록하고 Amazon CloudWatch를 사용하여 모든 계정에서 의심스러운 활동을 모니터링합니다.",
            "2": "AWS Systems Manager를 배포하여 모든 계정에서 패치 관리 및 준수 검사를 자동화합니다.",
            "3": "AWS GuardDuty를 활용하여 계정 활동을 분석하고 보안 결과를 제공하며, AWS Security Hub와 통합하여 중앙 집중식 뷰를 제공합니다.",
            "4": "AWS Config를 설정하여 구성 변경 사항을 추적하고 AWS Lambda 함수를 사용하여 무단 변경 사항을 자동으로 수정합니다."
        },
        "Correct Answer": "AWS GuardDuty를 활용하여 계정 활동을 분석하고 보안 결과를 제공하며, AWS Security Hub와 통합하여 중앙 집중식 뷰를 제공합니다.",
        "Explanation": "AWS GuardDuty와 AWS Security Hub를 함께 활용하면 위협 탐지 및 사건 대응을 위한 포괄적인 솔루션을 제공합니다. GuardDuty는 악의적인 활동과 무단 행동을 지속적으로 모니터링하고, Security Hub는 결과를 집계하여 사건 관리에 대한 중앙 집중식 대시보드를 제공하여 조직의 전반적인 보안 태세를 강화합니다.",
        "Other Options": [
            "AWS CloudTrail과 CloudWatch를 구현하는 것은 API 호출을 모니터링하는 데 필수적이지만, GuardDuty와 Security Hub가 제공하는 자동화된 위협 탐지 및 중앙 관리 기능이 부족합니다.",
            "AWS Config는 구성 변경 사항을 추적하는 데 도움이 되지만, 위협 탐지에 특별히 초점을 맞추지 않으며 GuardDuty처럼 보안 사건에 대한 적시 경고를 제공하지 않을 수 있습니다.",
            "패치 관리 및 준수를 위해 AWS Systems Manager를 배포하는 것은 보안 위생을 유지하는 데 중요하지만, 사건 탐지 및 대응 능력을 직접적으로 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 회사가 AWS에 호스팅된 웹 애플리케이션을 위한 안전한 통신을 구현하고 있습니다. 그들은 전송 중인 데이터가 최신 보안 표준을 사용하여 전송 계층 보안(TLS)으로 암호화되도록 하기를 원합니다. 보안 팀은 다양한 클라이언트 장치와의 호환성을 고려하면서 로드 밸런서의 TLS 설정을 구성하라는 요청을 받았습니다.",
        "Question": "보안 팀이 AWS 로드 밸런서에서 TLS의 최적 보안 및 호환성을 보장하기 위해 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "성능 향상을 위해 TLS 연결에 대한 HTTP/2 프로토콜 지원을 활성화합니다.",
            "2": "로드 밸런서를 TLS 1.2만 사용하도록 구성하고 이전 버전을 비활성화합니다.",
            "3": "비용 절감을 위해 TLS에 대해 자체 서명된 인증서를 사용합니다.",
            "4": "구형 클라이언트와의 호환성을 보장하기 위해 TLS 1.1과 TLS 1.2를 모두 허용합니다."
        },
        "Correct Answer": "구형 클라이언트와의 호환성을 보장하기 위해 TLS 1.1과 TLS 1.2를 모두 허용합니다.",
        "Explanation": "TLS 1.1과 TLS 1.2를 모두 허용하면 로드 밸런서가 최신 TLS 버전을 지원하지 않는 클라이언트를 포함하여 더 넓은 범위의 클라이언트와 안전하게 통신할 수 있습니다. 이 구성은 보안과 호환성 간의 균형을 이룹니다.",
        "Other Options": [
            "로드 밸런서를 TLS 1.2만 사용하도록 구성하고 이전 버전을 비활성화하면 보안이 향상될 수 있지만, TLS 1.2를 지원하지 않는 클라이언트를 제외할 수 있어 일부 사용자에게 접근성 문제를 초래할 수 있습니다.",
            "TLS에 대해 자체 서명된 인증서를 사용하는 것은 신뢰 문제로 인해 일반적으로 프로덕션 환경에서는 권장되지 않으며, 클라이언트에서 보안 경고를 초래할 수 있고 신뢰할 수 있는 인증 기관의 인증서와 동일한 수준의 보증을 제공하지 않습니다.",
            "TLS 연결에 대한 HTTP/2 프로토콜 지원을 활성화하면 성능이 향상될 수 있지만, TLS 버전 자체와 관련된 보안 및 호환성 문제를 직접적으로 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 회사가 다양한 애플리케이션을 위해 서로 다른 지역에서 여러 VPC를 운영하고 있습니다. 그들은 이러한 VPC 간의 안전하고 효율적인 통신을 가능하게 하면서 트래픽이 공용 인터넷을 통과하지 않도록 하는 솔루션이 필요합니다. 이 솔루션은 네트워크 성능을 최적화하고 관리의 간소화를 도와야 합니다.",
        "Question": "이러한 요구 사항을 가장 잘 충족하는 AWS 서비스의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Transit Gateway",
            "2": "AWS Global Accelerator",
            "3": "AWS Direct Connect",
            "4": "VPC Endpoints",
            "5": "VPC Peering"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Transit Gateway",
            "VPC Peering"
        ],
        "Explanation": "AWS Transit Gateway는 VPC 간 통신을 중앙 집중식으로 관리할 수 있게 해주며, 여러 VPC가 단일 게이트웨이에 연결될 수 있도록 합니다. VPC Peering은 두 VPC 간의 네트워킹 연결로, 이들 간의 트래픽을 비공식적으로 라우팅할 수 있게 해줍니다. 두 솔루션 모두 트래픽이 AWS 네트워크 내에 유지되도록 하여 보안과 성능을 향상시킵니다.",
        "Other Options": [
            "AWS Direct Connect는 주로 귀하의 시설에서 AWS로의 전용 네트워크 연결을 설정하는 데 사용되며, VPC 간 연결을 직접적으로 촉진하지 않습니다.",
            "AWS Global Accelerator는 애플리케이션의 가용성과 성능을 향상시키지만, 직접적인 VPC 간 통신 기능을 제공하지 않습니다.",
            "VPC Endpoints는 귀하의 VPC에서 AWS 서비스로의 비공식 연결을 가능하게 하지만, 여러 VPC 간의 통신을 촉진하지는 않습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 회사가 최근에 애플리케이션을 AWS로 마이그레이션하고 비즈니스 연속성과 사고 대응을 보장하는 데 집중하고 있습니다. 그들은 사고 대응 절차를 검토하고 경영진이 사고에 대해 적시에 정보를 받을 수 있도록 해야 합니다. 또한, 회사는 공용 API를 보호하고 모든 네트워크 트래픽이 암호화되도록 하기를 원합니다.",
        "Question": "회사가 사고 대응을 효과적으로 관리하고 네트워크 아키텍처를 보호하기 위해 어떤 단계를 취해야 합니까?",
        "Options": {
            "1": "애플리케이션 성능을 모니터링하고 고객 데이터에 영향을 미치는 주요 사고가 발생할 경우에만 경영진에게 알리는 전담 보안 팀을 구성합니다.",
            "2": "모든 애플리케이션의 로그를 수집하기 위해 중앙 집중식 로깅 솔루션을 구현하고, 사고를 경영진 팀에 이메일 알림으로 직접 보고합니다.",
            "3": "Amazon CloudTrail을 활용하여 AWS 리소스에 대한 모든 API 호출을 기록하고, 공용 API 접근을 특정 IP 범위로 제한하며 민감한 데이터에 대해 암호화를 적용합니다.",
            "4": "회사를 위한 정기적인 사고 대응 훈련을 실시하고, AWS WAF를 사용하여 API 접근 지점을 보호하며 전송 중인 데이터에 대해 TLS 암호화를 적용합니다."
        },
        "Correct Answer": "회사를 위한 정기적인 사고 대응 훈련을 실시하고, AWS WAF를 사용하여 API 접근 지점을 보호하며 전송 중인 데이터에 대해 TLS 암호화를 적용합니다.",
        "Explanation": "정기적인 사고 대응 훈련은 모든 직원이 사고에 대비할 수 있도록 도와주며, AWS WAF로 API 접근 지점을 보호하고 TLS를 사용하여 암호화함으로써 전송 중인 민감한 데이터를 보호하여 네트워크 보안 및 사고 관리의 모범 사례에 부합합니다.",
        "Other Options": [
            "중앙 집중식 로깅과 이메일 알림은 유용할 수 있지만, 효과적인 사고 대응 및 네트워크 아키텍처 보호를 위한 선제적 조치를 포함하지 않습니다.",
            "전담 보안 팀을 구성하는 것은 도움이 될 수 있지만, 회사 전체의 준비 상태를 보장하지 않으며 주요 사고만 보고될 경우 대응이 지연될 수 있습니다.",
            "Amazon CloudTrail을 활용하여 로그를 기록하는 것은 중요하지만, 특정 IP 범위로 접근을 제한하는 것은 공용 API를 보호하기에 충분하지 않으며, 정기적인 사고 대응 훈련의 필요성을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 회사가 AWS에서 웹 애플리케이션을 배포하고 있으며, DDoS 공격 및 OWASP Top 10에 명시된 일반적인 취약점과 같은 잠재적 위협에 대해 우려하고 있습니다. 보안 팀은 이러한 위험을 효과적으로 완화하면서 사용자에게 최소한의 지연을 보장할 수 있는 엣지 서비스를 선택해야 합니다.",
        "Question": "보안 팀이 DDoS 공격과 OWASP Top 10에 나열된 취약점으로부터 웹 애플리케이션을 가장 잘 보호하기 위해 어떤 AWS 서비스를 구현해야 합니까?",
        "Options": {
            "1": "트래픽 분산을 위한 AWS Elastic Load Balancing과 민감한 정보를 저장하기 위한 AWS Secrets Manager.",
            "2": "DDoS 보호를 제공하는 AWS Shield Advanced와 일반 웹 익스플로잇을 차단하는 AWS WAF.",
            "3": "전용 네트워크 연결을 설정하기 위한 AWS Direct Connect와 DNS 라우팅을 위한 Amazon Route 53.",
            "4": "콘텐츠를 캐시하기 위한 Amazon CloudFront와 보안 표준 준수를 모니터링하기 위한 AWS Config."
        },
        "Correct Answer": "DDoS 보호를 제공하는 AWS Shield Advanced와 일반 웹 익스플로잇을 차단하는 AWS WAF.",
        "Explanation": "AWS Shield Advanced를 구현하면 향상된 DDoS 보호를 제공하며, AWS WAF는 일반 웹 익스플로잇을 필터링하고 차단하도록 구성할 수 있어 DDoS 위협과 OWASP Top 10의 취약점을 효과적으로 해결합니다.",
        "Other Options": [
            "Amazon CloudFront를 사용하면 콘텐츠를 캐시하여 성능을 개선할 수 있지만, DDoS 보호를 본질적으로 제공하지 않으며 AWS WAF와 같은 추가 서비스 없이는 OWASP 취약점을 해결하지 않습니다.",
            "AWS Direct Connect는 DDoS 공격이나 OWASP 취약점에 대한 보안 기능을 제공하지 않으며, Amazon Route 53은 이러한 위험을 직접 완화하지 않는 주로 DNS 서비스입니다.",
            "AWS Elastic Load Balancing은 들어오는 애플리케이션 트래픽을 분산하는 데 도움이 되지만, AWS WAF 및 Shield와 같은 서비스를 통합하지 않으면 DDoS 공격이나 웹 취약점에 대한 특정 보호를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "당신은 AWS에 호스팅된 다계층 애플리케이션을 설계하고 있으며, 애플리케이션 계층은 EC2 인스턴스에서 실행되고 데이터베이스 계층은 Amazon RDS를 사용하고 있습니다. 아키텍처가 안전하고 리소스가 적절히 격리되도록 하며 AWS 보안 모범 사례를 준수해야 합니다. 다음 중 어떤 구성이 이 목표를 가장 잘 달성할 수 있습니까?",
        "Question": "다음 중 어떤 구성이 AWS에서 애플리케이션 계층과 데이터베이스 계층이 격리되면서 보안을 유지하도록 보장합니까?",
        "Options": {
            "1": "애플리케이션 계층에 AWS Lambda를 사용하고 RDS 인스턴스를 공용 서브넷에 배포하여 두 서비스 모두 인터넷에서 직접 접근할 수 있도록 합니다.",
            "2": "애플리케이션 계층 EC2 인스턴스와 RDS 인스턴스를 모두 공용 서브넷에 배포하여 두 계층 모두에 대해 제한 없는 인터넷 접근을 허용합니다.",
            "3": "애플리케이션 계층 EC2 인스턴스를 사설 서브넷에 배포하고 RDS 인스턴스를 공용 서브넷에 배포하여 인터넷에서 RDS에 직접 접근할 수 있도록 합니다.",
            "4": "애플리케이션 계층 EC2 인스턴스를 공용 서브넷에 배포하고 RDS 인스턴스를 사설 서브넷에 배포하여 보안 그룹을 사용하여 두 계층 간의 트래픽을 제어합니다."
        },
        "Correct Answer": "애플리케이션 계층 EC2 인스턴스를 공용 서브넷에 배포하고 RDS 인스턴스를 사설 서브넷에 배포하여 보안 그룹을 사용하여 두 계층 간의 트래픽을 제어합니다.",
        "Explanation": "이 구성은 애플리케이션 계층이 인터넷에서 접근 가능하도록 하면서 데이터베이스 계층은 사설 서브넷에 격리되어 인터넷에서의 직접 접근을 방지합니다. 보안 그룹은 서로 통신할 수 있는 리소스에 대한 추가적인 제어 계층을 제공합니다.",
        "Other Options": [
            "이 옵션은 데이터베이스 계층을 인터넷에 직접 노출시키며, 이는 보안 위험입니다. 모범 사례에 따르면 데이터베이스는 노출을 제한하기 위해 사설 서브넷에 있어야 합니다.",
            "AWS Lambda를 사용하는 것은 애플리케이션과 데이터베이스 계층 간의 격리를 본질적으로 제공하지 않습니다. 또한 RDS를 공용 서브넷에 배치하면 인터넷에 노출되어 안전하지 않습니다.",
            "이 옵션은 RDS 인스턴스를 공용 서브넷에 배치하여 인터넷에서 직접 접근할 수 있도록 하며, 이는 데이터베이스 보안에 대한 모범 사례에 반합니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 회사가 AWS Control Tower를 사용하여 AWS 환경에 거버넌스 프레임워크를 구현하려고 합니다. 보안 팀은 Control Tower를 배포하기 전에 특정 AWS 서비스가 적절하게 관리되고 잠재적으로 비활성화되어야 성공적인 설정을 보장할 수 있도록 해야 합니다.",
        "Question": "AWS Control Tower를 성공적으로 배포하기 위해 비활성화해야 하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Organizations",
            "2": "AWS Config",
            "3": "AWS Service Catalog",
            "4": "AWS Single Sign-On"
        },
        "Correct Answer": "AWS Organizations",
        "Explanation": "AWS Control Tower는 AWS Organizations가 설정되어 있어야 하며, 이를 사용하여 계정 및 조직 단위를 생성하고 관리합니다. 그러나 Control Tower 외부에 이미 구성된 조직 단위나 계정이 있는 경우, Control Tower의 성공적인 배포를 위해 이들을 비활성화하거나 조정해야 할 수 있습니다.",
        "Other Options": [
            "AWS Service Catalog는 Control Tower와 함께 사용할 수 있으며 비활성화할 필요가 없습니다.",
            "AWS Config는 Control Tower와 호환되며 거버넌스 기능을 향상시키므로 비활성화할 필요가 없습니다.",
            "AWS Single Sign-On은 Control Tower와 통합하여 사용자 접근 및 권한을 관리할 수 있는 서비스이므로 비활성화할 필요가 없습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "한 회사가 Amazon CloudFront를 사용하여 콘텐츠를 배포하는 보안 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 보안 HTTPS 연결을 위해 사용자 지정 도메인 이름과 SSL 인증서의 사용이 필요합니다. 보안 팀은 SSL 인증서가 적절하게 관리되고 올바른 지역에 저장되도록 해야 합니다.",
        "Question": "Amazon CloudFront와 함께 사용할 사용자 지정 SSL 인증서를 구성하는 방법을 올바르게 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "사용자 지정 SSL 인증서는 us-east-1 지역의 AWS Certificate Manager에 저장해야 합니다.",
            "2": "사용자 지정 SSL 인증서는 IAM에 저장해야 하며 모든 지역에서 전 세계적으로 사용할 수 있습니다.",
            "3": "사용자 지정 SSL 인증서는 AWS Certificate Manager에 저장해야 하며 모든 지역에 있을 수 있습니다.",
            "4": "사용자 지정 SSL 인증서는 CloudFront 배포가 생성된 지역에만 저장할 수 있습니다."
        },
        "Correct Answer": "사용자 지정 SSL 인증서는 us-east-1 지역의 AWS Certificate Manager에 저장해야 합니다.",
        "Explanation": "Amazon CloudFront와 함께 사용자 지정 SSL 인증서를 사용하려면, CloudFront 배포가 생성된 지역에 관계없이 반드시 us-east-1 지역의 AWS Certificate Manager (ACM)에 저장해야 합니다. 이는 사용자 지정 도메인이 HTTPS를 통해 안전하게 접근될 수 있도록 보장합니다.",
        "Other Options": [
            "이 옵션은 사용자 지정 SSL 인증서를 모든 지역에 저장할 수 있다고 잘못 제안하므로 부정확합니다. 반드시 us-east-1 지역의 AWS Certificate Manager에 저장해야 합니다.",
            "이 옵션은 IAM이 인증서를 저장할 수 있지만, CloudFront의 SSL 인증서를 관리하는 데 권장되는 서비스가 아니며 ACM처럼 지역별로 제한되지 않기 때문에 부정확합니다.",
            "이 옵션은 사용자 지정 SSL 인증서를 us-east-1 지역의 AWS Certificate Manager에 저장해야 하지만, CloudFront 배포가 생성된 지역에 제한되지 않기 때문에 부정확합니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 의료 기관이 AWS를 활용하여 환자 데이터를 관리하고 있으며 강력한 아이덴티티 및 접근 관리 전략을 수립했습니다. 이 기관은 사용자가 역할에 따라 자원에 대한 제어된 접근을 가질 수 있도록 하면서 특정 시간 동안 지원 직원에게 임시 접근을 부여할 수 있는 능력을 유지해야 합니다.",
        "Question": "이 시나리오에서 장기 및 임시 자격 부여 메커니즘을 구현하는 데 가장 효과적인 솔루션은 무엇입니까?",
        "Options": {
            "1": "사용자에 대한 IAM 역할을 설정하고 AWS STS를 구성하여 지원 직원의 역할 권한에 따라 자원에 대한 접근을 허용하는 임시 자격 증명을 발급합니다.",
            "2": "각 사용자에 대한 장기 자격 증명을 가진 IAM 역할을 생성하고 필요할 때 AWS Security Token Service (STS)를 사용하여 임시 자격 증명을 생성합니다.",
            "3": "모든 사용자에 대한 장기 자격 증명을 가진 IAM 그룹을 구현하고 임시 접근 필요에 따라 수동으로 접근 키를 교체합니다.",
            "4": "모든 직원에게 장기 접근 키를 가진 IAM 사용자를 사용하고 시간에 따라 접근을 제한하는 IAM 정책을 통해 임시 자격 증명을 제공합니다."
        },
        "Correct Answer": "사용자에 대한 IAM 역할을 설정하고 AWS STS를 구성하여 지원 직원의 역할 권한에 따라 자원에 대한 접근을 허용하는 임시 자격 증명을 발급합니다.",
        "Explanation": "이 옵션은 IAM 역할과 AWS STS를 함께 활용하여 장기 및 임시 접근을 원활하게 제공하므로 가장 효과적입니다. IAM 역할은 사용자의 직무 기능에 따라 할당될 수 있으며, STS를 사용하여 지원 직원에게 장기 자격 증명 없이 임시 접근을 부여할 수 있어 보안 및 규정 준수를 강화합니다.",
        "Other Options": [
            "이 옵션은 모든 사용자에게 장기 자격 증명을 사용하는 것을 잘못 제안하므로 임시 접근 필요에 대한 유연성과 보안을 제공하지 않습니다.",
            "이 옵션은 모든 직원에게 장기 접근 키를 가진 IAM 사용자를 사용하므로 보안 위험을 초래하고 임시 접근 관리를 복잡하게 하며, 수동 정책에 의존하므로 자동화된 역할 기반 접근을 활용하지 않습니다.",
            "이 옵션은 접근 키를 수동으로 교체하는 것을 포함하므로 번거롭고 AWS의 임시 자격 부여 기능을 활용하지 않으므로 동적 접근 요구에 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "클라우드 보안 아키텍트는 조직의 EC2 인스턴스가 보안 모범 사례를 준수하고 알려진 취약점으로부터 보호되도록 하는 임무를 맡고 있습니다. 아키텍트는 이러한 인스턴스의 평가를 자동화하기 위해 AWS Inspector를 구현하기로 결정했습니다. 요구 사항에는 네트워크 도달 가능성 확인, 호스트의 구성 분석(CIS 벤치마크에 대한) 및 설치된 소프트웨어의 취약점 식별이 포함됩니다. 아키텍트는 또한 결과가 중앙 모니터링 시스템에 보고되어 추가 분석을 위해 활용되도록 하고 싶어합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 AWS Inspector를 구성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Inspector에서 EC2 인스턴스를 평가하기 위해 사용자 정의 규칙 패키지를 활용하고, 평가를 온디맨드로 실행하도록 구성하며, AWS Management Console에서 결과를 수동으로 모니터링합니다.",
            "2": "AWS Inspector에서 미리 정의된 규칙 패키지를 배포하고, 이를 매일 실행하도록 설정하며, 결과를 처리하고 Slack 채널에 알림을 보내는 Lambda 함수를 구성합니다.",
            "3": "미리 정의된 규칙 패키지를 사용하여 AWS Inspector를 설정하고, CVE 및 CIS 벤치마크에 대한 호스트 평가를 활성화하며, 모든 대상 EC2 인스턴스에 에이전트를 설치하여 상세한 네트워크 및 호스트 구성 데이터를 수집합니다.",
            "4": "EC2 인스턴스를 대상으로 하는 미리 정의된 규칙 패키지를 AWS Inspector에서 생성하고, CloudWatch Events를 통해 정기적인 평가를 예약하며, 평가 결과에 대한 알림을 받기 위해 SNS 주제를 구성합니다."
        },
        "Correct Answer": "미리 정의된 규칙 패키지를 사용하여 AWS Inspector를 설정하고, CVE 및 CIS 벤치마크에 대한 호스트 평가를 활성화하며, 모든 대상 EC2 인스턴스에 에이전트를 설치하여 상세한 네트워크 및 호스트 구성 데이터를 수집합니다.",
        "Explanation": "이 옵션은 CVE 및 CIS 벤치마크 준수를 위한 검사를 포함하는 미리 정의된 규칙 패키지를 사용하여 모든 요구 사항을 충족합니다. 또한 EC2 인스턴스에서 네트워크 도달 가능성과 호스트 구성을 정확하게 평가하기 위해 AWS Inspector 에이전트의 필요성을 강조합니다.",
        "Other Options": [
            "이 옵션은 미리 정의된 규칙 패키지와 SNS 알림을 포함하지만, EC2 인스턴스에 Inspector 에이전트를 설치하는 것에 대한 강조가 부족하여 상세한 호스트 데이터를 수집하고 포괄적인 평가를 보장하는 데 중요합니다.",
            "이 옵션은 사용자 정의 규칙 패키지와 온디맨드 평가에 의존하며, 이는 효과적으로 준수 요구 사항을 충족하는 데 필요한 일관된 커버리지와 자동화를 제공하지 않을 수 있습니다. 또한 지속적인 모니터링을 위한 알림 시스템과의 통합이 부족합니다.",
            "이 옵션은 미리 정의된 규칙 패키지와 일일 평가를 언급하지만, EC2 인스턴스에 Inspector 에이전트를 설치하거나 호스트 평가를 포함해야 할 필요성을 강조하지 않으며, 이는 철저한 취약점 관리에 필수적입니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 회사가 Amazon EC2 인스턴스에서 호스팅되는 웹 애플리케이션을 대상으로 하는 빈번한 DDoS 공격을 경험하고 있습니다. 그들은 기본 DDoS 보호를 제공할 뿐만 아니라 실시간 메트릭, 트래픽 모니터링 및 기존 서비스와의 통합과 같은 고급 기능을 제공하는 솔루션을 구현하고자 합니다. 특히 Layer 7 보호와 WAF 규칙을 효과적으로 관리할 수 있는 능력에 관심이 있습니다.",
        "Question": "회사가 포괄적인 DDoS 보호 및 고급 웹 애플리케이션 보안 기능을 달성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "추가 기능 없이 기본 DDoS 보호를 위해 AWS Shield Standard를 사용합니다.",
            "2": "강화된 DDoS 보호 및 WAF 통합을 위해 AWS Shield Advanced를 사용합니다.",
            "3": "준수 모니터링 및 리소스 구성 추적을 위해 AWS Config를 사용합니다.",
            "4": "보안 정책의 중앙 집중식 관리를 위해 AWS Firewall Manager를 사용합니다."
        },
        "Correct Answer": "강화된 DDoS 보호 및 WAF 통합을 위해 AWS Shield Advanced를 사용합니다.",
        "Explanation": "AWS Shield Advanced는 고급 Layer 7 기능 및 실시간 메트릭을 포함한 강력한 DDoS 보호를 제공합니다. AWS WAF와 원활하게 통합되어 맞춤형 규칙 관리를 지원하며, AWS DDoS 대응 팀의 지원을 제공하여 강화된 보안을 위한 이상적인 선택입니다.",
        "Other Options": [
            "AWS Firewall Manager는 계정 간 방화벽 규칙의 중앙 집중식 관리를 위해 설계되었지만, 직접적인 DDoS 보호나 상세한 메트릭을 제공하지 않습니다.",
            "AWS Shield Standard는 기본 DDoS 보호를 제공하지만, 포괄적인 보안 관리를 위한 고급 기능 및 통합 기능이 부족합니다.",
            "AWS Config는 주로 리소스 구성 추적 및 준수 모니터링에 중점을 두며, DDoS 보호나 WAF 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 회사가 다양한 애플리케이션을 실행하는 대규모 Amazon EC2 인스턴스 풀을 운영하고 있습니다. 보안 모범 사례에 따르면 모든 인스턴스는 취약점을 패치하기 위해 정기적으로 업데이트되어야 합니다. 회사는 모든 인스턴스에서 패치 프로세스를 자동화하면서 최소한의 다운타임과 보안 정책 준수를 보장하는 솔루션을 구현해야 합니다.",
        "Question": "EC2 인스턴스의 패치를 효과적으로 자동화하는 데 도움이 되는 솔루션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "각 EC2 인스턴스에 수동으로 로그인하여 패치를 개별적으로 적용하여 패치 프로세스에 대한 제어를 보장합니다.",
            "2": "AWS Systems Manager Run Command를 예약하여 모든 EC2 인스턴스에서 정기적으로 패치 스크립트를 실행합니다.",
            "3": "AWS Systems Manager Patch Manager를 사용하여 미리 정의된 패치 기준선을 기반으로 모든 EC2 인스턴스에서 패치 프로세스를 자동화합니다.",
            "4": "AWS CodeDeploy를 활용하여 최신 패치를 포함한 새로운 애플리케이션 버전을 EC2 인스턴스에 배포합니다.",
            "5": "AWS Lambda 함수를 구현하여 패치 스크립트를 일정에 따라 트리거하여 사람의 개입 없이 EC2 인스턴스를 업데이트합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Systems Manager Patch Manager를 사용하여 미리 정의된 패치 기준선을 기반으로 모든 EC2 인스턴스에서 패치 프로세스를 자동화합니다.",
            "AWS Systems Manager Run Command를 예약하여 모든 EC2 인스턴스에서 정기적으로 패치 스크립트를 실행합니다."
        ],
        "Explanation": "AWS Systems Manager Patch Manager를 사용하면 정의된 규칙 및 일정에 따라 자동 패치를 수행할 수 있어 모든 인스턴스가 최소한의 다운타임으로 업데이트됩니다. AWS Systems Manager Run Command를 예약하여 패치 스크립트를 실행하는 것도 자동화를 촉진하며 특정 준수 요구 사항에 맞게 조정할 수 있습니다.",
        "Other Options": [
            "각 EC2 인스턴스에 수동으로 로그인하는 것은 비효율적이며 인스턴스 수가 증가함에 따라 잘 확장되지 않습니다. 또한 인적 오류의 가능성을 증가시키고 자동화 모범 사례를 준수하지 않습니다.",
            "패치를 위한 AWS Lambda 함수를 구현하는 것은 바람직하지 않으며, Lambda 함수는 실행 시간 제한이 있어 긴 패치 프로세스에 적합하지 않을 수 있습니다. 또한 패치 워크플로를 불필요하게 복잡하게 만듭니다.",
            "AWS CodeDeploy는 애플리케이션 배포에 사용할 수 있지만, 패치 관리에 특별히 설계되지 않았으며 모든 필요한 운영 체제 패치가 적용되도록 보장하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "클라우드 아키텍트가 AWS 내에서 가상 네트워크 아키텍처를 설계하고 있습니다. 이 아키텍처는 여러 가용 영역(AZ)을 수용해야 하며, 효과적인 리소스 관리와 보안을 보장해야 합니다. 아키텍트는 가상 사설 클라우드(VPC)의 수와 구성에 대한 특정 요구 사항이 있습니다.",
        "Question": "AWS VPC의 제한 사항 및 특성에 관하여 다음 중 어떤 진술이 사실입니까? (두 개 선택)",
        "Options": {
            "1": "대부분의 AWS 리소스는 정책 조건에 대해 ec2:Vpc 조건 키를 지원합니다.",
            "2": "VPC는 최대 5개의 추가 CIDR 블록을 가질 수 있습니다.",
            "3": "VPC는 여러 네트워크 인터페이스를 가질 수 있으며, 이를 EC2 인스턴스 간에 이동할 수 있습니다.",
            "4": "VPC는 여러 리전을 가로지를 수 있지만 단일 AZ로 제한됩니다.",
            "5": "VPC는 리전당 소프트 최대 5개의 VPC로 제한됩니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "VPC는 리전당 소프트 최대 5개의 VPC로 제한됩니다.",
            "대부분의 AWS 리소스는 정책 조건에 대해 ec2:Vpc 조건 키를 지원합니다."
        ],
        "Explanation": "VPC는 실제로 리전당 소프트 최대 5개의 VPC로 제한되어 있어 네트워크 리소스의 효율적인 관리를 가능하게 합니다. 또한, 대부분의 AWS 리소스는 ec2:Vpc 조건 키를 지원하여 VPC와 관련된 IAM 정책에서 보다 세분화된 접근 제어를 가능하게 합니다.",
        "Other Options": [
            "이 진술은 잘못되었습니다. VPC는 단일 리전 내에서 여러 AZ를 가로지도록 설계되어 있으며, 그 반대는 아닙니다.",
            "이 진술은 잘못되었습니다. VPC는 최대 4개의 추가 CIDR 블록을 가질 수 있어 총 5개의 CIDR 블록(1개의 기본 및 4개의 보조)이 됩니다.",
            "이 진술은 잘못되었습니다. VPC는 여러 네트워크 인터페이스를 가질 수 있지만, EC2 인스턴스의 기본 인터페이스는 다른 인스턴스로 이동할 수 없습니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "컴플라이언스 담당자가 AWS 조직 내에서 정책 정의된 가드레일을 구현하여 모든 계정이 특정 보안 기준을 준수하도록 해야 합니다. 컴플라이언스 담당자는 이러한 기준을 자동으로 시행하고 비준수 리소스가 검토를 위해 플래그가 지정되도록 하기를 원합니다.",
        "Question": "컴플라이언스 담당자가 여러 AWS 계정에 걸쳐 이러한 정책 정의된 가드레일을 구현하기 위한 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Organizations 및 서비스 제어 정책(SCP)을 활용하여 모든 계정에서 서비스 사용을 제한하는 권한을 정의합니다.",
            "2": "각 개별 계정에서 AWS Config 규칙을 구현하여 보안 기준 준수를 모니터링하고 위반에 대한 알림을 설정합니다.",
            "3": "AWS CloudFormation StackSets를 사용하여 조직 내 모든 계정에 자동으로 보안 구성을 배포합니다.",
            "4": "AWS Control Tower를 활용하여 여러 계정에 걸쳐 자동으로 준수를 시행할 수 있는 가드레일을 생성하고 관리합니다."
        },
        "Correct Answer": "AWS Control Tower를 활용하여 여러 계정에 걸쳐 자동으로 준수를 시행할 수 있는 가드레일을 생성하고 관리합니다.",
        "Explanation": "AWS Control Tower는 AWS 조직 내 여러 계정에 걸쳐 정책 정의된 가드레일을 구현하기 위한 포괄적인 솔루션을 제공합니다. 이는 모범 사례에 맞춘 사전 구성된 가드레일로 계정을 설정하는 과정을 자동화하여 지속적인 준수 및 거버넌스를 보장합니다.",
        "Other Options": [
            "서비스 제어 정책(SCP)은 서비스 권한 관리를 위한 효과적인 도구이지만 보안 기준 준수를 특별히 시행하지 않으므로 가드레일의 독립적인 솔루션으로서는 덜 효과적입니다.",
            "AWS Config 규칙은 준수를 모니터링할 수 있지만, 여러 계정에 걸쳐 개별적으로 구현하는 것은 번거로울 수 있으며 AWS Control Tower가 제공하는 중앙 집중식 관리 및 자동화가 부족합니다.",
            "AWS CloudFormation StackSets는 배포를 자동화할 수 있지만, AWS Control Tower와 달리 정책 정의된 가드레일의 지속적인 준수 모니터링이나 시행을 위해 특별히 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "금융 서비스 회사가 규제 요구 사항을 준수하기 위해 AWS 환경 전반에 걸쳐 강력한 백업 솔루션을 구현하고자 합니다. 그들은 비즈니스 연속성 계획에 맞춰 백업 일정 및 보존 정책을 수립하고 데이터 손실을 최소화해야 합니다.",
        "Question": "회사의 요구에 맞는 적절한 일정과 보존으로 AWS Backup을 설정하는 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Backup을 활용하여 7일 보존 정책을 가진 Amazon EC2 인스턴스만 포함하는 백업 계획을 생성합니다.",
            "2": "AWS Backup을 사용하여 Amazon EFS 및 Amazon RDS에 대해 30일 보존 기간을 가진 일일 백업을 지정하는 백업 계획을 생성합니다.",
            "3": "AWS Backup을 사용하여 모든 지원되는 AWS 서비스에 대해 월간 백업 일정과 365일 보존을 자동화합니다.",
            "4": "매주 Amazon S3 및 Amazon DynamoDB에서 온프레미스 스토리지 솔루션으로 데이터를 수동으로 백업합니다."
        },
        "Correct Answer": "AWS Backup을 사용하여 Amazon EFS 및 Amazon RDS에 대해 30일 보존 기간을 가진 일일 백업을 지정하는 백업 계획을 생성합니다.",
        "Explanation": "AWS Backup을 사용하여 Amazon EFS 및 Amazon RDS에 대해 일일 백업과 30일 보존 기간을 가진 백업 계획을 생성하면 회사가 데이터 보호를 위한 규제 요구 사항을 충족하면서 데이터 손실 위험을 최소화할 수 있습니다.",
        "Other Options": [
            "Amazon S3 및 Amazon DynamoDB에서 온프레미스 솔루션으로 데이터를 수동으로 백업하는 것은 비효율적이며, 백업이 누락될 경우 데이터 손실로 이어질 수 있습니다. AWS Backup을 통한 자동화가 선호됩니다.",
            "Amazon EC2 인스턴스만을 위한 AWS Backup 활용은 여러 서비스에 걸친 포괄적인 보호를 제공하지 않으며, 7일 보존 정책은 회사의 준수 요구 사항을 충족하지 못할 수 있습니다.",
            "모든 지원되는 AWS 서비스에 대해 월간 일정과 365일 보존으로 백업을 자동화하는 것은 회사의 데이터 복구 요구 사항, 특히 데이터 손실을 최소화하기 위한 일일 백업 필요성과 일치하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "여러 IAM 사용자가 있는 AWS 계정을 관리하고 있으며, 보안 모범 사례 준수를 보장하기 위해 정기적으로 자격 증명의 상태를 평가해야 합니다. 모든 사용자와 그들의 비밀번호, 액세스 키 및 MFA 장치의 상태를 나열하는 보고서를 생성하고자 합니다. 이를 달성하기 위해 IAM 정책에서 필요한 권한이 구성되어 있는지 확인해야 합니다.",
        "Question": "다음 중 사용자가 계정에 대한 IAM Credential Report를 생성하고 다운로드할 수 있도록 허용하는 IAM 정책 문장은 무엇입니까?",
        "Options": {
            "1": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": [ \"iam:GenerateCredentialReport\", \"iam:GetCredentialReport\" ], \"Resource\": \"*\" }] }",
            "2": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": [ \"iam:GetCredentialReport\" ], \"Resource\": \"*\" }] }",
            "3": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": [ \"iam:CreateUser\" ], \"Resource\": \"*\" }] }",
            "4": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": [ \"iam:ListUsers\", \"iam:GetCredentialReport\" ], \"Resource\": \"*\" }] }"
        },
        "Correct Answer": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": [ \"iam:GenerateCredentialReport\", \"iam:GetCredentialReport\" ], \"Resource\": \"*\" }] }",
        "Explanation": "올바른 IAM 정책 문장은 사용자가 IAM Credential Report를 생성하고 다운로드할 수 있도록 허용하며, 이는 두 가지 작업에 대한 권한이 필요합니다: 'iam:GenerateCredentialReport'와 'iam:GetCredentialReport'.",
        "Other Options": [
            "이 옵션은 사용자가 IAM 사용자를 생성할 수 있도록 허용하지만 자격 증명 보고서를 생성하거나 다운로드할 수 있는 권한은 제공하지 않습니다.",
            "이 옵션은 사용자를 나열할 수 있는 권한을 제공하지만 자격 증명 보고서를 생성하거나 다운로드하는 데 필요한 작업은 포함되어 있지 않습니다.",
            "이 옵션은 사용자가 자격 증명 보고서를 다운로드할 수 있도록 허용하지만 보고서를 생성할 수 있는 권한은 허용하지 않으며, 이는 또한 필요합니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "보안 아키텍트는 AWS 인프라에 대한 가시성과 제어를 보장하는 임무를 맡고 있습니다. 아키텍트는 AWS CloudTrail을 구현하여 계정 내에서 이루어진 모든 API 호출을 기록하고, Amazon CloudWatch를 설정하여 이러한 로그를 모니터링하여 의심스러운 활동을 감지합니다. 그러나 보안 검토 후 아키텍트는 특정 API 호출이 예상대로 기록되지 않는 것을 발견합니다.",
        "Question": "CloudTrail에서 누락된 API 호출 로그의 가장 가능성이 높은 이유는 무엇입니까?",
        "Options": {
            "1": "CloudTrail 트레일이 데이터 이벤트를 기록하도록 구성되지 않았습니다.",
            "2": "CloudTrail 로깅이 관리 이벤트만 추적하도록 구성되었습니다.",
            "3": "AWS 계정에 CloudTrail 트레일이 설정되지 않았습니다.",
            "4": "API 호출이 CloudTrail에서 지원되지 않는 서비스에 의해 이루어졌습니다."
        },
        "Correct Answer": "CloudTrail 트레일이 데이터 이벤트를 기록하도록 구성되지 않았습니다.",
        "Explanation": "CloudTrail은 관리 이벤트를 기록하도록 구성할 수 있지만, 트레일이 데이터 이벤트를 포함하도록 설정되지 않으면 S3 또는 Lambda에 영향을 미치는 특정 API 호출이 기록되지 않을 수 있습니다. 이는 CloudTrail을 설정할 때 흔히 발생하는 간과로, 준수 및 가시성의 격차를 초래할 수 있습니다.",
        "Other Options": [
            "일부 AWS 서비스가 CloudTrail에 의해 기록되지 않을 수 있지만, 누락된 로그의 가장 즉각적인 이유는 데이터 이벤트 구성과 관련이 있습니다.",
            "CloudTrail은 관리 이벤트와 데이터 이벤트를 모두 기록하도록 구성할 수 있습니다. 아키텍트가 트레일을 관리 이벤트만 추적하도록 설정했다면 누락된 로그를 설명할 수 있지만, 그것만이 유일한 가능성은 아닙니다.",
            "CloudTrail 트레일이 전혀 없다면 API 호출이 기록되지 않을 것입니다. 그러나 상황은 CloudTrail이 이미 설정되어 있음을 암시하므로 이 옵션은 가능성이 낮습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "금융 서비스 회사는 규제 요구 사항을 준수하기 위해 AWS 리소스에 대한 로그 관리를 구현해야 합니다. 회사는 모든 로그가 최소 18개월 동안 보존되고 안전하게 저장되며 접근이 제한되어야 합니다. 보안 엔지니어가 이러한 요구 사항을 충족하기 위해 어떤 조치를 취해야 합니까?",
        "Question": "AWS에서 로그의 수명 주기 및 보존을 관리하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "Amazon RDS를 구현하여 로그를 저장하고 자동 삭제 전에 18개월 동안 데이터를 보존하도록 구성합니다.",
            "2": "AWS Config를 활용하여 로그를 모니터링하고 Amazon S3에 접근이 제한된 로그를 18개월 동안 보관하는 보존 정책을 설정합니다.",
            "3": "Amazon S3를 사용하여 수명 주기 정책을 설정하고 30일 후에 로그를 Amazon S3 Glacier로 전환하며 18개월 동안의 만료 정책을 설정합니다.",
            "4": "Amazon CloudWatch Logs에 로그를 저장하고 삭제되기 전에 18개월 동안 로그를 보존하는 보존 정책을 설정합니다."
        },
        "Correct Answer": "Amazon S3를 사용하여 수명 주기 정책을 설정하고 30일 후에 로그를 Amazon S3 Glacier로 전환하며 18개월 동안의 만료 정책을 설정합니다.",
        "Explanation": "Amazon S3와 수명 주기 정책을 사용하면 회사가 로그 보존을 효율적으로 관리하고 오래된 로그를 S3 Glacier와 같은 저비용 저장 옵션으로 전환할 수 있으며, 로그가 요구되는 18개월 동안 보존되도록 보장할 수 있습니다.",
        "Other Options": [
            "Amazon CloudWatch Logs에 로그를 저장하는 것은 장기 보존에 적합하지 않으며, 주로 실시간 모니터링을 위해 설계되었고 확장된 저장을 위한 것이 아닙니다. 최대 보존 기간은 10년으로, 회사의 요구 사항과 일치하지 않습니다.",
            "AWS Config는 로그 저장을 위한 것이 아니라 리소스 구성 추적을 위한 것입니다. 준수를 위해 필요한 방식으로 로그 수명 주기 및 보존을 직접 관리할 수 없습니다.",
            "Amazon RDS는 관계형 데이터베이스 서비스로 로그 저장에 적합하지 않습니다. 로그는 S3와 같은 더 적합한 서비스에 저장해야 하며, RDS는 로그 보존 관리에 제한이 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "보안 엔지니어가 사용자가 이전에 접근할 수 있었던 S3 버킷에 접근할 수 없다는 보고된 문제를 조사하고 있습니다. 엔지니어는 IAM 정책이나 권한에 문제가 있을 수 있다고 의심하고 있습니다. 그들은 AWS CloudTrail 로그와 IAM 정책 시뮬레이터에 접근할 수 있습니다.",
        "Question": "엔지니어가 사용자가 겪고 있는 인증 문제를 해결하기 위해 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "사용자의 권한에 대한 IAM Access Advisor를 검토하여 S3 권한이 있는지 확인합니다.",
            "2": "CloudTrail 로그를 분석하여 사용자의 S3 버킷 접근과 관련된 거부된 작업을 식별합니다.",
            "3": "IAM 정책 시뮬레이터를 사용하여 사용자의 권한을 S3 버킷 정책에 대해 테스트합니다.",
            "4": "S3 버킷의 접근 로그를 확인하여 요청이 거부되고 있는지 확인합니다."
        },
        "Correct Answer": "IAM 정책 시뮬레이터를 사용하여 사용자의 권한을 S3 버킷 정책에 대해 테스트합니다.",
        "Explanation": "IAM 정책 시뮬레이터는 엔지니어가 특정 사용자에 대한 권한을 시뮬레이션하고 정의된 정책에 따라 S3 버킷에 접근할 수 있는지 즉시 확인할 수 있게 해줍니다. 이는 권한 문제를 식별하는 가장 직접적인 접근 방식입니다.",
        "Other Options": [
            "S3 버킷의 접근 로그를 확인하면 일부 정보를 제공할 수 있지만, IAM 정책이 사용자에게 올바르게 권한을 부여하고 있는지 직접적으로 나타내지는 않습니다.",
            "IAM Access Advisor를 검토하면 사용자가 접근한 서비스가 무엇인지 보여줄 수 있지만, 현재 권한에 대한 자세한 정보를 제공하지 않으며 특정 접근 문제 해결에 도움이 되지 않습니다.",
            "CloudTrail 로그를 분석하면 거부된 작업을 식별하는 데 도움이 될 수 있지만, IAM 정책과 해당 정보를 연관시키지 않으면 접근이 거부된 이유에 대한 충분한 맥락을 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 AWS에서 호스팅되는 다계층 애플리케이션을 운영하고 있습니다. 보안 팀은 산업 규정 및 내부 정책을 준수하기 위해 모든 관련 보안 이벤트가 모니터링되고 기록되도록 해야 합니다. 그들은 효과적인 로깅 및 모니터링 메커니즘을 구현하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "보안 팀이 보안 가시성과 준수를 향상시키기 위해 구현해야 할 서비스 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Trusted Advisor를 설정하여 보안 모범 사례 알림을 받습니다.",
            "2": "AWS Config를 구현하여 리소스 구성의 변경 사항을 추적합니다.",
            "3": "Amazon S3 버킷 정책을 구성하여 로그 파일에 대한 접근을 제한합니다.",
            "4": "AWS CloudTrail을 활성화하여 계정에서 이루어진 모든 API 호출을 기록합니다.",
            "5": "Amazon GuardDuty를 사용하여 위협 탐지 및 지속적인 모니터링을 수행합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS CloudTrail을 활성화하여 계정에서 이루어진 모든 API 호출을 기록합니다.",
            "Amazon GuardDuty를 사용하여 위협 탐지 및 지속적인 모니터링을 수행합니다."
        ],
        "Explanation": "AWS CloudTrail을 활성화하면 보안 팀이 계정에서 이루어진 모든 API 호출을 기록할 수 있어 보안 분석을 위한 포괄적인 감사 추적을 제공합니다. Amazon GuardDuty를 사용하면 AWS CloudTrail 로그, VPC 흐름 로그 및 DNS 로그를 분석하여 잠재적인 위협 및 악의적인 활동을 실시간으로 식별함으로써 보안 모니터링을 강화합니다.",
        "Other Options": [
            "Amazon S3 버킷 정책을 구성하여 로그 파일에 대한 접근을 제한하는 것은 포괄적인 보안 모니터링 및 로깅을 제공하지 않습니다. 로그에 대한 접근 제어를 개선하지만 보안 이벤트를 적극적으로 모니터링하거나 기록하지는 않습니다.",
            "AWS Config를 구현하면 리소스 구성의 변경 사항을 추적하는 데 도움이 되지만, CloudTrail 및 GuardDuty가 제공하는 광범위한 보안 이벤트 모니터링 기능을 제공하지 않습니다. 이는 준수 및 구성 관리에 더 중점을 둡니다.",
            "AWS Trusted Advisor를 설정하면 모범 사례에 대한 권장 사항을 제공하지만 보안 이벤트를 적극적으로 기록하거나 모니터링하지는 않습니다. 이는 AWS 리소스를 최적화하기 위한 도구이지 보안 모니터링 솔루션이 아닙니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 금융 기관이 전송 중 및 저장 중인 민감한 고객 데이터를 보호하려고 합니다. 그들은 데이터 보호에 사용되는 암호화 키가 안전하게 관리되고 정기적으로 교체될 수 있도록 하기를 원합니다. 이 기관은 이 암호화된 데이터에 원활하게 접근해야 하는 온프레미스 및 클라우드 애플리케이션을 혼합하여 운영하고 있습니다.",
        "Question": "기관이 요구 사항을 충족하기 위해 구현해야 할 암호화 기술은 무엇입니까?",
        "Options": {
            "1": "모든 데이터에 대해 비대칭 암호화를 사용합니다.",
            "2": "고객 관리 키를 사용한 서버 측 암호화를 사용하고 자동 키 회전을 활성화합니다.",
            "3": "AWS Key Management Service (KMS) 키를 사용한 서버 측 암호화를 사용합니다.",
            "4": "애플리케이션에서 관리하는 대칭 키를 사용한 클라이언트 측 암호화를 사용합니다."
        },
        "Correct Answer": "고객 관리 키를 사용한 서버 측 암호화를 사용하고 자동 키 회전을 활성화합니다.",
        "Explanation": "이 옵션은 기관이 자체 키를 관리하면서 자동 키 회전의 이점을 누릴 수 있게 해주어, 전송 중 및 저장 중인 데이터의 보안을 강화합니다. 또한 AWS 서비스와 잘 통합되어 암호화된 데이터에 접근하는 원활한 경험을 제공합니다.",
        "Other Options": [
            "이 옵션은 금융 기관의 보안을 강화하는 데 필수적인 키 관리 또는 자동 키 회전에 대한 필요한 제어를 제공하지 않습니다.",
            "클라이언트 측 암호화는 개인 정보를 제공하지만, 키 관리의 부담을 애플리케이션에 두게 되어 운영을 복잡하게 만들 수 있으며 AWS 서비스와의 원활한 통합을 본질적으로 지원하지 않습니다.",
            "비대칭 암호화는 일반적으로 느리고 대량의 데이터에 대해 비효율적이어서 일반 데이터 암호화 요구에 실용적이지 않습니다. 또한 안전한 키 관리 및 회전 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "금융 기관이 여러 AWS 리소스를 관리하고 있으며, 민감한 작업을 수행할 수 있는 권한이 있는 사용자만 접근할 수 있도록 엄격한 접근 제어를 구현해야 합니다. 그들은 IAM 정책을 사용하여 이러한 제어를 시행하면서 리소스 관리의 유연성을 허용하는 데 특히 관심이 있습니다.",
        "Question": "AWS IAM에서 리소스 기반 정책과 신원 기반 정책에 대한 다음 설명 중 올바른 것은 무엇입니까?",
        "Options": {
            "1": "리소스 기반 정책은 주체를 지정하고 외부 사용자 또는 AWS 계정에 대한 권한을 허용할 수 있습니다.",
            "2": "신원 기반 정책은 주체를 지정하지 않고도 다른 AWS 계정이 소유한 리소스에 대한 권한을 부여하는 데 사용할 수 있습니다.",
            "3": "신원 기반 정책은 첨부된 관리 정책에 정의된 권한만 부여할 수 있으며 조건을 지정할 수 없습니다.",
            "4": "리소스 기반 정책과 신원 기반 정책 모두 관리 정책일 수 있으며 버전 관리를 지원합니다."
        },
        "Correct Answer": "리소스 기반 정책은 주체를 지정하고 외부 사용자 또는 AWS 계정에 대한 권한을 허용할 수 있습니다.",
        "Explanation": "리소스 기반 정책은 AWS 계정 또는 다른 계정의 IAM 사용자를 포함할 수 있는 주체를 지정할 수 있습니다. 이는 리소스를 안전하게 공유하는 데 필수적입니다. 반면, 신원 기반 정책은 IAM 신원(사용자, 그룹, 역할)에 첨부되며 외부 주체를 직접 지정하는 것을 지원하지 않습니다.",
        "Other Options": [
            "신원 기반 정책은 IAM 엔티티에 특별히 연결되어 있으며 올바른 리소스 기반 정책이 없으면 다른 AWS 계정이 소유한 리소스에 대한 권한을 부여할 수 없습니다.",
            "리소스 기반 정책은 인라인이어야 하며 관리 정책일 수 없으며, 신원 기반 정책처럼 버전 관리를 지원하지 않습니다.",
            "신원 기반 정책은 실제로 관리 정책에 정의된 것 이상의 조건과 권한을 지정할 수 있으므로 권한 관리에서 더 많은 유연성을 제공합니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 회사가 AWS API Gateway를 사용하여 많이 사용되는 API를 배포하고 있습니다. 그들은 프로모션 이벤트로 인해 높은 트래픽 볼륨과 요청의 급증을 예상하고 있습니다. API가 응답성을 유지하고 AWS API Gateway에서 부과하는 한계를 초과하지 않도록 하면서 사용자 성능을 최적화하고 싶어합니다.",
        "Question": "회사가 요청 제한을 효과적으로 관리하고 API 성능을 개선하려면 어떻게 해야 합니까?",
        "Options": {
            "1": "API Gateway 캐싱을 활성화하고 TTL을 300초로 설정하며 트래픽 급증을 처리하기 위해 버스트 한계를 조정합니다.",
            "2": "클라이언트 측 속도 제한기를 구현하여 높은 트래픽 이벤트 동안 API Gateway에 전송되는 요청 수를 제어합니다.",
            "3": "API Gateway 단계에 대해 캐시 TTL을 3600초로 설정하여 피크 트래픽 동안 백엔드 호출을 최소화합니다.",
            "4": "더 높은 처리량을 위해 AWS 지원에 요청하여 기본값에서 안정적인 요청 한계를 증가시킵니다."
        },
        "Correct Answer": "API Gateway 캐싱을 활성화하고 TTL을 300초로 설정하며 트래픽 급증을 처리하기 위해 버스트 한계를 조정합니다.",
        "Explanation": "300초의 TTL로 캐싱을 활성화하면 백엔드에 전송되는 요청 수를 줄여 응답 시간을 개선하고 높은 트래픽 기간 동안 부하를 완화하는 데 도움이 됩니다. 또한, 트래픽 급증을 처리하기 위해 버스트 한계를 조정하면 API가 설정된 한계를 초과하지 않고 더 많은 요청을 동시에 처리할 수 있습니다.",
        "Other Options": [
            "캐시 TTL을 3600초로 설정하는 것은 최적이 아닐 수 있으며, 이는 오래된 응답이 너무 오랫동안 제공되어 사용자 경험에 영향을 미칠 수 있습니다.",
            "안정적인 요청 한계를 증가시키려면 AWS에 공식 요청을 해야 하며, 특히 높은 트래픽 이벤트 동안 짧은 시간 내에 실행 가능하지 않을 수 있습니다.",
            "클라이언트 측 속도 제한기를 구현하는 것은 서버 측 제한을 해결하지 않으며, API Gateway 자체가 한계를 초과할 때 불필요한 요청 실패를 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "한 조직이 AWS IAM을 사용하여 새로운 아이덴티티 관리 시스템을 구현하고 있습니다. 보안 팀은 권한이 효과적으로 관리되고 검토되도록 하는 임무를 맡고 있습니다. 그들은 IAM 엔티티가 마지막으로 권한을 사용한 시점을 추적하기 위해 AWS 기능을 활용하여 준수 및 보안을 보장하고 싶어합니다.",
        "Question": "보안 팀이 IAM에서 Access Advisor를 효과적으로 활용하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "IAM 콘솔에 접근하고 각 사용자, 그룹 및 역할에 대한 Access Advisor 탭으로 이동합니다.",
            "2": "CloudTrail 로깅을 활성화하여 IAM 엔티티의 권한 마지막 사용을 추적합니다.",
            "3": "IAM 정책 시뮬레이터를 사용하여 IAM 엔티티의 권한 사용을 테스트하고 시각화합니다.",
            "4": "특정 시간 내에 권한이 사용되지 않을 때 알림을 받기 위해 CloudWatch 경고를 설정합니다.",
            "5": "Access Advisor에서 제공하는 마지막 접근 정보를 검토합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "IAM 콘솔에 접근하고 각 사용자, 그룹 및 역할에 대한 Access Advisor 탭으로 이동합니다.",
            "Access Advisor에서 제공하는 마지막 접근 정보를 검토합니다."
        ],
        "Explanation": "IAM에서 Access Advisor를 효과적으로 활용하기 위해 보안 팀은 IAM 콘솔에 접근하고 각 사용자, 그룹 및 역할에 대한 Access Advisor 탭으로 이동하여 권한이 마지막으로 사용된 시간을 확인해야 합니다. 또한, Access Advisor에서 제공하는 마지막 접근 정보를 검토하면 사용되지 않은 권한에 대한 명확한 그림을 제공하여 준수 및 보안 관리에 중요합니다.",
        "Other Options": [
            "CloudTrail 로깅을 활성화하면 API 호출을 추적하지만 Access Advisor 형식으로 IAM 엔티티가 마지막으로 권한을 사용한 시점을 직접적으로 보여주지는 않습니다.",
            "IAM 정책 시뮬레이터는 정책 권한을 테스트하는 도구이며 권한 사용에 대한 역사적 데이터를 제공하지 않습니다.",
            "사용되지 않은 권한에 대한 CloudWatch 경고를 설정하는 것은 유용할 수 있지만 Access Advisor를 직접 활용하거나 요구되는 역사적 사용 데이터를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "조직이 AWS 인프라를 설계하고 있으며, 웹 서버는 인터넷에서 접근 가능해야 하고 데이터베이스 서버는 안전하게 인터넷에서 접근할 수 없도록 해야 합니다. 보안 아키텍트는 VPC 내에서 적절한 네트워크 아키텍처를 구현하는 임무를 맡고 있습니다.",
        "Question": "보안 아키텍트가 이 목표를 달성하기 위해 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "웹 서버와 데이터베이스 서버를 위한 단일 서브넷을 생성하고, 이를 공용 접근으로 구성하며, 보안 그룹을 사용하여 트래픽을 제어합니다.",
            "2": "웹 서버를 위한 공용 서브넷을 생성하고 NAT 게이트웨이를 설정한 후 데이터베이스 서버를 같은 서브넷에 배치하여 쉽게 접근할 수 있도록 합니다.",
            "3": "같은 리전 내에 여러 VPC를 생성하고, 웹 서버는 하나의 VPC에, 데이터베이스 서버는 다른 VPC에 배치하여 보안을 강화합니다.",
            "4": "웹 서버를 위한 공용 서브넷을 인터넷 게이트웨이와 함께 생성하고, 데이터베이스 서버를 위한 인터넷 접근이 없는 사설 서브넷을 생성합니다."
        },
        "Correct Answer": "웹 서버를 위한 공용 서브넷을 인터넷 게이트웨이와 함께 생성하고, 데이터베이스 서버를 위한 인터넷 접근이 없는 사설 서브넷을 생성합니다.",
        "Explanation": "이 구성은 웹 서버가 인터넷 게이트웨이를 통해 공개적으로 접근 가능하게 하며, 데이터베이스 서버는 사설 서브넷에 격리되어 인터넷에 노출되지 않도록 하여 보안을 강화합니다.",
        "Other Options": [
            "이 옵션은 웹 서버와 데이터베이스 서버를 단일 공용 서브넷에 두는 것이기 때문에 데이터베이스 서버가 잠재적인 인터넷 공격에 노출되어 적절한 보안을 제공하지 않습니다.",
            "웹 서버와 데이터베이스 서버를 위한 여러 VPC를 생성하는 것은 불필요한 복잡성을 추가하며 데이터베이스 서버를 인터넷으로부터 효과적으로 격리하지 못합니다.",
            "데이터베이스 서버에 NAT 게이트웨이를 사용하는 것은 인터넷에서 접근하는 것을 방지하지 않으며, 단지 아웃바운드 연결을 시작할 수 있게 할 뿐이므로 안전하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "클라우드 아키텍트가 AWS CloudFormation을 사용하여 새로운 애플리케이션 스택을 배포하는 임무를 맡고 있습니다. 애플리케이션은 조직의 보안 정책 및 거버넌스 요구 사항을 준수해야 하며, 여러 환경에서 일관된 리소스 프로비저닝을 보장해야 합니다.",
        "Question": "클라우드 아키텍트가 CloudFormation을 사용하여 모든 리소스가 안전하고 준수하는 방식으로 배포되도록 보장하기 위해 구현해야 할 관행은 무엇입니까?",
        "Options": {
            "1": "보안 구성을 강제하기 위해 매개변수가 있는 템플릿으로 CloudFormation을 사용합니다.",
            "2": "거버넌스 없이 여러 계정에 리소스를 배포하기 위해 AWS CloudFormation StackSets를 활용합니다.",
            "3": "CloudFormation 제한을 우회하기 위해 AWS CLI 명령을 사용하여 리소스를 배포합니다.",
            "4": "배포 후 AWS 관리 콘솔에서 각 리소스를 수동으로 구성합니다."
        },
        "Correct Answer": "보안 구성을 강제하기 위해 매개변수가 있는 템플릿으로 CloudFormation을 사용합니다.",
        "Explanation": "CloudFormation에서 매개변수가 있는 템플릿을 사용하면 아키텍트가 모든 배포에서 보안 구성을 일관되게 정의하고 강제할 수 있습니다. 이는 리소스가 처음부터 보안 정책을 준수하도록 하여 잘못된 구성의 위험을 줄입니다.",
        "Other Options": [
            "각 리소스를 수동으로 구성하는 것은 일관성 부족과 인적 오류를 초래할 수 있어 여러 환경에서 준수 및 보안을 유지하기 어렵게 만듭니다.",
            "거버넌스 없이 StackSets를 활용하는 것은 통제되지 않은 리소스 확산과 잠재적인 보안 위험을 초래할 수 있으며, 필요한 준수 검사를 우회합니다.",
            "AWS CLI 명령을 통해 리소스를 배포하는 것은 CloudFormation 사용의 이점인 버전 관리 및 일관된 배포를 저해하여 보안 잘못 구성의 가능성을 높입니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "보안 엔지니어가 AWS Single Sign-On (SSO)을 사용하여 성장하는 조직의 다중 계정 접근을 관리하는 임무를 맡고 있습니다. 조직은 AWS Organizations를 사용하여 여러 계정을 관리하며, 다양한 AWS 리소스에 대한 접근이 안전하고 효율적으로 부여되도록 해야 합니다. 또한 조직은 SAML 2를 사용하여 SSO를 다른 애플리케이션과 통합할 계획입니다. 엔지니어는 AWS SSO의 제한 사항을 준수하면서 IAM 아이덴티티 공급자 및 권한 세트를 적절하게 구성해야 합니다.",
        "Question": "보안 엔지니어가 다중 계정 접근 관리를 위해 AWS SSO를 설정하기 위해 취해야 할 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "사용자와 그룹을 효율적으로 관리하기 위해 AWS SSO에 여러 디렉토리를 설정합니다.",
            "2": "SSO가 역할을 관리할 수 있도록 회원 계정에 서비스 연결 역할을 생성합니다.",
            "3": "첨부된 디렉토리의 사용자/그룹을 회원 계정의 역할에 매핑하는 권한 세트를 구성합니다.",
            "4": "접근 감사용으로 모든 SSO 로그인 기록을 AWS CloudTrail에 기록합니다.",
            "5": "AWS SSO를 사용하여 CLI 사용을 위한 IAM 역할에 직접 API 접근을 제공합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "SSO가 역할을 관리할 수 있도록 회원 계정에 서비스 연결 역할을 생성합니다.",
            "첨부된 디렉토리의 사용자/그룹을 회원 계정의 역할에 매핑하는 권한 세트를 구성합니다."
        ],
        "Explanation": "회원 계정에 서비스 연결 역할을 생성하는 것은 AWS SSO가 IAM 역할을 효과적으로 관리할 수 있도록 하는 데 필요합니다. 또한 권한 세트를 구성하면 디렉토리의 사용자와 그룹을 각 회원 계정의 특정 역할에 매핑할 수 있어 접근 제어에 필수적입니다.",
        "Other Options": [
            "여러 디렉토리를 설정하는 것은 잘못된 접근으로, 계정당 AWS SSO에 연결할 수 있는 디렉토리는 하나만 가능합니다.",
            "AWS SSO는 IAM 역할에 대한 직접 API 접근을 제공하지 않으며, 대신 CLI 접근을 위한 사용자 포털을 통해 임시 자격 증명을 제공합니다.",
            "CloudTrail에 SSO 로그인을 기록하는 것은 감사에 좋은 관행이지만, 다중 계정 접근 관리를 위한 AWS SSO 초기 설정 단계는 아닙니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "한 금융 서비스 회사가 AWS에 호스팅된 웹 애플리케이션으로의 트래픽 증가를 경험하고 있습니다. 그들은 서비스 가용성을 방해할 수 있는 분산 서비스 거부(DDoS) 공격의 가능성에 대해 우려하고 있습니다. 이 회사는 비용을 크게 증가시키지 않으면서 이러한 위협으로부터 애플리케이션을 보호하기 위한 선제적 보안 조치를 구현하고자 합니다.",
        "Question": "DDoS 공격으로부터 애플리케이션을 효과적으로 보호하기 위해 보안 엔지니어가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "웹 서버의 인스턴스 크기를 늘려 더 많은 연결을 처리할 수 있도록 합니다.",
            "2": "알려진 공격 패턴을 포함한 모든 요청을 차단하는 WAF 규칙 세트를 배포합니다.",
            "3": "추가 DDoS 보호 및 실시간 공격 가시성을 위해 AWS Shield Advanced를 활성화합니다.",
            "4": "알려지지 않은 IP 주소에서 오는 모든 트래픽을 차단하는 규칙이 포함된 네트워크 ACL을 구현합니다."
        },
        "Correct Answer": "추가 DDoS 보호 및 실시간 공격 가시성을 위해 AWS Shield Advanced를 활성화합니다.",
        "Explanation": "AWS Shield Advanced를 활성화하면 실시간 공격 가시성과 자동 트래픽 엔지니어링을 포함한 향상된 DDoS 보호를 제공하여 DDoS 공격과 관련된 위험을 완화하는 데 적합한 솔루션이 됩니다.",
        "Other Options": [
            "알려지지 않은 IP 주소에서 오는 모든 트래픽을 차단하기 위해 네트워크 ACL을 구현하면 정당한 사용자를 우연히 차단할 수 있으며, 공격자가 수많은 IP 주소를 사용할 수 있기 때문에 효과적인 DDoS 완화 전략이 아닐 수 있습니다.",
            "알려진 공격 패턴을 차단하기 위해 WAF 규칙 세트를 배포하는 것은 도움이 될 수 있지만, DDoS 위협 벡터를 구체적으로 다루지 않으며 DDoS 공격으로 생성된 대량의 트래픽을 처리하는 데 확장되지 않을 수 있습니다.",
            "웹 서버의 인스턴스 크기를 늘리는 것은 더 많은 연결을 처리하는 데 일시적인 완화를 제공할 수 있지만, DDoS 공격의 근본 원인을 해결하지 않으며 적절한 보호 메커니즘이 없으면 더 높은 비용으로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 보안 아키텍트가 AWS 환경에서 암호화 키를 관리하는 책임을 맡고 있습니다. 조직은 고객이 제공한 키 자료를 AWS Key Management Service (KMS)에 가져와 암호화하는 요구 사항이 있습니다. 아키텍트는 키 자료를 안전하게 관리하고 더 이상 필요하지 않을 때 제거할 수 있도록 하면서 규제 기준을 준수해야 합니다.",
        "Question": "AWS KMS에서 고객이 제공한 키 자료를 가져오고 나중에 제거하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Management Console을 사용하여 키 자료를 가져오고 지정된 날짜 이후에 자동으로 삭제되도록 만료 정책을 설정합니다.",
            "2": "AWS SDK를 사용하여 키 자료를 가져오고 미리 정의된 보존 기간 후에 키 자료를 삭제하는 예약된 Lambda 함수를 구현합니다.",
            "3": "AWS KMS ImportKeyMaterial API를 사용하여 키 자료를 가져온 다음 더 이상 필요하지 않을 때 수동으로 키 자료를 삭제합니다.",
            "4": "AWS CLI를 사용하여 키 자료를 가져오고 지정된 IAM 사용자만 접근할 수 있도록 키 정책을 생성하되, 제거 메커니즘은 정의하지 않습니다."
        },
        "Correct Answer": "AWS KMS ImportKeyMaterial API를 사용하여 키 자료를 가져온 다음 더 이상 필요하지 않을 때 수동으로 키 자료를 삭제합니다.",
        "Explanation": "AWS KMS ImportKeyMaterial API를 사용하면 키 자료를 안전하게 가져올 수 있습니다. 이 옵션은 키 자료의 생애 주기를 관리하는 간단한 방법을 제공하며, 더 이상 필요하지 않을 때 수동 삭제를 포함하여 규제 기준을 준수할 수 있도록 합니다.",
        "Other Options": [
            "AWS Management Console을 사용하여 키 자료를 가져오고 만료 정책을 설정하는 것은 수동 제거 요구 사항을 준수하지 않으며, 가져온 키 자료에 대한 만료 정책은 제공되지 않습니다.",
            "AWS CLI를 사용하여 키 자료를 가져오고 제한적인 키 정책을 생성하는 것은 접근 제어에 좋은 관행이지만, 키 자료를 제거하는 정의된 메커니즘이 포함되어 있지 않아 준수에 필수적입니다.",
            "예약된 Lambda 함수를 구현하여 키 자료를 삭제하는 것은 삭제 타이밍 관리에서 복잡성과 잠재적인 오류를 초래할 수 있어, 직접적인 수동 삭제 전략에 비해 덜 효과적일 수 있습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 금융 서비스 회사가 AWS로 운영을 전환하고 있으며, 거버넌스 및 규정 준수를 위한 강력한 중앙 집중식 관리 시스템이 필요합니다. 보안 팀은 모든 AWS 리소스가 회사 정책 및 산업 규정에 따라 일관되게 배포, 관리 및 버전 관리되도록 하고자 합니다.",
        "Question": "보안 팀이 AWS 리소스의 관리 및 거버넌스를 중앙 집중화하고 여러 계정에 걸쳐 조직 정책을 준수하도록 보장하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "여러 계정에 걸쳐 리소스를 배포하고 관리하기 위한 AWS CloudFormation StackSets.",
            "2": "운영 작업을 자동화하고 리소스 전반에 걸쳐 규정 준수를 유지하기 위한 AWS Systems Manager.",
            "3": "리소스 준수를 모니터링하고 정책 위반 시 경고를 트리거하기 위한 AWS Config Rules.",
            "4": "계정 간 준수를 강제하기 위한 서비스 제어 정책(SCPs)을 갖춘 AWS Organizations."
        },
        "Correct Answer": "계정 간 준수를 강제하기 위한 서비스 제어 정책(SCPs)을 갖춘 AWS Organizations.",
        "Explanation": "서비스 제어 정책(SCPs)을 갖춘 AWS Organizations는 여러 AWS 계정의 중앙 집중식 관리를 가능하게 합니다. SCPs는 계정 간에 사용할 수 있는 서비스와 작업을 제어하여 조직 정책 및 산업 규정 준수를 보장합니다.",
        "Other Options": [
            "AWS CloudFormation StackSets는 여러 계정에 리소스를 배포하는 데 유용하지만, 배포 후 거버넌스나 준수 강제 메커니즘을 제공하지 않습니다.",
            "AWS Config Rules는 준수를 모니터링하는 데 효과적이지만, 계정별로 작동하며 여러 계정에 걸쳐 관리 중앙 집중화를 제공하지 않습니다.",
            "AWS Systems Manager는 주로 운영 관리 및 작업 자동화에 중점을 두고 있지만, 여러 계정에 걸쳐 중앙 집중식 거버넌스나 준수 정책 강제를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 VPC의 공용 서브넷 내 EC2 인스턴스에 웹 애플리케이션을 배포했습니다. 보안 관리자는 서브넷에 대해 포트 80 및 443에서의 수신 트래픽과 동일한 포트에서의 송신 트래픽을 허용하는 사용자 지정 네트워크 ACL을 구성했습니다. 그러나 사용자는 인터넷에서 애플리케이션에 접근할 수 없습니다. 보안 관리자는 EC2 인스턴스에 연결된 보안 그룹을 확인하고 필요한 포트에서의 트래픽을 허용하고 있음을 확인했습니다.",
        "Question": "이 문제의 가장 가능성이 높은 원인은 무엇이며, 어떻게 해결할 수 있습니까?",
        "Options": {
            "1": "보안 그룹이 포트 80에서 인터넷으로부터의 수신 트래픽을 허용하는지 확인합니다.",
            "2": "기본 네트워크 ACL을 변경하여 모든 트래픽을 수신 및 송신하도록 허용합니다.",
            "3": "네트워크 ACL에 임시 포트에서의 수신 트래픽을 허용하는 규칙을 추가합니다.",
            "4": "네트워크 ACL에 특정 IP 주소로부터의 수신 트래픽을 허용하는 규칙을 추가합니다."
        },
        "Correct Answer": "네트워크 ACL에 임시 포트에서의 수신 트래픽을 허용하는 규칙을 추가합니다.",
        "Explanation": "문제는 EC2 인스턴스에서 송신 트래픽이 응답을 위해 임시 포트를 사용하고 있을 가능성이 높습니다. NACL은 상태 비저장(stateless) 방식이므로 수신 및 송신 트래픽 모두에 대해 명시적인 규칙이 필요합니다. 네트워크 ACL에 임시 포트(1024-65535)를 허용하는 규칙을 추가하면 클라이언트로의 응답이 가능해져 접근 문제를 해결할 수 있습니다.",
        "Other Options": [
            "이 옵션은 특정 IP 주소에 대한 규칙을 추가하면 접근이 제한될 수 있으므로 잘못된 것입니다. 이는 임시 응답을 허용하는 핵심 문제를 해결하지 않습니다.",
            "이 옵션은 기본 네트워크 ACL을 변경하여 모든 트래픽을 허용하면 보안 위험이 발생하고 이미 임시 포트에 대한 트래픽을 거부하고 있는 기존 사용자 지정 NACL의 문제를 해결하지 않기 때문에 잘못된 것입니다.",
            "이 옵션은 임시 포트에서의 수신 트래픽을 허용하는 것이 문제를 해결하지 않기 때문에 잘못된 것입니다. 문제는 송신 트래픽 응답에 있으며, 이는 임시 포트에 대한 특정 규칙이 필요합니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 보안 엔지니어가 AWS에 호스팅된 애플리케이션에 대한 위협 탐지 메커니즘을 구현하는 임무를 맡았습니다. 엔지니어는 모든 사용자 활동이 기록되고 의심스러운 행동을 분석할 수 있도록 해야 합니다. 엔지니어는 AWS 환경 내에서 데이터 캡처 메커니즘에 대한 다양한 옵션을 고려하고 있습니다.",
        "Question": "AWS 계정 내에서 이루어진 API 호출의 상세 로그를 캡처하는 데 가장 적합한 메커니즘은 무엇입니까?",
        "Options": {
            "1": "AWS Lambda 함수는 이벤트를 기록할 수 있지만, 계정 전반에 걸쳐 API 호출을 추적하는 데 사용되지 않습니다.",
            "2": "AWS CloudTrail은 계정 내에서 이루어진 API 호출의 상세 로그를 제공하고, 로그를 Amazon S3에 저장합니다.",
            "3": "AWS Config는 리소스 구성의 변경 사항을 캡처하지만 API 호출을 기록하지 않습니다.",
            "4": "Amazon CloudWatch Logs는 애플리케이션에서 로그를 캡처할 수 있지만 API 호출 로그를 제공하지 않습니다."
        },
        "Correct Answer": "AWS CloudTrail은 계정 내에서 이루어진 API 호출의 상세 로그를 제공하고, 로그를 Amazon S3에 저장합니다.",
        "Explanation": "AWS CloudTrail은 AWS 계정에서 이루어진 API 호출을 기록하도록 특별히 설계되어 포괄적인 감사 추적을 제공합니다. 로그는 추가 분석 및 준수 목적을 위해 Amazon S3에 저장되어 이 요구 사항에 가장 적합한 선택입니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스 구성의 변경 사항을 추적하는 데 중점을 두며, API 호출 자체를 기록하지 않기 때문에 필요한 활동 로그를 캡처하는 데 적합하지 않습니다.",
            "Amazon CloudWatch Logs는 주로 애플리케이션 및 서비스에서 생성된 로그를 수집하고 모니터링하는 데 사용됩니다. 로그 데이터를 캡처할 수 있지만, AWS API 호출을 본질적으로 기록하지는 않습니다.",
            "AWS Lambda 함수는 이벤트를 기록할 수 있지만, 더 세부적인 수준에서 작동하며 AWS 계정 전반에 걸쳐 모든 API 호출을 추적하는 포괄적인 솔루션이 아닙니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 DevOps 팀은 EC2 인스턴스와 컨테이너 이미지를 포함한 AWS 환경의 보안을 관리하는 책임이 있습니다. 이들은 이러한 리소스에서 알려진 취약점을 정기적으로 스캔하여 준수를 보장하고 보안 위험을 완화하는 전략을 구현해야 합니다.",
        "Question": "팀이 EC2 인스턴스와 컨테이너 이미지에서 알려진 취약점을 효과적으로 스캔하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "Amazon GuardDuty를 활성화하여 네트워크 트래픽을 모니터링하고 EC2 인스턴스의 취약점에 대한 경고를 제공합니다.",
            "2": "AWS Systems Manager Patch Manager를 구현하여 EC2 인스턴스의 보안 패치를 자동화합니다.",
            "3": "AWS Lambda 함수를 사용하여 Amazon Elastic Container Registry (ECR)에서 컨테이너 이미지 스캔을 예약합니다.",
            "4": "Amazon Inspector를 활용하여 EC2 인스턴스의 취약점을 스캔하고 상세 보고서를 생성합니다.",
            "5": "AWS와 통합된 서드파티 취약점 스캐닝 도구를 설정하여 EC2 인스턴스와 컨테이너 이미지를 지속적으로 모니터링합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon Inspector를 활용하여 EC2 인스턴스의 취약점을 스캔하고 상세 보고서를 생성합니다.",
            "AWS Lambda 함수를 사용하여 Amazon Elastic Container Registry (ECR)에서 컨테이너 이미지 스캔을 예약합니다."
        ],
        "Explanation": "Amazon Inspector는 EC2 인스턴스의 취약점 평가를 위해 특별히 설계되어 팀이 보안 취약점을 효과적으로 식별하고 수정할 수 있도록 합니다. ECR에서 컨테이너 이미지 스캔을 트리거하기 위해 AWS Lambda를 사용하는 것은 배포 전에 이미지를 정기적으로 취약점 검사하여 안전한 환경을 유지하는 데 도움이 됩니다.",
        "Other Options": [
            "AWS Systems Manager Patch Manager는 패치를 적용하는 데 유용하지만, 인스턴스 자체에서 알려진 취약점을 스캔하지는 않습니다.",
            "Amazon GuardDuty는 위협 탐지 및 모니터링에 중점을 두고 있어 알려진 취약점을 스캔하는 특정 요구 사항을 충족하지 못합니다.",
            "서드파티 취약점 스캐닝 도구는 효과적일 수 있지만, 유사한 기능을 제공하는 AWS의 내장 서비스에 비해 추가 비용과 복잡성을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "보안 분석가는 손상된 것으로 보이는 EC2 인스턴스와 관련된 잠재적인 보안 침해를 조사하고 있습니다. 철저한 조사를 수행하기 위해 EBS 볼륨 스냅샷 및 메모리 덤프와 같은 포렌식 데이터를 수집해야 합니다. 또한 사건 발생 전후의 이벤트와 관련된 맥락적 통찰력을 얻기 위해 S3 버킷에 저장된 로그를 쿼리하고자 합니다.",
        "Question": "분석가가 필요한 포렌식 데이터를 효과적으로 캡처하고 보안 로그를 분석하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "손상된 인스턴스의 EBS 스냅샷을 생성하고 Amazon Athena를 사용하여 S3 로그에서 관련 이벤트를 쿼리합니다.",
            "2": "사건 발생 후 EC2 인스턴스의 보안 구성을 모니터링하기 위해 AWS Config를 활성화합니다.",
            "3": "AWS Lambda를 사용하여 손상된 인스턴스의 EBS 볼륨과 로그를 자동으로 삭제합니다.",
            "4": "EC2 인스턴스를 즉시 종료하고 분석을 위해 CloudWatch에서 로그를 다운로드합니다."
        },
        "Correct Answer": "손상된 인스턴스의 EBS 스냅샷을 생성하고 Amazon Athena를 사용하여 S3 로그에서 관련 이벤트를 쿼리합니다.",
        "Explanation": "EBS 스냅샷을 생성하면 분석가가 손상된 인스턴스의 상태를 보존하여 추가 포렌식 분석을 수행할 수 있습니다. S3에서 로그를 쿼리하기 위해 Amazon Athena를 사용하면 침해로 이어진 보안 이벤트를 이해하는 데 도움이 되는 맥락적 정보를 제공합니다.",
        "Other Options": [
            "EC2 인스턴스를 종료하면 중요한 포렌식 증거가 손실되어 사건 발생 시 인스턴스의 상태를 분석할 수 없게 됩니다. CloudWatch에서 로그를 다운로드하는 것은 S3 로그를 직접 쿼리하는 것에 비해 필요한 모든 맥락을 제공하지 않을 수 있습니다.",
            "AWS Lambda를 사용하여 EBS 볼륨과 로그를 삭제하는 것은 비생산적이며, 이는 조사에 도움이 될 수 있는 귀중한 포렌식 데이터를 제거하게 됩니다.",
            "AWS Config를 활성화하는 것은 구성 변경을 모니터링하는 데 유용하지만 손상된 인스턴스에서 포렌식 증거를 캡처하거나 사건과 관련된 로그를 분석하는 데 직접적으로 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "회사는 AWS에서 애플리케이션 로드 밸런서(ALB) 뒤에 있는 오토 스케일링 그룹의 웹 서버로 다계층 아키텍처를 배포하고 있습니다. 회사는 웹 서버와 백엔드 데이터베이스 서버 간의 모든 트래픽이 암호화되도록 해야 합니다. 또한, 개발자들이 오토 스케일링 그룹의 EC2 인스턴스에 대한 SSH 접근을 간소화하고자 합니다. 회사는 안전한 접근 관리를 위해 AWS Systems Manager Session Manager를 사용하고 SSH 접근을 위해 EC2 Instance Connect를 사용하기로 결정했습니다. SecOps 팀은 트래픽이 안전하게 관리되고 전송 중에 민감한 데이터가 노출되지 않도록 해야 합니다.",
        "Question": "웹 서버와 데이터베이스 간의 안전한 연결 관리 및 개발자를 위한 SSH 접근을 위한 가장 안전하고 효율적인 설정은 무엇입니까?",
        "Options": {
            "1": "웹 서버가 AWS Secrets Manager를 사용하여 데이터베이스 자격 증명을 관리하면서 SSL을 통해 데이터베이스에 연결하도록 구성합니다. 관리 콘솔을 통해 웹 서버에 대한 SSH 접근을 위해 EC2 Instance Connect를 활성화합니다.",
            "2": "데이터베이스가 웹 서버 보안 그룹에서만 연결을 수락하도록 설정합니다. SSH 접근을 위해 Session Manager를 사용하여 웹 서버에 접근하며, 인바운드 SSH 포트가 열리지 않도록 합니다.",
            "3": "웹 서버와 데이터베이스 VPC 간에 VPC 피어링을 구현하여 트래픽을 암호화합니다. 직접 접근을 위해 배스천 호스트를 통해 웹 서버에 대한 SSH 접근을 허용합니다.",
            "4": "AWS PrivateLink를 사용하여 웹 서버와 데이터베이스 간의 안전한 연결을 설정합니다. SSH 키가 안전하게 관리되도록 하여 웹 서버에 대한 SSH 접근을 위해 EC2 Instance Connect를 활용합니다."
        },
        "Correct Answer": "AWS PrivateLink를 사용하여 웹 서버와 데이터베이스 간의 안전한 연결을 설정합니다. SSH 키가 안전하게 관리되도록 하여 웹 서버에 대한 SSH 접근을 위해 EC2 Instance Connect를 활용합니다.",
        "Explanation": "AWS PrivateLink를 사용하면 서비스를 VPC 간에 안전하게 연결할 수 있으며, 이를 통해 공용 인터넷에 노출되지 않고 모든 전송 데이터가 보호됩니다. EC2 Instance Connect는 SSH 키를 수동으로 관리할 필요 없이 안전한 SSH 접근을 가능하게 하여 운영을 간소화하고 보안을 향상시킵니다.",
        "Other Options": [
            "웹 서버가 SSL을 통해 데이터베이스에 연결하는 것은 안전하지만, Secrets Manager를 통해 데이터베이스 자격 증명을 관리하는 것은 전체 트래픽 보안을 보장하기에 충분하지 않습니다. 또한, 관리 콘솔을 통해 EC2 Instance Connect를 활성화하는 것은 웹 서버와 데이터베이스 간의 안전한 연결 필요성을 해결하지 않습니다.",
            "데이터베이스 연결을 웹 서버 보안 그룹으로 제한하는 것은 보안을 강화하지만 전송 중인 데이터를 암호화하지는 않습니다. Session Manager는 SSH 접근을 위한 좋은 옵션이지만, 웹 서버와 데이터베이스 간의 트래픽 전체 보안을 해결하지는 않습니다.",
            "VPC 피어링은 웹 서버와 데이터베이스 VPC를 안전하게 연결할 수 있지만, 트래픽을 자동으로 암호화하지는 않습니다. SSH 접근을 위해 배스천 호스트를 사용하는 것은 잠재적인 보안 취약점의 또 다른 계층을 노출시키며 추가 관리 오버헤드를 요구합니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "회사는 여러 EC2 인스턴스의 애플리케이션 로그를 모니터링하기 위해 AWS CloudWatch Logs를 사용하고 있습니다. 특정 AWS 계정의 애플리케이션 로그를 다른 AWS 계정의 CloudWatch Logs 그룹으로 전송하여 중앙 집중식 모니터링 및 분석을 수행해야 합니다.",
        "Question": "회사가 이 크로스 계정 로그 포워딩을 달성하기 위한 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "전송 계정에서 CloudTrail 트레일을 설정하여 모든 API 호출을 기록하고 이를 수신 계정의 CloudWatch Logs 그룹으로 전송하도록 구성합니다.",
            "2": "AWS Lambda를 사용하여 전송 계정에서 로그를 폴링하고 이를 수신 계정의 CloudWatch Logs 그룹으로 정기적으로 푸시합니다.",
            "3": "전송 계정의 CloudWatch Logs에 수신 계정의 Kinesis 스트림을 참조하는 대상을 생성하고, 전송 계정이 대상에 로그를 쓸 수 있도록 리소스 기반 정책을 설정합니다.",
            "4": "전송 계정의 EC2 인스턴스에 CloudWatch Agent를 설치하고 이를 수신 계정의 CloudWatch Logs 그룹으로 직접 로그를 전송하도록 구성합니다."
        },
        "Correct Answer": "전송 계정의 CloudWatch Logs에 수신 계정의 Kinesis 스트림을 참조하는 대상을 생성하고, 전송 계정이 대상에 로그를 쓸 수 있도록 리소스 기반 정책을 설정합니다.",
        "Explanation": "CloudWatch Logs에 대상을 생성하면 효율적이고 통제된 크로스 계정 로그 포워딩이 가능하며, 수신 계정의 Kinesis 스트림이 수신 로그를 처리하도록 하여 리소스 기반 정책이 전송 계정에 필요한 권한을 보장합니다.",
        "Other Options": [
            "CloudTrail 트레일을 설정하는 것은 로그 데이터를 직접 포워딩하지 않으며, API 호출 및 이벤트를 기록하는 것이므로 애플리케이션 로그의 요구 사항이 아닙니다.",
            "AWS Lambda를 사용하여 로그를 폴링하는 것은 불필요한 복잡성을 추가하며 지연을 초래할 수 있습니다. 이는 실시간 솔루션이 아니며 CloudWatch의 크로스 계정 로그 포워딩 기능을 활용하지 않습니다.",
            "CloudWatch Agent를 설치하면 로그를 수신 계정으로 보낼 수 있지만, 이 방법은 크로스 계정 작업을 위한 대상 및 리소스 기반 정책을 사용하는 것보다 통제 및 효율성이 떨어집니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "컴플라이언스 관리자는 모든 AWS 리소스가 특정 보안 구성 및 모범 사례를 준수하도록 해야 합니다. 관리자는 AWS 리소스의 구성을 지속적으로 평가하고 비준수 리소스가 감지될 때 경고를 받기를 원합니다. 이 컴플라이언스 평가를 효과적으로 자동화하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Question": "AWS 리소스 구성의 컴플라이언스를 지속적으로 평가하기 위한 최상의 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 리소스 변경에 대한 API 호출을 기록하고 컴플라이언스 검사를 위해 로그를 수동으로 검토합니다.",
            "2": "Amazon CloudWatch Events를 설정하여 예약된 간격으로 리소스 구성을 확인하는 Lambda 함수를 트리거합니다.",
            "3": "AWS Systems Manager를 활용하여 리소스에 패치 및 업데이트를 적용하지만, 컴플라이언스 평가에는 사용하지 않습니다.",
            "4": "AWS Config 규칙을 구현하여 리소스 구성을 평가하고 비준수에 대한 Amazon SNS 알림을 생성합니다."
        },
        "Correct Answer": "AWS Config 규칙을 구현하여 리소스 구성을 평가하고 비준수에 대한 Amazon SNS 알림을 생성합니다.",
        "Explanation": "AWS Config는 AWS 리소스의 구성을 평가, 감사 및 검토하기 위해 특별히 설계되었습니다. AWS Config 규칙을 구현함으로써 컴플라이언스 검사를 자동화하고 비준수 리소스에 대한 알림을 받을 수 있어 지속적인 모니터링 요구 사항을 효과적으로 충족할 수 있습니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 API 호출을 기록하고 모니터링하는 데 사용되며, 리소스 구성을 평가하는 데 사용되지 않습니다. 리소스에 대한 작업에 대한 유용한 정보를 제공하지만, 미리 정의된 규칙에 대한 컴플라이언스를 자동으로 평가하지는 않습니다.",
            "AWS Systems Manager는 패치 관리 및 리소스 관리 자동화와 같은 운영 작업에 중점을 두지만, 리소스 구성의 컴플라이언스를 평가하는 직접적인 방법을 제공하지 않습니다.",
            "Amazon CloudWatch Events는 이벤트에 따라 작업을 트리거할 수 있지만, 구성을 확인하는 데 사용하려면 Lambda 함수를 통한 추가 사용자 정의 구현이 필요하여 비효율적이며 AWS Config의 전용 컴플라이언스 평가 기능을 활용하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사는 AWS 환경을 위한 강력한 보안 거버넌스 프레임워크를 구축하려고 합니다. 그들은 산업 표준을 준수하고 보안 태세를 효과적으로 관리하기를 원합니다. 보안 팀은 AWS Security Hub와 AWS Audit Manager를 사용하여 보안 통제 및 컴플라이언스 상태의 증거를 수집하고 조직하는 것을 고려하고 있습니다.",
        "Question": "이 맥락에서 보안 팀이 AWS Security Hub와 AWS Audit Manager를 효과적으로 활용하기 위한 가장 효과적인 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Audit Manager를 사용하여 컴플라이언스 증거를 자동으로 생성한 다음, AWS Security Hub의 발견 사항과 통합하여 전체 보안 태세를 평가합니다.",
            "2": "AWS Audit Manager를 구성하여 표준 준수를 추적하고 AWS Security Hub를 사용하여 보안 사고를 시각화하여 두 가지를 독립적으로 검토합니다.",
            "3": "AWS Security Hub를 활용하여 계정 및 리전 전반에 걸쳐 보안 발견 사항을 수집한 다음, AWS Audit Manager를 사용하여 수동으로 컴플라이언스 보고서를 작성합니다.",
            "4": "AWS Security Hub만 사용하여 보안 발견 사항을 수집하고 컴플라이언스 보고를 위해 서드파티 도구에 의존하여 AWS Audit Manager를 우회합니다."
        },
        "Correct Answer": "AWS Audit Manager를 사용하여 컴플라이언스 증거를 자동으로 생성한 다음, AWS Security Hub의 발견 사항과 통합하여 전체 보안 태세를 평가합니다.",
        "Explanation": "이 접근 방식은 보안 팀이 AWS Audit Manager의 자동화 기능을 활용하여 컴플라이언스 증거를 제공하면서 동시에 AWS Security Hub를 사용하여 보안 발견 사항에 대한 포괄적인 뷰를 제공하여 전체 보안 태세를 효과적으로 평가할 수 있게 합니다.",
        "Other Options": [
            "컴플라이언스 보고서를 수동으로 작성하는 것은 가능하지만 비효율적이며 인적 오류가 발생할 수 있습니다. AWS 서비스의 자동화 및 통합 기능을 효과적으로 활용하지 못합니다.",
            "컴플라이언스 및 보안 측면을 독립적으로 검토하는 것은 전체적인 뷰를 제공하지 않습니다. 발견 사항과 증거를 통합하는 것이 효과적인 보안 거버넌스에 중요합니다.",
            "AWS Audit Manager를 우회하고 AWS Security Hub에만 의존하여 보안 발견 사항을 수집하는 것은 보안 프레임워크를 향상시킬 수 있는 자동화 및 컴플라이언스 추적 기능을 간과하는 것입니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 회사는 AWS 리소스를 더 나은 관리 및 보안 거버넌스를 위해 서로 다른 그룹으로 조직할 필요가 있습니다. 이 회사는 각 부서가 특정 접근 제어 및 리소스 가시성을 요구하고 있습니다. 보안 팀은 리소스가 적절하게 그룹화되고 관리되도록 해야 합니다.",
        "Question": "보안 팀이 관리 및 보안 거버넌스를 위해 AWS 리소스를 효과적으로 조직하기 위해 어떤 전략을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "모든 사용자가 모든 리소스에 접근할 수 있도록 IAM 역할을 설정합니다.",
            "2": "각 부서를 위한 조직 단위가 있는 AWS Organizations를 생성합니다.",
            "3": "AWS Config를 활용하여 리소스 구성을 모니터링하고 평가합니다.",
            "4": "태그별로 리소스를 관리하기 위해 AWS Resource Groups를 구현합니다.",
            "5": "모든 리소스를 단일 위치에 저장하기 위해 Amazon S3 버킷을 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "각 부서를 위한 조직 단위가 있는 AWS Organizations를 생성합니다.",
            "태그별로 리소스를 관리하기 위해 AWS Resource Groups를 구현합니다."
        ],
        "Explanation": "AWS Organizations를 생성하여 각 부서별로 조직 단위를 두면 리소스를 부서별로 더 잘 관리할 수 있어 맞춤형 정책 및 접근 제어가 가능합니다. 태그별로 리소스를 관리하기 위해 AWS Resource Groups를 구현하면 특정 기준이나 프로젝트에 따라 리소스를 조직하고 관리하는 데 유연성을 제공하여 거버넌스 및 운영 효율성을 향상시킵니다.",
        "Other Options": [
            "모든 리소스를 단일 위치에 저장하기 위해 Amazon S3 버킷을 사용하는 것은 AWS 리소스를 효과적으로 그룹화하거나 관리하지 않습니다. S3는 주로 객체 저장소용이며, 부서 간의 다양한 AWS 서비스 리소스를 조직하는 데 도움이 되지 않습니다.",
            "모든 사용자가 모든 리소스에 접근할 수 있도록 IAM 역할을 설정하는 것은 과도한 권한을 부여하여 상당한 보안 위험을 초래하며, 최소 권한 원칙을 위반하고 접근 거버넌스를 관리하기 어렵게 만듭니다.",
            "AWS Config를 활용하여 리소스 구성을 모니터링하고 평가하는 것은 컴플라이언스에 유용하지만, 관리 목적을 위한 리소스의 조직이나 그룹화에 직접적으로 대응하지 않습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "한 금융 서비스 회사가 AWS 환경에서 보안 모니터링 솔루션을 구현하고 있습니다. 이들은 무단 API 호출이나 리소스 변경 사항에 대해 알림을 받을 수 있도록 하고자 합니다. 이 회사는 이벤트를 추적하고 보안 요구 사항을 충족하기 위해 알람을 제공할 수 있는 AWS 서비스를 고려하고 있습니다.",
        "Question": "무단 접근을 효과적으로 모니터링하고 알람을 제공하는 솔루션의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Config를 활성화하여 리소스 구성 변경을 모니터링하고 알림을 설정합니다.",
            "2": "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합합니다.",
            "3": "AWS Systems Manager를 구현하여 보안 패치 및 업데이트를 관리합니다.",
            "4": "Amazon CloudWatch Events를 구성하여 무단 API 작업에 대한 알람을 트리거합니다.",
            "5": "Amazon EventBridge를 설정하여 보안 이벤트를 라우팅하고 Lambda 함수를 트리거합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon CloudWatch Events를 구성하여 무단 API 작업에 대한 알람을 트리거합니다.",
            "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합합니다."
        ],
        "Explanation": "Amazon CloudWatch Events와 AWS CloudTrail을 함께 사용하면 강력한 보안 모니터링 솔루션을 생성할 수 있습니다. CloudTrail은 AWS 환경에서 이루어진 모든 API 호출의 상세 로그를 제공하며, CloudWatch Events는 CloudTrail에 의해 기록된 특정 무단 작업에 따라 알람을 트리거하여 잠재적인 보안 사건에 대한 적시 알림을 보장합니다.",
        "Other Options": [
            "AWS Config는 리소스 구성 및 준수를 모니터링하는 데 유용하지만 무단 API 작업에 대한 알림을 직접 제공하지는 않습니다.",
            "AWS Systems Manager는 패치 관리와 같은 운영 작업에 중점을 두며 API 호출이나 무단 접근에 대한 모니터링 또는 알림 기능을 제공하지 않습니다.",
            "Amazon EventBridge는 강력한 이벤트 버스 서비스이지만 이 맥락에서는 API 호출을 직접 모니터링하지 않으며, 보안 이벤트 모니터링을 위해 CloudTrail 또는 다른 서비스와의 통합이 필요합니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "DevOps 엔지니어가 AWS Systems Manager를 사용하여 여러 EC2 인스턴스에 애플리케이션 배포를 자동화하는 작업을 맡고 있습니다. 엔지니어는 데이터베이스 비밀번호와 같은 민감한 구성 데이터를 안전하게 저장하고 애플리케이션이 런타임 중에 접근할 수 있도록 하기를 원합니다. 또한, 엔지니어는 각 인스턴스에 수동으로 로그인하지 않고 EC2 인스턴스에서 명령을 실행해야 합니다.",
        "Question": "DevOps 엔지니어가 이러한 요구 사항을 충족하기 위해 구현해야 할 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "EC2 인스턴스에서 SSM Agent를 활성화하여 Run Command 기능을 사용합니다.",
            "2": "EC2 인스턴스에 AWS CloudTrail에 대한 접근을 허용하는 역할을 부여합니다.",
            "3": "AWS Systems Manager Parameter Store에서 Secure Strings를 생성합니다.",
            "4": "민감한 데이터를 AWS Secrets Manager에 저장합니다.",
            "5": "EC2 Run Command를 사용하여 인스턴스에서 명령을 실행합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Systems Manager Parameter Store에서 Secure Strings를 생성합니다.",
            "EC2 Run Command를 사용하여 인스턴스에서 명령을 실행합니다."
        ],
        "Explanation": "AWS Systems Manager Parameter Store에서 Secure Strings를 사용하면 DevOps 엔지니어가 데이터베이스 비밀번호와 같은 민감한 데이터를 안전하게 저장할 수 있으며, EC2 Run Command는 직접 접근할 필요 없이 여러 EC2 인스턴스에서 명령을 실행할 수 있게 하여 두 가지 요구 사항을 효율적으로 충족합니다.",
        "Other Options": [
            "민감한 데이터를 AWS Secrets Manager에 저장하는 것은 AWS Systems Manager Parameter Store의 사용과 직접적으로 관련이 없으므로 잘못된 옵션입니다.",
            "EC2 인스턴스에 AWS CloudTrail에 대한 접근을 허용하는 역할을 부여하는 것은 민감한 구성 데이터를 안전하게 처리하거나 EC2 인스턴스에서 명령을 실행할 필요를 해결하지 않습니다.",
            "EC2 인스턴스에서 SSM Agent를 활성화하는 것은 Run Command를 사용하기 위한 전제 조건이지만, 민감한 데이터를 안전하게 저장하거나 명령을 실행하는 특정 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 회사가 AWS에서 다중 계정 설정을 가지고 있으며 AWS Organizations를 사용하여 계정 간 권한을 관리하고 있습니다. 보안 팀은 특정 계정의 사용자가 중앙 로깅 계정의 리소스를 볼 수 있도록 허용하는 정책을 생성하는 임무를 맡고 있으며, 이 리소스를 수정할 수 있는 권한은 부여하지 않아야 합니다. 정책은 읽기 전용 접근만 허용하도록 범위가 설정되어야 합니다.",
        "Question": "보안 팀이 원하는 결과를 달성하기 위해 생성해야 할 IAM 정책은 무엇입니까?",
        "Options": {
            "1": "'logs:PutLogEvents' 및 'logs:CreateLogStream'을 로깅 계정 리소스에 허용합니다.",
            "2": "'logs:DescribeLogGroups' 및 'logs:GetLogEvents'를 로깅 계정 리소스에 허용합니다.",
            "3": "'logs:PutRetentionPolicy' 및 'logs:AssociateKmsKey'를 로깅 계정 리소스에 허용합니다.",
            "4": "'logs:DeleteLogGroup' 및 'logs:DeleteLogStream'을 로깅 계정 리소스에 허용합니다."
        },
        "Correct Answer": "'logs:DescribeLogGroups' 및 'logs:GetLogEvents'를 로깅 계정 리소스에 허용합니다.",
        "Explanation": "올바른 IAM 정책은 사용자가 로그 그룹을 보고 로그 이벤트를 가져올 수 있도록 하여 로깅 계정의 리소스에 대한 읽기 전용 접근 요구 사항을 충족합니다. 이를 통해 사용자는 로그를 모니터링하고 분석할 수 있지만 로그를 변경할 수는 없습니다.",
        "Other Options": [
            "이 옵션은 사용자가 로그 이벤트를 작성하고 로그 스트림을 생성할 수 있도록 하여 요구되는 읽기 접근을 초과하는 권한을 부여합니다.",
            "이 옵션은 사용자가 로그 그룹과 로그 스트림을 삭제할 수 있도록 하여 읽기 전용 접근 요구 사항과 모순되며, 사용자가 리소스를 제거할 수 있게 합니다.",
            "이 옵션은 사용자가 보존 정책을 설정하고 KMS 키를 연결할 수 있도록 하여 관리 작업을 허용하므로 요청된 읽기 전용 접근보다 더 많은 권한을 제공합니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "개발 팀이 AWS Lambda 함수에서 실행 세부 정보를 CloudWatch에 기록해야 하는 작업을 하고 있습니다. 이 함수는 SQS 큐에서 이벤트를 검색할 것입니다. 팀은 Lambda 함수가 이러한 작업을 안전하게 수행할 수 있도록 필요한 권한을 갖추면서 최소 권한 원칙을 준수하기를 원합니다.",
        "Question": "팀이 Lambda 함수의 권한을 구성하여 CloudWatch에 로그를 기록하고 SQS 큐에서 읽을 수 있도록 하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "Lambda 콘솔을 사용하여 권한을 자동으로 관리하고 추가 구성 없이 CloudWatch 로그 및 SQS에 접근할 수 있도록 허용합니다.",
            "2": "CloudWatch 로그 작업 및 SQS 읽기 작업에 대한 권한을 가진 실행 역할을 생성합니다. 최소 권한을 보장하기 위해 특정 SQS 큐에 대한 접근을 제한하는 IAM 정책을 구현합니다.",
            "3": "모든 AWS 서비스에 대한 전체 권한을 가진 실행 역할을 생성합니다. 리소스에 대한 접근 용이성을 위해 이 역할을 Lambda 함수에 연결합니다.",
            "4": "CloudWatch 로그 작업 및 SQS 읽기 작업에 대한 권한을 가진 Lambda 함수의 실행 역할을 생성합니다. SQS 큐가 함수를 호출할 수 있도록 리소스 정책을 사용합니다."
        },
        "Correct Answer": "CloudWatch 로그 작업 및 SQS 읽기 작업에 대한 권한을 가진 Lambda 함수의 실행 역할을 생성합니다. SQS 큐가 함수를 호출할 수 있도록 리소스 정책을 사용합니다.",
        "Explanation": "가장 좋은 접근 방식은 Lambda 함수에 대해 CloudWatch에 로그를 기록하고 SQS 큐에서 읽기 위해 필요한 권한만 부여하는 실행 역할을 생성하는 것입니다. SQS 큐가 함수를 호출할 수 있도록 리소스 정책을 사용하는 것은 보안을 더욱 강화합니다.",
        "Other Options": [
            "모든 AWS 서비스에 대한 전체 권한을 가진 실행 역할을 생성하는 것은 최소 권한 원칙을 위반하며 함수에 불필요한 위험을 노출시킵니다.",
            "Lambda 콘솔을 사용하여 권한을 관리하는 것은 설정을 간소화할 수 있지만, 안전한 구성을 위한 세부 사항을 제공하지 않으며 과도한 권한으로 이어질 수 있습니다.",
            "특정 SQS 큐에 대한 접근을 제한하는 것은 최소 권한에 좋지만, CloudWatch 로그 작업도 허용하지 않으면 Lambda 함수가 제대로 작동하지 않으므로 이 옵션은 불완전합니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사가 운영을 확장하고 여러 AWS 계정 간에 리소스를 안전하게 공유해야 합니다. 보안 팀은 보안 모범 사례를 유지하면서 공유 리소스에 대한 제어된 접근을 허용하는 솔루션을 구현하는 임무를 맡고 있습니다.",
        "Question": "보안 팀이 AWS 계정 간에 리소스를 안전하게 공유하기 위해 어떤 방법을 사용해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Resource Access Manager (AWS RAM)를 구현하여 계정 간에 리소스를 공유합니다.",
            "2": "AWS Service Catalog를 통해 리소스 공유를 활성화하여 계정 간 접근을 허용합니다.",
            "3": "교차 계정 권한을 가진 IAM 역할을 생성하고 이를 공유 리소스에 연결합니다.",
            "4": "Amazon S3 버킷 정책을 사용하여 역할 없이 여러 계정에서 접근을 허용합니다.",
            "5": "AWS Organizations를 구성하여 모든 회원 계정에 대한 접근 및 정책을 관리합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Resource Access Manager (AWS RAM)를 구현하여 계정 간에 리소스를 공유합니다.",
            "교차 계정 권한을 가진 IAM 역할을 생성하고 이를 공유 리소스에 연결합니다."
        ],
        "Explanation": "AWS Resource Access Manager (AWS RAM)를 사용하면 서로 다른 AWS 계정 간에 특정 리소스를 안전하게 공유할 수 있으며, 교차 계정 권한을 가진 IAM 역할을 생성하면 해당 리소스에 대한 제어된 접근을 제공하여 권한이 있는 계정만 접근할 수 있도록 보장합니다.",
        "Other Options": [
            "역할 없이 여러 계정에서 접근을 허용하기 위해 Amazon S3 버킷 정책을 사용하는 것은 모범 사례가 아니며, 이는 과도한 접근을 초래하고 계정 간 보안 관리가 복잡해질 수 있습니다.",
            "AWS Organizations를 구성하여 모든 회원 계정에 대한 접근 및 정책을 관리하는 것은 거버넌스에 유익하지만, 리소스 공유를 직접 촉진하지 않으며 정책 집행에 더 가깝습니다.",
            "AWS Service Catalog를 통해 리소스 공유를 활성화하는 것은 계정 간 리소스를 공유하는 주요 방법이 아니며, 리소스를 직접 공유하기보다는 AWS 리소스를 관리하고 배포하는 데 더 중점을 둡니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "DevOps 엔지니어가 민감한 고객 데이터를 처리하는 클라우드 기반 애플리케이션의 보안 태세를 강화하는 임무를 맡고 있습니다. 엔지니어는 애플리케이션에서 생성된 모든 로그 데이터를 수집, 정규화 및 상관 분석하여 효과적인 모니터링 및 분석을 보장하고자 합니다. 이를 달성하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "엔지니어가 여러 출처에서 로그 데이터를 중앙 집중식으로 자동 집계, 정규화 및 상관 분석하기 위해 어떤 AWS 서비스를 활용해야 합니까?",
        "Options": {
            "1": "Amazon CloudWatch Logs Insights",
            "2": "Amazon Elasticsearch Service",
            "3": "AWS CloudTrail",
            "4": "AWS Security Hub"
        },
        "Correct Answer": "Amazon Elasticsearch Service",
        "Explanation": "Amazon Elasticsearch Service는 다양한 출처에서 로그 데이터를 집계, 정규화 및 상관 분석하는 강력한 기능을 제공합니다. 중앙 집중식 로그 수집을 가능하게 하며, 고급 쿼리 및 시각화 도구를 제공하여 보안 모니터링 및 분석에 적합합니다.",
        "Other Options": [
            "Amazon CloudWatch Logs Insights는 로그 분석을 위한 주 쿼리 도구이지만, 중앙 집중식 모니터링 솔루션에 필요한 집계 및 정규화 기능을 제공하지 않습니다.",
            "AWS CloudTrail은 API 호출 및 AWS 서비스 이벤트를 기록하는 데 중점을 두고 있으며, 감사에는 유용하지만 다양한 애플리케이션 출처에서 로그를 집계하거나 정규화하지 않습니다.",
            "AWS Security Hub는 다양한 AWS 서비스에서 보안 결과를 집계하지만, Amazon Elasticsearch Service가 제공하는 상세한 로그 집계 및 상관 분석 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "조직이 다중 계정 AWS 환경을 배포하였으며 모든 계정에서 보안 이벤트를 모니터링하기 위한 중앙 집중식 솔루션이 필요합니다. 보안 팀은 모든 AWS CloudTrail 로그가 분석 및 준수 감사용으로 단일 S3 버킷에 통합되도록 해야 합니다. 그들은 수동 개입을 최소화하고 로그 수집 프로세스를 자동화하는 솔루션을 원합니다.",
        "Question": "운영 오버헤드를 최소화하면서 이러한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "각 계정에 CloudTrail 트레일을 생성하고 새 계정이 생성될 때마다 중앙 집중식 S3 버킷을 가리키는 CloudFormation 스택을 설정합니다.",
            "2": "각 계정에서 AWS CloudTrail을 활성화하고 AWS Lambda를 사용하여 주기적으로 각 계정의 CloudTrail 로그를 확인하고 이를 중앙 집중식 S3 버킷으로 전송합니다.",
            "3": "AWS Organizations를 사용하여 모든 계정에서 CloudTrail이 활성화되도록 요구하는 서비스 제어 정책을 생성하고 각 계정이 로그를 중앙 집중식 S3 버킷으로 전송하도록 구성합니다.",
            "4": "각 계정에서 AWS CloudTrail을 활성화하고 교차 계정 IAM 역할을 사용하여 로그를 중앙 집중식 S3 버킷으로 전송하도록 구성합니다."
        },
        "Correct Answer": "각 계정에서 AWS CloudTrail을 활성화하고 교차 계정 IAM 역할을 사용하여 로그를 중앙 집중식 S3 버킷으로 전송하도록 구성합니다.",
        "Explanation": "이 옵션은 모든 CloudTrail 로그가 초기 설정 후 지속적인 수동 구성이 필요 없이 중앙 집중식 S3 버킷으로 전송되도록 보장하는 간단하고 자동화된 방법을 제공합니다. 교차 계정 IAM 역할을 사용하면 권한 관리가 간소화되고 운영 오버헤드가 줄어듭니다.",
        "Other Options": [
            "이 옵션은 서비스 제어 정책을 생성하는 것과 관련이 있으며, CloudTrail이 로그를 S3 버킷으로 전송하도록 직접 구성하지 않습니다. 이 접근 방식은 실제 로그 통합을 위해 추가 단계가 필요할 수 있습니다.",
            "각 새 계정에 대해 CloudFormation 스택을 설정하면 여러 계정에 걸쳐 스택을 유지 관리해야 하므로 불필요한 복잡성과 운영 오버헤드가 발생합니다. 이는 교차 계정 역할을 사용하는 것만큼 효율적이지 않습니다.",
            "AWS Lambda에 의존하여 주기적으로 로그를 확인하는 것은 로그 가용성에 지연을 초래하고 Lambda 함수의 지속적인 유지 관리가 필요하므로 직접 로그 구성을 사용하는 것보다 덜 효율적인 솔루션입니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "한 금융 서비스 회사가 AWS를 활용하여 클라우드 리소스를 관리하고 있으며 비용 최적화와 지출 패턴의 이상 징후를 식별하는 데 주력하고 있습니다. 이 회사는 지출을 추적하기 위해 AWS Budgets를 설정했지만, 그들은 실시간 통찰력을 제공하고 비정상적인 지출 행동에 대해 경고할 수 있는 보다 자동화된 솔루션을 원합니다. 이 솔루션은 다른 AWS 서비스와 잘 통합되어야 하며, 상당한 수동 개입 없이 비용 관리 전략을 강화해야 합니다.",
        "Question": "다음 솔루션 중 어떤 것이 회사가 AWS 지출에서 실시간으로 이상 징후를 식별하는 데 가장 도움이 될까요?",
        "Options": {
            "1": "AWS Cost and Usage Reports를 모니터링하고 지출이 미리 정의된 임계값을 초과할 때 알림을 트리거하는 Amazon CloudWatch 알람을 설정합니다.",
            "2": "AWS Cost and Usage Reports를 주기적으로 분석하고 감지된 비정상적인 지출 패턴에 따라 경고를 전송하는 AWS Lambda 함수를 배포합니다.",
            "3": "AWS Cost Explorer를 사용하여 주간 지출 패턴을 수동으로 검토하고 검토 과정에서 이상 징후를 식별합니다.",
            "4": "특정 서비스에 대한 알림이 구성된 AWS Budgets를 구현하여 재무 팀에 예상치 못한 지출 증가를 알립니다."
        },
        "Correct Answer": "AWS Cost and Usage Reports를 주기적으로 분석하고 감지된 비정상적인 지출 패턴에 따라 경고를 전송하는 AWS Lambda 함수를 배포합니다.",
        "Explanation": "AWS Lambda 함수를 배포하면 비용 및 사용 데이터의 자동화된 실시간 분석이 가능하여 이상 징후를 신속하게 식별할 수 있습니다. 이 솔루션은 수동 개입을 최소화하고 즉각적인 통찰력을 제공하여 회사의 자동화된 모니터링 시스템 필요와 완벽하게 일치합니다.",
        "Other Options": [
            "AWS Cost and Usage Reports를 기반으로 Amazon CloudWatch 알람을 설정하는 것은 유용하지만 동일한 수준의 자동화를 제공하지 않습니다. 이는 미리 정의된 임계값에 의존하므로 모든 이상 징후를 효과적으로 포착하지 못할 수 있습니다.",
            "AWS Cost Explorer를 사용한 수동 검토는 실시간 이상 징후 감지에 이상적이지 않습니다. 이 방법은 반응적이며 지출 문제를 식별하는 데 지연을 초래할 수 있습니다.",
            "AWS Budgets에 알림을 구현하는 것은 올바른 방향으로 나아가는 단계이지만, 특정 지출 행동에 대한 세부적인 통찰력을 제공하기보다는 전체 예산 임계값에 주로 초점을 맞추기 때문에 특정 이상 징후를 놓칠 수 있습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "한 회사가 다양한 애플리케이션에서 생성된 로그 파일 저장을 위해 Amazon S3를 활용하고 있습니다. 이러한 로그가 보안 감사용으로 적절하게 기록되고 접근 가능하도록 보장하기 위해 보안 팀은 특정 S3 버킷 권한이 잘못 구성되어 있음을 확인했습니다. 팀은 로그 기능을 활성화하고 민감한 데이터를 노출하지 않으면서 적절한 무결성을 보장하기 위해 버킷의 접근 권한을 해결해야 합니다.",
        "Question": "로그 기능과 데이터 무결성을 보장하면서 무단 접근을 방지하기 위해 S3 버킷 권한을 수정하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "모든 애플리케이션이 권한 문제 없이 로그를 쓸 수 있도록 S3 버킷을 공개 접근을 허용하도록 설정합니다.",
            "2": "S3 버킷 정책을 수정하여 특정 IAM 사용자 및 역할만 로그를 읽고 쓸 수 있도록 허용하고 공개 접근을 비활성화합니다.",
            "3": "S3 버킷에서 버전 관리를 활성화하여 모든 이전 버전의 로그가 보존되고 감사 목적으로 접근 가능하도록 합니다.",
            "4": "S3 버킷에 쓰기 권한이 있는 로그 전용 IAM 역할을 생성하고 이를 모든 관련 애플리케이션에 연결합니다."
        },
        "Correct Answer": "S3 버킷 정책을 수정하여 특정 IAM 사용자 및 역할만 로그를 읽고 쓸 수 있도록 허용하고 공개 접근을 비활성화합니다.",
        "Explanation": "S3 버킷 정책을 수정하여 특정 IAM 사용자 및 역할에 대한 접근을 제한함으로써 보안 팀은 권한이 있는 엔티티만 로그를 쓸 수 있도록 보장하고, 민감한 로그 데이터를 보호하기 위해 공개 접근을 비활성화할 수 있습니다. 이 접근 방식은 로그 접근성과 보안 및 무결성의 필요성을 균형 있게 유지합니다.",
        "Other Options": [
            "버전 관리를 활성화하는 것만으로는 권한 문제를 해결하지 않으며, 버킷이 공개 접근을 허용할 경우 무단 접근이 발생할 수 있어 보안이 위협받을 수 있습니다.",
            "S3 버킷에 공개 접근을 허용하는 것은 심각한 보안 위험으로, 로그가 인터넷의 모든 사람에게 노출되어 데이터 유출의 가능성이 있습니다.",
            "로그 전용 IAM 역할을 생성하는 것은 애플리케이션에 유익하지만, S3 버킷 권한을 적절히 구성하지 않으면 보안 및 접근 제어의 필요성을 해결하지 못합니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "준수 담당자는 조직 내 특정 IAM 역할만이 민감한 AWS KMS 키에 접근할 수 있도록 보장하는 임무를 맡고 있습니다. 담당자는 무단 사용자가 키로 암호화 작업을 수행할 수 없도록 키 정책을 설계해야 합니다.",
        "Question": "인증된 IAM 역할만 KMS 키에 접근할 수 있도록 제한하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "kms:KeyPolicy 작업으로 키 정책에 IAM 역할을 지정합니다.",
            "2": "조직 단위를 기반으로 접근을 제한하기 위해 AWS Organizations를 구현합니다.",
            "3": "특정 사용자에게 KMS 키에 대한 접근을 부여하기 위해 리소스 기반 정책을 사용합니다.",
            "4": "모든 KMS 작업에 대한 권한을 부여하는 IAM 정책을 역할에 연결합니다."
        },
        "Correct Answer": "kms:KeyPolicy 작업으로 키 정책에 IAM 역할을 지정합니다.",
        "Explanation": "특정 IAM 역할만 KMS 키에 접근할 수 있도록 보장하는 가장 좋은 방법은 키 정책 내에서 이러한 역할을 명시적으로 정의하는 것입니다. 이를 통해 어떤 역할이 키로 암호화 작업을 수행할 수 있는지에 대한 정확한 제어가 가능해지며, 인증된 사용자만 접근할 수 있도록 제한할 수 있습니다.",
        "Other Options": [
            "모든 KMS 작업에 대한 권한을 부여하는 IAM 정책을 연결하면 무단 작업을 허용할 수 있으며, 이는 특정 역할에 필요한 권한만을 제한하지 않기 때문입니다.",
            "리소스 기반 정책은 KMS 키 정책에 적용되지 않으며, KMS 키 정책은 리소스 기반 정책이 아닌 키 자체에 대한 접근 제어를 정의하기 위해 특별히 설계되었습니다.",
            "AWS Organizations를 구현하면 계정 관리에 도움이 될 수 있지만, KMS 키에 대한 접근을 직접적으로 제한하지는 않습니다. 접근 제어는 키 정책 수준에서 처리해야 합니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "금융 서비스 회사는 여러 계정에 분산된 여러 EC2 인스턴스 간의 안전한 통신이 필요한 애플리케이션을 설계하고 있습니다. 인스턴스는 동일한 가용 영역 내의 서로 다른 서브넷에 배포되며, 인바운드 및 아웃바운드 트래픽에 대한 엄격한 제어를 유지해야 합니다. 회사는 이러한 공유 서브넷의 인스턴스가 공용 인터넷에 노출되지 않고 안전하게 통신할 수 있도록 보장하고자 합니다.",
        "Question": "보안 엔지니어는 EC2 인스턴스가 회사의 서브넷 공유 및 트래픽 제어 정책을 준수하면서 안전하게 통신할 수 있도록 무엇을 구성해야 합니까?",
        "Options": {
            "1": "EC2 인스턴스를 공용 서브넷에 배포하고 인터넷 게이트웨이를 통해 인스턴스 간의 제한 없는 통신을 촉진합니다.",
            "2": "각 서브넷에 대해 EC2 인스턴스의 필요한 IP 범위 간의 트래픽을 명시적으로 허용하는 사용자 지정 네트워크 ACL을 생성합니다.",
            "3": "서브넷에 대해 기본 네트워크 ACL을 사용합니다. 기본 ACL은 동일한 가용 영역 내의 인스턴스 간의 모든 인바운드 및 아웃바운드 트래픽을 허용합니다.",
            "4": "각 EC2 인스턴스에 탄력적 IP를 할당하여 인터넷의 어느 곳에서든 각 인스턴스에 대한 지속적이고 직접적인 접근을 보장합니다."
        },
        "Correct Answer": "각 서브넷에 대해 EC2 인스턴스의 필요한 IP 범위 간의 트래픽을 명시적으로 허용하는 사용자 지정 네트워크 ACL을 생성합니다.",
        "Explanation": "사용자 지정 네트워크 ACL을 생성하면 서브넷에 들어오고 나가는 트래픽에 대한 세밀한 제어가 가능합니다. 이를 통해 지정된 IP 범위만 통신할 수 있도록 하여 회사의 보안 정책에 부합하고 불필요한 공용 트래픽 노출을 방지합니다.",
        "Other Options": [
            "기본 네트워크 ACL을 사용하는 것은 잘못된 접근으로, 모든 트래픽을 허용하므로 트래픽에 대한 엄격한 제어 요구 사항을 충족하지 못하고 인스턴스를 원치 않는 접근에 노출시킬 수 있습니다.",
            "EC2 인스턴스를 공용 서브넷에 배포하고 인터넷 게이트웨이를 사용하는 것은 인스턴스를 공용 인터넷에 노출시키므로 안전한 내부 통신의 필요성과 모순됩니다.",
            "각 인스턴스에 탄력적 IP를 할당하면 공용 접근이 제공되며, 이는 인스턴스 간의 안전한 내부 통신에 필요하지 않으며 인터넷에 노출되어 보안 위험을 초래합니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "조직은 업데이트 및 통신을 위해 아웃바운드 인터넷 접근이 필요한 여러 애플리케이션을 호스팅하는 맞춤형 VPC를 운영하고 있습니다. 보안 팀은 이러한 애플리케이션이 직접적으로 인터넷에 노출되지 않고 안전하게 인터넷에 접근할 수 있도록 보장해야 합니다.",
        "Question": "애플리케이션에 아웃바운드 인터넷 접근을 제공하면서 높은 가용성과 보안을 보장하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "하나의 가용 영역에 Elastic IP가 있는 NAT 게이트웨이를 구현하고 모든 애플리케이션 인스턴스가 이를 통해 라우팅하도록 구성합니다.",
            "2": "공용 서브넷에 단일 NAT 인스턴스를 사용하여 아웃바운드 인터넷 접근을 관리하고 필요에 따라 자동 확장을 가능하게 합니다.",
            "3": "VPC에 인터넷 게이트웨이를 설정하고 모든 애플리케이션 인스턴스에 공용 IP를 할당하여 직접 인터넷 접근을 허용합니다.",
            "4": "각 가용 영역에 NAT 게이트웨이를 배포하여 각 애플리케이션이 로컬 NAT 게이트웨이를 통해 트래픽을 라우팅할 수 있도록 합니다."
        },
        "Correct Answer": "각 가용 영역에 NAT 게이트웨이를 배포하여 각 애플리케이션이 로컬 NAT 게이트웨이를 통해 트래픽을 라우팅할 수 있도록 합니다.",
        "Explanation": "각 가용 영역에 NAT 게이트웨이를 배포하면 아웃바운드 인터넷 접근에 대한 중복성과 높은 가용성을 보장할 수 있습니다. 이 접근 방식은 애플리케이션이 가장 가까운 NAT 게이트웨이를 활용할 수 있도록 하여 지연 시간을 줄이고 자동 장애 조치 기능을 제공합니다.",
        "Other Options": [
            "단일 NAT 인스턴스를 사용하는 것은 높은 가용성을 제공하지 않으며, NAT 게이트웨이처럼 자동으로 확장되지 않기 때문에 병목 현상이 발생할 수 있습니다.",
            "인터넷 게이트웨이를 설정하고 공용 IP를 할당하면 인스턴스가 인터넷에 직접 노출되어 보안 위험이 증가하며, 이는 개인 서브넷에서 아웃바운드 트래픽을 관리하는 최선의 방법이 아닙니다.",
            "하나의 가용 영역에 Elastic IP가 있는 NAT 게이트웨이를 구현하면 단일 실패 지점이 발생합니다. 해당 AZ가 다운되면 애플리케이션은 아웃바운드 인터넷 접근을 잃게 됩니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "한 회사가 AWS Secrets Manager를 사용하여 데이터베이스 자격 증명 및 API 키와 같은 민감한 정보를 저장하고 있습니다. 보안 팀은 보안을 강화하기 위해 이러한 비밀의 자동 회전을 구현해야 합니다. 그들은 특히 Secrets Manager의 내장 회전 기능에 의해 직접 지원되지 않는 다양한 서비스 유형에 대해 비밀을 회전할 수 있는 시스템을 보장하는 데 우려하고 있습니다.",
        "Question": "보안 팀이 Secrets Manager에서 직접 지원되지 않는 비밀의 자동 회전을 구현하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "AWS SDK를 사용하여 비밀을 업데이트하는 Lambda 함수를 생성하고 Secrets Manager가 이 함수를 회전을 위해 호출하도록 구성합니다.",
            "2": "AWS CloudFormation을 사용하여 비밀과 그 회전 정책을 정의하고, 이를 통해 회전 프로세스를 자동으로 관리합니다.",
            "3": "AWS Batch 작업을 예약하여 매달 비밀을 수동으로 회전하고 Secrets Manager에서 비밀을 가져오고 업데이트합니다.",
            "4": "모든 비밀에 대해 Systems Manager Parameter Store를 활용합니다. 이는 회전을 요구하지 않으며 무료입니다."
        },
        "Correct Answer": "AWS SDK를 사용하여 비밀을 업데이트하는 Lambda 함수를 생성하고 Secrets Manager가 이 함수를 회전을 위해 호출하도록 구성합니다.",
        "Explanation": "올바른 접근 방식은 AWS SDK를 사용하여 비밀의 회전을 처리할 수 있는 Lambda 함수를 생성하는 것입니다. 이 함수는 Secrets Manager에 의해 호출되어 비밀을 자동으로 회전할 수 있으며, Secrets Manager의 내장 회전 기능에 의해 직접 지원되지 않는 서비스도 수용할 수 있습니다.",
        "Other Options": [
            "Systems Manager Parameter Store를 사용하는 것은 자동 회전 기능을 제공하지 않으므로 이 시나리오의 주요 요구 사항에 부합하지 않으며 적합하지 않습니다.",
            "매달 비밀을 수동으로 회전하는 것은 비효율적이며 AWS Secrets Manager의 자동화 기능을 활용하지 않아 인적 오류의 위험을 증가시킵니다.",
            "AWS CloudFormation은 비밀의 회전을 관리하지 않으며, 인프라를 정의하는 데만 사용할 수 있습니다. 실제 회전을 위해서는 Lambda 함수와 같은 별도의 메커니즘이 필요합니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 회사가 Amazon EC2 인스턴스에서 S3 및 DynamoDB와 같은 다른 AWS 서비스에 대한 액세스가 필요한 새로운 애플리케이션을 배포하고 있습니다. 보안 팀은 EC2 인스턴스가 애플리케이션 코드에 AWS 자격 증명을 포함하지 않고도 이러한 서비스에 안전하게 액세스할 수 있도록 하기를 원합니다. 또한 필요한 리소스에만 액세스를 제한하기 위해 권한 관리에 대한 모범 사례를 따르기를 원합니다.",
        "Question": "EC2 인스턴스에 S3 및 DynamoDB에 대한 안전한 액세스를 부여하기 위한 가장 적절한 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Lambda를 사용하여 EC2 인스턴스의 요청을 처리하고 그들을 대신하여 S3 및 DynamoDB에 액세스합니다.",
            "2": "EC2 인스턴스에 S3 및 DynamoDB에 대한 액세스 권한이 있는 IAM 역할을 할당하고, 인스턴스가 런타임에 해당 역할을 수임하도록 합니다.",
            "3": "각 EC2 인스턴스에 대한 IAM 사용자를 생성하고 S3 및 DynamoDB에 대한 액세스 권한을 부여합니다.",
            "4": "EC2 인스턴스에서 실행되는 애플리케이션 코드에 AWS 액세스 키를 직접 포함하여 S3 및 DynamoDB에 액세스합니다."
        },
        "Correct Answer": "EC2 인스턴스에 S3 및 DynamoDB에 대한 액세스 권한이 있는 IAM 역할을 할당하고, 인스턴스가 런타임에 해당 역할을 수임하도록 합니다.",
        "Explanation": "EC2 인스턴스에 IAM 역할을 할당하면 코드에 자격 증명을 포함할 필요 없이 필요한 AWS 서비스에 안전하게 액세스할 수 있습니다. 이 접근 방식은 AWS 보안 모델을 활용하고 권한 관리에 대한 모범 사례를 따릅니다.",
        "Other Options": [
            "각 EC2 인스턴스에 대한 IAM 사용자를 생성하는 것은 비현실적이며, 각 인스턴스에 대한 자격 증명을 관리해야 하므로 자격 증명 유출 위험과 관리 복잡성을 증가시킵니다.",
            "AWS 액세스 키를 애플리케이션 코드에 직접 포함하는 것은 심각한 보안 위험을 초래합니다. 코드에 접근할 수 있는 사람은 누구나 자격 증명을 추출하고 악용할 수 있어 모범 사례를 위반하게 됩니다.",
            "AWS Lambda를 사용하여 요청을 처리하는 것은 아키텍처에 불필요한 복잡성과 지연을 추가합니다. EC2 인스턴스가 다른 AWS 서비스에 액세스하기 위해 IAM 역할을 직접 수임하는 것이 더 효율적이고 안전합니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 금융 기관이 온프레미스 데이터 센터와 AWS 환경 간에 안전한 통신 채널을 구축할 계획입니다. 기관은 데이터 전송 중 중복성을 보장하고 강력한 보안 통제를 구현해야 합니다. 그들은 AWS Site-to-Site VPN, AWS Direct Connect with VPN, MACsec와 같은 암호화 옵션을 고려하고 있습니다. 이 솔루션은 고가용성을 지원하고 데이터 보호를 위한 엄격한 규제 요구 사항을 준수해야 합니다.",
        "Question": "온프레미스 환경과 AWS 간의 가장 안전하고 중복된 통신을 제공하면서 규제 데이터 보호 기준을 준수하는 서비스 조합은 무엇입니까?",
        "Options": {
            "1": "AWS와의 직접 피어링 연결을 설정하고 데이터 전송 중 암호화를 위해 MACsec에만 의존합니다.",
            "2": "고가용성을 위한 활성-활성 구성으로 AWS Site-to-Site VPN을 활용하고 MACsec을 암호화에 사용합니다.",
            "3": "백업을 위해 VPN과 함께 AWS Direct Connect를 구현하고 IPsec을 사용하여 안전한 데이터 전송을 합니다.",
            "4": "AWS Transit Gateway를 설정하고 AWS Site-to-Site VPN을 사용하며 모든 데이터 전송에 대해 MACsec을 활성화합니다."
        },
        "Correct Answer": "고가용성을 위한 활성-활성 구성으로 AWS Site-to-Site VPN을 활용하고 MACsec을 암호화에 사용합니다.",
        "Explanation": "AWS Site-to-Site VPN은 활성-활성 구성을 통해 중복성을 갖춘 안전한 연결을 제공할 수 있으며, MACsec은 데이터 전송 중 강력한 암호화를 제공합니다. 이 조합은 기관의 보안 및 중복성 요구 사항을 충족합니다.",
        "Other Options": [
            "AWS Direct Connect와 VPN을 구현하면 중복성을 제공하지만, MACsec을 VPN과 직접 사용하는 것만큼의 보안 수준을 충족하지 못할 수 있습니다. 또한, MACsec의 추가 이점 없이 IPsec에만 의존하는 것은 기관의 엄격한 규제 요구 사항을 완전히 준수하지 않습니다.",
            "직접 피어링 연결을 설정하는 것은 필요한 중복성을 제공하지 않으며, VPN 및 Direct Connect가 제공하는 암호화 및 라우팅 기능이 부족하여 보안을 저해할 수 있어 규제 기준을 준수하기에 적합하지 않습니다.",
            "AWS Transit Gateway를 설정하고 AWS Site-to-Site VPN을 사용하는 것은 유효한 접근 방식이지만, 원하는 고가용성과 보안을 달성하기 위해 필요하지 않을 수 있는 복잡성을 도입합니다. 특히 MACsec은 Transit Gateway 연결에서 직접 지원되지 않습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "금융 서비스 회사는 특정 감사 기간 동안 외부 감사인에게 AWS 리소스에 대한 임시 액세스를 안전하게 부여할 수 있는 방법이 필요합니다. 이 회사는 액세스가 제한되고 감사가 완료된 후 자격 증명이 자동으로 만료되도록 하기를 원합니다. 이 요구 사항을 충족하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Question": "외부 감사인을 위해 임시 보안 자격 증명을 발급하는 데 어떤 AWS 서비스를 활용해야 합니까?",
        "Options": {
            "1": "AWS Identity and Access Management (IAM)",
            "2": "AWS Key Management Service (KMS)",
            "3": "AWS Security Token Service (AWS STS)",
            "4": "AWS Organizations"
        },
        "Correct Answer": "AWS Security Token Service (AWS STS)",
        "Explanation": "AWS Security Token Service (AWS STS)는 임시 보안 자격 증명을 발급하는 데 적합한 서비스입니다. 이는 정의된 기간 동안 제한된 권한을 부여하기 위해 사용할 수 있는 임시 액세스 토큰을 생성하고 관리할 수 있게 해주며, 이 시나리오에서 감사인의 요구에 이상적입니다.",
        "Other Options": [
            "AWS Identity and Access Management (IAM)은 영구 액세스 자격 증명을 제공하지만 특정 시간 후에 만료되는 임시 자격 증명을 발급할 수 있는 기능은 제공하지 않습니다.",
            "AWS Organizations는 여러 AWS 계정을 관리하는 데 사용되며 임시 자격 증명의 발급을 촉진하지 않습니다.",
            "AWS Key Management Service (KMS)는 주로 암호화 키를 생성하고 관리하는 데 사용되며 임시 보안 자격 증명을 발급하는 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "스타트업은 모바일 애플리케이션 사용자가 AWS IAM 자격 증명을 생성하고 관리할 필요 없이 특정 AWS 리소스에 접근할 수 있도록 하기를 원합니다. 애플리케이션 사용자는 Google 및 Facebook과 같은 인기 있는 신원 제공자를 통해 인증됩니다. 스타트업은 Security Token Service (STS)를 사용하여 AWS 리소스에 대한 연합 액세스를 위한 안전한 솔루션을 구현하는 것을 목표로 하고 있습니다.",
        "Question": "스타트업이 모바일 애플리케이션 사용자가 AWS IAM 자격 증명을 관리하지 않고도 AWS 리소스에 안전하게 접근할 수 있도록 하는 가장 적절한 방법은 무엇입니까?",
        "Options": {
            "1": "모든 모바일 애플리케이션 사용자에 대해 IAM 사용자를 생성하고 애플리케이션에서 자격 증명을 관리합니다.",
            "2": "Google 및 Facebook의 사용자 신원을 IAM 역할에 연합하는 Identity Broker를 설정합니다.",
            "3": "AWS CloudTrail을 사용하여 모바일 애플리케이션의 AWS 리소스 접근을 기록하고 모니터링합니다.",
            "4": "사용자 자격 증명을 로컬에 저장하고 AWS 서비스에 직접 인증하는 맞춤형 로그인 시스템을 구현합니다."
        },
        "Correct Answer": "Google 및 Facebook의 사용자 신원을 IAM 역할에 연합하는 Identity Broker를 설정합니다.",
        "Explanation": "Identity Broker를 사용하여 Google 및 Facebook의 사용자 신원을 IAM 역할에 연합하면 모바일 애플리케이션 사용자가 AWS IAM 자격 증명을 관리할 필요 없이 AWS 리소스에 안전하게 접근할 수 있습니다. 이 접근 방식은 STS를 활용하여 신원 제공자의 사용자 신원에 기반한 임시 자격 증명을 제공하여 안전하고 관리 가능한 액세스를 보장합니다.",
        "Other Options": [
            "모든 모바일 애플리케이션 사용자에 대해 IAM 사용자를 생성하는 것은 확장성이 없으며 자격 증명을 지속적으로 관리해야 하므로 연합 액세스를 사용하는 목적에 맞지 않습니다.",
            "사용자 자격 증명을 로컬에 저장하고 맞춤형 로그인 시스템을 구현하는 것은 민감한 정보를 노출하고 액세스 관리를 복잡하게 만드는 등 상당한 보안 위험을 초래합니다.",
            "AWS CloudTrail을 사용하여 접근을 기록하고 모니터링하는 것은 사용자를 인증하는 방법을 제공하지 않습니다. 이는 로깅 서비스이며 액세스 제어나 연합을 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "금융 서비스 회사는 여러 AWS 계정을 관리하기 위해 AWS Organizations를 구현하고 있습니다. 이 회사는 보안 거버넌스 요구 사항을 준수하기 위해 계정 간 정책을 시행하고자 합니다.",
        "Question": "AWS Organizations의 모든 계정에서 일관된 거버넌스를 보장하기 위해 어떤 단계의 조합이 필요합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Config에 대한 계정 간 액세스를 허용하도록 AWS Organizations를 구성하여 준수 검사가 시행되도록 합니다.",
            "2": "조직의 모든 계정에서 특정 서비스에 대한 액세스를 제한하는 서비스 제어 정책(SCP)을 생성합니다.",
            "3": "각 AWS 계정에서 IAM 역할을 사용하여 권한을 별도로 관리하되 중앙 집중식 제어는 하지 않습니다.",
            "4": "모든 계정에서 AWS Config 규칙을 구현하여 구성을 평가하고 준수를 모니터링합니다.",
            "5": "각 계정에서 AWS CloudTrail을 활성화하고 이를 중앙 Amazon S3 버킷에 로그를 전송하도록 구성하여 감사합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "조직의 모든 계정에서 특정 서비스에 대한 액세스를 제한하는 서비스 제어 정책(SCP)을 생성합니다.",
            "모든 계정에서 AWS Config 규칙을 구현하여 구성을 평가하고 준수를 모니터링합니다."
        ],
        "Explanation": "서비스 제어 정책(SCP)을 생성하면 조직의 모든 계정에서 권한과 제한을 중앙에서 관리할 수 있어 일관된 거버넌스를 보장합니다. AWS Config 규칙을 구현하면 모든 계정에서 보안 거버넌스 요구 사항에 대한 준수를 지속적으로 모니터링하고 시행하는 데 도움이 됩니다.",
        "Other Options": [
            "각 계정에서 AWS CloudTrail을 활성화하는 것은 감사에 대한 좋은 관행이지만 거버넌스를 직접 시행하지는 않습니다. 로깅에는 유용하지만 SCP와 같은 수준의 제어를 제공하지 않습니다.",
            "각 계정에서 권한을 별도로 관리하기 위해 IAM 역할을 사용하는 것은 중앙 집중식 거버넌스가 부족합니다. 이 접근 방식은 조직 내에서 일관되지 않은 정책과 준수 문제를 초래할 수 있습니다.",
            "AWS Config에 대한 계정 간 액세스를 허용하도록 AWS Organizations를 구성하는 것은 준수 검사를 시행하는 데 필요하지 않습니다. AWS Config는 각 계정 내에서 독립적으로 작동할 수 있으며, 준수 모니터링을 위해 계정 간 액세스가 필요하지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "보안 팀은 AWS 환경 내에서 네트워크 트래픽을 모니터링하여 잠재적인 보안 위협을 식별하는 임무를 맡고 있습니다. 그들은 애플리케이션의 성능에 영향을 주지 않으면서 트래픽 데이터를 캡처하고 분석하기 위해 가장 효과적인 AWS 서비스를 사용하고자 합니다.",
        "Question": "네트워크 트래픽을 캡처하고 분석하여 보안 텔레메트리를 향상시키기 위해 사용할 수 있는 AWS 서비스의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "트래픽 패턴을 분석하고 이상을 감지하기 위해 AWS Shield를 배포합니다.",
            "2": "AWS Traffic Mirroring을 사용하여 네트워크 패킷을 실시간으로 복제하고 분석합니다.",
            "3": "관련 서브넷에 대해 VPC Flow Logs를 활성화하여 네트워크 트래픽 데이터를 캡처합니다.",
            "4": "AWS Config를 구현하여 네트워크 설정 및 구성을 변경 사항을 추적합니다.",
            "5": "특정 트래픽 메트릭을 모니터링하기 위해 Amazon CloudWatch를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "관련 서브넷에 대해 VPC Flow Logs를 활성화하여 네트워크 트래픽 데이터를 캡처합니다.",
            "AWS Traffic Mirroring을 사용하여 네트워크 패킷을 실시간으로 복제하고 분석합니다."
        ],
        "Explanation": "VPC Flow Logs를 활성화하면 VPC 내의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 자세한 정보를 캡처할 수 있으며, 이는 보안 분석에 필수적입니다. Traffic Mirroring은 네트워크 패킷을 실시간으로 분석할 수 있게 하여 보안 조사를 위한 트래픽에 대한 더 깊은 통찰력을 제공합니다.",
        "Other Options": [
            "AWS Shield는 주로 DDoS 보호에 중점을 두고 있으며, 네트워크 트래픽 패턴에 대한 자세한 텔레메트리를 제공하지 않습니다.",
            "Amazon CloudWatch는 메트릭 모니터링에 유용하지만, 원시 트래픽 데이터를 캡처하지 않으며, VPC Flow Logs에서 파생된 메트릭만 분석할 수 있습니다.",
            "AWS Config는 구성 및 준수를 감사하기 위해 설계되었지만, 네트워크 트래픽 데이터를 특별히 캡처하지는 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "금융 서비스 회사는 AWS에 저장된 민감한 데이터를 보호하기 위해 엄격한 접근 제어 전략을 구현하고 있습니다. 그들은 특정 리소스에 대한 접근을 보장하기 위해 다양한 유형의 IAM 정책을 정의하고 적용해야 합니다. 보안 팀은 AWS 리소스 전반에 걸쳐 접근 제어를 효과적으로 시행하기 위해 관리형 정책과 리소스 기반 정책을 모두 활용하고자 합니다.",
        "Question": "다음 중 이 접근 제어 전략을 구현하는 데 사용할 수 있는 IAM 정책은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "태그에 따라 리소스에 대한 접근을 허용하거나 거부하는 ID 기반 정책을 설정합니다.",
            "2": "특정 IAM 사용자에게 맞춤형 권한을 부여하는 인라인 정책을 생성합니다.",
            "3": "S3 버킷에 대한 접근을 부여하는 IAM 역할에 관리형 정책을 연결합니다.",
            "4": "S3 버킷에 직접 리소스 기반 정책을 구현하여 교차 계정 접근을 허용합니다.",
            "5": "사용자 위치에 따라 작업을 제한하는 세션 제어 정책을 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "S3 버킷에 대한 접근을 부여하는 IAM 역할에 관리형 정책을 연결합니다.",
            "S3 버킷에 직접 리소스 기반 정책을 구현하여 교차 계정 접근을 허용합니다."
        ],
        "Explanation": "관리형 정책은 부착된 ID와 별개로 권한을 관리할 수 있는 방법을 제공하여 여러 사용자 또는 역할 간의 업데이트 및 재사용을 용이하게 합니다. 리소스 기반 정책은 S3 버킷과 같은 특정 리소스에 대한 접근을 보다 세분화하여 제어할 수 있게 하여 필요할 경우 교차 계정 접근을 가능하게 합니다.",
        "Other Options": [
            "인라인 정책은 사용자 또는 역할에 특정하며, 관리형 정책과 같은 수준의 재사용성을 제공하지 않아 광범위한 접근 제어 전략에 덜 효과적입니다.",
            "세션 제어 정책은 사용자 세션을 제어하기 위해 설계되었으며, 리소스 기반 정책과 같은 방식으로 리소스 권한을 정의하지 않습니다.",
            "ID 기반 정책은 주로 IAM ID에 대한 권한을 관리하며, 태그에 따라 접근을 제한할 수 있지만, 리소스 기반 정책에 비해 공유 리소스에 대한 제어 수준이 낮습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "회사는 사용자 신원 및 AWS 리소스에 대한 접근 관리를 요구하는 모바일 애플리케이션에 대한 사용자 인증 및 권한 부여를 구현하고 있습니다. 그들은 이를 위해 Amazon Cognito를 사용하는 것을 고려하고 있습니다. 애플리케이션은 사용자 풀을 통한 사용자 인증과 연합된 ID 풀을 통해 인증된 사용자에 대한 AWS 리소스 접근을 지원해야 합니다.",
        "Question": "다음 중 이 시나리오에서 Amazon Cognito의 기능을 올바르게 설명하는 문장은 무엇입니까?",
        "Options": {
            "1": "사용자 풀은 연합된 사용자에 대한 ID 풀 없이 직접 API Gateway 인증을 지원합니다.",
            "2": "ID 풀은 사용자 ID를 AWS IAM 역할에 매핑하여 사용자에게 임시 AWS 자격 증명을 제공합니다.",
            "3": "Cognito Sync는 게스트 사용자만을 위한 사용자 자격 증명을 저장하는 사용자 디렉토리를 제공합니다.",
            "4": "사용자 풀과 ID 풀 모두 인증할 수 있는 고유 사용자 수에 대해 엄격한 제한을 부과합니다."
        },
        "Correct Answer": "ID 풀은 사용자 ID를 AWS IAM 역할에 매핑하여 사용자에게 임시 AWS 자격 증명을 제공합니다.",
        "Explanation": "ID 풀은 연합된 ID를 IAM 역할에 매핑하여 사용자에게 임시 AWS 자격 증명을 제공하도록 설계되어 있으며, 이는 사용자 인증에 따라 AWS 리소스에 대한 접근을 허용하는 데 필수적입니다.",
        "Other Options": [
            "사용자 풀이 API Gateway 인증을 용이하게 할 수 있지만, 연합된 사용자와 관련하여 ID 풀의 필요성을 없애지는 않으므로 이 문장은 잘못되었습니다.",
            "사용자 풀과 ID 풀은 고유 사용자 수에 대해 엄격한 제한을 두지 않으며, Cognito는 무제한 사용자 수를 허용하므로 이 문장은 잘못되었습니다.",
            "Cognito Sync는 장치 간 사용자 데이터를 동기화하는 데 사용되며, 게스트 사용자에 국한되지 않고 모든 사용자 ID에 대한 키-값 쌍을 저장할 수 있으므로 이 문장은 잘못되었습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "한 회사가 클라우드 인프라의 다양한 이벤트에 대한 알림 관리를 위해 Amazon SNS를 사용하고 있습니다. 그들은 SNS 주제에 게시된 메시지가 특정 작업을 트리거하고 구독자에 의해 신뢰성 있게 처리되도록 보장하고자 합니다.",
        "Question": "Amazon SNS의 기능과 다른 AWS 서비스와의 통합에 관하여 다음 중 어떤 진술이 TRUE입니까?",
        "Options": {
            "1": "SNS는 구독자가 메시지를 받기 전에 구독을 검증할 필요가 없습니다.",
            "2": "SQS는 한 번에 단일 SNS 주제에서만 메시지를 받을 수 있습니다.",
            "3": "SNS 메시지는 항상 수신된 순서대로 전달되어 중복이 발생하지 않도록 보장합니다.",
            "4": "SNS는 AWS Lambda 함수를 직접 트리거하거나 SQS 큐에 메시지를 보내 추가 처리를 할 수 있습니다."
        },
        "Correct Answer": "SNS는 AWS Lambda 함수를 직접 트리거하거나 SQS 큐에 메시지를 보내 추가 처리를 할 수 있습니다.",
        "Explanation": "Amazon SNS는 AWS Lambda 함수를 직접 트리거하거나 SQS 큐에 알림을 보내 메시지의 비동기 처리를 가능하게 합니다. 이 통합은 서버리스 애플리케이션 및 분리된 아키텍처를 포함한 다양한 사용 사례를 지원합니다.",
        "Other Options": [
            "SNS는 푸시 메커니즘으로 작동하며 구독자에게 메시지를 전달할 수 있지만 메시지 순서를 보장하지 않으며 중복 메시지를 전달할 수 있어 이 진술은 잘못되었습니다.",
            "모든 구독자는 구독 과정에서 전송된 챌린지 메시지에 응답하여 SNS 주제에 대한 구독을 검증해야 하므로 이 진술은 잘못되었습니다.",
            "SQS는 여러 SNS 주제에서 메시지를 받을 수 있으므로 단일 SNS 주제로의 제한은 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 금융 서비스 회사가 AWS 환경에 대한 포괄적인 로깅 및 모니터링 전략을 구현하여 보안 태세를 강화하고자 합니다. 그들은 모든 활동이 기록되고 특정 보안 이벤트에 따라 경고가 생성되도록 보장하고자 합니다. 회사는 규정 준수 의무와 위험 관리 프레임워크를 고려하여 이를 달성하기 위한 최선의 접근 방식을 결정해야 합니다.",
        "Question": "회사가 비즈니스 및 보안 요구 사항을 충족하면서 AWS 환경을 효과적으로 모니터링하기 위해 구현해야 할 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합하여 경고를 설정합니다.",
            "2": "VPC 흐름 로그를 구현하여 네트워크 트래픽을 캡처하고 Amazon S3에 로그를 저장하여 장기 보존합니다.",
            "3": "DDoS 보호를 위해 AWS Shield Advanced를 활성화하고 완화 노력을 모니터링하기 위해 로깅을 활성화합니다.",
            "4": "AWS Config를 배포하여 리소스 구성 변경을 추적하고 규정 준수 위반에 대한 알림을 설정합니다."
        },
        "Correct Answer": "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합하여 경고를 설정합니다.",
        "Explanation": "AWS CloudTrail은 AWS 환경 내에서 이루어진 API 호출에 대한 자세한 로깅을 제공하며, 이는 감사 및 보안 모니터링에 필수적입니다. Amazon CloudWatch와 통합함으로써 회사는 특정 API 활동에 따라 경고를 설정하여 잠재적인 보안 사건에 신속하게 대응할 수 있으며, 규정 준수 요구 사항을 충족할 수 있습니다.",
        "Other Options": [
            "VPC 흐름 로그를 구현하는 것은 네트워크 트래픽 모니터링에 유용하지만 모든 API 호출을 캡처하지 않으며 보안 이벤트에 대한 로깅 및 경고 요구 사항을 완전히 충족하지 못할 수 있습니다.",
            "AWS Config를 배포하는 것은 리소스 구성 준수 및 변경 추적에 중점을 두지만 API 호출에 대한 포괄적인 로깅이나 보안 사건에 대한 실시간 경고를 제공하지 않습니다.",
            "AWS Shield Advanced를 활성화하면 DDoS 공격에 대한 보호를 제공하지만 모든 AWS 활동 및 보안 이벤트에 대한 포괄적인 로깅 및 모니터링 요구 사항을 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 금융 서비스 회사가 규제 요구 사항을 준수하기 위해 새로운 로깅 전략을 구현하고 있습니다. 그들은 AWS 환경에서 이루어진 모든 API 호출이 기록되고 로그 파일에 대한 무단 수정이 방지되도록 보장하고자 합니다. 이러한 요구 사항을 충족하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Question": "회사가 포괄적인 로깅 및 로그 파일 보호를 달성하기 위해 사용해야 할 AWS 서비스 및 기능의 조합은 무엇입니까?",
        "Options": {
            "1": "AWS Config 규칙을 구현하여 모든 API 호출을 기록하고 VPC 흐름 로그를 활성화하여 네트워크 트래픽 세부 정보를 캡처합니다.",
            "2": "API 호출 로깅을 위해 AWS CloudTrail을 활성화하고 로그 파일을 보호하기 위해 암호화 및 버전 관리가 포함된 S3 버킷 정책을 구현합니다.",
            "3": "API 호출 로깅을 위해 Amazon CloudWatch를 활용하고 S3 버킷 정책 변경을 모니터링하기 위해 AWS Config를 구성합니다.",
            "4": "CloudTrail을 사용하여 API 호출을 기록하고 로그 파일이 수정될 때 알림을 받기 위해 CloudWatch 경고를 설정합니다."
        },
        "Correct Answer": "API 호출 로깅을 위해 AWS CloudTrail을 활성화하고 로그 파일을 보호하기 위해 암호화 및 버전 관리가 포함된 S3 버킷 정책을 구현합니다.",
        "Explanation": "AWS CloudTrail은 AWS 환경 내에서 이루어진 API 호출에 대한 자세한 로깅을 제공하며, 이는 규정 준수에 필수적입니다. 암호화 및 버전 관리가 포함된 S3 버킷 정책을 구현하면 추가적인 보안 계층이 추가되어 로그 파일에 대한 무단 수정을 방지할 수 있습니다.",
        "Other Options": [
            "Amazon CloudWatch는 주로 모니터링 및 메트릭 수집에 사용되며 API 호출 로깅보다는 알림에 사용될 수 있지만 CloudTrail과 같은 포괄적인 API 호출 로깅을 제공하지 않습니다.",
            "AWS Config는 준수 모니터링 및 리소스 추적에 사용되지만 API 호출을 기록하지 않습니다. VPC 흐름 로그는 네트워크 트래픽을 캡처하지만 API 작업에 필요한 자세한 로깅을 제공하지 않습니다.",
            "CloudTrail이 API 호출을 기록하는 것은 사실이지만 CloudWatch 경고에만 의존하는 것은 로그 파일에 대한 무단 수정을 방지하지 않습니다. 암호화가 포함된 S3 버킷 정책과 같은 추가 보호가 필요합니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "한 금융 서비스 회사가 컴플라이언스 감사를 진행 중이며 Amazon S3 버킷에 저장된 민감한 고객 데이터를 식별해야 합니다. 이 회사는 민감한 정보 발견을 자동화하기 위해 Amazon Macie를 구현하기로 결정했습니다. 이는 데이터 보호 규정을 준수하는 데 도움이 될 것입니다.",
        "Question": "다음 중 Amazon Macie의 어떤 기능이 회사가 S3 버킷 내에서 개인 식별 정보(PII)와 같은 민감한 데이터를 식별할 수 있도록 합니까?",
        "Options": {
            "1": "데이터 분류 및 태깅",
            "2": "민감한 데이터 발견",
            "3": "S3 버킷 인벤토리",
            "4": "관리형 데이터 손실 방지"
        },
        "Correct Answer": "민감한 데이터 발견",
        "Explanation": "Amazon Macie의 민감한 데이터 발견 기능은 S3 버킷에서 PII를 포함한 민감한 데이터 유형을 스캔하여 조직이 민감한 정보를 효과적으로 식별하고 보호할 수 있도록 돕습니다. 이는 데이터 보호 규정을 준수하는 데 매우 중요합니다.",
        "Other Options": [
            "데이터 분류 및 태깅은 데이터를 분류하는 과정이지만 S3 내에서 민감한 데이터 유형을 식별하는 데 특별히 초점을 맞추지 않습니다.",
            "S3 버킷 인벤토리는 S3 버킷 내 객체와 그 메타데이터의 목록을 제공하지만 민감한 데이터 내용을 분석하거나 식별하지 않습니다.",
            "관리형 데이터 손실 방지는 무단 데이터 접근 또는 공유를 방지하는 것과 관련이 있지만 S3 내에서 민감한 데이터를 발견하는 기능을 특별히 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 금융 서비스 회사가 API Gateway를 사용하여 거래를 관리하는 REST API를 배포했습니다. 이 API는 여러 내부 애플리케이션과 파트너의 접근을 허용하도록 구성되어 있지만, 회사는 승인된 사용자만 API와 상호작용할 수 있도록 보장해야 하며, 남용을 방지하고 API Gateway와 백엔드 서비스 간의 안전한 통신을 보장해야 합니다. 회사는 특히 속도 제한과 크로스 계정 접근에 대해 우려하고 있습니다.",
        "Question": "API의 보안 및 접근 제어를 강화할 수 있는 구성의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "특정 AWS 계정의 IAM 역할에서 execute-api:Invoke를 허용하는 리소스 기반 정책을 API에 연결합니다.",
            "2": "API Gateway에서 CORS를 활성화하여 모든 도메인에서의 교차 출처 요청을 허용합니다.",
            "3": "API Gateway에서 IP 주소를 기반으로 속도 제한을 시행하기 위해 사용 계획을 설정합니다.",
            "4": "API 접근을 위한 OAuth 토큰을 검증하기 위해 Lambda 인증자를 구현합니다.",
            "5": "더 쉬운 연결을 위해 모든 IP 범위가 API에 접근할 수 있도록 API Gateway를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "API 접근을 위한 OAuth 토큰을 검증하기 위해 Lambda 인증자를 구현합니다.",
            "특정 AWS 계정의 IAM 역할에서 execute-api:Invoke를 허용하는 리소스 기반 정책을 API에 연결합니다."
        ],
        "Explanation": "Lambda 인증자를 사용하면 OAuth 토큰을 검증하여 인증에 대한 세밀한 제어가 가능하므로 승인된 사용자만 API에 접근할 수 있습니다. 또한, API에 리소스 기반 정책을 연결하면 특정 IAM 역할이 API를 안전하게 호출할 수 있도록 제어된 크로스 계정 접근을 가능하게 합니다.",
        "Other Options": [
            "이 옵션은 모든 IP 범위가 API에 접근할 수 있도록 허용하면 잠재적인 남용 및 무단 접근에 노출되어 보안 조치를 약화시키기 때문에 잘못된 것입니다.",
            "이 옵션은 IP 주소만을 기반으로 속도 제한을 시행하기 위한 사용 계획을 설정하는 것이 사용자 인증의 필요성을 해결하지 못하고 적절히 보안되지 않으면 남용으로 이어질 수 있기 때문에 잘못된 것입니다.",
            "이 옵션은 모든 도메인에서의 요청을 허용하기 위해 CORS를 활성화하면 민감한 데이터가 처리되는 경우 API가 보안 취약점에 노출될 수 있기 때문에 잘못된 것입니다. CORS는 무단 접근을 방지하기 위해 특정 출처로 구성되어야 합니다."
        ]
    }
]