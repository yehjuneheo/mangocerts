[
    {
        "Question Number": "1",
        "Situation": "Uma empresa global de e-commerce está enfrentando problemas de latência ao atender usuários em diferentes regiões geográficas. Para melhorar a experiência do usuário, a empresa deseja implementar uma solução de DNS que direcione os usuários para o ponto de extremidade da aplicação mais próximo, considerando também os padrões de tráfego. A arquitetura deve ser projetada para lidar com o tráfego dos usuários de forma eficiente e garantir a mais alta disponibilidade. (Selecione Dois)",
        "Question": "Qual das seguintes opções o Arquiteto de Soluções deve implementar para otimizar o roteamento DNS para a aplicação de e-commerce?",
        "Options": {
            "1": "Criar uma política de roteamento simples no Amazon Route 53 que aponte todos os usuários para um único ponto de extremidade da aplicação, independentemente de sua localização.",
            "2": "Implementar roteamento baseado em latência no Amazon Route 53 para direcionar os usuários para os pontos de extremidade da aplicação com menor latência com base em sua localização geográfica.",
            "3": "Implantar uma política de roteamento de failover no Amazon Route 53 que roteie o tráfego para um ponto de extremidade da aplicação de backup apenas quando o ponto de extremidade primário estiver indisponível.",
            "4": "Utilizar roteamento por geolocalização no Amazon Route 53 para direcionar os usuários com base em suas localizações geográficas, garantindo que eles alcancem o ponto de extremidade regional mais próximo.",
            "5": "Configurar roteamento ponderado no Amazon Route 53 para distribuir o tráfego entre vários pontos de extremidade da aplicação com base em pesos predefinidos."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Implementar roteamento baseado em latência no Amazon Route 53 para direcionar os usuários para os pontos de extremidade da aplicação com menor latência com base em sua localização geográfica.",
            "Utilizar roteamento por geolocalização no Amazon Route 53 para direcionar os usuários com base em suas localizações geográficas, garantindo que eles alcancem o ponto de extremidade regional mais próximo."
        ],
        "Explanation": "O roteamento baseado em latência e o roteamento por geolocalização no Amazon Route 53 são ambas estratégias eficazes para melhorar o desempenho da aplicação, direcionando os usuários para os pontos de extremidade mais apropriados com base em sua localização e condições de rede. O roteamento baseado em latência garante que os usuários estejam conectados ao ponto de extremidade com a menor latência, enquanto o roteamento por geolocalização permite direcionar os usuários para o ponto de extremidade regional mais próximo, melhorando tanto a experiência do usuário quanto a eficiência da aplicação.",
        "Other Options": [
            "O roteamento simples não leva em consideração a localização geográfica dos usuários ou sua latência, o que pode levar a um desempenho subótimo para usuários localizados longe do único ponto de extremidade.",
            "O roteamento ponderado permite a distribuição do tráfego com base em pesos, mas não otimiza para latência ou proximidade geográfica, o que é crítico para melhorar a experiência do usuário em uma aplicação global.",
            "O roteamento de failover é projetado para alta disponibilidade em vez de otimização de desempenho; ele apenas roteia o tráfego para um ponto de extremidade de backup quando o primário está fora do ar, o que não resolve problemas de latência para usuários ativos."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "Uma empresa está implantando uma nova versão de uma função Lambda que processa dados recebidos. O arquiteto de soluções precisa garantir que a nova versão seja testada em um ambiente semelhante ao de produção, minimizando o risco de impactar os usuários existentes. O arquiteto planeja usar um alias para roteamento de tráfego entre a versão atual e a nova versão. A configuração de roteamento deve permitir que a maior parte do tráfego continue para a versão existente, enquanto uma pequena porcentagem é enviada para a nova versão para fins de teste.",
        "Question": "Qual das seguintes configurações permitiria que o arquiteto de soluções implementasse esse roteamento de tráfego de forma eficaz, atendendo a todos os requisitos necessários?",
        "Options": {
            "1": "Criar um alias que aponte para a versão $LATEST e a versão anterior da função Lambda. Rote 90% do tráfego para a versão $LATEST e 10% para a versão anterior, garantindo que tenham diferentes papéis de execução.",
            "2": "Criar dois aliases: um para a versão existente com 100% do tráfego e outro para a nova versão com 0% do tráfego. Depois, ajustar a porcentagem para 90% e 10%, respectivamente, quando estiver pronto para testar a nova versão.",
            "3": "Criar um alias que aponte para a versão existente e a nova versão da função Lambda, roteando 90% do tráfego para a versão existente e 10% para a nova versão. Garantir que ambas as versões tenham o mesmo papel de execução e nenhuma configuração de fila de mensagens não entregues.",
            "4": "Criar um alias que aponte para a versão existente e a nova versão da função Lambda, roteando 80% do tráfego para a versão existente e 20% para a nova versão. Garantir que ambas as versões sejam publicadas e tenham o mesmo papel de execução."
        },
        "Correct Answer": "Criar um alias que aponte para a versão existente e a nova versão da função Lambda, roteando 90% do tráfego para a versão existente e 10% para a nova versão. Garantir que ambas as versões tenham o mesmo papel de execução e nenhuma configuração de fila de mensagens não entregues.",
        "Explanation": "Esta opção configura corretamente um alias para roteamento das porcentagens especificadas de tráfego para as versões existente e nova da função Lambda. Ela atende aos requisitos de que ambas as versões devem ser publicadas, ter o mesmo papel de execução e não usar uma configuração de fila de mensagens não entregues.",
        "Other Options": [
            "Esta opção está incorreta porque o alias não pode apontar para a versão $LATEST, o que não atende ao requisito de apontar apenas para versões publicadas.",
            "Esta opção está incorreta, pois criar dois aliases não fornece a capacidade de roteamento de tráfego entre versões de forma eficaz. Ela não atende ao requisito de ter ambas as versões em um único alias.",
            "Esta opção está incorreta porque roteia 80% do tráfego para a versão existente e 20% para a nova versão, o que não corresponde ao requisito de roteamento de 90% para a versão existente e 10% para a nova versão."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "Uma empresa de streaming de mídia usa o Amazon CloudFront para entregar conteúdo de vídeo globalmente. Eles desejam personalizar o conteúdo com base nas preferências e localização do usuário, sem impactar o desempenho. A empresa deseja uma solução que permita modificar solicitações e respostas na borda, garantindo que as alterações sejam executadas o mais próximo possível do espectador.",
        "Question": "Qual solução o Arquiteto de Soluções deve implementar para personalizar o conteúdo entregue pelo CloudFront com base nas preferências do usuário?",
        "Options": {
            "1": "Configurar um Amazon API Gateway na frente da distribuição do CloudFront para lidar com todas as modificações de solicitações e respostas com base nos dados do usuário.",
            "2": "Usar Lambda@Edge para executar uma função Lambda no evento de solicitação do espectador para modificar a solicitação com base nas preferências do usuário antes de armazenar em cache as respostas.",
            "3": "Implementar regras do AWS WAF para filtrar e personalizar solicitações e respostas antes que elas cheguem à distribuição do CloudFront.",
            "4": "Configurar uma função AWS Lambda para ser executada no evento de solicitação de origem no CloudFront para modificar solicitações antes que elas cheguem ao servidor de origem."
        },
        "Correct Answer": "Usar Lambda@Edge para executar uma função Lambda no evento de solicitação do espectador para modificar a solicitação com base nas preferências do usuário antes de armazenar em cache as respostas.",
        "Explanation": "Usar Lambda@Edge permite que a empresa personalize a solicitação na fase de solicitação do espectador, garantindo que modificações específicas do usuário sejam feitas antes que o conteúdo seja armazenado em cache no CloudFront, levando a uma experiência mais personalizada sem comprometer o desempenho.",
        "Other Options": [
            "Esta opção está incorreta porque modificar solicitações no evento de solicitação de origem não permite personalização com base nas preferências do usuário antes que a solicitação seja enviada ao servidor de origem, o que poderia levar a uma latência desnecessária.",
            "Esta opção está incorreta porque, embora o API Gateway possa gerenciar modificações de solicitações, ele introduziria latência e complexidade adicionais em comparação com o uso direto do Lambda@Edge com o CloudFront.",
            "Esta opção está incorreta, pois o AWS WAF é projetado principalmente para fins de segurança, como filtrar solicitações maliciosas, e não é destinado à personalização de conteúdo com base nas preferências do usuário."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "Uma empresa implantou um aplicativo na AWS que apresenta falhas intermitentes devido a restrições de recursos. O aplicativo é executado em instâncias EC2, e a equipe implementou alarmes do CloudWatch para monitorar a utilização da CPU. No entanto, eles precisam de uma estratégia de alerta e remediação automática mais robusta para garantir alta disponibilidade e minimizar a intervenção manual.",
        "Question": "Qual é a estratégia mais eficaz para melhorar o alerta e a remediação automática para o aplicativo?",
        "Options": {
            "1": "Configurar o Auto Scaling para ajustar dinamicamente o número de instâncias EC2 com base nas métricas do CloudWatch, juntamente com a configuração de alarmes do CloudWatch para notificações proativas.",
            "2": "Usar o Amazon SNS para enviar notificações quando os alarmes do CloudWatch forem acionados, permitindo que a equipe de operações investigue e remedeie manualmente o problema.",
            "3": "Criar um painel personalizado do CloudWatch que forneça métricas em tempo real e alerte a equipe por e-mail quando o desempenho de qualquer instância cair abaixo dos níveis aceitáveis.",
            "4": "Implementar funções do AWS Lambda que são acionadas por alarmes do CloudWatch para reiniciar automaticamente as instâncias EC2 quando a utilização da CPU exceder um limite definido."
        },
        "Correct Answer": "Configurar o Auto Scaling para ajustar dinamicamente o número de instâncias EC2 com base nas métricas do CloudWatch, juntamente com a configuração de alarmes do CloudWatch para notificações proativas.",
        "Explanation": "Usar o Auto Scaling permite que o aplicativo ajuste automaticamente sua capacidade com base na demanda, melhorando a confiabilidade e reduzindo a intervenção manual. Acoplar isso com alarmes do CloudWatch garante que a equipe seja notificada sobre quaisquer mudanças significativas, permitindo uma gestão proativa dos recursos.",
        "Other Options": [
            "Essa abordagem depende da intervenção manual, o que não se alinha ao objetivo de remediação automática. Embora reiniciar instâncias EC2 possa resolver problemas temporariamente, não aborda efetivamente as restrições de recursos subjacentes.",
            "Essa opção envolve investigação e remediação manuais, o que vai contra o propósito da remediação automática. A equipe de operações pode não conseguir responder rapidamente o suficiente para evitar o tempo de inatividade.",
            "Embora um painel personalizado do CloudWatch seja útil para monitoramento, ele não fornece capacidades de remediação automática. Alertas enviados por e-mail requerem resposta manual e não garantem alta disponibilidade."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "Uma empresa de serviços financeiros está desenvolvendo um novo aplicativo que requer acesso rápido a dados frequentemente utilizados, minimizando custos. Eles estão considerando usar o Amazon ElastiCache para implementar uma estratégia de cache. O principal objetivo da empresa é garantir que o cache permaneça eficaz sem sobrecarregar seus recursos, especialmente em termos de armazenamento de dados desnecessários.",
        "Question": "Qual estratégia de cache o Arquiteto de Soluções deve recomendar para equilibrar a necessidade de dados atualizados com o uso eficiente de recursos?",
        "Options": {
            "1": "Implementar uma estratégia de cache de carregamento preguiçoso com um valor de tempo de vida (TTL) para cada item em cache para otimizar o uso de recursos.",
            "2": "Utilizar uma estratégia de cache de gravação direta sem um TTL, garantindo que todos os dados permaneçam atualizados, mas arriscando um inchaço desnecessário do cache.",
            "3": "Escolher uma estratégia de cache de gravação direta com um TTL, garantindo a frescura dos dados enquanto previne a desordem do cache causada por entradas não utilizadas.",
            "4": "Adotar uma estratégia de carregamento preguiçoso sem TTL, permitindo dados potencialmente obsoletos e uso ineficiente de recursos no cache."
        },
        "Correct Answer": "Implementar uma estratégia de cache de carregamento preguiçoso com um valor de tempo de vida (TTL) para cada item em cache para otimizar o uso de recursos.",
        "Explanation": "Uma estratégia de cache de carregamento preguiçoso com um TTL permite que o aplicativo armazene apenas dados que são solicitados, juntamente com um TTL para remover automaticamente dados obsoletos. Isso equilibra eficiência e frescura, garantindo um uso ideal de recursos.",
        "Other Options": [
            "Uma estratégia de cache de gravação direta sem um TTL pode levar a um inchaço desnecessário do cache, pois todos os dados são continuamente gravados no cache sem consideração pela sua relevância ao longo do tempo.",
            "Adotar uma estratégia de carregamento preguiçoso sem um TTL pode resultar em dados obsoletos permanecendo no cache por mais tempo do que o necessário, levando a um uso ineficiente de recursos e possivelmente a informações desatualizadas sendo fornecidas.",
            "Escolher uma estratégia de cache de gravação direta com um TTL pode garantir a frescura dos dados, mas ainda pode preencher o cache com entradas desnecessárias, a menos que seja gerenciado com cuidado."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "Uma empresa está implantando um aplicativo web em uma VPC que requer acesso seguro às suas instâncias EC2 a partir da internet, permitindo também a comunicação interna entre as instâncias. O arquiteto de soluções está configurando as configurações de rede para garantir o controle de acesso e o roteamento adequados.",
        "Question": "Qual das seguintes configurações garantirá que as instâncias EC2 sejam acessíveis a partir da internet e também permita comunicação irrestrita entre instâncias dentro da mesma sub-rede?",
        "Options": {
            "1": "Implementar uma sub-rede pública com uma rota para um gateway da internet e usar grupos de segurança para permitir o tráfego interno.",
            "2": "Configurar um ACL de rede que nega todo o tráfego de entrada enquanto permite o tráfego de saída.",
            "3": "Configurar uma rota pública na tabela de rotas e permitir todo o tráfego no grupo de segurança.",
            "4": "Criar uma rota privada na tabela de rotas e restringir o acesso do grupo de segurança a intervalos de IP específicos."
        },
        "Correct Answer": "Implementar uma sub-rede pública com uma rota para um gateway da internet e usar grupos de segurança para permitir o tráfego interno.",
        "Explanation": "Essa configuração permite que as instâncias EC2 na sub-rede pública sejam acessíveis a partir da internet via o gateway da internet, ao mesmo tempo que permite comunicação interna irrestrita através de grupos de segurança configurados adequadamente.",
        "Other Options": [
            "Essa opção permite acesso à internet, mas não especifica uma rota para um gateway da internet, que é necessária para acesso público.",
            "Essa opção bloquearia todo o tráfego de entrada, impedindo qualquer acesso externo às instâncias EC2, o que não é desejável para um aplicativo voltado para o público.",
            "Essa opção define a tabela de rotas como privada, o que significa que as instâncias não seriam acessíveis a partir da internet, contradizendo o requisito de acesso público."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "Uma empresa de serviços financeiros está buscando otimizar seu uso da AWS e minimizar custos. A empresa tem utilizado várias contas da AWS para diferentes departamentos e notou contas mensais altas sem uma compreensão clara dos fatores de custo. A tarefa do arquiteto de soluções é implementar uma estratégia que ajude a empresa a monitorar e analisar seus gastos na AWS de forma eficaz.",
        "Question": "Qual das seguintes ferramentas seria a mais eficaz para monitorar e gerenciar os custos da AWS em várias contas neste cenário?",
        "Options": {
            "1": "AWS Budgets para definir limites de custo e receber alertas, juntamente com AWS Cost Explorer para análise detalhada de gastos.",
            "2": "AWS Pricing Calculator para estimar custos de serviços futuros e AWS CloudTrail para registrar chamadas de API para auditoria.",
            "3": "Amazon QuickSight para visualizar tendências de custo e AWS CloudFormation para gerenciar infraestrutura como código.",
            "4": "AWS Trusted Advisor para acessar recomendações de melhores práticas e AWS Config para monitorar configurações de recursos e conformidade."
        },
        "Correct Answer": "AWS Budgets para definir limites de custo e receber alertas, juntamente com AWS Cost Explorer para análise detalhada de gastos.",
        "Explanation": "AWS Budgets permite que os usuários definam orçamentos personalizados de custo e uso, fornecendo alertas quando os limites são excedidos. Juntamente com o AWS Cost Explorer, que fornece insights detalhados sobre padrões de gastos e fatores de custo, essa combinação é a mais eficaz para monitorar e gerenciar custos em várias contas.",
        "Other Options": [
            "AWS Pricing Calculator é usado principalmente para estimar custos antes da implantação, em vez de para monitoramento e gerenciamento contínuo de custos existentes. AWS CloudTrail foca no registro de chamadas de API e não fornece insights sobre gerenciamento de custos.",
            "AWS Trusted Advisor oferece verificações de melhores práticas, mas não fornece monitoramento de custos em tempo real. AWS Config é usado para rastrear configurações de recursos e conformidade, não para análise de custos.",
            "Amazon QuickSight é uma ferramenta de inteligência de negócios para visualização de dados, mas não se concentra inherentemente no gerenciamento de custos. AWS CloudFormation é usado para gerenciamento de infraestrutura e não fornece capacidades de monitoramento de custos."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "Uma organização está implementando uma nova política de gerenciamento de patches em seu ambiente AWS para manter a conformidade com os padrões de segurança internos. A organização precisa garantir que todas as instâncias EC2 sejam atualizadas regularmente e estejam em conformidade com as últimas atualizações de segurança.",
        "Question": "Qual é a estratégia mais eficaz para implementar uma solução de gerenciamento de patches que esteja alinhada com os requisitos de conformidade da organização?",
        "Options": {
            "1": "Implantar uma solução de gerenciamento de patches de terceiros em instâncias EC2 para automatizar o processo de patch e manter a conformidade com os padrões organizacionais.",
            "2": "Fazer login manualmente em cada instância EC2 e aplicar as atualizações necessárias a cada sistema operacional conforme necessário para garantir a conformidade.",
            "3": "Utilizar o AWS Systems Manager Patch Manager para automatizar o patching de instâncias EC2, garantindo que estejam atualizadas com a linha de base de patches definida.",
            "4": "Configurar um alarme do Amazon CloudWatch para notificar os administradores quando um novo patch estiver disponível para os sistemas operacionais em execução nas instâncias EC2."
        },
        "Correct Answer": "Utilizar o AWS Systems Manager Patch Manager para automatizar o patching de instâncias EC2, garantindo que estejam atualizadas com a linha de base de patches definida.",
        "Explanation": "O AWS Systems Manager Patch Manager permite o gerenciamento automatizado de patches para suas instâncias, ajudando a garantir que permaneçam em conformidade com os padrões organizacionais, enquanto reduz o esforço manual e o erro humano.",
        "Other Options": [
            "Fazer login manualmente em cada instância EC2 para aplicar atualizações é ineficiente e pode levar a patches perdidos, aumentando o risco de não conformidade e vulnerabilidades de segurança.",
            "Configurar um alarme do CloudWatch para novos patches não aborda o processo real de patching, o que significa que as instâncias podem permanecer sem patch, apesar das notificações, o que não garante a conformidade.",
            "Embora implantar uma solução de gerenciamento de patches de terceiros possa funcionar, usar o AWS Systems Manager Patch Manager é uma abordagem mais integrada e eficiente para gerenciar patches em ambientes AWS."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "Uma grande empresa de comércio eletrônico está analisando sua utilização de recursos da AWS para otimizar custos. A empresa utiliza vários serviços, incluindo Amazon EC2, Amazon EBS, AWS Fargate para aplicações em contêiner e AWS Lambda para funções sem servidor. O arquiteto de soluções está considerando implementar o AWS Compute Optimizer para melhorar a alocação de recursos com base em padrões de utilização. O arquiteto deseja garantir que receba recomendações precisas que reflitam o verdadeiro uso de seus recursos.",
        "Question": "O que o arquiteto de soluções deve fazer para garantir que o AWS Compute Optimizer forneça as melhores recomendações para instâncias EC2 e grupos de Auto Scaling?",
        "Options": {
            "1": "Configurar manualmente os tamanhos das instâncias com base na carga de trabalho esperada, sem usar recomendações automatizadas.",
            "2": "Ativar métricas de infraestrutura aprimoradas para instâncias EC2 e grupos de Auto Scaling para capturar dados detalhados de utilização.",
            "3": "Revisar os tipos e tamanhos de instâncias atuais para garantir que correspondam aos requisitos das aplicações, sem métricas.",
            "4": "Usar o AWS Cost Explorer para analisar os dados de faturamento das instâncias EC2 e grupos de Auto Scaling nos últimos 12 meses."
        },
        "Correct Answer": "Ativar métricas de infraestrutura aprimoradas para instâncias EC2 e grupos de Auto Scaling para capturar dados detalhados de utilização.",
        "Explanation": "Ativar métricas de infraestrutura aprimoradas permite que o AWS Compute Optimizer colete dados detalhados de utilização, que são cruciais para fazer recomendações precisas sobre tipos e tamanhos de instâncias, evitando sobreprovisionamento e subprovisionamento.",
        "Other Options": [
            "Usar o AWS Cost Explorer ajudará a entender as tendências de custo, mas não fornece os dados detalhados de utilização necessários para as recomendações do Compute Optimizer.",
            "Configurar manualmente os tamanhos das instâncias sem recomendações automatizadas pode levar a ineficiências e não aproveita as capacidades do AWS Compute Optimizer.",
            "Revisar os tipos e tamanhos de instâncias atuais sem métricas ignora os padrões reais de utilização, que são essenciais para tomar decisões informadas de otimização."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "Uma empresa de serviços financeiros está construindo um novo aplicativo que processa transações em tempo real. O aplicativo requer entrega confiável de mensagens, desacoplamento de componentes e a capacidade de escalar de forma independente. A equipe está avaliando os serviços da AWS para garantir que o aplicativo permaneça altamente disponível e possa lidar com cargas variáveis sem tempo de inatividade.",
        "Question": "Qual serviço de integração da AWS a empresa deve usar para atender a esses requisitos?",
        "Options": {
            "1": "Usar Amazon SQS para gerenciar filas de mensagens entre os componentes do aplicativo, garantindo entrega confiável e desacoplamento dos microserviços.",
            "2": "Utilizar Amazon EventBridge para responder a eventos de vários serviços da AWS e direcioná-los para os componentes necessários do aplicativo.",
            "3": "Aproveitar AWS Step Functions para coordenar a execução de microserviços e gerenciar o fluxo de trabalho para o processamento de transações.",
            "4": "Implementar Amazon SNS para transmitir notificações para vários assinantes, permitindo atualizações em tempo real em diferentes partes do sistema."
        },
        "Correct Answer": "Usar Amazon SQS para gerenciar filas de mensagens entre os componentes do aplicativo, garantindo entrega confiável e desacoplamento dos microserviços.",
        "Explanation": "Amazon SQS é projetado especificamente para enfileiramento de mensagens, proporcionando entrega confiável de mensagens e desacoplamento dos componentes do aplicativo. Ele pode lidar com cargas variáveis de forma eficiente e garante que as mensagens sejam processadas mesmo que o componente receptor esteja temporariamente indisponível.",
        "Other Options": [
            "Amazon SNS é principalmente para mensagens pub/sub e não é ideal para gerenciar filas de mensagens ou garantir que as mensagens sejam processadas de forma confiável na ordem em que são recebidas.",
            "AWS Step Functions é focado em orquestrar fluxos de trabalho entre serviços, em vez de gerenciar a entrega de mensagens diretamente, o que não é o requisito principal para este cenário.",
            "Amazon EventBridge é ótimo para arquiteturas orientadas a eventos, mas não forneceria o mesmo nível de enfileiramento de mensagens confiável que o Amazon SQS, que é necessário para o processamento de transações."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "Uma empresa está executando múltiplos recursos da AWS, como instâncias EC2, bancos de dados RDS e buckets S3 em diferentes ambientes. A gestão deseja identificar e eliminar quaisquer recursos não utilizados para otimizar custos. O arquiteto de soluções foi encarregado de recomendar uma solução da AWS que possa automatizar esse processo e fornecer insights sobre o uso dos recursos.",
        "Question": "Qual solução ajudaria melhor a empresa a identificar recursos não utilizados em suas contas da AWS?",
        "Options": {
            "1": "Configurar Alarmes do Amazon CloudWatch para cada tipo de recurso para alertar sobre inatividade, depois usar o AWS Systems Manager para revisar os alarmes.",
            "2": "Implementar regras do AWS Config para rastrear o uso de recursos e criar uma função AWS Lambda que seja acionada com base em alterações de estado dos recursos.",
            "3": "Implantar o AWS Trusted Advisor para monitorar o uso de recursos e gerar recomendações para recursos subutilizados ou ociosos.",
            "4": "Usar o AWS Cost Explorer para analisar relatórios de custo e uso, filtrando recursos com uso zero durante um período específico."
        },
        "Correct Answer": "Usar o AWS Trusted Advisor para monitorar o uso de recursos e gerar recomendações para recursos subutilizados ou ociosos.",
        "Explanation": "O AWS Trusted Advisor fornece uma visão abrangente do uso da conta da AWS e oferece recomendações específicas para otimização de custos, incluindo a identificação de recursos não utilizados. Ele é projetado para esse propósito exato, tornando-se uma solução eficaz para as necessidades da empresa.",
        "Other Options": [
            "Implementar regras do AWS Config foca no rastreamento de alterações de configuração em vez de identificar diretamente recursos não utilizados, tornando-se menos eficaz para o objetivo da empresa.",
            "Usar o AWS Cost Explorer pode ajudar a analisar custos, mas não indica diretamente o status de uso dos recursos, o que pode levar a insights incompletos sobre recursos não utilizados.",
            "Configurar Alarmes do Amazon CloudWatch para inatividade é uma abordagem reativa e não fornece insights abrangentes para identificar recursos não utilizados de forma eficaz em diferentes serviços."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "Uma empresa implantou um conjunto de APIs usando o Amazon API Gateway para expor seus serviços a clientes externos. As APIs estão experimentando um aumento no tráfego, levando a uma possível degradação de desempenho. Para garantir que as APIs permaneçam responsivas e disponíveis, o arquiteto de soluções precisa implementar controle de taxa e cotas de forma eficaz.",
        "Question": "Qual das seguintes configurações ajudaria melhor a empresa a gerenciar o tráfego da API enquanto previne interrupções de serviço devido a solicitações excessivas?",
        "Options": {
            "1": "Definir uma cota estática de 10.000 solicitações por dia no nível da conta para todas as APIs, para evitar que uma única API sobrecarregue o sistema.",
            "2": "Implementar uma camada de cache na frente do API Gateway para reduzir o número de solicitações que atingem os serviços de backend diretamente.",
            "3": "Habilitar o AWS WAF para restringir o acesso às APIs com base no endereço IP para limitar o número total de solicitações.",
            "4": "Configurar um limite de taxa de 100 solicitações por segundo e um limite de explosão de 500 solicitações para cada API nas configurações do API Gateway."
        },
        "Correct Answer": "Configurar um limite de taxa de 100 solicitações por segundo e um limite de explosão de 500 solicitações para cada API nas configurações do API Gateway.",
        "Explanation": "Definir um limite de taxa e um limite de explosão no API Gateway ajuda a gerenciar efetivamente as solicitações recebidas, garantindo que as APIs possam lidar com picos repentinos de tráfego enquanto mantêm a responsividade geral. Essa abordagem utiliza o algoritmo de balde de tokens para controlar o fluxo de solicitações.",
        "Other Options": [
            "Definir uma cota estática de 10.000 solicitações por dia no nível da conta não fornece flexibilidade em tempo real e pode não prevenir sobrecargas imediatas durante períodos de pico de uso.",
            "Implementar uma camada de cache pode reduzir a carga, mas não aborda diretamente o controle de solicitações recebidas e pode não prevenir a degradação do serviço de backend durante tráfego intenso.",
            "Habilitar o AWS WAF para restringir o acesso com base no endereço IP limita o tráfego, mas pode não gerenciar efetivamente a taxa geral de solicitações, potencialmente levando a problemas de controle de taxa."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "Uma empresa de varejo deseja aprimorar sua plataforma de vendas online traduzindo requisitos de negócios em métricas mensuráveis. Eles estão particularmente focados em melhorar a experiência do cliente, otimizar a gestão de inventário e aumentar as taxas de conversão por meio de decisões baseadas em dados. A equipe de gestão está em busca de uma solução que capture métricas relevantes para informar sua estratégia e medir o sucesso.",
        "Question": "Qual das seguintes estratégias atende melhor aos objetivos da empresa para traduzir requisitos de negócios em métricas mensuráveis?",
        "Options": {
            "1": "Configurar o AWS IoT Core para coletar dados de sensores e dispositivos de varejo, analisando as métricas de tráfego de clientes e níveis de inventário. Usar o Amazon S3 para armazenar os dados para consultas históricas.",
            "2": "Implementar uma solução de análise usando o Amazon QuickSight para criar painéis que acompanhem métricas de engajamento do cliente, rotatividade de inventário e taxas de conversão. Integrar isso com o Amazon Kinesis para analisar fluxos de dados em tempo real.",
            "3": "Usar o AWS CloudTrail para monitorar e registrar chamadas de API para a plataforma de e-commerce, extraindo métricas relacionadas à atividade do usuário e ajustes de inventário. Gerar alertas para mudanças significativas usando o Amazon CloudWatch.",
            "4": "Implantar um modelo de aprendizado de máquina usando o Amazon SageMaker para prever padrões de compra dos clientes e gerar relatórios. Aproveitar o AWS Cost Explorer para analisar os custos associados à gestão de inventário."
        },
        "Correct Answer": "Implementar uma solução de análise usando o Amazon QuickSight para criar painéis que acompanhem métricas de engajamento do cliente, rotatividade de inventário e taxas de conversão. Integrar isso com o Amazon Kinesis para analisar fluxos de dados em tempo real.",
        "Explanation": "Esta opção aborda diretamente a necessidade de traduzir requisitos de negócios em métricas mensuráveis, implementando uma solução de análise abrangente que captura indicadores-chave de desempenho e fornece insights em tempo real para a tomada de decisões.",
        "Other Options": [
            "Esta opção foca em análises preditivas, mas não aborda diretamente a necessidade de rastreamento em tempo real de métricas-chave como engajamento do cliente e taxas de conversão, que são essenciais para insights imediatos de negócios.",
            "Esta opção está principalmente preocupada em registrar chamadas de API, o que é útil para auditoria, mas não fornece métricas ou insights acionáveis diretamente relacionados aos objetivos da empresa.",
            "Esta opção envolve a coleta de dados de sensores de varejo, que podem não ser relevantes para uma plataforma de vendas online. O foco deve estar em métricas que impactem diretamente o negócio online, em vez de dados de varejo físico."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "Uma empresa possui várias contas AWS para diferentes departamentos e deseja compartilhar recursos de forma segura entre essas contas sem comprometer a segurança ou a gerenciabilidade.",
        "Question": "Qual das seguintes soluções fornece uma maneira segura e eficiente de compartilhar recursos entre várias contas AWS?",
        "Options": {
            "1": "Usar o AWS Organizations para consolidar as contas e compartilhar recursos usando funções IAM.",
            "2": "Criar conexões de peering VPC entre todas as contas para permitir acesso direto a recursos compartilhados.",
            "3": "Configurar o AWS Resource Access Manager (RAM) para compartilhar recursos entre as contas e gerenciar permissões centralmente.",
            "4": "Implementar acesso entre contas criando manualmente funções IAM em cada conta para compartilhamento de recursos."
        },
        "Correct Answer": "Configurar o AWS Resource Access Manager (RAM) para compartilhar recursos entre as contas e gerenciar permissões centralmente.",
        "Explanation": "O AWS Resource Access Manager (RAM) permite o compartilhamento seguro e eficiente de recursos AWS entre várias contas, enquanto gerencia permissões centralmente, tornando-se a melhor escolha para este cenário.",
        "Other Options": [
            "O peering VPC é limitado ao compartilhamento de recursos entre duas VPCs e pode se tornar complexo ao gerenciar várias contas, tornando-o menos eficiente para compartilhamento mais amplo de recursos.",
            "Embora o AWS Organizations ajude na gestão de contas, não facilita diretamente o compartilhamento de recursos; configurações adicionais seriam necessárias para compartilhar recursos de forma eficaz.",
            "Criar manualmente funções IAM em cada conta para compartilhamento de recursos é trabalhoso e propenso a erros, tornando-se menos gerenciável em comparação ao uso do AWS RAM."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "Uma empresa está implantando um aplicativo web usando o AWS OpsWorks Stacks. O aplicativo requer várias camadas para diferentes componentes, incluindo um balanceador de carga, servidores de aplicação e uma camada de banco de dados. A equipe de desenvolvimento precisa garantir que cada camada esteja devidamente configurada e que as instâncias estejam corretamente associadas às suas respectivas camadas. Eles também desejam implementar as melhores práticas para gerenciar o ciclo de vida de seus componentes de aplicativo.",
        "Question": "Qual das seguintes estratégias a equipe de desenvolvimento deve adotar para gerenciar efetivamente a implantação do aplicativo usando o AWS OpsWorks Stacks?",
        "Options": {
            "1": "Usar o OpsWorks para implantar o aplicativo sem criar camadas, confiando em scripts externos para gerenciar a configuração e a implantação das instâncias.",
            "2": "Criar uma pilha que inclua todas as camadas necessárias, garantindo que cada camada tenha os eventos de ciclo de vida corretos e instâncias associadas. Usar receitas integradas para gerenciar implantações e configurações.",
            "3": "Configurar uma única camada para todos os componentes do aplicativo e adicionar várias instâncias a essa camada para lidar com diferentes funções dentro do aplicativo.",
            "4": "Provisionar instâncias diretamente dentro da pilha sem definir camadas e configurar manualmente cada instância para os aplicativos e serviços necessários."
        },
        "Correct Answer": "Criar uma pilha que inclua todas as camadas necessárias, garantindo que cada camada tenha os eventos de ciclo de vida corretos e instâncias associadas. Usar receitas integradas para gerenciar implantações e configurações.",
        "Explanation": "Criar uma pilha com camadas definidas garante que cada componente do aplicativo esteja devidamente organizado e gerenciado. Essa abordagem utiliza os eventos de ciclo de vida e receitas integradas do OpsWorks, permitindo implantações e configurações automatizadas, o que está alinhado com as melhores práticas para o uso do OpsWorks.",
        "Other Options": [
            "Provisionar instâncias diretamente sem definir camadas vai contra o design fundamental do OpsWorks, que é destinado a gerenciar aplicativos por meio de camadas. Essa abordagem levaria a dificuldades em escalar e gerenciar o aplicativo de forma eficaz.",
            "Configurar uma única camada para todos os componentes compromete o propósito das camadas no OpsWorks, que é separar preocupações e gerenciar diferentes aspectos do aplicativo de forma independente. Isso poderia levar a complicações na implantação e gerenciamento de configurações.",
            "Usar o OpsWorks sem criar camadas desconsidera as capacidades da plataforma para gerenciar ciclos de vida de aplicativos de forma eficaz. Confiar em scripts externos adicionaria complexidade e reduziria os benefícios de usar um serviço gerenciado como o OpsWorks."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "Uma empresa busca aprimorar sua excelência operacional na gestão de sua infraestrutura AWS, automatizando tarefas rotineiras e melhorando a confiabilidade do sistema. O arquiteto de soluções precisa identificar estratégias que não apenas otimizem o desempenho, mas também reduzam o potencial de erro humano durante as operações.",
        "Question": "Quais das seguintes estratégias podem ajudar a melhorar a excelência operacional geral? (Selecione duas)",
        "Options": {
            "1": "Criar uma equipe dedicada para atualizações manuais de servidores para garantir que os sistemas estejam sempre executando os patches mais recentes.",
            "2": "Configurar manualmente cada serviço e recurso para garantir um desempenho personalizado para casos de uso específicos.",
            "3": "Implementar o AWS Systems Manager Run Command para automatizar a gestão de instâncias EC2.",
            "4": "Estabelecer uma solução de registro centralizado usando o Amazon CloudWatch Logs para monitorar o comportamento da aplicação.",
            "5": "Usar o AWS CloudFormation para criar e gerenciar infraestrutura como código, promovendo ambientes consistentes."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Implementar o AWS Systems Manager Run Command para automatizar a gestão de instâncias EC2.",
            "Usar o AWS CloudFormation para criar e gerenciar infraestrutura como código, promovendo ambientes consistentes."
        ],
        "Explanation": "A implementação do AWS Systems Manager Run Command permite a automação de tarefas rotineiras em várias instâncias EC2, reduzindo assim a probabilidade de erro humano e melhorando a eficiência operacional. Além disso, o uso do AWS CloudFormation possibilita a gestão da infraestrutura como código, garantindo que os ambientes sejam consistentes e facilmente reproduzíveis, o que é fundamental para a excelência operacional.",
        "Other Options": [
            "Configurar serviços manualmente aumenta o risco de inconsistências e erro humano, o que prejudica a excelência operacional. A automação é essencial para melhorar a confiabilidade e a eficiência.",
            "Embora estabelecer um registro centralizado seja benéfico para monitoramento, isso por si só não melhora diretamente a excelência operacional. Trata-se mais dos processos e da automação de tarefas que levam à eficiência operacional.",
            "Criar uma equipe dedicada para atualizações manuais de servidores pode introduzir atrasos e erro humano, o que vai contra os princípios da excelência operacional. A automação deve ser priorizada para garantir atualizações oportunas e consistentes."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "Uma empresa de varejo está enfrentando padrões de uso flutuantes para sua plataforma de compras online hospedada na AWS. O Arquiteto de Soluções da empresa precisa desenvolver uma estratégia de dimensionamento que reduza custos enquanto garante desempenho ideal durante as temporadas de compras de pico. A solução deve minimizar o sobre-dimensionamento e se adaptar a cargas de trabalho variadas.",
        "Question": "Qual das seguintes estratégias o Arquiteto de Soluções deve implementar para alcançar o melhor resultado de dimensionamento para a plataforma de compras online?",
        "Options": {
            "1": "Revisar manualmente os tamanhos das instâncias a cada mês e rebaixá-las com base no uso atual sem qualquer automação.",
            "2": "Definir todas as instâncias para o menor tamanho disponível para minimizar custos, independentemente das necessidades de desempenho durante o uso intenso.",
            "3": "Implementar Instâncias Reservadas para todos os tipos de instância para garantir economia de custos sem considerar os padrões reais de uso.",
            "4": "Analisar padrões históricos de uso e implementar Auto Scaling para ajustar o número de instâncias dinamicamente com base na demanda."
        },
        "Correct Answer": "Analisar padrões históricos de uso e implementar Auto Scaling para ajustar o número de instâncias dinamicamente com base na demanda.",
        "Explanation": "Implementar Auto Scaling com base em padrões históricos de uso permite que a plataforma ajuste automaticamente os recursos em resposta a flutuações de demanda em tempo real. Isso garante desempenho ideal durante os períodos de pico, enquanto minimiza custos durante os períodos de baixa.",
        "Other Options": [
            "Revisar manualmente os tamanhos das instâncias a cada mês carece de automação e pode resultar em respostas atrasadas a cargas de trabalho em mudança, levando a um possível sobre-dimensionamento ou subdimensionamento.",
            "Definir todas as instâncias para o menor tamanho pode degradar significativamente o desempenho durante os períodos de uso intenso, levando a uma experiência ruim para o cliente e vendas perdidas.",
            "Implementar Instâncias Reservadas sem considerar os padrões reais de uso pode levar a custos desnecessários se os recursos não forem totalmente utilizados, derrotando o propósito do dimensionamento."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "Uma empresa está utilizando serviços da AWS para suas necessidades de armazenamento e backup de dados. Eles estão usando o Amazon S3 para armazenamento de objetos e querem garantir que seus dados sejam copiados de forma eficiente e segura. A empresa também possui requisitos de conformidade que necessitam de uma estratégia de backup robusta. Eles estão explorando várias práticas de backup para atender a essas necessidades.",
        "Question": "Quais das seguintes práticas e métodos de backup a empresa pode implementar para garantir a durabilidade dos dados e a conformidade? (Selecione duas)",
        "Options": {
            "1": "Ativar versionamento no bucket do Amazon S3 e configurar políticas de ciclo de vida para transferir versões mais antigas para o Amazon S3 Glacier.",
            "2": "Baixar manualmente objetos do S3 para armazenamento local a cada mês para garantir conformidade com as políticas de backup.",
            "3": "Usar o AWS Backup para criar planos de backup que automaticamente copiem os dados do S3 para um cofre de backup designado.",
            "4": "Configurar replicação entre regiões no bucket do S3 para replicar objetos para outro bucket do S3 em uma região AWS diferente.",
            "5": "Criar uma função AWS Lambda agendada que copie regularmente os objetos do S3 para outro bucket do S3 em uma região diferente."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Ativar versionamento no bucket do Amazon S3 e configurar políticas de ciclo de vida para transferir versões mais antigas para o Amazon S3 Glacier.",
            "Configurar replicação entre regiões no bucket do S3 para replicar objetos para outro bucket do S3 em uma região AWS diferente."
        ],
        "Explanation": "Ativar o versionamento no bucket do S3 garante que todas as versões de um objeto sejam retidas, o que é crucial para a recuperação de dados e conformidade. Além disso, usar políticas de ciclo de vida para transferir versões mais antigas para o Amazon S3 Glacier ajuda a otimizar custos enquanto garante a durabilidade dos dados. Configurar replicação entre regiões permite redundância de dados e melhor disponibilidade, aprimorando ainda mais a estratégia de backup.",
        "Other Options": [
            "Criar uma função AWS Lambda agendada para copiar objetos do S3 para outro bucket é uma solução potencial, mas requer gerenciamento contínuo e não fornece o mesmo nível de durabilidade que o versionamento e as políticas de ciclo de vida.",
            "Usar o AWS Backup para S3 não é atualmente suportado, pois o AWS Backup se destina principalmente a serviços como EBS, RDS e DynamoDB, tornando essa opção incorreta.",
            "Baixar manualmente objetos do S3 para armazenamento local não é uma prática de backup eficiente ou confiável, pois é suscetível a erro humano e não oferece os benefícios dos recursos de durabilidade e redundância integrados da AWS."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "Uma plataforma global de e-commerce tem observado um aumento nos erros de aplicação e problemas de latência recentemente. O arquiteto de soluções precisa implementar uma solução de monitoramento robusta que permita à equipe detectar anomalias de desempenho e solucionar problemas em tempo real, além de registrar métricas detalhadas da aplicação para análise posterior. A equipe não tem recursos para gerenciar uma solução de registro complexa e prefere um serviço totalmente gerenciado que se integre bem com sua infraestrutura existente da AWS.",
        "Question": "Qual das seguintes opções é a solução de monitoramento e registro mais adequada para os requisitos apresentados?",
        "Options": {
            "1": "Implantar uma ferramenta de monitoramento de terceiros em instâncias EC2 para capturar métricas da aplicação.",
            "2": "Implementar o AWS X-Ray para rastreamento detalhado de solicitações e integrá-lo com o CloudTrail para registro.",
            "3": "Configurar um painel personalizado no Amazon QuickSight para visualizar métricas de desempenho da aplicação.",
            "4": "Usar o Amazon CloudWatch para coletar logs da aplicação e configurar alarmes para anomalias de desempenho."
        },
        "Correct Answer": "Usar o Amazon CloudWatch para coletar logs da aplicação e configurar alarmes para anomalias de desempenho.",
        "Explanation": "O Amazon CloudWatch é um serviço totalmente gerenciado que fornece capacidades de monitoramento, registro e alarmes, tornando-o uma escolha ideal para monitoramento de desempenho em tempo real e registro de métricas da aplicação sem a necessidade de gerenciamento complexo.",
        "Other Options": [
            "Implantar uma ferramenta de monitoramento de terceiros em instâncias EC2 exigiria uma sobrecarga de gerenciamento adicional e não aproveitaria os serviços nativos da AWS, o que poderia complicar a arquitetura e aumentar os custos.",
            "Implementar o AWS X-Ray seria benéfico para rastreamento de solicitações, mas não aborda diretamente a necessidade de registrar métricas da aplicação e configurar alarmes, tornando-o menos adequado como uma solução independente.",
            "Configurar um painel personalizado no Amazon QuickSight não atende ao requisito de monitoramento e registro em tempo real, uma vez que o QuickSight é principalmente uma ferramenta de inteligência de negócios para visualização de dados, e não uma solução de monitoramento."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "Uma empresa de serviços financeiros precisa monitorar o tráfego de rede para melhorar sua postura de segurança. A empresa já possui uma configuração do Amazon VPC e deseja capturar e analisar padrões de tráfego por razões de conformidade e segurança. Eles estão considerando usar recursos da AWS para alcançar esse objetivo. A empresa quer garantir que possa analisar o tráfego da Camada 7, que é crítico para sua análise de segurança.",
        "Question": "Qual solução a empresa deve implementar para monitorar e analisar efetivamente o tráfego de rede, incluindo a análise da Camada 7?",
        "Options": {
            "1": "Ativar os VPC Flow Logs para capturar o tráfego da Camada 4 e publicar os logs no Amazon S3 para análise usando o AWS Athena.",
            "2": "Configurar os Amazon CloudWatch Logs para monitorar os VPC Flow Logs e criar alarmes com base no tráfego da Camada 4 capturado.",
            "3": "Implementar o AWS Traffic Mirroring para capturar e enviar todo o tráfego de rede das instâncias EC2 para dispositivos de segurança para análise da Camada 7.",
            "4": "Usar o AWS CloudTrail para registrar chamadas de API feitas dentro do VPC e analisar os logs para conformidade de segurança."
        },
        "Correct Answer": "Implementar o AWS Traffic Mirroring para capturar e enviar todo o tráfego de rede das instâncias EC2 para dispositivos de segurança para análise da Camada 7.",
        "Explanation": "O AWS Traffic Mirroring permite que a empresa capture e analise todo o tráfego de rede, incluindo detalhes da Camada 7, enviando-o para dispositivos de segurança e monitoramento fora de banda. Esta solução fornece visibilidade abrangente sobre os padrões de tráfego e é adequada para monitoramento de conformidade e segurança.",
        "Other Options": [
            "Os VPC Flow Logs capturam apenas o tráfego da Camada 4, o que não fornece as informações detalhadas necessárias para a análise da Camada 7. Embora possam ser publicados no S3 para análise, não atenderão ao requisito da empresa para inspeção mais profunda do tráfego.",
            "O AWS CloudTrail é projetado para registrar chamadas de API feitas dentro do ambiente AWS, não para monitorar o tráfego de rede. Ele não fornece as informações necessárias sobre os pacotes que fluem pelo VPC, tornando-o inadequado para as necessidades da empresa.",
            "Embora os Amazon CloudWatch Logs possam monitorar os VPC Flow Logs, eles capturam apenas o tráfego da Camada 4. Essa abordagem não atende ao requisito da empresa para análise do tráfego da Camada 7, que é crítica para sua postura de segurança."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "Uma empresa de serviços financeiros utiliza serviços da AWS para gerenciar informações sensíveis, como chaves de API, credenciais de banco de dados e tokens de serviços de terceiros. Atualmente, as credenciais estão codificadas no código da aplicação, tornando difícil gerenciá-las e rotacioná-las de forma segura. A empresa está em busca de uma solução robusta para gerenciar esses segredos e credenciais de forma segura, garantindo que possam ser facilmente rotacionados e acessados apenas por aplicações autorizadas.",
        "Question": "Qual das seguintes opções o Arquiteto de Soluções deve implementar para gerenciar os segredos e credenciais de forma segura?",
        "Options": {
            "1": "Utilizar o AWS Systems Manager Parameter Store para armazenar os segredos como parâmetros SecureString e gerenciar o acesso com políticas do IAM.",
            "2": "Usar o AWS Secrets Manager para armazenar os segredos e configurar a rotação automática desses segredos. Conceder permissões à aplicação usando funções do IAM para acessar o Secrets Manager.",
            "3": "Usar o Amazon S3 para armazenar os segredos em arquivos criptografados e gerenciar o acesso usando políticas de bucket.",
            "4": "Armazenar segredos diretamente no repositório de código da aplicação e usar funções do IAM para controlar o acesso ao repositório."
        },
        "Correct Answer": "Usar o AWS Secrets Manager para armazenar os segredos e configurar a rotação automática desses segredos. Conceder permissões à aplicação usando funções do IAM para acessar o Secrets Manager.",
        "Explanation": "Usar o AWS Secrets Manager permite a gestão centralizada de segredos, rotação automática e controle de acesso detalhado usando políticas do IAM. Essa abordagem melhora a segurança ao remover segredos codificados do código da aplicação e garantir que informações sensíveis sejam acessíveis apenas por serviços autorizados.",
        "Other Options": [
            "Armazenar segredos diretamente no repositório de código da aplicação apresenta riscos significativos de segurança, pois aumenta a probabilidade de expor informações sensíveis por meio de sistemas de controle de versão ou divulgações acidentais de código.",
            "Embora o AWS Systems Manager Parameter Store possa armazenar segredos de forma segura, ele carece de alguns dos recursos avançados do AWS Secrets Manager, como rotação automática integrada e capacidades de auditoria, tornando-o uma escolha menos ideal para gerenciar credenciais.",
            "Usar o Amazon S3 para armazenar segredos em arquivos criptografados não é uma prática recomendada para gerenciar informações sensíveis. O S3 não fornece recursos de gerenciamento de segredos integrados, como rotação automática ou gerenciamento de ciclo de vida, tornando-o menos adequado em comparação com o AWS Secrets Manager."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "Uma empresa de varejo está enfrentando problemas de desempenho com suas tabelas do DynamoDB devido a padrões de acesso desiguais em seus dados. Alguns itens são acessados significativamente mais do que outros, levando a partições quentes e limitação de capacidade. A empresa precisa reorganizar sua estrutura de dados para otimizar a utilização da capacidade de leitura e gravação, minimizando os custos.",
        "Question": "Qual é a estratégia mais eficaz para melhorar o desempenho das tabelas do DynamoDB, garantindo uma distribuição eficiente da capacidade de leitura e gravação?",
        "Options": {
            "1": "Aumentar a capacidade de leitura e gravação provisionada para toda a tabela para lidar com cargas máximas sem limitação.",
            "2": "Usar índices secundários globais para descarregar o tráfego de leitura da tabela primária, distribuindo assim a carga entre diferentes partições.",
            "3": "Implementar chaves compostas para permitir uma melhor distribuição de dados entre as partições, reduzindo a probabilidade de partições quentes.",
            "4": "Particionamento sem shard criando várias tabelas para diferentes categorias de dados, isolando os padrões de acesso para evitar partições quentes."
        },
        "Correct Answer": "Implementar chaves compostas para permitir uma melhor distribuição de dados entre as partições, reduzindo a probabilidade de partições quentes.",
        "Explanation": "O uso de chaves compostas ajuda a distribuir os dados de maneira uniforme entre as partições, o que aborda diretamente o problema das partições quentes e otimiza o uso da capacidade de leitura e gravação provisionada.",
        "Other Options": [
            "Aumentar a capacidade provisionada para toda a tabela pode aliviar temporariamente a limitação, mas não resolve o problema subjacente de padrões de acesso a dados desiguais e pode levar a custos aumentados.",
            "Embora os índices secundários globais possam ajudar a descarregar parte do tráfego de leitura, eles podem não resolver completamente o problema das partições quentes se os padrões de acesso a dados subjacentes permanecerem desequilibrados.",
            "Criar várias tabelas para o particionamento sem shard pode complicar a gestão e a consulta de dados, tornando-se menos eficiente do que otimizar a estrutura da tabela existente com chaves compostas."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "Uma empresa de serviços financeiros está migrando suas aplicações existentes para a AWS para melhorar a escalabilidade e reduzir a sobrecarga operacional. A empresa precisa implantar uma arquitetura de microserviços e está considerando usar serviços de contêiner. Eles querem garantir que suas aplicações em contêiner possam escalar automaticamente e que a gestão da infraestrutura subjacente seja minimizada.",
        "Question": "Qual combinação de serviços da AWS atende melhor aos requisitos da empresa para implantar e gerenciar aplicações em contêiner com mínima gestão de infraestrutura?",
        "Options": {
            "1": "Implantar contêineres no Amazon ECR e gerenciá-los com AWS Lambda para execução sem servidor e escalonamento automático.",
            "2": "Configurar o Amazon ECS com Fargate para executar contêineres e usar o Amazon RDS para gerenciamento de banco de dados.",
            "3": "Utilizar o Amazon ECS com tipo de lançamento EC2 para orquestração de contêineres, gerenciando manualmente as instâncias EC2 para escalonamento.",
            "4": "Usar o Amazon EKS para orquestração e AWS Fargate para executar os contêineres sem gerenciar as instâncias EC2 subjacentes."
        },
        "Correct Answer": "Usar o Amazon EKS para orquestração e AWS Fargate para executar os contêineres sem gerenciar as instâncias EC2 subjacentes.",
        "Explanation": "Usar o Amazon EKS para orquestração combinado com AWS Fargate permite que a empresa de serviços financeiros implante aplicações em contêiner sem precisar gerenciar as instâncias EC2 subjacentes. Essa configuração oferece a escalabilidade e a eficiência operacional necessárias para uma arquitetura de microserviços.",
        "Other Options": [
            "Utilizar o Amazon ECS com tipo de lançamento EC2 requer gerenciar as instâncias EC2, o que vai contra o requisito de minimizar a gestão de infraestrutura.",
            "Implantar contêineres no Amazon ECR e gerenciá-los com AWS Lambda não é adequado, pois o Lambda é projetado para funções de curta duração e acionadas por eventos, não para aplicações em contêiner de longa duração.",
            "Configurar o Amazon ECS com Fargate para executar contêineres e usar o Amazon RDS para gerenciamento de banco de dados não fornece capacidades de orquestração tão eficazes quanto o Amazon EKS, que é mais adequado para arquiteturas complexas de microserviços."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "Uma empresa de serviços financeiros está construindo um sistema de processamento em tempo real que precisa lidar com milhões de transações por segundo com latência mínima. O sistema deve garantir que as mensagens não sejam perdidas e possam ser processadas em ordem. A empresa deseja incorporar uma solução de mensagens que armazene mensagens e permita que componentes de aplicação desacoplados se comuniquem de forma assíncrona.",
        "Question": "Qual serviço da AWS a empresa deve implementar para atender aos requisitos de alta capacidade de processamento, durabilidade de mensagens e processamento de mensagens em ordem?",
        "Options": {
            "1": "Amazon SNS com filtragem de mensagens",
            "2": "Amazon SQS com filas FIFO",
            "3": "AWS Step Functions com fluxos de trabalho paralelos",
            "4": "Amazon EventBridge com eventos personalizados"
        },
        "Correct Answer": "Amazon SQS com filas FIFO",
        "Explanation": "Amazon SQS com filas FIFO é projetado para permitir um alto throughput e processamento de mensagens em ordem, garantindo que as mensagens não sejam perdidas. As filas FIFO fornecem processamento exatamente uma vez e mantêm a ordem das mensagens, tornando-o ideal para este caso de uso.",
        "Other Options": [
            "Amazon SNS com filtragem de mensagens é principalmente um serviço de mensagens pub/sub que não garante a ordenação das mensagens e não fornece durabilidade para mensagens da mesma forma que o SQS faz.",
            "Amazon EventBridge com eventos personalizados é adequado para arquiteturas acionadas por eventos, mas não oferece o mesmo nível de durabilidade e ordem de mensagens que as filas FIFO do SQS fornecem.",
            "AWS Step Functions com fluxos de trabalho paralelos é usado para orquestrar microserviços, mas não é um serviço de mensagens e não fornece as capacidades de durabilidade e processamento ordenado necessárias."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "Uma empresa de serviços financeiros precisa garantir alta disponibilidade para sua aplicação web hospedada na AWS. A aplicação requer acesso de baixa latência a um banco de dados e deve ser resiliente contra falhas regionais. O arquiteto de soluções é encarregado de projetar uma solução que utilize serviços gerenciados da AWS para desempenho e confiabilidade ideais.",
        "Question": "Qual arquitetura atenderá melhor aos requisitos da empresa para alta disponibilidade e baixa latência?",
        "Options": {
            "1": "Implementar a aplicação usando AWS Lambda para computação e Amazon S3 para conteúdo estático, com um banco de dados Amazon Aurora Serverless em várias Regiões.",
            "2": "Criar um cluster Amazon ECS com tipo de lançamento Fargate em uma única Zona de Disponibilidade, usando Amazon DynamoDB para armazenamento de dados.",
            "3": "Usar AWS Elastic Beanstalk para implantar a aplicação em várias Zonas de Disponibilidade, com Amazon RDS em uma configuração Multi-AZ para o banco de dados.",
            "4": "Implantar a aplicação em instâncias Amazon EC2 em uma única Zona de Disponibilidade com uma implantação Amazon RDS Multi-AZ para o banco de dados."
        },
        "Correct Answer": "Usar AWS Elastic Beanstalk para implantar a aplicação em várias Zonas de Disponibilidade, com Amazon RDS em uma configuração Multi-AZ para o banco de dados.",
        "Explanation": "Usar AWS Elastic Beanstalk com implantação em várias Zonas de Disponibilidade garante que a aplicação possa suportar a falha de uma zona enquanto fornece acesso de baixa latência por meio de balanceamento de carga automático e escalonamento. Juntamente com Amazon RDS em uma configuração Multi-AZ, essa arquitetura oferece alta disponibilidade para o banco de dados também.",
        "Other Options": [
            "Implantar a aplicação em uma única Zona de Disponibilidade pode levar a possíveis períodos de inatividade se essa zona falhar, o que não satisfaz o requisito de alta disponibilidade.",
            "Usar Amazon ECS em uma única Zona de Disponibilidade limita a capacidade da aplicação de permanecer disponível durante uma falha de zona, e embora o DynamoDB ofereça alta disponibilidade, pode não fornecer os recursos de banco de dados relacional necessários para a aplicação.",
            "Implementar a aplicação com AWS Lambda e Amazon S3 é adequado para arquiteturas serverless, mas pode introduzir problemas de latência para acesso ao banco de dados, e depender de uma única Região pode comprometer a disponibilidade se a Região enfrentar problemas."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "Uma empresa startup está implantando uma aplicação de aprendizado de máquina na AWS que processará grandes volumes de dados diariamente. A aplicação utilizará Amazon SageMaker para treinamento e inferência de modelos. A empresa espera escalar rapidamente a aplicação devido ao crescimento antecipado na demanda dos usuários. A equipe está preocupada em atingir os limites de serviço da AWS, o que pode impactar o desempenho e a disponibilidade.",
        "Question": "Qual é a melhor abordagem para gerenciar cotas e limites de serviço neste cenário para garantir que a aplicação permaneça performática à medida que escala?",
        "Options": {
            "1": "Monitorar regularmente os limites de serviço usando AWS CloudTrail e solicitar aumentos de limite através do AWS Support Center conforme necessário.",
            "2": "Utilizar um serviço da AWS que escale automaticamente os recursos sem precisar monitorar cotas, garantindo que nenhum limite de serviço seja alcançado.",
            "3": "Configurar Alarmes do CloudWatch para notificar a equipe ao se aproximar dos limites de serviço, permitindo ajustes reativos à medida que os limites são alcançados.",
            "4": "Estabelecer uma estratégia proativa criando um cronograma para solicitar aumentos de limite com base em estimativas de uso projetadas antes de atingir os limites atuais."
        },
        "Correct Answer": "Estabelecer uma estratégia proativa criando um cronograma para solicitar aumentos de limite com base em estimativas de uso projetadas antes de atingir os limites atuais.",
        "Explanation": "Essa abordagem permite que a empresa antecipe o crescimento e gerencie proativamente os limites de serviço, garantindo que não haja interrupções no serviço à medida que a demanda aumenta. Ao planejar com antecedência, a empresa pode enviar solicitações de aumentos de limite de forma oportuna, mantendo a aplicação performática e disponível.",
        "Other Options": [
            "Embora monitorar os limites de serviço usando AWS CloudTrail seja importante, confiar apenas nisso sem gerenciamento proativo pode levar a interrupções inesperadas no serviço quando os limites são alcançados.",
            "Nenhum serviço da AWS pode escalar automaticamente recursos sem limites; todos os serviços têm cotas predefinidas que requerem monitoramento e gerenciamento. Assumir o contrário pode levar à superutilização e falhas de serviço.",
            "Configurar Alarmes do CloudWatch pode fornecer notificações quando os limites são alcançados, mas essa é uma abordagem reativa. Não previne problemas quando os limites são excedidos, o que pode impactar o desempenho da aplicação."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "Uma organização está implantando uma arquitetura de microserviços usando Amazon ECS com Fargate. Cada microserviço requer acesso a vários recursos da AWS, como puxar imagens do Amazon ECR e ler segredos armazenados no AWS Secrets Manager. A equipe de DevOps precisa garantir que as tarefas do ECS tenham permissões apropriadas sem conceder direitos excessivos às instâncias EC2 subjacentes. A equipe está considerando a implementação de funções de execução de tarefas para esse propósito.",
        "Question": "Qual das seguintes configurações o arquiteto de soluções deve implementar para garantir as melhores práticas para a execução de tarefas do ECS? (Selecione Dois)",
        "Options": {
            "1": "Anexar a função de execução de tarefas às tarefas Fargate para permitir que elas puxem imagens do Amazon ECR.",
            "2": "Definir funções de execução de tarefas separadas para diferentes microserviços para limitar o escopo das permissões.",
            "3": "Usar um perfil de instância EC2 para conceder permissões às tarefas do ECS para acessar o Secrets Manager.",
            "4": "Criar uma única função de execução de tarefas com permissões para acessar todos os recursos da AWS necessários para todos os serviços.",
            "5": "Permitir que as tarefas do ECS registrem diretamente no Amazon S3 em vez de usar CloudWatch Logs."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Anexar a função de execução de tarefas às tarefas Fargate para permitir que elas puxem imagens do Amazon ECR.",
            "Definir funções de execução de tarefas separadas para diferentes microserviços para limitar o escopo das permissões."
        ],
        "Explanation": "Anexar uma função de execução de tarefas às tarefas Fargate permite que elas realizem ações específicas, como puxar imagens de contêiner do Amazon ECR, enquanto respeitam o princípio do menor privilégio. Definir funções separadas para diferentes microserviços garante que cada serviço tenha acesso apenas às permissões necessárias, aumentando ainda mais a segurança e a conformidade.",
        "Other Options": [
            "Criar uma única função de execução de tarefas com permissões amplas viola o princípio do menor privilégio e pode expor recursos desnecessários a possíveis abusos.",
            "Usar um perfil de instância EC2 para tarefas do ECS compromete os benefícios das funções de execução de tarefas, pois concede permissões à instância EC2 em vez da tarefa em si, levando a permissões excessivas.",
            "Registrar diretamente no Amazon S3 em vez de usar CloudWatch Logs não é uma prática recomendada, pois complica o gerenciamento e a monitoração de logs, que são simplificados usando CloudWatch Logs."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "Uma empresa de serviços financeiros precisa gerenciar sua frota de instâncias EC2 em vários ambientes (desenvolvimento, teste, produção) enquanto garante a conformidade com as políticas de segurança e automatiza as atualizações de software. A empresa requer uma solução centralizada para gerenciamento de configuração que ofereça visibilidade sobre o estado das instâncias e possa corrigir automaticamente quaisquer desvios do estado desejado.",
        "Question": "Qual ferramenta de gerenciamento de configuração o Arquiteto de Soluções deve recomendar para atender aos requisitos da empresa?",
        "Options": {
            "1": "Use AWS Systems Manager para automatizar a implantação de patches e gerenciar o estado das instâncias EC2 em todos os ambientes, garantindo conformidade e segurança.",
            "2": "Implemente Ansible para gerenciamento de configuração, mas implemente e gerencie-o em instâncias EC2 para lidar com a conformidade e as atualizações de software nos ambientes.",
            "3": "Utilize Chef em uma configuração de servidor autogerenciado para automatizar a configuração das instâncias EC2, proporcionando visibilidade e conformidade em todos os ambientes.",
            "4": "Adote Puppet para gerenciamento de configuração, mas limite seu uso apenas ao ambiente de produção para garantir a conformidade de segurança."
        },
        "Correct Answer": "Use AWS Systems Manager para automatizar a implantação de patches e gerenciar o estado das instâncias EC2 em todos os ambientes, garantindo conformidade e segurança.",
        "Explanation": "AWS Systems Manager é um serviço totalmente gerenciado que fornece visibilidade e controle da sua infraestrutura na AWS. Ele permite automatizar tarefas como gerenciamento de patches e verificações de conformidade em diferentes ambientes, tornando-o ideal para gerenciar instâncias EC2 de forma centralizada.",
        "Other Options": [
            "Ansible requer uma configuração de servidor de gerenciamento, o que adiciona complexidade e não fornece o mesmo nível de integração com os serviços da AWS que o Systems Manager.",
            "Usar Chef em uma configuração de servidor autogerenciado introduz sobrecarga adicional na gestão do servidor Chef e não aproveita os recursos nativos da AWS para conformidade e automação.",
            "Puppet é uma ferramenta de gerenciamento de configuração capaz, mas limitar seu uso apenas ao ambiente de produção não atende ao requisito de gerenciar todos os ambientes de forma consistente."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "Uma empresa de serviços financeiros está migrando suas cargas de trabalho analíticas para a AWS. As cargas de trabalho envolvem o processamento de grandes volumes de dados estruturados e semi-estruturados de várias fontes, incluindo bancos de dados SQL e arquivos JSON. A empresa requer uma solução que forneça alta taxa de transferência, baixa latência e a capacidade de consultar facilmente os dados usando uma sintaxe semelhante ao SQL. Além disso, a solução deve ser altamente disponível e escalável para acomodar cargas de trabalho flutuantes sem sobrecarga de gerenciamento complexa.",
        "Question": "Qual dos seguintes serviços de armazenamento atenderia melhor aos requisitos da empresa para essas cargas de trabalho analíticas?",
        "Options": {
            "1": "Utilize Amazon ElastiCache para Redis para armazenar os dados em memória e servi-los para aplicações analíticas com acesso de baixa latência.",
            "2": "Implante Amazon Redshift como uma solução de data warehouse, ingerindo os dados de várias fontes para consultas e análises complexas.",
            "3": "Implemente Amazon RDS com réplicas de leitura para lidar com as consultas analíticas e armazenar os dados em um formato relacional.",
            "4": "Use Amazon S3 para armazenar os dados e Amazon Athena para consultar os dados diretamente do S3 usando SQL."
        },
        "Correct Answer": "Use Amazon S3 para armazenar os dados e Amazon Athena para consultar os dados diretamente do S3 usando SQL.",
        "Explanation": "Usar Amazon S3 junto com Amazon Athena permite que a empresa armazene grandes volumes de dados estruturados e semi-estruturados de forma eficiente e os consulte sem a necessidade de provisionar ou gerenciar infraestrutura. A capacidade de consulta semelhante ao SQL do Athena atende ao requisito de facilidade de uso, enquanto o S3 fornece alta durabilidade e disponibilidade.",
        "Other Options": [
            "Implementar Amazon RDS com réplicas de leitura pode fornecer alguma escalabilidade, mas não é ideal para lidar com grandes volumes de dados semi-estruturados e pode introduzir sobrecarga de gerenciamento associada às instâncias de banco de dados.",
            "Utilizar Amazon ElastiCache para Redis é projetado para caching e não seria adequado para armazenar grandes conjuntos de dados, pois é usado principalmente para recuperação de dados de baixa latência em vez de processamento analítico.",
            "Implantar Amazon Redshift é uma boa opção para data warehousing, mas requer provisionamento e gerenciamento de um data warehouse, o que pode não ser tão flexível ou econômico quanto usar S3 e Athena para cargas de trabalho flutuantes."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "Uma startup está desenvolvendo uma aplicação de análise em tempo real que processa grandes volumes de dados de streaming de várias fontes. A aplicação deve garantir baixa latência e alta taxa de transferência, mantendo a capacidade de escalar à medida que o volume de dados aumenta. A startup está considerando serviços da AWS para desempenho ideal.",
        "Question": "Qual arquitetura de serviço da AWS a startup deve implementar para alcançar o melhor desempenho para sua aplicação de análise de streaming?",
        "Options": {
            "1": "Implemente Amazon Kinesis Data Firehose para ingestão, instâncias Amazon EC2 para processamento e Amazon RDS para armazenar os resultados.",
            "2": "Aproveite Amazon Kinesis Data Streams para ingestão, AWS Glue para processamento ETL e Amazon Redshift para consultas analíticas.",
            "3": "Utilize Amazon Kinesis Data Analytics para processamento em tempo real, Amazon SQS para buffering e Amazon DynamoDB para armazenamento de dados.",
            "4": "Use Amazon Kinesis Data Streams para ingestão, AWS Lambda para processamento e Amazon S3 para armazenamento de dados processados."
        },
        "Correct Answer": "Aproveite Amazon Kinesis Data Streams para ingestão, AWS Glue para processamento ETL e Amazon Redshift para consultas analíticas.",
        "Explanation": "Esta opção fornece uma arquitetura robusta para lidar com dados de streaming em tempo real com baixa latência. Kinesis Data Streams permite uma ingestão de dados de alta taxa de transferência, enquanto AWS Glue fornece capacidades eficientes de ETL para transformar os dados. Amazon Redshift pode lidar com consultas analíticas complexas sobre os dados processados em escala, garantindo desempenho ideal para cargas de trabalho analíticas.",
        "Other Options": [
            "Esta opção não é ideal, pois usar AWS Lambda para processamento pode introduzir problemas de latência para processamento de dados em tempo real devido ao problema de inicialização a frio e limites no tempo de execução, tornando-a menos adequada para cenários de alta taxa de transferência.",
            "Embora esta opção permita a ingestão e o processamento de dados, usar Amazon EC2 para processamento não fornece o mesmo nível de escalabilidade e facilidade de uso que os serviços de streaming gerenciados, o que pode levar a gargalos de desempenho sob alta carga.",
            "Esta opção está incorreta porque usar Amazon SQS para buffering não é projetado para processamento de dados em tempo real e pode introduzir atrasos, enquanto Kinesis Data Analytics é mais adequado para os requisitos em tempo real da aplicação analítica."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "Uma startup de saúde está procurando hospedar uma aplicação de aprendizado de máquina que requer um poder computacional significativo para treinar modelos. Espera-se que a aplicação escale dinamicamente com base na carga de trabalho, e a equipe deseja minimizar a sobrecarga operacional enquanto mantém flexibilidade na gestão da alocação de recursos. Eles estão considerando vários serviços de computação da AWS para atender a essas necessidades.",
        "Question": "Qual dos seguintes serviços da AWS fornece a plataforma de computação mais apropriada para a aplicação de aprendizado de máquina da startup, considerando a necessidade de escalabilidade e mínima sobrecarga de gerenciamento?",
        "Options": {
            "1": "AWS Lambda para executar inferências de aprendizado de máquina em uma arquitetura sem servidor.",
            "2": "Amazon Lightsail para implantar um servidor virtual privado para executar aplicações de aprendizado de máquina.",
            "3": "Amazon ECS com Fargate para executar cargas de trabalho de aprendizado de máquina em contêineres sem gerenciar servidores.",
            "4": "Amazon EC2 com grupos de Auto Scaling para gerenciar a escalabilidade das instâncias com base na demanda."
        },
        "Correct Answer": "Amazon ECS com Fargate para executar cargas de trabalho de aprendizado de máquina em contêineres sem gerenciar servidores.",
        "Explanation": "Amazon ECS com Fargate permite que a startup execute aplicações em contêineres sem a necessidade de gerenciar as máquinas virtuais subjacentes, proporcionando a simplicidade operacional e escalabilidade desejadas para as cargas de trabalho de aprendizado de máquina. O Fargate provisiona e escala automaticamente os recursos computacionais, tornando-o ideal para cargas de trabalho flutuantes típicas em aplicações de aprendizado de máquina.",
        "Other Options": [
            "Amazon EC2 com grupos de Auto Scaling requer mais esforço de gerenciamento para configurar e manter as instâncias EC2, o que pode aumentar a sobrecarga operacional em comparação a um serviço totalmente gerenciado como o Fargate.",
            "AWS Lambda é adequado para executar tarefas de curta duração, mas pode não ser ideal para processos de treinamento de aprendizado de máquina de longa duração, que requerem recursos computacionais mais consistentes ao longo de períodos prolongados.",
            "Amazon Lightsail é projetado para aplicações web e cargas de trabalho mais simples e não oferece o mesmo nível de escalabilidade e flexibilidade necessário para aplicações complexas de aprendizado de máquina em comparação ao ECS com Fargate."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "Uma empresa de serviços financeiros está planejando implantar uma nova aplicação que deve enfrentar cargas de trabalho variáveis. A aplicação deve ser projetada para escalar de forma eficiente para lidar tanto com picos repentinos quanto com aumentos sustentados no tráfego. O arquiteto de soluções está avaliando opções para escalar a aplicação para atender a essas demandas enquanto otimiza custos e desempenho. O arquiteto precisa escolher entre estratégias de escalabilidade vertical (scale-up) e horizontal (scale-out) para a arquitetura da aplicação.",
        "Question": "Qual das seguintes estratégias o arquiteto de soluções deve recomendar para garantir que a aplicação possa lidar com cargas de trabalho variáveis de forma mais eficaz?",
        "Options": {
            "1": "Projetar a aplicação com uma abordagem de escalabilidade horizontal, distribuindo a carga entre várias instâncias, permitindo a adição ou remoção de instâncias com base na demanda.",
            "2": "Escolher uma arquitetura sem servidor que escale automaticamente com base no volume de solicitações, eliminando a necessidade de gerenciar tamanhos ou números de instâncias.",
            "3": "Implementar uma estratégia de escalabilidade vertical usando instâncias maiores para os servidores da aplicação, garantindo que tenham recursos de CPU e memória mais altos para acomodar cargas máximas.",
            "4": "Utilizar uma abordagem híbrida que combina escalabilidade vertical e horizontal, permitindo o redimensionamento de instâncias e a adição de várias instâncias conforme necessário."
        },
        "Correct Answer": "Projetar a aplicação com uma abordagem de escalabilidade horizontal, distribuindo a carga entre várias instâncias, permitindo a adição ou remoção de instâncias com base na demanda.",
        "Explanation": "Projetar a aplicação com uma abordagem de escalabilidade horizontal permite que ela lide efetivamente com cargas de trabalho variáveis, distribuindo o tráfego entre várias instâncias. Este método pode acomodar picos repentinos de carga de forma mais dinâmica e econômica do que simplesmente aumentar o tamanho de uma única instância.",
        "Other Options": [
            "Implementar uma estratégia de escalabilidade vertical pode limitar a flexibilidade da aplicação e pode levar a custos mais altos se uma única instância for usada para acomodar cargas máximas, o que pode não ser necessário durante períodos de tráfego mais baixo.",
            "Utilizar uma abordagem híbrida pode introduzir complexidade na gestão e não necessariamente otimiza o método de escalabilidade mais eficaz, dadas as exigências de carga de trabalho variável.",
            "Escolher uma arquitetura sem servidor pode ser benéfico, mas pode não ser sempre adequada para todos os tipos de aplicações, especialmente aquelas que requerem configurações específicas de instâncias ou serviços com estado que não são totalmente gerenciados em um modelo sem servidor."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "Uma plataforma global de e-commerce está planejando expandir seus serviços para várias regiões para melhorar a latência e a disponibilidade para seus clientes. Eles precisam determinar a melhor estratégia para selecionar Regiões e Zonas de Disponibilidade da AWS que garantam desempenho de rede ideal, considerando potenciais problemas de latência para usuários localizados na América do Norte, Europa e Ásia. A plataforma atualmente opera em uma única Região da AWS.",
        "Question": "Qual é a melhor abordagem para selecionar Regiões e Zonas de Disponibilidade da AWS para a expansão da plataforma de e-commerce a fim de minimizar a latência e otimizar o desempenho da rede?",
        "Options": {
            "1": "Selecionar uma única Região da AWS e implantar recursos em todas as Zonas de Disponibilidade disponíveis dentro dessa Região para garantir máxima redundância.",
            "2": "Escolher a Região da AWS mais próxima da sede da empresa e replicar recursos em suas Zonas de Disponibilidade.",
            "3": "Implantar recursos em várias Regiões da AWS que estão geograficamente próximas aos clientes na América do Norte, Europa e Ásia.",
            "4": "Utilizar o AWS Global Accelerator para direcionar o tráfego para a Região da AWS mais próxima com base na localização do usuário."
        },
        "Correct Answer": "Implantar recursos em várias Regiões da AWS que estão geograficamente próximas aos clientes na América do Norte, Europa e Ásia.",
        "Explanation": "Ao implantar recursos em várias Regiões da AWS que estão geograficamente próximas aos clientes, a plataforma de e-commerce pode reduzir significativamente a latência e melhorar o desempenho da rede. Essa estratégia permite uma arquitetura distribuída que atende usuários em diferentes locais geográficos, garantindo uma melhor experiência do usuário.",
        "Other Options": [
            "Embora selecionar uma única Região da AWS e implantar recursos em todas as suas Zonas de Disponibilidade ofereça redundância, isso não aborda as preocupações de latência para usuários localizados longe dessa Região. Isso pode levar a um desempenho subótimo para usuários em diferentes partes do mundo.",
            "Escolher a Região da AWS mais próxima da sede da empresa pode não atender efetivamente os clientes localizados em outras regiões, o que pode resultar em aumento da latência para esses usuários. É crucial considerar a distribuição geográfica em vez da proximidade com a sede.",
            "Usar o AWS Global Accelerator pode melhorar a disponibilidade e o desempenho da aplicação ao direcionar o tráfego, mas não resolve a necessidade fundamental de implantar recursos em várias Regiões para abordar diretamente os problemas de latência. Confiar apenas no Global Accelerator pode não fornecer a solução ideal para a distribuição geográfica."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "Uma empresa está planejando migrar grandes volumes de dados para o Amazon S3 de várias localizações geográficas. Eles querem garantir que a transferência de dados seja eficiente e minimize os tempos de upload, especialmente para clientes que estão longe da região do bucket S3. Qual serviço da AWS pode ajudar a otimizar esse processo de transferência de dados?",
        "Question": "Qual recurso do Amazon S3 o arquiteto de soluções deve ativar para facilitar uploads de dados mais rápidos em longas distâncias?",
        "Options": {
            "1": "Classe de Armazenamento Padrão do Amazon S3 para todos os objetos para melhorar a disponibilidade.",
            "2": "Políticas de Ciclo de Vida do Amazon S3 para gerenciar a retenção de dados e transições.",
            "3": "Versionamento do Amazon S3 para garantir que todos os uploads de dados sejam retidos e recuperáveis.",
            "4": "Aceleração de Transferência do Amazon S3 para aproveitar as localizações de borda do CloudFront para transferências otimizadas."
        },
        "Correct Answer": "Aceleração de Transferência do Amazon S3 para aproveitar as localizações de borda do CloudFront para transferências otimizadas.",
        "Explanation": "A Aceleração de Transferência do Amazon S3 utiliza a rede de borda do Amazon CloudFront para acelerar uploads de dados para o S3 a partir de longas distâncias. Este recurso otimiza o caminho da rede para reduzir a latência e melhorar significativamente as velocidades de transferência.",
        "Other Options": [
            "A Classe de Armazenamento Padrão do Amazon S3 melhora a disponibilidade, mas não impacta a velocidade da transferência de dados em longas distâncias.",
            "O Versionamento do Amazon S3 é útil para recuperação e gerenciamento de dados, mas não melhora a velocidade dos uploads de dados.",
            "As Políticas de Ciclo de Vida do Amazon S3 gerenciam a retenção de dados e transições entre classes de armazenamento, mas não influenciam a velocidade das transferências de dados."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "Uma empresa de serviços financeiros está buscando automatizar a implantação de sua infraestrutura na AWS. A equipe quer garantir que a infraestrutura seja provisionada e gerenciada de forma consistente, com a capacidade de controle de versão e reutilização de templates. Eles estão considerando usar o AWS CloudFormation para alcançar esse objetivo.",
        "Question": "Qual abordagem forneceria a melhor solução para automatizar a implantação da infraestrutura, garantindo que seja mantida e repetível?",
        "Options": {
            "1": "Implementar o AWS CloudFormation para definir toda a infraestrutura como código em formato JSON ou YAML, incluindo instâncias EC2, configuração de VPC e grupos de segurança. Usar o CloudFormation Designer para visualizar e gerenciar os templates.",
            "2": "Utilizar o AWS Elastic Beanstalk para gerenciar o ambiente da aplicação, enquanto se baseia no CloudFormation apenas para configurar os bancos de dados e componentes de rede. Evitar usar controle de versão para os templates do CloudFormation.",
            "3": "Criar um conjunto de templates do AWS CloudFormation que incluam pilhas aninhadas para gerenciar diferentes componentes da infraestrutura. Usar o AWS CodePipeline para implantar os templates, garantindo controle de versão e atualizações automatizadas.",
            "4": "Provisionar manualmente a infraestrutura usando o AWS Management Console para cada ambiente, enquanto documenta as configurações em uma wiki interna. Usar scripts para automatizar apenas a implantação do código da aplicação."
        },
        "Correct Answer": "Criar um conjunto de templates do AWS CloudFormation que incluam pilhas aninhadas para gerenciar diferentes componentes da infraestrutura. Usar o AWS CodePipeline para implantar os templates, garantindo controle de versão e atualizações automatizadas.",
        "Explanation": "Ao criar um conjunto de templates do AWS CloudFormation com pilhas aninhadas, a empresa pode dividir a infraestrutura em componentes gerenciáveis, facilitando a manutenção e atualização. A integração com o AWS CodePipeline garante que as implantações sejam automatizadas, consistentes e controladas por versão, alinhando-se às melhores práticas para infraestrutura como código.",
        "Other Options": [
            "Esta opção depende do provisionamento manual, o que introduz o risco de inconsistência e erro humano. Não aproveita as capacidades completas do CloudFormation para gerenciar infraestrutura como código.",
            "Embora o Elastic Beanstalk simplifique o gerenciamento de aplicações, depender do CloudFormation apenas para componentes específicos compromete os benefícios de usar infraestrutura como código. Além disso, não usar controle de versão pode levar a desafios na gestão de mudanças ao longo do tempo.",
            "Usar pilhas aninhadas é benéfico, mas omitir o CodePipeline significa que o processo de implantação carece de automação e controle de versão, que são críticos para manter uma infraestrutura consistente entre ambientes."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "Uma empresa está migrando suas aplicações legadas para a AWS e precisa garantir que as aplicações possam escalar de acordo com a demanda sem intervenção manual. As aplicações são principalmente baseadas na web e requerem um ambiente confiável para implantação. O arquiteto de soluções precisa escolher um serviço que possa lidar automaticamente com escalonamento, balanceamento de carga e monitoramento de saúde da aplicação.",
        "Question": "Qual dos seguintes serviços da AWS o arquiteto de soluções deve recomendar para atender aos requisitos da empresa para implantar as aplicações?",
        "Options": {
            "1": "Utilizar funções do AWS Lambda com o Amazon API Gateway para executar as aplicações web de forma serverless e escalar automaticamente com base na demanda.",
            "2": "Implementar o Amazon ECS com Fargate para executar contêineres Docker para as aplicações e gerenciar escalonamento e balanceamento de carga.",
            "3": "Usar grupos de Auto Scaling do Amazon EC2 com Elastic Load Balancing para gerenciar o escalonamento e o balanceamento de carga das aplicações web.",
            "4": "Implantar as aplicações no AWS Elastic Beanstalk, que gerencia automaticamente escalonamento, balanceamento de carga e monitoramento de saúde."
        },
        "Correct Answer": "Implantar as aplicações no AWS Elastic Beanstalk, que gerencia automaticamente escalonamento, balanceamento de carga e monitoramento de saúde.",
        "Explanation": "O AWS Elastic Beanstalk é projetado para facilitar a implantação e o gerenciamento de aplicações web sem exigir gerenciamento extensivo da infraestrutura. Ele provisiona automaticamente os recursos necessários, lida com o escalonamento com base na demanda e inclui recursos integrados de balanceamento de carga e monitoramento de saúde, tornando-o a melhor opção para os requisitos da empresa.",
        "Other Options": [
            "Embora usar grupos de Auto Scaling do Amazon EC2 com Elastic Load Balancing possa gerenciar escalonamento e balanceamento de carga de forma eficaz, requer mais configuração e gerenciamento manual em comparação com o Elastic Beanstalk, tornando-o menos ideal para as necessidades da empresa.",
            "O AWS Lambda com o Amazon API Gateway é adequado para aplicações serverless, mas pode não ser apropriado para aplicações web tradicionais que requerem conexões stateful ou configurações específicas de servidor, que o Elastic Beanstalk pode gerenciar.",
            "O Amazon ECS com Fargate permite que aplicações em contêineres escalem automaticamente, mas pode exigir uma arquitetura e gerenciamento mais complexos em comparação com as capacidades de implantação simples do Elastic Beanstalk."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "Uma empresa de serviços financeiros está enfrentando vulnerabilidades de segurança em sua arquitetura de aplicação, o que levou a múltiplas violações de dados. A empresa precisa avaliar soluções de remediação potenciais para resolver esses problemas de segurança, mantendo a conformidade com as regulamentações do setor. Uma equipe de avaliação de segurança foi encarregada de testar diferentes soluções e fazer recomendações para melhorar a postura geral de segurança da aplicação.",
        "Question": "Qual das seguintes opções é a melhor recomendação para a empresa implementar como uma solução de remediação para melhorar a segurança da aplicação?",
        "Options": {
            "1": "Implementar AWS WAF para proteger a aplicação contra explorações web comuns e configurá-lo para bloquear solicitações maliciosas com base em regras predefinidas.",
            "2": "Ativar AWS Shield Advanced para proteção contra DDoS e configurar o CloudTrail para monitorar o uso da API em toda a aplicação.",
            "3": "Utilizar AWS Secrets Manager para armazenar e gerenciar informações sensíveis de forma segura, como chaves de API e credenciais de banco de dados, usadas pela aplicação.",
            "4": "Implantar o Amazon Inspector para escanear a aplicação em busca de vulnerabilidades e gerar relatórios detalhados para auditorias de conformidade."
        },
        "Correct Answer": "Implementar AWS WAF para proteger a aplicação contra explorações web comuns e configurá-lo para bloquear solicitações maliciosas com base em regras predefinidas.",
        "Explanation": "Implementar o AWS WAF fornecerá proteção imediata contra vulnerabilidades web comuns, melhorando significativamente a segurança da aplicação. Configurá-lo com regras apropriadas pode ajudar a mitigar riscos de ataques comuns, como injeção de SQL e cross-site scripting.",
        "Other Options": [
            "Implantar o Amazon Inspector foca principalmente na identificação de vulnerabilidades, mas não fornece proteção em tempo real contra ataques, tornando-o menos eficaz como uma solução de remediação independente.",
            "Ativar o AWS Shield Advanced é útil para proteção contra DDoS, mas não aborda a gama mais ampla de vulnerabilidades de aplicações web que o AWS WAF pode mitigar.",
            "Utilizar o AWS Secrets Manager é importante para gerenciar credenciais sensíveis, mas não protege diretamente a aplicação contra ataques externos, que é um aspecto crítico dos requisitos de segurança da empresa."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "Uma empresa de serviços financeiros está migrando suas aplicações para o AWS. Eles lidam com dados sensíveis de clientes e requerem medidas de criptografia robustas tanto para dados em repouso quanto para dados em trânsito. A empresa quer garantir a conformidade com as regulamentações do setor enquanto otimiza o desempenho.",
        "Question": "Qual das seguintes estratégias a empresa deve implementar para garantir o manuseio seguro de dados? (Selecione duas)",
        "Options": {
            "1": "Usar criptografia do lado do cliente para dados antes de enviá-los para o Amazon S3.",
            "2": "Implementar criptografia SSL/TLS entre o cliente e o balanceador de carga para proteger dados em trânsito.",
            "3": "Usar o AWS Key Management Service (KMS) para gerenciar as chaves de criptografia para dados em repouso no Amazon S3.",
            "4": "Armazenar dados sensíveis em texto simples no Amazon RDS para otimizar o desempenho das consultas.",
            "5": "Configurar o Amazon RDS para usar criptografia em repouso utilizando as chaves gerenciadas pela AWS por padrão."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Usar o AWS Key Management Service (KMS) para gerenciar as chaves de criptografia para dados em repouso no Amazon S3.",
            "Implementar criptografia SSL/TLS entre o cliente e o balanceador de carga para proteger dados em trânsito."
        ],
        "Explanation": "Usar o AWS Key Management Service (KMS) permite que a empresa gerencie e controle as chaves de criptografia usadas para criptografar dados em repouso no Amazon S3, garantindo que dados sensíveis estejam adequadamente protegidos. Implementar criptografia SSL/TLS entre o cliente e o balanceador de carga protege dados em trânsito, evitando interceptações e garantindo conformidade com as regulamentações do setor.",
        "Other Options": [
            "Armazenar dados sensíveis em texto simples no Amazon RDS é um risco significativo de segurança e não cumpre os requisitos de criptografia. Esta opção não protege adequadamente os dados dos clientes.",
            "A criptografia do lado do cliente adiciona complexidade e pode introduzir sobrecarga adicional para o gerenciamento de dados. Embora melhore a segurança, não é necessária se as opções de criptografia gerenciadas pela AWS forem utilizadas de forma eficaz.",
            "Usar as chaves gerenciadas pela AWS por padrão para criptografia em repouso no Amazon RDS é seguro, mas não dá à empresa controle total sobre o gerenciamento de chaves em comparação com o uso do AWS KMS, que é uma solução melhor para requisitos de conformidade e auditoria."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "Uma empresa de mídia opera uma aplicação de múltiplas camadas no AWS que utiliza o Amazon S3 para armazenamento, instâncias do Amazon EC2 para processamento e Amazon RDS para serviços de banco de dados. A empresa precisa garantir alta disponibilidade e recuperação automática de falhas para sua aplicação. Além disso, a aplicação deve escalar com base na demanda sem intervenção manual. Qual solução atenderá melhor a esses requisitos?",
        "Question": "Qual arquitetura a empresa deve implementar para alcançar failover automático, replicação de dados e elasticidade?",
        "Options": {
            "1": "Usar funções do AWS Lambda para processar os dados armazenados no S3 e acionar as funções usando eventos do Amazon CloudWatch, enquanto armazena informações de estado em uma tabela do Amazon DynamoDB.",
            "2": "Criar uma instância do Amazon RDS com réplicas de leitura em várias regiões e conectar as instâncias do EC2 à instância primária do RDS.",
            "3": "Configurar uma única instância do Amazon EC2 com Auto Scaling configurado para escalar com base na utilização da CPU e usar o Amazon S3 para entrega de conteúdo estático.",
            "4": "Implantar a aplicação em várias Zonas de Disponibilidade (AZs) com um Application Load Balancer (ALB) na frente das instâncias do EC2 e configurar o RDS Multi-AZ para o banco de dados."
        },
        "Correct Answer": "Implantar a aplicação em várias Zonas de Disponibilidade (AZs) com um Application Load Balancer (ALB) na frente das instâncias do EC2 e configurar o RDS Multi-AZ para o banco de dados.",
        "Explanation": "Esta opção garante alta disponibilidade ao distribuir a aplicação em várias AZs, permitindo failover automático e capacidades de auto-reparo. O ALB equilibra o tráfego entre as instâncias do EC2, e o RDS Multi-AZ fornece failover automático e replicação de dados, atendendo aos requisitos de elasticidade e confiabilidade.",
        "Other Options": [
            "Esta opção não fornece alta disponibilidade, pois depende exclusivamente do AWS Lambda e não aborda failover ou replicação de dados para as instâncias do EC2 ou o banco de dados RDS.",
            "Esta opção oferece algum nível de elasticidade, mas carece de recursos de failover automático e replicação de dados, tornando-a menos adequada para requisitos de alta disponibilidade.",
            "Embora esta opção inclua réplicas de leitura, não garante failover automático e auto-reparo para a camada da aplicação, o que é essencial para manter alta disponibilidade."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "Uma empresa global de e-commerce está planejando implantar sua aplicação web em várias Regiões da AWS para garantir baixa latência e alta disponibilidade para seus clientes em todo o mundo. A empresa precisa entender as implicações da infraestrutura global da AWS, incluindo Regiões e Zonas de Disponibilidade, para tomar decisões informadas sobre a estratégia de implantação. Eles estão particularmente interessados em como aproveitar a presença global da AWS para melhorar o desempenho de sua aplicação.",
        "Question": "Qual das seguintes afirmações descreve com precisão as Regiões e Zonas de Disponibilidade da AWS?",
        "Options": {
            "1": "As Regiões da AWS consistem em várias Zonas de Disponibilidade que estão geograficamente dispersas, mas cada Zona de Disponibilidade dentro de uma Região depende das outras para replicação de dados.",
            "2": "As Regiões da AWS são compostas por Zonas de Disponibilidade independentes, que são projetadas para serem completamente isoladas umas das outras para evitar qualquer perda de dados.",
            "3": "As Zonas de Disponibilidade da AWS são projetadas como locais isolados dentro de uma Região, mas todas estão interconectadas com links de alta latência para melhorar a comunicação entre elas.",
            "4": "As Regiões da AWS são isoladas umas das outras, e cada Região possui várias Zonas de Disponibilidade que estão interconectadas com links de baixa latência."
        },
        "Correct Answer": "As Regiões da AWS são isoladas umas das outras, e cada Região possui várias Zonas de Disponibilidade que estão interconectadas com links de baixa latência.",
        "Explanation": "As Regiões da AWS são de fato isoladas umas das outras para melhorar a tolerância a falhas, e dentro de cada Região, existem várias Zonas de Disponibilidade projetadas para fornecer alta disponibilidade. Essas Zonas de Disponibilidade estão interconectadas com links de baixa latência, permitindo comunicação e replicação de dados sem interrupções entre elas, o que é essencial para aplicações que requerem redundância e desempenho.",
        "Other Options": [
            "Esta afirmação está incorreta porque sugere que as Zonas de Disponibilidade estão interconectadas com links de alta latência, o que não é verdade. Elas são projetadas com conexões de baixa latência para facilitar a transferência eficiente de dados.",
            "Esta afirmação está incorreta, pois implica que as Zonas de Disponibilidade dependem umas das outras para replicação de dados. Na realidade, elas são projetadas para operar de forma independente, permitindo isolamento de falhas.",
            "Esta afirmação sugere incorretamente que as Zonas de Disponibilidade estão completamente isoladas umas das outras de uma maneira que impede qualquer perda de dados. Embora sejam projetadas para serem independentes para evitar falhas em cascata, elas ainda estão interconectadas para eficiência operacional."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "Uma empresa de serviços financeiros está construindo uma plataforma de análise em tempo real para processar transações e detectar atividades fraudulentas. O sistema deve ser capaz de lidar com alta taxa de transferência com baixa latência para atender aos requisitos de processamento em tempo real. A empresa está considerando usar o Amazon Kinesis Data Streams para ingestão de dados, mas precisa de orientação sobre a melhor maneira de implementar a solução.",
        "Question": "Qual dos seguintes designs proporcionaria o melhor desempenho para a ingestão de dados no Amazon Kinesis Data Streams?",
        "Options": {
            "1": "Usar várias aplicações produtoras individuais, cada uma enviando dados para um fluxo de dados Kinesis diferente para distribuir a carga.",
            "2": "Configurar um Kinesis Data Firehose para direcionar automaticamente os dados da aplicação produtora para o fluxo de dados Kinesis.",
            "3": "Utilizar a Kinesis Producer Library (KPL) para agrupar vários registros e enviá-los em uma única chamada de API para o fluxo de dados Kinesis.",
            "4": "Implementar uma única aplicação produtora que envia dados diretamente para um fluxo de dados Kinesis com um máximo de 1.000 registros por segundo."
        },
        "Correct Answer": "Utilizar a Kinesis Producer Library (KPL) para agrupar vários registros e enviá-los em uma única chamada de API para o fluxo de dados Kinesis.",
        "Explanation": "Usar a Kinesis Producer Library (KPL) permite agrupar eficientemente vários registros e enviá-los em uma única chamada de API, aumentando significativamente a taxa de transferência e reduzindo o número de solicitações feitas ao fluxo de dados Kinesis. Esta é a maneira mais eficaz de maximizar o desempenho da ingestão de dados.",
        "Other Options": [
            "Implementar uma única aplicação produtora que envia dados diretamente para um fluxo de dados Kinesis limita a taxa de transferência a 1.000 registros por segundo, o que pode não ser suficiente para aplicações de alto volume.",
            "Usar várias aplicações produtoras individuais pode levar a uma complexidade aumentada na gestão das aplicações e pode não utilizar efetivamente as capacidades máximas de taxa de transferência do Kinesis. Seria melhor otimizar o desempenho de um único produtor.",
            "Configurar um Kinesis Data Firehose para este cenário pode não ser adequado, pois o Firehose é projetado para entrega de dados, em vez de ingestão de dados de alta taxa de transferência como o Kinesis Data Streams, e adicionaria latência desnecessária."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "Uma empresa de mídia está se preparando para fazer upload de grandes arquivos de vídeo para o Amazon S3 para armazenamento e distribuição. Eles precisam garantir que os uploads sejam eficientes e possam ser gerenciados de forma flexível, especialmente porque alguns arquivos de vídeo excedem 1 GB de tamanho. Eles estão considerando o melhor método para fazer o upload desses arquivos.",
        "Question": "Qual é a principal vantagem de usar uploads multipart para armazenar grandes arquivos de vídeo no Amazon S3?",
        "Options": {
            "1": "Uploads multipart permitem o armazenamento de objetos em vários buckets S3 simultaneamente, facilitando uma melhor gestão de dados.",
            "2": "Uploads multipart permitem uploads paralelos de partes de arquivos, melhorando a velocidade de upload e possibilitando a recuperação de problemas de rede sem afetar outras partes.",
            "3": "Uploads multipart garantem que o objeto inteiro seja enviado como uma única transação, prevenindo qualquer upload parcial em caso de falha.",
            "4": "Uploads multipart criptografam automaticamente os arquivos durante o processo de upload, garantindo a segurança dos dados sem etapas adicionais."
        },
        "Correct Answer": "Uploads multipart permitem uploads paralelos de partes de arquivos, melhorando a velocidade de upload e possibilitando a recuperação de problemas de rede sem afetar outras partes.",
        "Explanation": "Uploads multipart melhoram o processo de upload ao permitir que arquivos grandes sejam divididos em partes menores, que podem ser enviadas simultaneamente. Este método melhora a taxa de transferência geral e fornece flexibilidade para se recuperar de quaisquer falhas sem precisar reiniciar o upload inteiro.",
        "Other Options": [
            "Uploads multipart não gerenciam automaticamente a criptografia; a criptografia deve ser gerenciada separadamente durante o processo de upload.",
            "Uploads multipart não previnem uploads parciais; eles permitem o upload de partes de forma independente, o que é uma característica e não uma limitação.",
            "Uploads multipart não facilitam o armazenamento de objetos em vários buckets S3; eles se concentram em fazer o upload de um único objeto em partes para um único bucket."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "Uma plataforma global de e-commerce observou um aumento significativo no tráfego de usuários durante as temporadas de férias, levando à degradação do desempenho de sua aplicação hospedada na AWS. O arquiteto de soluções precisa garantir que a aplicação possa escalar para atender à demanda, mantendo o desempenho e minimizando custos. O arquiteto é encarregado de projetar uma solução que possa se adaptar automaticamente aos padrões flutuantes de tráfego de usuários.",
        "Question": "Qual das seguintes estratégias abordaria melhor a necessidade de escalabilidade dinâmica e eficiência de custos neste cenário?",
        "Options": {
            "1": "Implantar um serviço de contêiner gerenciado usando Amazon ECS com Fargate para escalar automaticamente os recursos com base no tráfego de entrada e implementar uma camada de cache com Amazon ElastiCache.",
            "2": "Utilizar Amazon CloudFront como um CDN para distribuir conteúdo globalmente enquanto ajusta manualmente os tamanhos das instâncias EC2 com base nos aumentos esperados de tráfego.",
            "3": "Configurar funções AWS Lambda acionadas pelo API Gateway para lidar com solicitações de entrada e aproveitar o Amazon S3 para entrega de conteúdo estático, garantindo que nenhuma instância EC2 seja necessária.",
            "4": "Implementar Amazon EC2 Auto Scaling com políticas de escalonamento programadas com base em padrões históricos de tráfego, combinado com réplicas de leitura do Amazon RDS para lidar com o aumento da carga no banco de dados."
        },
        "Correct Answer": "Implantar um serviço de contêiner gerenciado usando Amazon ECS com Fargate para escalar automaticamente os recursos com base no tráfego de entrada e implementar uma camada de cache com Amazon ElastiCache.",
        "Explanation": "Usar Amazon ECS com Fargate permite a escalabilidade automática de aplicações em contêiner em resposta a mudanças de tráfego, proporcionando tanto elasticidade quanto custo-efetividade. Acoplar isso com ElastiCache melhora o desempenho ao armazenar em cache dados frequentemente acessados, reduzindo a carga nos serviços de backend.",
        "Other Options": [
            "Implementar políticas de escalonamento programadas pode não responder rapidamente a picos de tráfego súbitos, levando a potenciais problemas de desempenho durante momentos críticos. Além disso, réplicas de leitura do RDS, embora úteis, não abordam a escalabilidade para servidores de aplicação.",
            "Funções AWS Lambda podem lidar com picos de tráfego de forma eficiente, mas essa abordagem pode não ser adequada para todos os tipos de cargas de trabalho, especialmente aquelas que requerem conexões persistentes ou transações complexas. Além disso, a entrega de conteúdo estático através do S3 não aborda a escalabilidade dinâmica da aplicação.",
            "Usar CloudFront é benéfico para a entrega de conteúdo, mas não resolve diretamente o problema de escalar dinamicamente instâncias EC2. Ajustar manualmente os tamanhos das instâncias não é eficiente ou responsivo a mudanças súbitas de tráfego, levando a possíveis gargalos de desempenho."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "Uma empresa de serviços financeiros está utilizando Amazon S3 para armazenar dados de clientes. Para cumprir com os requisitos regulatórios, a empresa precisa implementar políticas de bucket rigorosas que impeçam qualquer acesso público aos dados armazenados. O arquiteto de soluções deve garantir que as configurações sejam configuradas corretamente para evitar qualquer possibilidade de acesso público ser concedido.",
        "Question": "Qual das seguintes configurações o arquiteto de soluções deve implementar para garantir que todo o acesso público ao bucket S3 e seus objetos seja efetivamente bloqueado?",
        "Options": {
            "1": "Definir IgnorePublicAcls como verdadeiro e BlockPublicAcls como falso para permitir acesso público específico.",
            "2": "Ativar BlockPublicAcls e IgnorePublicAcls enquanto permite acesso público através da política do bucket.",
            "3": "Usar a Política do Bucket para negar todo o acesso público, mas permitir que funções IAM específicas acessem os dados.",
            "4": "Ativar BlockPublicAcls e BlockPublicPolicy no bucket S3, e definir RestrictPublicBuckets como verdadeiro."
        },
        "Correct Answer": "Ativar BlockPublicAcls e BlockPublicPolicy no bucket S3, e definir RestrictPublicBuckets como verdadeiro.",
        "Explanation": "Ativar BlockPublicAcls e BlockPublicPolicy garante que todos os controles de acesso público sejam ignorados, e qualquer tentativa de definir acesso público através de políticas de bucket é bloqueada. Definir RestrictPublicBuckets como verdadeiro garante ainda mais que apenas a conta AWS do proprietário do bucket possa acessar o conteúdo dentro do bucket, proporcionando um modelo de segurança abrangente contra acesso público.",
        "Other Options": [
            "Definir IgnorePublicAcls como verdadeiro e BlockPublicAcls como falso permite a possibilidade de acesso público se ACLs públicas forem atribuídas ao bucket ou objetos, o que não atende ao requisito de bloquear todo o acesso público.",
            "Usar uma Política do Bucket para negar acesso público não impede que ACLs públicas sejam definidas. Portanto, ainda pode permitir acesso público se ACLs forem fornecidas, o que é contrário aos requisitos de conformidade.",
            "Ativar BlockPublicAcls enquanto permite acesso público através da política do bucket contradiz o objetivo de bloquear o acesso público, já que a política poderia substituir as configurações de ACL, levando a uma possível exposição de dados sensíveis."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "Uma empresa de serviços financeiros depende fortemente de sua plataforma de negociação online. Para garantir a continuidade dos negócios, eles precisam de uma estratégia robusta de recuperação de desastres que lhes permita mudar rapidamente para um sistema de backup em caso de falha do site principal. Atualmente, eles utilizam uma arquitetura multi-AZ dentro da AWS para seu banco de dados, mas querem estender isso para seus servidores de aplicação e outros componentes críticos.",
        "Question": "Qual das seguintes soluções proporcionaria o MELHOR design para continuidade dos negócios neste cenário?",
        "Options": {
            "1": "Configurar uma réplica de leitura do banco de dados em outra região da AWS e usá-la apenas para failover.",
            "2": "Implementar um template do AWS CloudFormation para automatizar a implantação de servidores de aplicação em uma região diferente em caso de falha.",
            "3": "Implantar os servidores de aplicação em várias regiões da AWS e usar o Route 53 para failover de DNS.",
            "4": "Utilizar o AWS Elastic Load Balancing para distribuir o tráfego entre várias instâncias EC2 em uma única região."
        },
        "Correct Answer": "Implantar os servidores de aplicação em várias regiões da AWS e usar o Route 53 para failover de DNS.",
        "Explanation": "Implantar servidores de aplicação em várias regiões da AWS fornece uma solução robusta para continuidade dos negócios, garantindo que se uma região se tornar indisponível, a aplicação possa mudar de forma transparente para a outra região. Usar o Route 53 para failover de DNS ajuda a redirecionar o tráfego para a região saudável, minimizando o tempo de inatividade.",
        "Other Options": [
            "Configurar uma réplica de leitura do banco de dados em outra região da AWS fornece alguma redundância, mas não aborda os servidores de aplicação, que também são críticos para a continuidade dos negócios.",
            "Utilizar o AWS Elastic Load Balancing dentro de uma única região não oferece proteção contra falhas regionais, o que é essencial para uma estratégia robusta de recuperação de desastres.",
            "Implementar um template do AWS CloudFormation para automatizar a implantação de servidores é útil para provisionamento, mas não fornece inherentemente a redundância necessária entre regiões para uma continuidade de negócios eficaz."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "Uma empresa de serviços financeiros está buscando modernizar sua arquitetura de aplicação, reduzindo a sobrecarga associada à gestão da infraestrutura. A empresa possui uma aplicação legada que requer atualizações e correções frequentes, o que se tornou complicado. O arquiteto de soluções tem a tarefa de fazer a transição para um modelo de serviço gerenciado para simplificar as operações e focar no desenvolvimento da aplicação em vez da gestão da infraestrutura.",
        "Question": "Qual das seguintes soluções o arquiteto de soluções deve recomendar para reduzir efetivamente a sobrecarga de provisionamento e correção da infraestrutura?",
        "Options": {
            "1": "Migrar a aplicação para instâncias do Amazon EC2 e usar um script de automação personalizado para atualizações e correções.",
            "2": "Mover a aplicação para um cluster Kubernetes local para gerenciar a orquestração de contêineres e manter a flexibilidade.",
            "3": "Implantar a aplicação no Amazon ECS com Fargate para eliminar a gestão de servidores enquanto utiliza recursos de segurança integrados.",
            "4": "Levantar e transferir a aplicação para volumes do Amazon EBS anexados a instâncias do EC2 para manter o controle sobre a infraestrutura."
        },
        "Correct Answer": "Implantar a aplicação no Amazon ECS com Fargate para eliminar a gestão de servidores enquanto utiliza recursos de segurança integrados.",
        "Explanation": "Usar o Amazon ECS com Fargate permite que a empresa execute contêineres sem precisar gerenciar servidores ou clusters. Isso reduz significativamente a sobrecarga de provisionamento e correção da infraestrutura, permitindo que a equipe se concentre no desenvolvimento e implantação da aplicação.",
        "Other Options": [
            "Migrar para instâncias do Amazon EC2 ainda exigiria que a equipe gerenciasse a infraestrutura subjacente, incluindo atualizações e correções, o que não se alinha ao objetivo de reduzir a sobrecarga.",
            "Levantar e transferir a aplicação para volumes do Amazon EBS anexados a instâncias do EC2 não eliminaria a necessidade de gestão da infraestrutura, pois a empresa ainda seria responsável por manter e corrigir as instâncias do EC2.",
            "Mover a aplicação para um cluster Kubernetes local não reduziria a sobrecarga da infraestrutura, uma vez que a empresa ainda precisaria gerenciar o hardware e software subjacentes, contradizendo o objetivo de minimizar a gestão da infraestrutura."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "Uma empresa de serviços financeiros está desenvolvendo uma nova aplicação que requer acesso a dados de configuração sensíveis em múltiplos ambientes (desenvolvimento, teste e produção) na AWS. A aplicação deve recuperar essas configurações de forma segura, sem codificá-las diretamente no código-fonte. A equipe decidiu usar o AWS CloudFormation para gerenciar os recursos e configurações. Eles também querem garantir que possam gerenciar e atualizar essas configurações facilmente conforme necessário.",
        "Question": "Como a equipe de desenvolvimento pode utilizar o AWS CloudFormation para gerenciar de forma segura dados de configuração sensíveis para sua aplicação?",
        "Options": {
            "1": "Definir Parâmetros do Systems Manager na seção de Parâmetros do template do CloudFormation, usando chaves de parâmetro SSM para valores sensíveis.",
            "2": "Usar o AWS Secrets Manager para armazenar dados de configuração sensíveis e referenciá-los diretamente no template do CloudFormation.",
            "3": "Criar uma função Lambda que recupera dados sensíveis do S3 durante o processo de criação da pilha do CloudFormation.",
            "4": "Armazenar dados de configuração sensíveis diretamente no template do CloudFormation como parâmetros em texto simples para simplificar o acesso."
        },
        "Correct Answer": "Definir Parâmetros do Systems Manager na seção de Parâmetros do template do CloudFormation, usando chaves de parâmetro SSM para valores sensíveis.",
        "Explanation": "Usar Parâmetros do Systems Manager no template do CloudFormation permite que a equipe referencie de forma segura dados de configuração sensíveis armazenados no AWS Systems Manager Parameter Store. Essa abordagem garante que os parâmetros sejam recuperados de forma segura durante as operações da pilha, sem expor informações sensíveis no próprio template.",
        "Other Options": [
            "Armazenar dados de configuração sensíveis diretamente no template do CloudFormation como parâmetros em texto simples representa um risco significativo à segurança, pois expõe informações sensíveis no controle de versão e durante as operações da pilha.",
            "Embora o AWS Secrets Manager seja projetado para gerenciar dados sensíveis, ele não está integrado diretamente nos templates do CloudFormation da mesma forma que os Parâmetros do Systems Manager, tornando essa abordagem menos adequada para gestão segura de configurações neste contexto.",
            "Criar uma função Lambda para recuperar dados sensíveis do S3 adiciona complexidade desnecessária e potenciais vulnerabilidades de segurança, pois requer a gestão de recursos e permissões adicionais que poderiam expor informações sensíveis."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "Uma startup está lançando um novo aplicativo móvel que requer um serviço de backend para processar dados e transações dos usuários. A empresa está preocupada com a gestão de custos, pois espera um tráfego de usuários flutuante. Eles querem minimizar custos enquanto garantem que o serviço de backend possa escalar automaticamente com base na demanda. A empresa está considerando vários serviços da AWS para implementar essa solução.",
        "Question": "Qual estratégia de otimização de custos o Solutions Architect deve recomendar para gerenciar eficientemente os recursos de backend para o aplicativo móvel?",
        "Options": {
            "1": "Implementar funções do AWS Lambda para os serviços de backend para escalar automaticamente com base no tráfego e usar o Amazon API Gateway para gerenciar o acesso às funções. Armazenar dados dos usuários no Amazon DynamoDB por seu modelo de preços por solicitação.",
            "2": "Provisionar uma frota de instâncias do Amazon EC2 em um grupo de Auto Scaling para lidar com os serviços de backend e usar o Amazon RDS para o banco de dados. Utilizar instâncias reservadas para reduzir custos ao longo do tempo.",
            "3": "Configurar uma instância do Amazon EC2 com um tamanho fixo para executar serviços de backend e usar o Amazon RDS com IOPS provisionados para acesso rápido ao banco de dados, aplicando uma abordagem de escalonamento manual.",
            "4": "Implantar o Amazon ECS com Fargate para executar serviços de backend em contêineres. Usar o Amazon S3 para armazenamento estático e provisionar uma instância do Amazon RDS com preços sob demanda para o banco de dados."
        },
        "Correct Answer": "Implementar funções do AWS Lambda para os serviços de backend para escalar automaticamente com base no tráfego e usar o Amazon API Gateway para gerenciar o acesso às funções. Armazenar dados dos usuários no Amazon DynamoDB por seu modelo de preços por solicitação.",
        "Explanation": "Usar o AWS Lambda permite que o backend escale automaticamente em resposta ao tráfego de entrada, garantindo que os custos sejam mantidos ao mínimo, pagando apenas pelo tempo de computação utilizado. O Amazon API Gateway fornece uma interface segura e escalável para o aplicativo móvel interagir com as funções Lambda. Além disso, o modelo de preços por solicitação do DynamoDB permite que a startup pague apenas pelas solicitações que fizer, otimizando ainda mais os custos.",
        "Other Options": [
            "Provisionar uma frota de instâncias do Amazon EC2 envolve custos iniciais e pode levar a sobreprovisionamento durante períodos de baixo tráfego, o que não se alinha ao objetivo de otimização de custos da startup. Instâncias reservadas também exigem compromisso e não oferecem a flexibilidade necessária para tráfego flutuante.",
            "Implantar o Amazon ECS com Fargate é uma solução mais flexível, mas pode envolver custos mais altos em comparação com o Lambda quando o tráfego é baixo. O uso de preços sob demanda para o RDS também pode levar a custos aumentados se o banco de dados estiver ocioso, o que é menos ideal para gestão de custos.",
            "Configurar uma instância do Amazon EC2 de tamanho fixo não fornece a escalabilidade necessária para tráfego variável e pode levar a subutilização durante períodos de baixa demanda. IOPS provisionados para o Amazon RDS podem adicionar custos desnecessários, especialmente se a aplicação não exigir alto desempenho de forma consistente."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "Uma empresa global de e-commerce está expandindo seus serviços para várias regiões para melhorar a latência e a confiabilidade. A empresa está considerando usar o Amazon CloudFront para entrega de conteúdo e as Regiões da AWS para hospedar sua aplicação web. Eles querem garantir que sua arquitetura esteja otimizada para alta disponibilidade e recuperação de desastres. No entanto, eles não têm certeza sobre as melhores práticas para implantar recursos na Infraestrutura Global da AWS.",
        "Question": "Qual das seguintes abordagens suportará alta disponibilidade e recuperação de desastres em várias Regiões da AWS? (Selecione duas)",
        "Options": {
            "1": "Implantar a aplicação web em várias Regiões da AWS com políticas de roteamento do Route 53 para gerenciamento de tráfego.",
            "2": "Utilizar o AWS Direct Connect para estabelecer uma conexão privada entre o data center local e uma única Região da AWS.",
            "3": "Usar o Amazon S3 para armazenamento de conteúdo estático em uma única Região da AWS para simplificar a arquitetura.",
            "4": "Aproveitar o AWS Global Accelerator para melhorar a disponibilidade e o desempenho da aplicação em várias Regiões da AWS.",
            "5": "Implementar o Amazon RDS com réplicas de leitura entre regiões para garantir redundância de dados e rápida recuperação."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Implantar a aplicação web em várias Regiões da AWS com políticas de roteamento do Route 53 para gerenciamento de tráfego.",
            "Aproveitar o AWS Global Accelerator para melhorar a disponibilidade e o desempenho da aplicação em várias Regiões da AWS."
        ],
        "Explanation": "Implantar a aplicação web em várias Regiões da AWS com políticas de roteamento do Route 53 permite um gerenciamento eficaz do tráfego e garante que os usuários sejam direcionados para o recurso disponível mais próximo, aumentando a disponibilidade. O AWS Global Accelerator pode direcionar o tráfego para pontos finais ideais com base na saúde, geografia e políticas de roteamento, o que melhora tanto o desempenho quanto a disponibilidade entre as regiões.",
        "Other Options": [
            "Usar o Amazon S3 para armazenamento de conteúdo estático em uma única Região da AWS não fornece alta disponibilidade ou recuperação de desastres em várias regiões, pois cria um único ponto de falha.",
            "Implementar o Amazon RDS com réplicas de leitura entre regiões melhora a redundância de dados, mas não garante alta disponibilidade para a própria aplicação web, pois se concentra principalmente na disponibilidade do banco de dados em vez da arquitetura geral da aplicação.",
            "Utilizar o AWS Direct Connect para estabelecer uma conexão privada com uma única Região da AWS não suporta alta disponibilidade em várias regiões, pois limita a conectividade a um único ponto, reduzindo a redundância."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "Uma empresa está migrando suas aplicações para a AWS e precisa implementar uma estratégia de gerenciamento de acesso seguro. O arquiteto de soluções é encarregado de definir uma política para funções IAM que permita que certos serviços da AWS interajam entre si, garantindo que informações sensíveis permaneçam protegidas. A política deve permitir ações em recursos específicos sem conceder permissões excessivas.",
        "Question": "Dadas as exigências para gerenciamento de acesso seguro, qual política de função IAM o arquiteto de soluções deve implementar para atender às necessidades da empresa?",
        "Options": {
            "1": "Implementar uma função IAM com acesso irrestrito aos recursos EC2 e S3, permitindo a exclusão de todas as funções e políticas IAM para simplificar a gestão.",
            "2": "Criar uma função IAM que permita acesso total a todos os serviços e recursos da AWS, permitindo que os usuários gerenciem usuários e grupos IAM conforme necessário.",
            "3": "Criar uma função IAM que permita acesso apenas ao IAM e às Organizações, impedindo qualquer acesso aos recursos S3 ou EC2 para manter alta segurança.",
            "4": "Definir uma função IAM que permita ações nos recursos S3 e EC2 enquanto nega explicitamente ações relacionadas ao IAM e às Organizações, garantindo que funções vinculadas a serviços possam ser criadas quando necessário."
        },
        "Correct Answer": "Definir uma função IAM que permita ações nos recursos S3 e EC2 enquanto nega explicitamente ações relacionadas ao IAM e às Organizações, garantindo que funções vinculadas a serviços possam ser criadas quando necessário.",
        "Explanation": "Esta opção está alinhada com a necessidade de permitir ações específicas em S3 e EC2 enquanto restringe permissões relacionadas ao IAM e às Organizações, mantendo um ambiente seguro. Também suporta a criação de funções vinculadas a serviços conforme necessário.",
        "Other Options": [
            "Esta opção concede permissões excessivas ao permitir acesso total a todos os serviços e recursos da AWS, o que pode levar a vulnerabilidades de segurança e não atende ao requisito de menor privilégio.",
            "Esta opção limita o acesso apenas ao IAM e às Organizações, o que contradiz o requisito de permitir ações nos recursos S3 e EC2, falhando assim em atender às necessidades da aplicação.",
            "Esta opção apresenta um grande risco de segurança ao permitir acesso irrestrito aos recursos EC2 e S3 e habilitar a exclusão de funções e políticas IAM, o que pode comprometer a segurança da conta."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "Uma startup está executando várias aplicações na AWS e está preocupada com sua fatura mensal da AWS, que tem aumentado constantemente. Eles querem implementar uma estratégia de otimização de custos enquanto garantem que tenham visibilidade sobre seus padrões de gastos. A startup tem uma pequena equipe de DevOps e deve garantir mínima interrupção em seus serviços.",
        "Question": "Qual das seguintes abordagens a startup deve adotar para alcançar a otimização de custos e visibilidade em seus gastos na AWS?",
        "Options": {
            "1": "Configurar uma solução de registro centralizado usando o Amazon CloudTrail para monitorar chamadas de API e o AWS Config para rastrear mudanças de recursos. Revisar os logs mensalmente para entender as implicações de custo.",
            "2": "Usar o Amazon CloudWatch para monitorar todos os serviços da AWS e criar alarmes para picos incomuns de uso. Ajustar os limites de serviço conforme necessário para ajudar a controlar os custos.",
            "3": "Implementar o AWS Budgets para definir orçamentos personalizados de custo e uso para diferentes equipes. Habilitar tags de alocação de custos para rastrear gastos por aplicação e configurar alertas para limites orçamentários.",
            "4": "Migrar todas as aplicações para o AWS Lambda para se beneficiar de um modelo de preços pay-as-you-go. Analisar dados históricos de uso para prever custos futuros e ajustar conforme necessário."
        },
        "Correct Answer": "Implementar o AWS Budgets para definir orçamentos personalizados de custo e uso para diferentes equipes. Habilitar tags de alocação de custos para rastrear gastos por aplicação e configurar alertas para limites orçamentários.",
        "Explanation": "Implementar o AWS Budgets permite que a startup defina metas de custo específicas, monitore gastos e receba alertas ao se aproximar dos limites orçamentários. Habilitar tags de alocação de custos ajuda a fornecer visibilidade sobre quais partes do negócio estão gerando custos, apoiando uma gestão eficaz de custos.",
        "Other Options": [
            "Embora monitorar com o Amazon CloudWatch seja benéfico, ele se concentra principalmente em métricas de desempenho e não fornece diretamente visibilidade de custos ou recursos de gerenciamento orçamentário necessários para a otimização de custos.",
            "Migrar todas as aplicações para o AWS Lambda pode reduzir custos associados a recursos ociosos, mas não fornece uma estratégia abrangente para rastrear e gerenciar os gastos gerais da AWS ou visibilidade sobre os custos por aplicação.",
            "Configurar registros centralizados com o Amazon CloudTrail e o AWS Config é útil para conformidade e rastreamento de recursos, mas não aborda diretamente a otimização de custos ou fornece visibilidade em tempo real sobre os gastos reais."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "Uma instituição financeira está planejando migrar suas aplicações legadas locais para a nuvem AWS. As aplicações são altamente complexas e requerem modificações significativas para atender aos padrões de arquitetura em nuvem. A instituição busca avaliar diferentes estratégias de migração com base na estrutura 7Rs para determinar a melhor abordagem, minimizando riscos e maximizando benefícios. O arquiteto de soluções é encarregado de selecionar as estratégias mais apropriadas para as aplicações.",
        "Question": "Quais das seguintes estratégias de migração o arquiteto de soluções deve considerar para as aplicações legadas? (Selecione duas)",
        "Options": {
            "1": "Refatorar as aplicações para aproveitar ao máximo os recursos nativos da nuvem, como microserviços e arquitetura serverless.",
            "2": "Replataformar as aplicações movendo-as para instâncias do Amazon EC2 com mudanças mínimas no código.",
            "3": "Reconstruir as aplicações do zero usando uma linguagem de programação moderna e uma arquitetura que esteja alinhada com as melhores práticas da AWS.",
            "4": "Recomprar as aplicações adquirindo software comercial pronto que forneça funcionalidade semelhante de forma mais eficiente.",
            "5": "Manter as aplicações locais e estender suas capacidades integrando-as com serviços da AWS por meio de soluções de nuvem híbrida."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Refatorar as aplicações para aproveitar ao máximo os recursos nativos da nuvem, como microserviços e arquitetura serverless.",
            "Reconstruir as aplicações do zero usando uma linguagem de programação moderna e uma arquitetura que esteja alinhada com as melhores práticas da AWS."
        ],
        "Explanation": "Refatorar as aplicações permite aproveitar os recursos nativos da nuvem, melhorando a escalabilidade e a manutenibilidade, enquanto a reconstrução oferece um novo começo para adotar práticas de desenvolvimento modernas, tornando-as inerentemente mais compatíveis com a nuvem.",
        "Other Options": [
            "Replataformar pode não utilizar totalmente as capacidades da nuvem e pode não gerar benefícios significativos em comparação com outras estratégias. Envolve mudanças mínimas que podem não abordar efetivamente a complexidade da aplicação.",
            "Manter as aplicações locais contradiz o objetivo de migração para a AWS e não aproveita totalmente a escalabilidade e flexibilidade da nuvem.",
            "Recomprar software pode ser uma opção viável, mas não aborda diretamente a modernização das aplicações legadas e pode envolver custos de licenciamento aumentados sem garantir alinhamento com os processos de negócios existentes."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "Uma empresa de serviços financeiros está buscando mover uma parte de suas cargas de trabalho locais para a AWS. Eles estão preocupados com os custos associados à execução de suas aplicações na AWS e precisam equilibrar os requisitos de desempenho com as restrições orçamentárias. As cargas de trabalho têm padrões de uso variados, com algumas sendo executadas continuamente enquanto outras são usadas apenas durante os horários de pico. A empresa está considerando diferentes opções de compra para otimizar seus custos.",
        "Question": "Qual das seguintes opções de compra proporcionará à empresa o melhor equilíbrio entre custo e desempenho para cargas de trabalho constantes e variáveis?",
        "Options": {
            "1": "Utilizar instâncias sob demanda exclusivamente para todas as cargas de trabalho para manter flexibilidade, independentemente das implicações de custo.",
            "2": "Implantar Hosts Dedicados para todas as cargas de trabalho para obter o mais alto nível de controle sobre a colocação de instâncias e utilização de recursos.",
            "3": "Comprar Instâncias Reservadas para cargas de trabalho em estado constante e usar Instâncias Spot para cargas de trabalho variáveis durante os horários de pico para minimizar custos.",
            "4": "Optar por Planos de Economia para cobrir todas as cargas de trabalho, garantindo que a empresa se beneficie de economias de custo sem estar vinculada a tipos específicos de instâncias."
        },
        "Correct Answer": "Comprar Instâncias Reservadas para cargas de trabalho em estado constante e usar Instâncias Spot para cargas de trabalho variáveis durante os horários de pico para minimizar custos.",
        "Explanation": "Usar Instâncias Reservadas para cargas de trabalho em estado constante proporciona um custo mais baixo em comparação com a precificação sob demanda, enquanto aproveitar Instâncias Spot para cargas de trabalho variáveis durante os horários de pico permite que a empresa aproveite preços mais baixos em capacidade ociosa. Essa estratégia se alinha bem com a otimização de custos e necessidades de desempenho.",
        "Other Options": [
            "Usar instâncias sob demanda exclusivamente pode proporcionar flexibilidade, mas pode resultar em custos significativamente mais altos, especialmente para cargas de trabalho constantes que poderiam ser otimizadas com Instâncias Reservadas.",
            "Embora os Planos de Economia ofereçam flexibilidade e economias de custo em vários tipos de instâncias, eles podem não proporcionar o mesmo nível de economia que uma combinação de Instâncias Reservadas e Spot adaptadas aos padrões específicos de carga de trabalho da empresa.",
            "Implantar Hosts Dedicados é geralmente mais caro e pode não ser necessário para todas as cargas de trabalho, o que pode levar a custos mais altos sem os benefícios de desempenho correspondentes para aplicações menos críticas."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "Uma empresa de varejo utiliza várias aplicações de Software como Serviço (SaaS), incluindo Salesforce para gerenciamento de relacionamento com o cliente e Google Analytics para rastreamento de desempenho do site. A empresa precisa automatizar a transferência de dados de clientes do Salesforce para o Amazon S3 para fins de análise e deseja garantir que esses dados sejam atualizados regularmente sem intervenção manual. Além disso, eles querem ter certeza de que os dados sejam transformados e preparados para análise. A empresa está em busca de uma solução que minimize a sobrecarga operacional e permita fácil integração com os serviços da AWS.",
        "Question": "Qual das seguintes soluções o arquiteto de soluções deve implementar para automatizar o fluxo de dados entre Salesforce e Amazon S3, garantindo que os dados sejam transformados e preparados para análise?",
        "Options": {
            "1": "Configurar um Amazon Kinesis Data Firehose para transmitir dados do Salesforce para o Amazon S3 em quase tempo real.",
            "2": "Usar trabalhos do AWS Glue para extrair dados do Salesforce e carregá-los no Amazon S3 em um cronograma predefinido.",
            "3": "Configurar o Amazon AppFlow para transferir dados do Salesforce para o Amazon S3, aplicando as transformações necessárias durante o processo.",
            "4": "Desenvolver uma aplicação personalizada usando AWS Lambda e a API do Salesforce para extrair e carregar dados no Amazon S3 em um cronograma."
        },
        "Correct Answer": "Configurar o Amazon AppFlow para transferir dados do Salesforce para o Amazon S3, aplicando as transformações necessárias durante o processo.",
        "Explanation": "O Amazon AppFlow é um serviço totalmente gerenciado que simplifica o processo de transferência de dados entre aplicações SaaS como Salesforce e serviços da AWS, como o Amazon S3. Ele permite fácil configuração de fluxos de dados, incluindo a capacidade de aplicar transformações aos dados à medida que eles se movem, atendendo assim aos requisitos da empresa para automação e preparação de dados.",
        "Other Options": [
            "Desenvolver uma aplicação personalizada adiciona complexidade desnecessária e sobrecarga operacional, o que vai contra o requisito de minimizar os encargos operacionais. Isso requer manutenção de código e gerenciamento manual dos limites de taxa da API.",
            "Usar o Amazon Kinesis Data Firehose é mais adequado para aplicações de streaming em tempo real do que para transferências de dados programadas. Ele não fornece capacidades de transformação integradas tão eficazmente quanto o Amazon AppFlow.",
            "Os trabalhos do AWS Glue são tipicamente usados para processos de ETL e requerem configuração adicional para agendar e gerenciar trabalhos. Embora possa alcançar o objetivo, introduz mais complexidade em comparação com a configuração direta do Amazon AppFlow."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "Uma empresa de varejo online em crescimento está avaliando o custo total de propriedade (TCO) da migração de sua infraestrutura local para a AWS. Eles querem entender não apenas os custos diretos, mas também os custos indiretos associados à migração, incluindo despesas operacionais e possíveis interrupções durante a transição. Eles consultaram um Arquiteto de Soluções para avaliar o impacto financeiro geral dessa mudança.",
        "Question": "Qual das seguintes abordagens é mais eficaz para a empresa calcular com precisão o custo total de propriedade (TCO) para sua migração para a AWS?",
        "Options": {
            "1": "Focar apenas nos preços dos serviços da AWS que pretendem usar, sem considerar outros fatores.",
            "2": "Estimar custos com base em dados históricos de migrações semelhantes realizadas por outras empresas em seu setor.",
            "3": "Considerar apenas as possíveis economias de não manter seu data center local.",
            "4": "Utilizar a Calculadora de TCO da AWS para incluir tanto custos diretos quanto indiretos em sua análise."
        },
        "Correct Answer": "Utilizar a Calculadora de TCO da AWS para incluir tanto custos diretos quanto indiretos em sua análise.",
        "Explanation": "Usar a Calculadora de TCO da AWS fornece uma visão abrangente das implicações financeiras de migrar para a AWS, levando em conta tanto os custos diretos (como computação e armazenamento) quanto os custos indiretos (como despesas operacionais e possíveis interrupções). Essa abordagem holística garante que a empresa possa tomar uma decisão informada com base em projeções financeiras precisas.",
        "Other Options": [
            "Focar apenas nos preços dos serviços da AWS ignora o panorama financeiro mais amplo, incluindo custos indiretos e impactos operacionais, o que pode levar a uma subestimação do verdadeiro TCO.",
            "Estimar custos com base em dados históricos de outras empresas pode não refletir com precisão a situação única da empresa, incluindo suas cargas de trabalho específicas e requisitos operacionais.",
            "Considerar apenas as possíveis economias de eliminar o data center local não leva em conta os custos contínuos associados aos serviços da AWS, mudanças operacionais e possíveis despesas iniciais de migração."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "Uma empresa está executando uma arquitetura de microsserviços usando Amazon ECS com tipo de lançamento EC2. Eles estão considerando utilizar instâncias Spot para reduzir custos, garantindo interrupções mínimas no serviço durante a terminação das instâncias. A empresa quer entender como o ECS gerencia a terminação de tarefas em conjunto com as instâncias EC2 subjacentes.",
        "Question": "Como o Amazon ECS aprimora o uso de instâncias Spot em uma arquitetura de microsserviços para minimizar interrupções no serviço durante a terminação das instâncias EC2?",
        "Options": {
            "1": "O ECS gerencia o DRAINING de tarefas, encerrando conexões de forma elegante enquanto agenda tarefas de substituição em novas instâncias EC2.",
            "2": "O ECS requer intervenção manual para lidar com a terminação de instâncias Spot, tornando-o menos eficiente para alta disponibilidade.",
            "3": "O ECS usa instâncias reservadas para substituir instâncias Spot terminadas, garantindo disponibilidade constante de tarefas.",
            "4": "O ECS termina automaticamente instâncias Spot quando as tarefas não estão mais em execução, garantindo uma utilização eficiente dos recursos."
        },
        "Correct Answer": "O ECS gerencia o DRAINING de tarefas, encerrando conexões de forma elegante enquanto agenda tarefas de substituição em novas instâncias EC2.",
        "Explanation": "O Amazon ECS aproveita a funcionalidade inerente de DRAINING durante a terminação de instâncias Spot, permitindo que as tarefas sejam interrompidas de forma elegante, as conexões sejam encerradas de maneira limpa e as tarefas de substituição sejam agendadas de forma eficiente, minimizando interrupções no serviço.",
        "Other Options": [
            "Esta opção está incorreta porque o ECS não termina automaticamente instâncias Spot com base apenas no status da tarefa. Em vez disso, ele gerencia a terminação elegante das tarefas quando uma instância subjacente está sendo terminada.",
            "Esta opção está incorreta porque o ECS não depende de instâncias reservadas para substituir instâncias Spot terminadas; ele utiliza a funcionalidade de DRAINING para gerenciar as terminações de tarefas e o agendamento de substituições em novas instâncias.",
            "Esta opção está incorreta porque, embora o ECS forneça automação para gerenciar tarefas, não requer intervenção manual para lidar com a terminação de instâncias Spot, pois automatiza o processo de DRAINING."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "Uma empresa de varejo está construindo um novo aplicativo que processa pedidos de clientes em tempo real. Espera-se que o aplicativo lide com cargas de trabalho variáveis durante as temporadas de compras de pico e exija uma sobrecarga mínima de gerenciamento. O arquiteto de soluções está considerando opções de computação serverless para atender a esses requisitos.",
        "Question": "Qual serviço de computação serverless da AWS seria a melhor escolha para lidar com as cargas de trabalho variáveis enquanto minimiza a sobrecarga de gerenciamento?",
        "Options": {
            "1": "Amazon ECS com Fargate para executar aplicativos em contêiner",
            "2": "Amazon EC2 Auto Scaling para gerenciar a escalabilidade das instâncias",
            "3": "AWS Lambda para executar código em resposta a eventos",
            "4": "AWS Elastic Beanstalk para implantar e gerenciar aplicativos"
        },
        "Correct Answer": "AWS Lambda para executar código em resposta a eventos",
        "Explanation": "O AWS Lambda é projetado para computação serverless e pode escalar automaticamente em resposta a solicitações recebidas, tornando-o ideal para lidar com cargas de trabalho variáveis enquanto requer uma sobrecarga mínima de gerenciamento.",
        "Other Options": [
            "Amazon ECS com Fargate, embora serverless para aplicativos em contêiner, requer mais gerenciamento e configuração em comparação com o AWS Lambda, que é orientado a eventos e não possui infraestrutura de servidor para gerenciar.",
            "Amazon EC2 Auto Scaling gerencia uma frota de instâncias EC2 e requer intervenção manual para provisionamento e gerenciamento de instâncias, o que contradiz o requisito de sobrecarga mínima de gerenciamento.",
            "AWS Elastic Beanstalk simplifica a implantação de aplicativos, mas ainda requer algum gerenciamento dos recursos subjacentes, tornando-o menos adequado para uma arquitetura totalmente serverless projetada para lidar com cargas de trabalho variáveis."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "Uma empresa global de e-commerce está enfrentando desafios com latência e consistência de dados para seu banco de dados, que atualmente opera em uma única Região da AWS. A gestão visa fornecer leituras de baixa latência para usuários em diferentes regiões geográficas, além de garantir capacidades de recuperação em desastres. Eles estão considerando usar o Amazon Aurora para atender a esses requisitos.",
        "Question": "Qual das seguintes soluções o arquiteto de soluções deve recomendar para melhorar o desempenho e a disponibilidade do aplicativo em várias regiões?",
        "Options": {
            "1": "Utilizar Réplicas de Leitura do Amazon RDS em cada Região da AWS para distribuir o tráfego de leitura, enquanto mantém uma única instância de banco de dados primária para operações de escrita em uma região.",
            "2": "Implementar o Amazon Aurora Global Database para permitir leituras de baixa latência em várias Regiões da AWS, garantindo ao mesmo tempo capacidades de recuperação em desastres. Configurar a região primária para gravações e regiões secundárias para réplicas de leitura.",
            "3": "Implantar um cluster Multi-Master do Amazon Aurora para permitir várias instâncias de leitura e gravação em diferentes Regiões da AWS, proporcionando alta disponibilidade e capacidades de failover.",
            "4": "Configurar uma instância separada do Amazon Aurora em cada Região da AWS e usar o AWS Database Migration Service para replicação contínua de dados, garantindo a consistência dos dados e minimizando a latência."
        },
        "Correct Answer": "Implementar o Amazon Aurora Global Database para permitir leituras de baixa latência em várias Regiões da AWS, garantindo ao mesmo tempo capacidades de recuperação em desastres. Configurar a região primária para gravações e regiões secundárias para réplicas de leitura.",
        "Explanation": "O Amazon Aurora Global Database é projetado especificamente para aplicações globalmente distribuídas, permitindo leituras de baixa latência e fornecendo recuperação em desastres de interrupções regionais. Esta solução atende efetivamente aos requisitos da empresa.",
        "Other Options": [
            "O Amazon Aurora Multi-Master permite várias instâncias de leitura e gravação, mas não suporta implantações entre regiões, tornando-o inadequado para a necessidade de acesso de baixa latência em diferentes regiões.",
            "Configurar instâncias separadas do Amazon Aurora em cada região complicaria a gestão e a consistência dos dados, e não aproveitaria os benefícios dos recursos do banco de dados global do Aurora.",
            "Usar Réplicas de Leitura do Amazon RDS poderia distribuir o tráfego de leitura, mas não fornece o mesmo nível de recuperação em desastres e capacidades de baixa latência em várias regiões como o Aurora Global Database."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "Uma empresa global de e-commerce opera um site que atende clientes de várias regiões ao redor do mundo. A empresa usa o AWS Route 53 para gerenciar seus registros DNS e deseja otimizar o roteamento de tráfego para garantir baixa latência e alta disponibilidade para seus usuários. A empresa possui vários servidores web implantados em diferentes Regiões da AWS e deseja implementar uma estratégia de roteamento que melhor equilibre a experiência do usuário e a utilização de recursos.",
        "Question": "Qual política de roteamento a empresa deve implementar para garantir que os usuários sejam direcionados para a Região da AWS que oferece a menor latência para suas solicitações?",
        "Options": {
            "1": "Política de roteamento por latência para direcionar o tráfego para a região que fornece o melhor tempo de resposta.",
            "2": "Política de roteamento ponderado para distribuir proporcionalmente o tráfego entre várias regiões.",
            "3": "Política de roteamento por geolocalização para direcionar usuários com base em sua localização geográfica.",
            "4": "Política de roteamento de failover para redirecionar o tráfego para uma região de backup em caso de falha da região primária."
        },
        "Correct Answer": "Política de roteamento por latência para direcionar o tráfego para a região que fornece o melhor tempo de resposta.",
        "Explanation": "A política de roteamento por latência é projetada especificamente para direcionar usuários para a Região da AWS que oferece a menor latência, garantindo desempenho ideal para as solicitações dos usuários. Isso minimiza os tempos de resposta e melhora a experiência geral do usuário.",
        "Other Options": [
            "A política de roteamento por geolocalização não é a melhor escolha aqui, pois direciona o tráfego com base na localização do usuário, em vez da latência experimentada em diferentes regiões, o que pode não fornecer necessariamente a menor latência para todos os usuários.",
            "A política de roteamento ponderado permite que o tráfego seja distribuído entre vários recursos, mas não leva em conta a latência, o que pode levar a um desempenho subótimo para os usuários se uma região for significativamente mais rápida que as outras.",
            "A política de roteamento de failover é destinada a cenários de recuperação em desastres, onde o tráfego é redirecionado para um recurso de backup apenas quando o primário falha; não otimiza ativamente para baixa latência durante operações normais."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "Uma empresa de varejo está desenvolvendo um novo aplicativo para gerenciar seu inventário em várias lojas. O aplicativo usará o Amazon DynamoDB como seu serviço de banco de dados. A equipe precisa otimizar operações de leitura e gravação com base em diferentes padrões de consulta, particularmente para consultar itens de inventário por categoria e por localização da loja. Eles estão considerando o uso de índices secundários para alcançar isso. A equipe está ciente das diferenças entre Índices Secundários Globais (GSI) e Índices Secundários Locais (LSI), mas precisa de orientação sobre quais índices implementar para um desempenho ideal.",
        "Question": "Qual abordagem o Arquiteto de Soluções deve recomendar para garantir a consulta eficiente de itens de inventário por categoria e localização da loja, enquanto adere às melhores práticas do DynamoDB?",
        "Options": {
            "1": "Criar dois Índices Secundários Locais, um com a categoria como a chave de ordenação e outro com a localização da loja como a chave de ordenação, ambos compartilhando a mesma chave de partição que a tabela.",
            "2": "Criar um Índice Secundário Local usando a mesma chave de partição que a tabela para a localização da loja, mas com a categoria como a chave de ordenação. Isso permitirá consultas por localização da loja e categoria.",
            "3": "Criar um Índice Secundário Global usando a localização da loja como a chave de partição e a categoria como a chave de ordenação. Em seguida, criar outro Índice Secundário Global com a categoria como a chave de partição e um timestamp como a chave de ordenação.",
            "4": "Criar um Índice Secundário Global com a localização da loja como a chave de partição e a categoria como a chave de ordenação. Criar outro Índice Secundário Global com a categoria como a chave de partição e um timestamp como a chave de ordenação."
        },
        "Correct Answer": "Criar um Índice Secundário Global com a localização da loja como a chave de partição e a categoria como a chave de ordenação. Criar outro Índice Secundário Global com a categoria como a chave de partição e um timestamp como a chave de ordenação.",
        "Explanation": "Usar Índices Secundários Globais permite diferentes chaves de partição e ordenação, tornando possível consultar de forma eficiente tanto pela localização da loja quanto pela categoria, sem ser restringido pela chave de partição da tabela original. Isso atende ao requisito de otimizar para diferentes padrões de consulta.",
        "Other Options": [
            "Esta opção está incorreta porque usar um Índice Secundário Local limita o tamanho total dos itens indexados por chave de partição a 10 GB. Além disso, não pode fornecer a flexibilidade necessária para consultar tanto por categoria quanto por localização da loja de forma eficiente.",
            "Esta opção está incorreta, pois sugere criar dois Índices Secundários Locais. Índices Secundários Locais compartilham a mesma chave de partição que a tabela e, portanto, não podem ser usados para criar padrões de consulta separados com base em diferentes chaves de partição de forma eficaz.",
            "Esta opção está incorreta porque sugere criar Índices Secundários Globais, mas a combinação de chaves proposta não otimiza a consulta de itens de inventário por categoria e localização da loja de forma eficaz. É redundante ter ambos os índices quando um pode ser estruturado para lidar com ambos os padrões de consulta."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "Uma empresa de serviços financeiros está avaliando vários modelos de preços da AWS para otimizar seus custos. A empresa possui uma carga de trabalho consistente que requer uma quantidade significativa de poder computacional, mas também experimenta picos previsíveis de uso durante certos períodos do mês devido a requisitos de relatórios. Eles querem garantir que estão tomando a decisão mais econômica, mantendo o desempenho.",
        "Question": "Qual dos seguintes modelos de preços atenderia melhor às necessidades da empresa enquanto otimiza os custos para sua carga de trabalho previsível e picos de uso?",
        "Options": {
            "1": "Utilizar Instâncias Sob Demanda para atender à carga de trabalho base e comprar Instâncias Reservadas para os períodos de pico de uso para economizar custos.",
            "2": "Escolher Hosts Dedicados para garantir o máximo desempenho e conformidade para a carga de trabalho, independentemente do custo.",
            "3": "Implantar Instâncias Spot tanto para a carga de trabalho consistente quanto para os picos, pois é a opção mais econômica disponível.",
            "4": "Implementar Planos de Economia para seu uso de computação, permitindo flexibilidade para se adaptar a cargas de trabalho em mudança enquanto ainda se beneficia de tarifas mais baixas."
        },
        "Correct Answer": "Implementar Planos de Economia para seu uso de computação, permitindo flexibilidade para se adaptar a cargas de trabalho em mudança enquanto ainda se beneficia de tarifas mais baixas.",
        "Explanation": "Os Planos de Economia oferecem a capacidade de gerenciar custos de forma eficaz, permitindo flexibilidade na carga de trabalho. Este modelo permitiria que a empresa se adaptasse a seus picos previsíveis sem estar presa a uma estrutura de preços rígida, otimizando assim seus gastos gerais.",
        "Other Options": [
            "Instâncias Sob Demanda podem ser caras para cargas de trabalho de longo prazo e não proporcionariam o mesmo nível de economia que Instâncias Reservadas ou Planos de Economia durante o uso de pico.",
            "Instâncias Spot não são ideais para cargas de trabalho consistentes e picos previsíveis, pois sua disponibilidade pode flutuar e pode não garantir o poder computacional necessário quando necessário.",
            "Hosts Dedicados são geralmente mais caros e não são necessários para as necessidades da empresa, pois exigem um compromisso com um tipo específico de instância e não otimizam custos de forma eficaz."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "Uma empresa de varejo está enfrentando problemas de desempenho com seu sistema de processamento de transações online hospedado no Amazon RDS. O aplicativo abre e fecha frequentemente conexões de banco de dados, levando a alta latência e exaustão de recursos no banco de dados. O arquiteto de soluções foi encarregado de melhorar a escalabilidade e a resiliência, enquanto também garante acesso seguro ao banco de dados. O aplicativo utiliza o Amazon Aurora para suas necessidades de banco de dados relacional.",
        "Question": "Qual solução otimizará as conexões de banco de dados e melhorará o desempenho do aplicativo?",
        "Options": {
            "1": "Usar o Amazon Elasticache para armazenar em cache as respostas do banco de dados e minimizar o número de consultas diretas ao banco de dados Amazon Aurora.",
            "2": "Aumentar o tamanho da instância do banco de dados Amazon Aurora para lidar com mais conexões simultâneas e melhorar o desempenho.",
            "3": "Migrar o banco de dados para o Amazon DynamoDB para eliminar a necessidade de gerenciamento de conexões e melhorar a escalabilidade.",
            "4": "Implementar o Amazon RDS Proxy para agrupar e gerenciar conexões de banco de dados, reduzindo o número de conexões abertas e fechadas pelo aplicativo."
        },
        "Correct Answer": "Implementar o Amazon RDS Proxy para agrupar e gerenciar conexões de banco de dados, reduzindo o número de conexões abertas e fechadas pelo aplicativo.",
        "Explanation": "Implementar o Amazon RDS Proxy permite que o aplicativo agrupe e compartilhe conexões de banco de dados, o que reduz a sobrecarga de estabelecer conexões repetidamente. Isso leva a uma melhoria no desempenho e na escalabilidade, além de aumentar a resiliência a falhas no banco de dados.",
        "Other Options": [
            "Aumentar o tamanho da instância pode melhorar o desempenho, mas não aborda a questão subjacente do gerenciamento de conexões e pode levar a custos desnecessários.",
            "Migrar para o Amazon DynamoDB exigiria mudanças significativas na arquitetura do aplicativo e pode não se alinhar com o modelo relacional atual, tornando-se uma solução impraticável.",
            "Usar o Amazon Elasticache pode ajudar a reduzir consultas diretas ao banco de dados, mas não resolve o problema de gerenciamento de conexões que está causando a degradação do desempenho."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "Uma empresa de serviços financeiros implantou um aplicativo na AWS que processa dados sensíveis de clientes. A gestão exige que todos os dados em repouso sejam criptografados e que o acesso a recursos sensíveis seja rigidamente controlado. Como parte de sua conformidade de segurança, eles querem implementar uma solução que garanta a auditoria de todos os pedidos de acesso e que possa se integrar ao seu sistema de gerenciamento de identidade existente.",
        "Question": "Quais das seguintes ações podem ser tomadas para aumentar a segurança do aplicativo enquanto atendem aos requisitos de conformidade? (Selecione Dois)",
        "Options": {
            "1": "Usar funções AWS IAM para permitir controle de acesso granular aos recursos da AWS.",
            "2": "Utilizar o AWS Directory Service para integrar com o sistema de gerenciamento de identidade existente.",
            "3": "Habilitar o AWS Key Management Service (KMS) para gerenciar chaves de criptografia para dados em repouso.",
            "4": "Implantar o AWS CloudTrail para registrar e monitorar todas as chamadas de API para fins de auditoria.",
            "5": "Implementar o Amazon CloudWatch Logs para rastrear pedidos de acesso, mas não reter os logs."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Habilitar o AWS Key Management Service (KMS) para gerenciar chaves de criptografia para dados em repouso.",
            "Implantar o AWS CloudTrail para registrar e monitorar todas as chamadas de API para fins de auditoria."
        ],
        "Explanation": "Habilitar o AWS Key Management Service (KMS) fornece controle centralizado sobre as chaves de criptografia usadas para criptografar dados em repouso, o que é essencial para garantir a confidencialidade das informações sensíveis. Implantar o AWS CloudTrail permite o registro abrangente de toda a atividade da API relacionada ao aplicativo, possibilitando auditoria e monitoramento dos pedidos de acesso, o que é crucial para a conformidade.",
        "Other Options": [
            "Usar funções IAM para controle de acesso granular é importante, mas não aborda diretamente os requisitos específicos para criptografia de dados e auditoria tão efetivamente quanto o KMS e o CloudTrail.",
            "Embora a implementação do CloudWatch Logs possa ajudar a rastrear pedidos de acesso, simplesmente rastreá-los sem reter os logs não atende aos requisitos de auditoria que o CloudTrail pode fornecer.",
            "O AWS Directory Service facilita a integração com sistemas de gerenciamento de identidade existentes, mas não melhora inerentemente a segurança ou a conformidade em relação à criptografia de dados e auditoria de acesso."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "Uma empresa de serviços financeiros está avaliando diferentes tipos de volumes do Amazon Elastic Block Store (EBS) para suportar sua aplicação crítica que requer alta taxa de transferência e baixa latência. Eles precisam selecionar um tipo de volume EBS que possa lidar com uma carga de trabalho com I/O aleatório e que exija o mais alto nível de durabilidade e desempenho. A aplicação é sensível à latência e requer a capacidade de provisionar IOPS com base nas demandas da carga de trabalho.",
        "Question": "Qual dos seguintes tipos de volume EBS é o MAIS apropriado para os requisitos da empresa?",
        "Options": {
            "1": "sc1: Volume HDD de menor custo projetado para cargas de trabalho acessadas com menos frequência e armazenamento frio.",
            "2": "st1: Volume HDD de baixo custo projetado para cargas de trabalho acessadas com frequência e intensivas em taxa de transferência.",
            "3": "gp2: Volume SSD de uso geral com preço e desempenho equilibrados para várias cargas de trabalho.",
            "4": "io1: Volume SSD de mais alto desempenho para cargas de trabalho críticas de baixa latência ou alta taxa de transferência."
        },
        "Correct Answer": "io1: Volume SSD de mais alto desempenho para cargas de trabalho críticas de baixa latência ou alta taxa de transferência.",
        "Explanation": "O tipo de volume io1 oferece o mais alto desempenho e pode provisionar até 64.000 IOPS, tornando-o ideal para aplicações críticas que requerem desempenho de baixa latência e alta taxa de transferência. Além disso, é projetado especificamente para cargas de trabalho que dependem de I/O aleatório, o que se alinha perfeitamente com os requisitos da empresa.",
        "Other Options": [
            "O tipo de volume gp2, embora versátil, não oferece o mesmo nível de provisionamento de IOPS que o io1 e pode não atender às necessidades de baixa latência de aplicações críticas.",
            "O tipo de volume sc1 é destinado a cargas de trabalho acessadas com menos frequência e armazenamento frio, o que não atende aos requisitos de alto desempenho da aplicação.",
            "O tipo de volume st1 é projetado para cargas de trabalho intensivas em taxa de transferência, mas não é adequado para aplicações de baixa latência e não pode igualar o desempenho e a durabilidade do io1."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "Uma empresa global de e-commerce está utilizando o AWS Backup para centralizar e automatizar a proteção de dados em seus vários serviços da AWS, incluindo Amazon RDS, Amazon EFS e instâncias EC2. A empresa tem requisitos específicos para a frequência de backup e períodos de retenção para diferentes tipos de dados devido à conformidade regulatória. A gestão deseja garantir que as políticas de backup sejam facilmente ajustáveis e que possam monitorar as atividades de backup em um único painel.",
        "Question": "Qual das seguintes abordagens atende melhor aos requisitos da empresa para gerenciamento centralizado de backup e conformidade?",
        "Options": {
            "1": "Implementar funções do AWS Lambda para automatizar backups para cada serviço e armazenar logs no CloudWatch para monitoramento.",
            "2": "Utilizar o AWS Backup para criar planos de backup centralizados que definem políticas para frequência e retenção, e monitorar todas as atividades a partir do painel do AWS Backup.",
            "3": "Criar planos de backup individuais para cada serviço da AWS e monitorar manualmente seu status através do console de cada serviço.",
            "4": "Agendar documentos de Automação do AWS Systems Manager para realizar backups para cada serviço e agregar os resultados em um bucket S3."
        },
        "Correct Answer": "Utilizar o AWS Backup para criar planos de backup centralizados que definem políticas para frequência e retenção, e monitorar todas as atividades a partir do painel do AWS Backup.",
        "Explanation": "O AWS Backup fornece um serviço totalmente gerenciado que permite centralizar o gerenciamento de backup em vários serviços da AWS, automatizar tarefas de backup com políticas ajustáveis e monitorar a atividade de backup em um painel integrado, tornando-o a melhor escolha para conformidade e gerenciamento.",
        "Other Options": [
            "Criar planos de backup individuais para cada serviço da AWS complica o gerenciamento e não fornece uma visão centralizada, dificultando a garantia de conformidade em toda a organização.",
            "Embora usar funções do AWS Lambda possa automatizar backups, envolve mais complexidade e esforço manual para monitorar e gerenciar backups, o que compromete o objetivo de centralização.",
            "Agendar documentos de Automação do AWS Systems Manager também exigiria gerenciamento separado para cada serviço, carecendo dos recursos centralizados e automatizados do AWS Backup, não atendendo assim aos requisitos de conformidade de forma eficaz."
        ]
    },
    {
        "Question Number": "66",
        "Situation": "Uma equipe de desenvolvimento está se preparando para implantar uma nova versão de sua aplicação sem servidor que roda no AWS Lambda. A aplicação possui uma base de usuários substancial, e a equipe deseja minimizar o risco durante o processo de implantação. Eles precisam escolher uma configuração de implantação que permita transferir gradualmente o tráfego para a nova versão enquanto monitoram seu desempenho.",
        "Question": "Qual das seguintes configurações de implantação é mais adequada para transferir gradualmente o tráfego para a nova versão da função Lambda enquanto permite o monitoramento de desempenho?",
        "Options": {
            "1": "Linear: Transferir tráfego em incrementos iguais ao longo de um período especificado, permitindo monitoramento gradual.",
            "2": "Rolling: Transferir tráfego de maneira sequencial, uma versão de cada vez, para garantir estabilidade.",
            "3": "Canary: Transferir inicialmente uma pequena porcentagem de tráfego para a nova versão, depois transferir o restante após o monitoramento.",
            "4": "All-at-once: Transferir todo o tráfego para a nova versão imediatamente, sem qualquer transição gradual."
        },
        "Correct Answer": "Canary: Transferir inicialmente uma pequena porcentagem de tráfego para a nova versão, depois transferir o restante após o monitoramento.",
        "Explanation": "A configuração de implantação Canary permite uma transferência gradual de tráfego para a nova versão, o que é ideal para monitorar o desempenho e minimizar riscos. Essa abordagem permite que a equipe avalie o comportamento da nova versão com um subconjunto de usuários antes de fazer a transição completa.",
        "Other Options": [
            "A implantação linear não é a melhor opção para este cenário porque, embora permita a transferência gradual de tráfego, não oferece o mesmo nível de gerenciamento de risco e monitoramento que a abordagem canary.",
            "A implantação all-at-once não é aconselhável neste caso porque transfere todo o tráfego para a nova versão imediatamente, aumentando o risco de introduzir problemas para toda a base de usuários sem qualquer oportunidade de monitoramento.",
            "A implantação rolling não é uma opção válida para o AWS Lambda, pois não existe como uma estratégia de implantação definida para funções Lambda. O Lambda suporta configurações canary, linear e all-at-once."
        ]
    },
    {
        "Question Number": "67",
        "Situation": "Uma empresa de serviços financeiros tem utilizado instâncias do Amazon EC2 para executar suas aplicações. Eles notaram que sua fatura mensal da AWS está mais alta do que o esperado. A equipe foi encarregada de identificar oportunidades de otimização de custos sem comprometer o desempenho.",
        "Question": "Quais duas estratégias a empresa poderia implementar para reduzir custos? (Selecione Duas)",
        "Options": {
            "1": "Implementar Instâncias Reservadas para cargas de trabalho previsíveis.",
            "2": "Mudar para Instâncias Spot para cargas de trabalho não críticas.",
            "3": "Aumentar o tamanho das instâncias EC2 existentes para melhorar o desempenho.",
            "4": "Usar Auto Scaling para ajustar o número de instâncias EC2 com base na demanda.",
            "5": "Migrar as aplicações para uma única instância EC2 grande."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Mudar para Instâncias Spot para cargas de trabalho não críticas.",
            "Implementar Instâncias Reservadas para cargas de trabalho previsíveis."
        ],
        "Explanation": "Mudar para Instâncias Spot para cargas de trabalho não críticas permite que a empresa aproveite preços mais baixos para capacidade EC2 não utilizada, reduzindo significativamente os custos. Implementar Instâncias Reservadas oferece uma solução econômica para cargas de trabalho que são previsíveis, oferecendo um desconto em comparação com os preços sob demanda.",
        "Other Options": [
            "Migrar as aplicações para uma única instância EC2 grande pode levar a custos mais altos e não aproveita as estratégias de economia de custos disponíveis na AWS. Essa abordagem também pode criar gargalos de desempenho.",
            "Usar Auto Scaling para ajustar o número de instâncias EC2 com base na demanda é uma boa prática para gerenciar recursos de forma eficiente; no entanto, não reduz diretamente os custos, a menos que combinado com tipos de instâncias ou modelos de preços que economizam custos.",
            "Aumentar o tamanho das instâncias EC2 existentes provavelmente aumentará os custos em vez de reduzi-los, o que é contraproducente ao objetivo de otimizar despesas."
        ]
    },
    {
        "Question Number": "68",
        "Situation": "Uma empresa de serviços financeiros precisa garantir que suas aplicações críticas sejam resilientes e possam se recuperar rapidamente de um desastre. A empresa tem um requisito rigoroso para perda mínima de dados e tempo de inatividade. Eles estão considerando várias estratégias de recuperação de desastres com base em seus objetivos de tempo de recuperação (RTO) e objetivos de ponto de recuperação (RPO).",
        "Question": "Qual estratégia de recuperação de desastres o arquiteto de soluções deve recomendar para atender aos requisitos da empresa para perda mínima de dados e tempo de inatividade?",
        "Options": {
            "1": "Implementar uma solução de espera quente onde uma versão reduzida da aplicação está em execução em uma região secundária, permitindo escalonamento rápido durante um desastre.",
            "2": "Utilizar uma estratégia de backup e restauração com backups em tempo real realizados a cada hora para garantir que os dados sejam recuperáveis dentro de 24 horas.",
            "3": "Estabelecer uma estratégia de luz piloto que mantém componentes essenciais em execução na região secundária, com o restante da infraestrutura rapidamente provisionada durante um desastre.",
            "4": "Implantar uma arquitetura ativa-ativa multi-região com tráfego ao vivo sendo servido em várias regiões, garantindo zero perda de dados e capacidade de failover instantâneo."
        },
        "Correct Answer": "Implantar uma arquitetura ativa-ativa multi-região com tráfego ao vivo sendo servido em várias regiões, garantindo zero perda de dados e capacidade de failover instantâneo.",
        "Explanation": "A arquitetura ativa-ativa multi-região atende aos requisitos da empresa para perda mínima de dados e tempo de inatividade, servindo ativamente tráfego de várias regiões, o que proporciona RPO quase zero e potencialmente RTO zero. Essa abordagem garante que as aplicações permaneçam disponíveis mesmo durante interrupções regionais.",
        "Other Options": [
            "A solução de espera quente, embora reduza o RTO, pode não fornecer as garantias necessárias de perda de dados, uma vez que opera com uma versão reduzida da aplicação, o que pode levar a atrasos potenciais na recuperação.",
            "A estratégia de backup e restauração tem um RTO e RPO muito mais longos, o que não se alinha com o requisito rigoroso da empresa para tempo de inatividade e perda de dados mínimos.",
            "A estratégia de luz piloto também não atende totalmente aos requisitos, pois depende do provisionamento de recursos adicionais durante um desastre, o que pode introduzir atrasos na recuperação."
        ]
    },
    {
        "Question Number": "69",
        "Situation": "Uma empresa de serviços financeiros está preocupada com possíveis ataques DDoS em suas aplicações web hospedadas na AWS. Eles querem implementar uma solução que possa detectar e mitigar automaticamente tais ameaças, garantindo que o tráfego legítimo não seja afetado. A empresa também requer a capacidade de monitorar alertas de segurança e ter uma visão abrangente de sua postura de segurança em diferentes serviços da AWS.",
        "Question": "Qual serviço de segurança gerenciado pela AWS oferece a proteção mais abrangente contra ataques DDoS, permitindo capacidades de monitoramento e alerta?",
        "Options": {
            "1": "AWS WAF com regras personalizadas para filtragem de tráfego e AWS Security Hub para gerenciamento de segurança centralizado.",
            "2": "AWS Shield Standard para proteção básica contra DDoS e AWS Config para monitoramento de conformidade.",
            "3": "Amazon Inspector para avaliação de vulnerabilidades e AWS Security Hub para resposta a incidentes.",
            "4": "AWS Shield Advanced em conjunto com Amazon GuardDuty para detecção de ameaças e alertas."
        },
        "Correct Answer": "AWS Shield Advanced em conjunto com Amazon GuardDuty para detecção de ameaças e alertas.",
        "Explanation": "AWS Shield Advanced fornece proteção DDoS aprimorada e inclui recursos para visibilidade e mitigação de ataques em tempo real, tornando-o adequado para proteger aplicações web. Quando usado junto com o Amazon GuardDuty, que oferece detecção inteligente de ameaças, essa combinação garante capacidades abrangentes de segurança e monitoramento.",
        "Other Options": [
            "AWS WAF com regras personalizadas é eficaz para filtrar tráfego malicioso, mas não fornece mitigação DDoS. AWS Security Hub é útil para gerenciamento de segurança centralizado, mas não protege diretamente contra ataques DDoS.",
            "AWS Shield Standard oferece proteção básica contra DDoS, mas carece dos recursos avançados e das capacidades de resposta proativa do Shield Advanced. AWS Config é focado em monitoramento de conformidade e não aborda diretamente as ameaças DDoS.",
            "Amazon Inspector é usado principalmente para avaliação de vulnerabilidades e não oferece proteção DDoS ou capacidades de monitoramento de tráfego. Embora o AWS Security Hub possa fornecer insights sobre incidentes de segurança, não serve como uma solução de mitigação."
        ]
    },
    {
        "Question Number": "70",
        "Situation": "Uma empresa de serviços financeiros está buscando implementar uma solução de registro centralizado para melhorar a segurança e a conformidade em sua infraestrutura AWS. A empresa precisa garantir que todos os logs, incluindo logs de aplicativos, chamadas de API e eventos do sistema, sejam agregados e monitorados para qualquer atividade suspeita. Eles também desejam receber notificações de eventos para entradas de log críticas que requerem atenção imediata.",
        "Question": "Qual combinação de opções ajudará a alcançar uma estratégia de registro centralizado e notificação de eventos? (Selecione Duas)",
        "Options": {
            "1": "Utilizar Amazon CloudWatch Logs para agregar logs de vários serviços e aplicativos da AWS.",
            "2": "Usar AWS Config para monitorar alterações de configuração e enviar alertas para quaisquer recursos não conformes.",
            "3": "Implementar Amazon S3 para armazenamento de logs sem nenhum processamento ou mecanismos de alerta adicionais.",
            "4": "Configurar funções AWS Lambda para processar logs e acionar notificações para um tópico Amazon SNS para eventos críticos.",
            "5": "Aproveitar o Amazon Elasticsearch Service para analisar logs e configurar alertas para padrões específicos."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Utilizar Amazon CloudWatch Logs para agregar logs de vários serviços e aplicativos da AWS.",
            "Configurar funções AWS Lambda para processar logs e acionar notificações para um tópico Amazon SNS para eventos críticos."
        ],
        "Explanation": "Utilizar o Amazon CloudWatch Logs permite a agregação de logs de várias fontes, o que é crucial para o registro centralizado. Configurar funções AWS Lambda para acionar notificações garante que eventos críticos sejam tratados prontamente, melhorando a postura de segurança da organização.",
        "Other Options": [
            "Implementar Amazon S3 para armazenamento de logs sem processamento não atende ao requisito de monitoramento e notificação em tempo real.",
            "Usar AWS Config é mais sobre monitoramento de conformidade e não se relaciona diretamente com o registro centralizado de logs de aplicativos e sistema.",
            "Embora aproveitar o Amazon Elasticsearch Service possa ajudar a analisar logs, ele não fornece inherentemente a função de agregação centralizada necessária sem configuração adicional."
        ]
    },
    {
        "Question Number": "71",
        "Situation": "Uma empresa de serviços financeiros está passando por uma transformação digital e deseja implementar um modelo de governança em nuvem para gerenciar seus recursos AWS de forma eficaz. A empresa deve garantir conformidade com os requisitos regulatórios enquanto oferece às suas equipes de desenvolvimento a flexibilidade para inovar. A gestão pediu ao arquiteto de soluções que projetasse um modelo de governança que equilibre controle e agilidade para várias equipes trabalhando em diversos projetos.",
        "Question": "Qual dos seguintes modelos de governança é o mais adequado para esta empresa manter a conformidade enquanto permite a autonomia da equipe?",
        "Options": {
            "1": "Estabelecer um modelo de governança descentralizado onde cada equipe opera de forma independente sem supervisão, promovendo máxima agilidade.",
            "2": "Usar um modelo de governança híbrido que combina abordagens centralizadas e descentralizadas, dando às equipes alguma autonomia enquanto retém o controle geral de conformidade.",
            "3": "Implementar um modelo de governança centralizado com políticas rígidas aplicadas no nível da conta, limitando o acesso da equipe aos recursos.",
            "4": "Adotar um modelo de governança federada que permite que as equipes gerenciem suas próprias contas AWS enquanto aderem a um conjunto compartilhado de diretrizes de conformidade."
        },
        "Correct Answer": "Adotar um modelo de governança federada que permite que as equipes gerenciem suas próprias contas AWS enquanto aderem a um conjunto compartilhado de diretrizes de conformidade.",
        "Explanation": "O modelo de governança federada é adequado, pois permite que as equipes de desenvolvimento tenham controle sobre suas próprias contas AWS enquanto ainda garantem que sigam um conjunto comum de diretrizes de conformidade. Essa abordagem equilibra a necessidade de conformidade com a necessidade de agilidade e inovação, tornando-a ideal para os requisitos da empresa.",
        "Other Options": [
            "O modelo de governança centralizado pode inibir a autonomia da equipe e desacelerar a inovação, o que contradiz o objetivo da empresa de permitir flexibilidade no desenvolvimento.",
            "O modelo de governança descentralizado apresenta riscos significativos para a conformidade, pois permite que as equipes operem sem supervisão, dificultando a adesão aos requisitos regulatórios.",
            "O modelo de governança híbrido pode criar confusão em relação às responsabilidades e à conformidade, pois pode não definir claramente a extensão da autonomia da equipe em relação ao controle centralizado."
        ]
    },
    {
        "Question Number": "72",
        "Situation": "Uma grande empresa de comércio eletrônico está transitando seu mecanismo de autenticação de usuários para integrar-se a provedores de identidade de terceiros. A empresa visa aumentar a segurança e proporcionar uma experiência de usuário contínua para seus clientes. O Arquiteto de Soluções precisa escolher a melhor abordagem para integrar esses provedores de identidade na arquitetura de aplicativo existente, garantindo que os dados dos usuários permaneçam seguros e facilmente gerenciáveis. (Selecione Duas)",
        "Question": "Qual das seguintes opções o Arquiteto de Soluções deve implementar para alcançar esses objetivos?",
        "Options": {
            "1": "Utilizar AWS Lambda para validar tokens de provedores de identidade de terceiros.",
            "2": "Configurar autenticação única (SSO) baseada em SAML para permitir que os usuários se autentiquem com provedores de identidade de terceiros.",
            "3": "Implementar Amazon Cognito para federar identidades de usuários de provedores de identidade de terceiros.",
            "4": "Aproveitar o Amazon API Gateway para criar um fluxo de autenticação personalizado para provedores de identidade de terceiros.",
            "5": "Usar funções IAM da AWS para gerenciar diretamente o acesso de usuários de provedores de identidade de terceiros."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Implementar Amazon Cognito para federar identidades de usuários de provedores de identidade de terceiros.",
            "Configurar autenticação única (SSO) baseada em SAML para permitir que os usuários se autentiquem com provedores de identidade de terceiros."
        ],
        "Explanation": "Implementar o Amazon Cognito permite que o aplicativo gerencie facilmente identidades de usuários e suporte a integração com vários provedores de terceiros. Além disso, configurar SSO baseado em SAML fornece uma maneira segura para os usuários se autenticarem sem precisar gerenciar credenciais separadas, melhorando a experiência geral do usuário.",
        "Other Options": [
            "Usar funções IAM da AWS não é adequado para gerenciamento de autenticação de usuários com provedores de terceiros, pois as funções IAM são projetadas principalmente para permissões de serviços da AWS, em vez de federação de identidade de usuários.",
            "Aproveitar o Amazon API Gateway para um fluxo de autenticação personalizado adiciona complexidade desnecessária e não fornece os recursos de segurança e gerenciamento de usuários integrados que serviços como Cognito oferecem.",
            "Embora utilizar AWS Lambda para validar tokens possa funcionar, requer desenvolvimento e gerenciamento personalizados adicionais em comparação com o uso de soluções integradas como Cognito ou SSO baseado em SAML."
        ]
    },
    {
        "Question Number": "73",
        "Situation": "Uma empresa de serviços financeiros está atualmente usando um banco de dados PostgreSQL autogerenciado em instâncias do Amazon EC2 para lidar com dados transacionais. O banco de dados requer escalonamento frequente para acomodar cargas de trabalho variáveis, e a equipe está buscando uma solução gerenciada que possa fornecer backups automáticos, escalonamento e alta disponibilidade sem mudanças significativas na arquitetura da aplicação. Além disso, a empresa possui requisitos rigorosos de conformidade para segurança de dados e recuperação de desastres.",
        "Question": "Qual das seguintes opções atende melhor aos requisitos da empresa para uma solução de banco de dados gerenciada na AWS?",
        "Options": {
            "1": "Migrar o banco de dados PostgreSQL para o Amazon RDS for PostgreSQL para aproveitar os recursos de backups automáticos, escalonamento e alta disponibilidade, garantindo conformidade e segurança.",
            "2": "Trocar para o uso do Amazon DynamoDB para armazenamento de dados transacionais, aproveitando seu desempenho e capacidades de escalonamento sem exigir mudanças significativas na lógica da aplicação.",
            "3": "Continuar usando o banco de dados PostgreSQL autogerenciado no Amazon EC2, implementando scripts manuais para backups e escalonamento conforme necessário para evitar complexidades de migração.",
            "4": "Implantar o Amazon OpenSearch Service para indexar e consultar os dados transacionais, permitindo análises em tempo real enquanto mantém o banco de dados existente no EC2 para armazenamento de dados."
        },
        "Correct Answer": "Migrar o banco de dados PostgreSQL para o Amazon RDS for PostgreSQL para aproveitar os recursos de backups automáticos, escalonamento e alta disponibilidade, garantindo conformidade e segurança.",
        "Explanation": "Migrar para o Amazon RDS for PostgreSQL fornece uma solução de banco de dados totalmente gerenciada que inclui backups automáticos, escalonamento e alta disponibilidade, o que se alinha com a necessidade da empresa por um serviço gerenciado que atenda aos padrões de conformidade e segurança sem grandes mudanças na arquitetura da aplicação.",
        "Other Options": [
            "Trocar para o Amazon DynamoDB exigiria mudanças significativas na lógica da aplicação, uma vez que o DynamoDB é um banco de dados NoSQL e o caso de uso atual envolve dados transacionais que são mais adequados para um banco de dados relacional.",
            "Implantar o Amazon OpenSearch Service não aborda diretamente a necessidade de uma solução de banco de dados relacional gerenciada capaz de lidar com cargas de trabalho transacionais e atender aos requisitos de conformidade, pois é projetado principalmente para busca e análises, em vez de processamento transacional.",
            "Continuar com um banco de dados PostgreSQL autogerenciado no EC2 não atende ao requisito de uma solução gerenciada com backups automáticos e escalonamento, o que aumenta a sobrecarga operacional e o risco de não conformidade com os padrões de segurança de dados."
        ]
    },
    {
        "Question Number": "74",
        "Situation": "Uma empresa de serviços financeiros opera um aplicativo crítico hospedado na AWS, que requer alta disponibilidade e recuperação rápida em caso de desastre. O aplicativo processa transações financeiras sensíveis e deve cumprir requisitos regulatórios. A empresa está avaliando sua estratégia de recuperação de desastres (DR) para garantir o mínimo de tempo de inatividade e perda de dados.",
        "Question": "Quais duas estratégias a empresa deve considerar para melhorar seu plano de recuperação de desastres? (Selecione Duas)",
        "Options": {
            "1": "Usar o AWS Elastic Disaster Recovery para automatizar procedimentos de failover.",
            "2": "Criar snapshots regulares dos bancos de dados do Amazon RDS e armazená-los no Amazon S3.",
            "3": "Utilizar o AWS Backup para backups programados de instâncias do EC2 e volumes do EBS.",
            "4": "Implementar uma implantação em múltiplas regiões com configuração ativa-ativa.",
            "5": "Implantar uma réplica de leitura na mesma região para recuperação rápida."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Implementar uma implantação em múltiplas regiões com configuração ativa-ativa.",
            "Usar o AWS Elastic Disaster Recovery para automatizar procedimentos de failover."
        ],
        "Explanation": "Implementar uma implantação em múltiplas regiões com uma configuração ativa-ativa permite que o aplicativo mantenha disponibilidade em diferentes regiões, garantindo que, se uma região falhar, a outra possa continuar processando transações com mínimo de tempo de inatividade. Além disso, usar o AWS Elastic Disaster Recovery fornece opções automatizadas de failover e recuperação, o que reduz significativamente o objetivo de tempo de recuperação (RTO) e garante a consistência dos dados durante um desastre.",
        "Other Options": [
            "Criar snapshots regulares dos bancos de dados do Amazon RDS e armazená-los no Amazon S3 fornece backup, mas não garante alta disponibilidade ou recuperação rápida durante um desastre, pois pode levar à perda de dados dependendo da frequência dos snapshots.",
            "Implantar uma réplica de leitura na mesma região pode melhorar o desempenho de leitura, mas não fornece uma solução viável para recuperação de desastres em caso de falha em toda a região.",
            "Utilizar o AWS Backup para backups programados de instâncias do EC2 e volumes do EBS é uma boa prática para proteção de dados; no entanto, não é uma estratégia abrangente de recuperação de desastres, pois não aborda failover ou alta disponibilidade."
        ]
    },
    {
        "Question Number": "75",
        "Situation": "Uma empresa de serviços financeiros precisa integrar seu aplicativo com vários serviços da AWS, garantindo comunicação segura e eficiente entre os serviços. O arquiteto é encarregado de escolher os pontos de extremidade de serviço apropriados para essas integrações para melhorar o desempenho e a segurança. (Selecione Duas)",
        "Question": "Quais das seguintes são as ações recomendadas para cumprir o requisito acima?",
        "Options": {
            "1": "Configurar pontos de extremidade de serviço em uma conexão direta com um data center local.",
            "2": "Implementar o AWS PrivateLink para acesso seguro a serviços hospedados em VPCs.",
            "3": "Utilizar pontos de extremidade VPC para conectar-se a serviços da AWS sem atravessar a internet pública.",
            "4": "Usar pontos de extremidade da internet pública para todas as integrações de serviços da AWS para evitar custos de VPC.",
            "5": "Aproveitar o AWS Global Accelerator para melhorar a disponibilidade e o desempenho dos pontos de extremidade de serviço."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Utilizar pontos de extremidade VPC para conectar-se a serviços da AWS sem atravessar a internet pública.",
            "Implementar o AWS PrivateLink para acesso seguro a serviços hospedados em VPCs."
        ],
        "Explanation": "Utilizar pontos de extremidade VPC permite conexões privadas com serviços da AWS enquanto mantém o tráfego dentro da rede da Amazon, melhorando a segurança e o desempenho. Implementar o AWS PrivateLink também fornece acesso seguro a serviços hospedados em VPCs, garantindo ainda mais que a comunicação não saia da rede da AWS, reduzindo assim a exposição a ameaças potenciais.",
        "Other Options": [
            "Usar pontos de extremidade da internet pública aumenta a exposição a riscos de segurança e pode levar a problemas de latência, o que não é ideal para dados financeiros sensíveis.",
            "Configurar pontos de extremidade de serviço em uma conexão direta com um data center local não aproveitaria os benefícios da infraestrutura da AWS e poderia introduzir complexidade desnecessária.",
            "Embora o AWS Global Accelerator possa ajudar a melhorar o desempenho, não é especificamente projetado para integrações de serviços seguras como pontos de extremidade VPC e PrivateLink."
        ]
    }
]