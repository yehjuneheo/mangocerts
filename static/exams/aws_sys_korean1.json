[
    {
        "Question Number": "1",
        "Situation": "한 회사가 데이터 웨어하우징 솔루션으로 Amazon Redshift를 사용하고 있습니다. SysOps 관리자는 준수 및 보안 감사 목적으로 데이터베이스 사용자 활동 및 연결 시도를 모니터링하기 위해 로깅을 구성해야 합니다.",
        "Question": "관리자가 데이터베이스에서 실행된 각 쿼리를 추적하기 위해 어떤 로그 유형을 활성화해야 합니까?",
        "Options": {
            "1": "사용자 로그",
            "2": "연결 로그",
            "3": "감사 로그",
            "4": "사용자 활동 로그"
        },
        "Correct Answer": "사용자 활동 로그",
        "Explanation": "사용자 활동 로그는 데이터베이스에서 실행된 각 쿼리를 기록하도록 특별히 설계되었습니다. 이 로그는 사용자 쿼리 활동에 대한 통찰력을 제공하여 모니터링 및 감사 목적으로 필수적입니다.",
        "Other Options": [
            "사용자 로그는 사용자 계정을 생성하거나 수정하는 등의 데이터베이스 사용자 정의 변경 사항을 추적하지만 쿼리 실행 세부정보는 기록하지 않습니다.",
            "연결 로그는 데이터베이스에 대한 인증 시도, 연결 및 연결 해제를 캡처하며, 접근 모니터링에는 중요하지만 쿼리 실행 데이터는 포함하지 않습니다.",
            "감사 로그는 Amazon Redshift의 표준 로그 유형이 아니므로 Redshift 로깅 옵션의 맥락에서는 존재하지 않습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 조직이 데이터 보안을 강화하기 위해 키 관리 솔루션을 구현하려고 합니다. 그들은 민감한 데이터가 암호화되고 암호화 키가 AWS 내에서 적절하게 관리되고 보호되기를 원합니다.",
        "Question": "어떤 AWS 서비스가 애플리케이션을 위한 암호화 키를 생성, 관리 및 보호하는 안전하고 중앙 집중화된 방법을 제공합니까?",
        "Options": {
            "1": "AWS Identity and Access Management (IAM)",
            "2": "AWS Secrets Manager",
            "3": "AWS Certificate Manager",
            "4": "AWS Key Management Service (KMS)"
        },
        "Correct Answer": "AWS Key Management Service (KMS)",
        "Explanation": "AWS Key Management Service (KMS)는 데이터를 암호화하는 데 사용되는 암호화 키를 생성, 관리 및 보호하도록 특별히 설계되었습니다. 키를 중앙에서 관리할 수 있는 방법을 제공하며, 다른 AWS 서비스와 통합되어 데이터가 안전하게 유지되도록 합니다.",
        "Other Options": [
            "AWS Secrets Manager는 API 키 및 데이터베이스 자격 증명과 같은 비밀을 관리하는 데 주로 사용되지만, 암호화 키에 대한 키 관리 기능은 제공하지 않습니다.",
            "AWS Certificate Manager는 웹사이트 보안을 위한 SSL/TLS 인증서를 프로비저닝하고 관리하는 데 사용되지만, 데이터 암호화를 위한 암호화 키는 관리하지 않습니다.",
            "AWS Identity and Access Management (IAM)는 AWS 서비스에 대한 사용자 권한 및 접근을 관리하는 데 중점을 두며, 암호화 키를 생성하거나 관리하는 것과는 관련이 없습니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 금융 기관은 DDoS 공격이 웹 애플리케이션 및 서비스에 미칠 잠재적 영향에 대해 우려하고 있습니다. SysOps 관리자는 AWS Shield Standard를 구현했지만, 기관은 중요한 자원을 보호하고 잠재적 공격 중 다운타임을 최소화하기 위해 더 고급 보호가 필요합니다.",
        "Question": "SysOps 관리자가 기관의 중요한 자원에 대한 향상된 DDoS 보호를 제공하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "AWS Firewall Manager를 구현하여 계정 간 네트워크 보안 정책을 관리합니다.",
            "2": "AWS WAF와 함께 Amazon CloudFront를 사용하여 악성 트래픽을 필터링합니다.",
            "3": "추가 보호 및 비용 모니터링을 위해 AWS Shield Advanced를 활성화합니다.",
            "4": "AWS 리소스 앞에 타사 DDoS 보호 서비스를 배포합니다."
        },
        "Correct Answer": "추가 보호 및 비용 모니터링을 위해 AWS Shield Advanced를 활성화합니다.",
        "Explanation": "AWS Shield Advanced는 EC2 인스턴스, ELB 로드 밸런서, CloudFront 배포 및 Route 53 호스팅 영역과 같은 중요한 AWS 리소스를 위해 특별히 설계된 향상된 DDoS 보호를 제공합니다. 또한 DDoS 공격으로 인한 스케일링 요금에 대한 비용 보호를 제공하여 기관의 요구에 가장 적합한 솔루션입니다.",
        "Other Options": [
            "AWS Firewall Manager는 여러 계정 간의 보안 정책을 관리하는 데 유용하지만, AWS Shield Advanced가 제공하는 특정 DDoS 보호는 제공하지 않습니다.",
            "Amazon CloudFront와 AWS WAF를 사용하면 일부 악성 트래픽을 필터링하는 데 도움이 될 수 있지만, AWS Shield Advanced가 제공하는 포괄적인 DDoS 보호는 제공하지 않습니다.",
            "타사 DDoS 보호 서비스를 배포하면 추가적인 복잡성이 발생할 수 있으며, AWS Shield Advanced와 같이 이 목적을 위해 특별히 설계된 AWS 리소스와 원활하게 통합되지 않습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 회사가 웹 애플리케이션을 실행하는 여러 개의 EC2 인스턴스를 배포했습니다. 그들은 인스턴스와 그 위에서 실행되는 애플리케이션의 성능을 모니터링할 수 있도록 하고 싶어합니다. SysOps 관리자는 CloudWatch 에이전트를 사용하여 이러한 EC2 인스턴스에서 상세한 메트릭과 로그를 수집해야 합니다.",
        "Question": "Windows 이벤트 로그를 수집하기 위해 CloudWatch 에이전트 구성 파일에서 어떤 구성 옵션을 지정해야 합니까?",
        "Options": {
            "1": "logs_collected",
            "2": "logs_config",
            "3": "service",
            "4": "metrics_collected"
        },
        "Correct Answer": "logs_config",
        "Explanation": "'logs_config' 섹션은 CloudWatch 에이전트 구성 파일에서 로그 수집에 대한 세부 정보를 지정하는 데 사용됩니다. 여기에는 Windows 이벤트 로그가 포함됩니다. 이 섹션을 통해 관리자는 모니터링할 로그 파일 또는 로그 그룹을 정의할 수 있습니다.",
        "Other Options": [
            "'logs_collected'는 유효한 구성 섹션이 아니며, 'logs_config' 섹션 내에서 수집할 로그 유형을 지정하는 데 사용되는 키입니다.",
            "'metrics_collected'는 성능 메트릭 수집과 관련이 있으며, 로그와는 관련이 없습니다. 시스템 및 애플리케이션 메트릭을 수집하는 데 중요하지만 로그 수집을 구성하지는 않습니다.",
            "'service'는 CloudWatch 에이전트 구성 파일에서 인식되지 않는 구성 섹션입니다. 로그나 메트릭 수집과는 관련이 없습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 회사가 EC2 인스턴스에 새로운 애플리케이션을 배포하고 시스템 성능과 애플리케이션 로그를 효율적으로 모니터링할 수 있도록 하고 싶어합니다. 그들은 이 목적을 위해 CloudWatch 에이전트를 사용하기로 결정했습니다.",
        "Question": "SysOps 관리자가 EC2 인스턴스에서 메트릭과 로그를 모두 수집하기 위해 CloudWatch 에이전트를 설치하고 구성하기 위해 어떤 단계를 밟아야 합니까?",
        "Options": {
            "1": "AWS Systems Manager Run Command를 사용하여 SSM 문서에서 CloudWatch 에이전트를 설치하고 JSON 구성 파일을 사용하여 구성합니다.",
            "2": "CloudFormation 템플릿을 활용하여 EC2 인스턴스에 CloudWatch 에이전트를 배포하고 템플릿에서 구성을 지정합니다.",
            "3": "명령줄을 사용하여 각 EC2 인스턴스에 CloudWatch 에이전트를 수동으로 설치하고 AWS Management Console을 통해 구성합니다.",
            "4": "EC2 인스턴스에 CloudWatch 에이전트를 설치하고 인스턴스 시작 후 함수를 호출하여 구성하는 Lambda 함수를 생성합니다."
        },
        "Correct Answer": "AWS Systems Manager Run Command를 사용하여 SSM 문서에서 CloudWatch 에이전트를 설치하고 JSON 구성 파일을 사용하여 구성합니다.",
        "Explanation": "AWS Systems Manager Run Command를 사용하면 여러 인스턴스에서 CloudWatch 에이전트의 설치 및 구성 프로세스를 간소화하여 일관성을 보장하고 수동 노력을 줄일 수 있습니다.",
        "Other Options": [
            "CloudWatch 에이전트를 수동으로 설치하는 것은 여러 인스턴스에 대해 비효율적이며 구성 오류의 위험을 증가시킵니다. 또한 자동화 모범 사례를 활용하지 않습니다.",
            "CloudFormation 템플릿을 사용하는 것은 효과적일 수 있지만, 템플릿 자체의 사전 구성 및 배포가 필요합니다. 이 방법은 수정 없이 기존 인스턴스에 대해 간단하지 않을 수 있습니다.",
            "CloudWatch 에이전트를 설치하기 위해 Lambda 함수를 생성하는 것은 불필요한 복잡성을 추가합니다. Lambda 함수는 일반적으로 EC2 인스턴스에 소프트웨어를 설치하기보다는 이벤트 기반 작업에 사용됩니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 회사가 Amazon S3를 사용하여 대량의 데이터를 저장하고 있으며, 규정 준수를 위해 객체 상태를 모니터링하고 보고하는 솔루션을 구현해야 합니다. 그들은 피크 사용 시간 동안 성능에 영향을 주지 않으면서 예약된 보고서를 제공할 수 있는 도구를 사용하고 싶어합니다.",
        "Question": "Amazon S3의 다음 기능 중 어떤 것이 성능에 영향을 주지 않으면서 객체 상태에 대한 감사 및 보고 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "Amazon S3 Lifecycle Policies",
            "2": "Amazon S3 Select",
            "3": "Amazon S3 Inventory",
            "4": "Amazon S3 Event Notifications"
        },
        "Correct Answer": "Amazon S3 Inventory",
        "Explanation": "Amazon S3 Inventory는 S3의 객체 상태에 대한 예약된 보고서를 제공하도록 특별히 설계되었습니다. 여기에는 복제 및 암호화 상태가 포함됩니다. 이 기능은 피크 시간 동안 S3 작업의 성능에 영향을 주지 않으면서 효율적인 감사 및 규정 준수 보고를 가능하게 합니다.",
        "Other Options": [
            "Amazon S3 Lifecycle Policies는 객체의 수명을 관리하기 위해 다른 스토리지 클래스로 전환하거나 삭제하는 데 사용되지만, 보고 기능은 제공하지 않습니다.",
            "Amazon S3 Event Notifications는 버킷에서 발생하는 특정 이벤트에 따라 알림을 트리거하도록 설계되었지만, 예약된 보고 기능은 제공하지 않습니다.",
            "Amazon S3 Select는 애플리케이션이 S3 객체에서 데이터의 하위 집합만 검색할 수 있도록 하여 전송되는 데이터 양을 줄이는 데 도움이 되지만, 인벤토리나 보고 기능은 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 회사가 S3 및 DynamoDB와 같은 다양한 AWS 서비스에 접근해야 하는 애플리케이션을 배포하고 있으며, VPC 내의 인스턴스에서 공용 IP 주소를 노출하지 않고 접근하려고 합니다. 이 회사는 보안을 강화하고 인터넷 연결 관리의 복잡성을 최소화하는 것을 목표로 하고 있습니다.",
        "Question": "회사가 인스턴스에서 공용 IP 주소 없이 이러한 서비스에 대한 안전하고 개인적인 연결을 허용하기 위해 어떤 AWS 기능을 구현해야 합니까?",
        "Options": {
            "1": "AWS 서비스에 안전하게 연결하기 위해 VPN 연결을 사용합니다.",
            "2": "필요한 AWS 서비스에 대한 VPC 엔드포인트를 생성하여 개인 접근을 가능하게 합니다.",
            "3": "사설 인스턴스가 인터넷을 통해 서비스에 접근할 수 있도록 NAT 게이트웨이를 배포합니다.",
            "4": "공용 접근이 가능한 다른 VPC와 VPC 피어링 연결을 설정합니다."
        },
        "Correct Answer": "필요한 AWS 서비스에 대한 VPC 엔드포인트를 생성하여 개인 접근을 가능하게 합니다.",
        "Explanation": "VPC 엔드포인트를 생성하면 VPC 내의 인스턴스가 공용 IP 주소 없이 지원되는 AWS 서비스에 직접 연결할 수 있어 보안을 강화하고 트래픽이 AWS 네트워크 내에 유지되도록 합니다.",
        "Other Options": [
            "VPN 연결을 사용하면 추가적인 복잡성이 발생하며, 이 시나리오에서는 공용 IP 없이 AWS 서비스에 직접 접근할 수 없으므로 필요하지 않습니다.",
            "AWS 서비스에 직접 접근하기 위해 VPC 피어링 연결을 설정하는 것은 불필요하며, 피어링은 VPC 엔드포인트와 같은 수준의 개인 접근을 제공하지 않습니다.",
            "NAT 게이트웨이를 배포하면 인스턴스가 인터넷에 도달할 수 있게 되며, 이는 공용 IP 주소를 피해야 하는 요구 사항과 모순되고 트래픽을 공용 인터넷에 노출시킵니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "시스템 관리자가 조직의 Amazon RDS 데이터베이스 인스턴스가 정기적으로 백업되고 복구 시간 목표(RTO) 및 복구 지점 목표(RPO)가 충족되도록 해야 합니다. 관리자는 회사의 데이터 보존 정책을 준수하면서 백업 프로세스를 자동화하고 싶어합니다.",
        "Question": "관리자가 RDS 스냅샷을 자동화하고 백업 및 보존 요구 사항을 충족하기 위해 어떤 서비스나 기능을 사용해야 합니까?",
        "Options": {
            "1": "AWS Backup",
            "2": "Amazon Data Lifecycle Manager",
            "3": "AWS Lambda",
            "4": "Amazon RDS 자동 백업"
        },
        "Correct Answer": "AWS Backup",
        "Explanation": "AWS Backup은 Amazon RDS를 포함한 AWS 리소스의 백업을 자동화하는 완전 관리형 백업 서비스입니다. 백업 빈도 및 보존 정책을 정의하는 백업 계획을 생성할 수 있어 RTO 및 RPO 요구 사항을 충족하는 데 이상적입니다.",
        "Other Options": [
            "Amazon Data Lifecycle Manager는 주로 EBS 볼륨 스냅샷 자동화에 사용되며 RDS 백업을 직접 관리하지 않습니다.",
            "Amazon RDS 자동 백업은 RDS 인스턴스의 백업을 자동화하는 방법을 제공하지만, AWS Backup이 제공하는 백업 계획 및 보존 정책의 포괄적인 관리를 제공하지 않습니다.",
            "AWS Lambda는 이벤트에 응답하여 코드를 실행하는 서버리스 컴퓨팅 서비스이지만 RDS에 대한 백업 기능을 제공하거나 보존 정책을 관리하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 회사가 AWS Key Management Service (KMS)를 사용하여 암호화 키를 관리하고 있습니다. 그들은 삭제 예정인 고객 마스터 키(CMK)를 가지고 있으며, SysOps 관리자는 이 작업이 키 관리 및 암호화 작업에 미치는 영향을 이해해야 합니다.",
        "Question": "삭제 대기 중인 CMK에 대해 다음 중 어떤 진술이 사실입니까? (두 개 선택)",
        "Options": {
            "1": "삭제 대기 중인 CMK는 어떤 암호화 작업에서도 사용할 수 없습니다.",
            "2": "AWS KMS는 CMK가 삭제로 표시된 후에도 CMK의 수명 주기를 계속 관리합니다.",
            "3": "CMK가 삭제로 표시되면 암호화 작업에 사용할 수 없습니다.",
            "4": "삭제 대기 중인 CMK는 암호화 작업을 위한 백킹 키에 대한 접근을 여전히 허용합니다.",
            "5": "AWS KMS는 삭제 대기 중인 CMK의 백킹 키를 자동으로 회전합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "삭제 대기 중인 CMK는 어떤 암호화 작업에서도 사용할 수 없습니다.",
            "CMK가 삭제로 표시되면 암호화 작업에 사용할 수 없습니다."
        ],
        "Explanation": "삭제 대기 중인 CMK는 어떤 암호화 작업에서도 사용할 수 없으며, 삭제로 표시되면 어떤 작업에도 사용할 수 없습니다. AWS KMS는 삭제 대기 중인 CMK의 백킹 키를 회전하지 않으며, 이 키들이 유예 기간 동안 더 이상 사용되지 않도록 보장합니다.",
        "Other Options": [
            "AWS KMS는 삭제 대기 중인 CMK의 백킹 키를 자동으로 회전합니다. 이는 AWS KMS가 삭제 대기 상태의 CMK에 대해 키 회전을 수행하지 않기 때문에 잘못된 것입니다.",
            "삭제 대기 중인 CMK는 암호화 작업을 위한 백킹 키에 대한 접근을 여전히 허용합니다. 이는 삭제 대기 중인 CMK가 모든 암호화 활동에 대해 완전히 비활성화되기 때문에 잘못된 것입니다.",
            "AWS KMS는 CMK가 삭제로 표시된 후에도 CMK의 수명 주기를 계속 관리합니다. 이는 AWS KMS가 메타데이터를 유지하지만, 키 자체는 삭제로 표시된 후 사용할 수 없기 때문에 오해의 소지가 있습니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "SysOps 관리자가 온프레미스 리소스와의 원활한 통합이 필요한 기업 애플리케이션의 DNS 설정을 구성하고 있습니다. 그들은 온프레미스 네트워크에서 오는 DNS 쿼리가 Amazon Route 53에 호스팅된 DNS 이름을 해결할 수 있도록 해야 합니다.",
        "Question": "다음 구성 중 어떤 것이 이를 달성하는 데 도움이 될까요? (두 가지 선택)",
        "Options": {
            "1": "Route 53 Resolver에서 조건부 포워딩 규칙을 설정합니다.",
            "2": "온프레미스 DNS 서버에서 Route 53 헬스 체크를 구현합니다.",
            "3": "Amazon CloudFront를 사용하여 DNS 쿼리를 캐시합니다.",
            "4": "Route 53 Resolver 인바운드 엔드포인트를 생성합니다.",
            "5": "온프레미스 네트워크와 VPC 간의 VPC 피어링을 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Route 53 Resolver 인바운드 엔드포인트를 생성합니다.",
            "Route 53 Resolver에서 조건부 포워딩 규칙을 설정합니다."
        ],
        "Explanation": "Route 53 Resolver 인바운드 엔드포인트를 생성하면 온프레미스 네트워크에서 오는 DNS 쿼리를 Route 53으로 전송할 수 있어 호스팅된 DNS 이름을 해결할 수 있습니다. 조건부 포워딩 규칙을 설정하면 특정 DNS 쿼리를 적절한 리졸버로 포워딩할 수 있어 온프레미스 리소스와의 원활한 통합을 보장합니다.",
        "Other Options": [
            "Amazon CloudFront를 사용하여 DNS 쿼리를 캐시하는 것은 DNS 이름을 해결하는 데 관련이 없습니다; CloudFront는 콘텐츠 전송 네트워크이며 DNS 해결을 직접 처리하지 않습니다.",
            "VPC 피어링을 구성하는 것은 온프레미스 리소스에서 Route 53으로의 DNS 해결을 직접 촉진하지 않으며, VPC 간의 통신만 허용합니다.",
            "온프레미스 DNS 서버에서 Route 53 헬스 체크를 구현하는 것은 Route 53에 호스팅된 DNS 이름의 해결에 도움이 되지 않으며 쿼리 해결 프로세스와 관련이 없습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 회사는 재해 발생 시 중요한 애플리케이션을 신속하게 복구할 수 있도록 해야 합니다. 그들은 다운타임과 데이터 손실을 최소화하는 재해 복구 계획을 구현하기 위한 다양한 옵션을 고려하고 있습니다.",
        "Question": "어떤 재해 복구 전략이 중요한 애플리케이션에 대해 최소한의 데이터 손실로 가장 빠른 복구 시간을 제공합니까?",
        "Options": {
            "1": "일일 데이터 복제를 통한 워밍 스탠바이 전략 채택",
            "2": "드문 데이터 백업을 통한 콜드 스탠바이 전략 활용",
            "3": "실시간 데이터 복제를 통한 핫 스탠바이 전략 구현",
            "4": "주간 스냅샷을 통한 백업 및 복원 전략 사용"
        },
        "Correct Answer": "실시간 데이터 복제를 통한 핫 스탠바이 전략 구현",
        "Explanation": "핫 스탠바이 전략은 실시간 데이터 복제로 지속적으로 업데이트되는 완전 운영 백업 환경을 유지하는 것입니다. 이 접근 방식은 다운타임과 데이터 손실을 최소화하여 가장 빠른 복구 옵션이 됩니다.",
        "Other Options": [
            "주간 스냅샷을 통한 백업 및 복원 전략은 최신 변경 사항이 최신 스냅샷에 포함되지 않을 수 있으므로 더 긴 복구 시간과 잠재적인 데이터 손실을 초래합니다.",
            "일일 데이터 복제를 통한 워밍 스탠바이 전략은 콜드 스탠바이보다 더 빠른 복구를 제공하지만, 핫 스탠바이의 즉각성을 제공하지 않아 데이터에 잠재적인 공백이 남을 수 있습니다.",
            "드문 백업에 의존하는 콜드 스탠바이 전략은 재해 후 시스템을 온라인으로 전환하는 데 상당한 시간이 필요하므로 신속한 복구가 중요한 시나리오에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "시스템 관리자가 AWS에서 가상 사설 클라우드(VPC)를 구성하고 있습니다. VPC에는 여러 서브넷이 있으며, 관리자는 한 서브넷의 인스턴스가 다른 서브넷의 인스턴스와 통신할 수 있도록 해야 합니다. 관리자는 또한 보안 모범 사례를 사용하여 인스턴스 간의 수신 및 송신 트래픽을 제어해야 합니다.",
        "Question": "관리자가 보안 접근을 유지하면서 서로 다른 서브넷의 인스턴스 간 통신을 허용하기 위해 구성해야 하는 것은 무엇입니까?",
        "Options": {
            "1": "네트워크 ACL",
            "2": "라우팅 테이블",
            "3": "VPN 연결",
            "4": "보안 그룹"
        },
        "Correct Answer": "라우팅 테이블",
        "Explanation": "라우팅 테이블은 VPC 내에서 트래픽을 지시하는 데 필수적입니다. 서로 다른 서브넷의 인스턴스 간 통신을 가능하게 하려면 해당 서브넷과 연결된 라우팅 테이블에 올바른 라우팅 규칙이 설정되어 있어야 합니다. 적절하게 구성된 라우팅 테이블은 필요에 따라 서브넷 간에 트래픽이 흐를 수 있도록 보장합니다.",
        "Other Options": [
            "네트워크 ACL은 상태 비저장 방식이며 서브넷 수준에서 트래픽을 제어하여 보안 계층을 제공하지만, 서브넷 간 통신을 위한 라우팅을 설정하지 않습니다. 서브넷 간 통신을 허용하는 주요 메커니즘이 아닙니다.",
            "보안 그룹은 EC2 인스턴스에 대한 가상 방화벽 역할을 하며 인스턴스 수준에서 수신 및 송신 트래픽을 제어합니다. 인스턴스의 보안에 중요한 역할을 하지만 서브넷 간 라우팅을 직접 관리하지는 않습니다.",
            "VPN 연결은 온프레미스 네트워크를 VPC에 안전하게 연결하는 데 사용되지만, 동일한 VPC 내의 인스턴스 간 통신을 촉진하지 않습니다. VPC 내의 서브넷 간 트래픽과는 관련이 없습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사가 AWS Elastic Beanstalk를 사용하여 웹 애플리케이션의 새 버전을 배포하고 있습니다. 애플리케이션은 배포 과정 동안 사용자에게 계속 제공되어야 하며, 팀은 다운타임을 최소화하면서 환경이 부하를 처리할 수 있도록 보장하고자 합니다. 그들은 Elastic Beanstalk에서 제공하는 다양한 배포 정책을 고려하고 있습니다.",
        "Question": "팀이 Elastic Beanstalk 애플리케이션의 배포 과정 동안 다운타임을 최소화하고 전체 용량을 유지하기 위해 어떤 배포 정책을 선택해야 합니까?",
        "Options": {
            "1": "모두 한 번에: 새 버전을 모든 인스턴스에 동시에 배포하여 짧은 다운타임을 발생시킵니다.",
            "2": "추가 배치 롤링: 새 버전을 배치로 배포하되, 배포 과정 동안 전체 용량을 보장하기 위해 먼저 새 배치의 인스턴스를 시작합니다.",
            "3": "롤링: 새 버전을 배치로 배포하여 배포 단계 동안 용량을 줄입니다.",
            "4": "불변: 불변 업데이트를 수행하여 새 인스턴스 그룹에 새 버전을 배포합니다."
        },
        "Correct Answer": "추가 배치 롤링: 새 버전을 배치로 배포하되, 배포 과정 동안 전체 용량을 보장하기 위해 먼저 새 배치의 인스턴스를 시작합니다.",
        "Explanation": "'추가 배치 롤링' 배포 정책은 팀이 업데이트를 배치로 배포하면서 새 인스턴스를 시작하여 전체 용량을 유지할 수 있도록 하여 다운타임을 최소화하고 배포 과정 동안 애플리케이션이 사용자에게 계속 제공되도록 합니다.",
        "Other Options": [
            "'모두 한 번에' 배포 정책은 새 버전을 모든 인스턴스에 동시에 배포하여 짧은 다운타임을 발생시키며, 높은 가용성이 요구되는 환경에는 적합하지 않습니다.",
            "'롤링' 배포 정책은 배포 단계 동안 인스턴스를 서비스에서 제외하여 환경의 용량을 줄이며, 이로 인해 사용자 트래픽을 처리할 자원이 부족할 수 있습니다.",
            "'불변' 배포 정책은 업데이트가 새 인스턴스 집합에 배포되도록 보장하지만, 배포 중 기존 용량을 유지하지 않으므로 다운타임이 발생할 수 있습니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 회사가 클라우드 인프라 전반에 걸쳐 모니터링 및 규정 준수를 유지하기 위해 다양한 AWS 보안 서비스를 활용하고 있습니다. 보안 팀은 구식 소프트웨어를 실행하는 EC2 인스턴스와 관련하여 Amazon Inspector에서 보고된 여러 고위험 발견 사항을 확인했습니다. 그들은 이러한 발견 사항을 검토하여 적시에 수정할 수 있도록 하고 있습니다.",
        "Question": "보안 팀이 Amazon Inspector의 보안 발견 사항과 다른 보안 발견 사항을 하나의 중앙 대시보드에서 시각화, 우선순위 지정 및 관리하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Config",
            "2": "Amazon GuardDuty",
            "3": "AWS Security Hub",
            "4": "AWS Trusted Advisor"
        },
        "Correct Answer": "AWS Security Hub",
        "Explanation": "AWS Security Hub는 AWS 계정 전반에 걸쳐 보안 경고 및 규정 준수 상태를 중앙에서 볼 수 있는 기능을 제공합니다. Amazon Inspector를 포함한 다양한 AWS 보안 서비스의 발견 사항을 통합하여 보안 팀이 보안 태세를 효과적으로 시각화하고 관리할 수 있도록 합니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성 변경 및 규정 준수를 추적하는 데 주로 사용되며, 보안 발견 사항을 중앙 집중화하는 데 사용되지 않습니다.",
            "Amazon GuardDuty는 AWS 계정 및 워크로드에 대한 지속적인 모니터링을 통해 위협 탐지에 중점을 두지만, Amazon Inspector와 같은 서비스의 발견 사항을 집계하지 않습니다.",
            "AWS Trusted Advisor는 AWS 사용에 대한 모범 사례와 관련된 권장 사항을 제공하지만, 보안 발견 사항을 위한 중앙 대시보드 역할을 하지 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 회사가 Amazon S3에 민감한 고객 데이터를 저장하고 있으며, 이 데이터가 저장 중에 암호화되어 있는지 확인해야 합니다. SysOps 관리자는 암호화 키 관리를 위해 AWS Key Management Service (AWS KMS)를 활용하는 솔루션을 구현해야 합니다.",
        "Question": "관리자가 S3에 저장된 데이터가 AWS KMS를 사용하여 저장 중에 암호화되도록 하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "S3 버킷에 대해 AWS KMS 키(SSE-KMS)를 사용하여 S3 서버 측 암호화를 활성화합니다.",
            "2": "AWS Lambda를 사용하여 파일을 S3에 업로드하기 전에 암호화합니다.",
            "3": "S3에 업로드하기 전에 타사 암호화 도구를 사용하여 파일을 수동으로 암호화합니다.",
            "4": "Amazon CloudTrail을 설정하여 규정 준수를 위해 S3 버킷에 대한 액세스를 기록합니다."
        },
        "Correct Answer": "S3 버킷에 대해 AWS KMS 키(SSE-KMS)를 사용하여 S3 서버 측 암호화를 활성화합니다.",
        "Explanation": "S3 버킷에 대해 AWS KMS 키(SSE-KMS)를 사용하여 S3 서버 측 암호화를 활성화하면 S3 버킷에 저장된 모든 데이터가 AWS 관리 키를 사용하여 자동으로 저장 중에 암호화됩니다. 이 접근 방식은 키 관리를 간소화하고 보안 모범 사례 준수를 보장합니다.",
        "Other Options": [
            "AWS Lambda를 사용하여 파일을 S3에 업로드하기 전에 암호화하는 것은 유효한 방법이지만 추가적인 코딩 및 관리 오버헤드가 필요하여 SSE-KMS를 직접 사용하는 것보다 효율성이 떨어집니다.",
            "타사 암호화 도구를 사용하여 파일을 수동으로 암호화하는 것은 복잡성을 추가하며, 암호화 키가 제대로 관리되지 않으면 규정 준수 문제를 초래할 수 있습니다.",
            "Amazon CloudTrail을 설정하여 S3 버킷에 대한 액세스를 기록하는 것은 감사 및 규정 준수를 위해 중요하지만, 저장 중인 데이터에 대한 암호화를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "SysOps 관리자는 여러 AWS 계정과 리전에서 성능 메트릭을 모니터링하고 분석하는 임무를 맡고 있습니다. 관리자는 CloudWatch의 기능을 활용하여 수학적 표현을 통해 새로운 메트릭을 생성하여 대시보드에서 더 나은 통찰력과 시각화를 원합니다.",
        "Question": "다음 중 여러 계정과 리전의 메트릭을 집계하고 변환하는 데 사용할 수 있는 CloudWatch의 기능은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "메트릭 조합을 위한 CloudWatch 복합 경고 사용",
            "2": "메트릭 수학으로 여러 CloudWatch 메트릭 쿼리",
            "3": "메트릭을 시각화하기 위한 CloudWatch 대시보드 생성",
            "4": "메트릭 변경에 대한 알림을 위해 CloudWatch 경고 활용",
            "5": "새로운 시계열 생성을 위한 CloudWatch 메트릭 수학 사용"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "새로운 시계열 생성을 위한 CloudWatch 메트릭 수학 사용",
            "메트릭 수학으로 여러 CloudWatch 메트릭 쿼리"
        ],
        "Explanation": "CloudWatch 메트릭 수학은 다양한 출처의 메트릭을 집계하고 변환할 수 있게 해주며, 기존 메트릭에서 새로운 시계열 데이터를 생성할 수 있습니다. 이 기능은 여러 계정과 리전에서 통찰력을 얻는 데 필수적입니다.",
        "Other Options": [
            "CloudWatch 경고는 임계값을 모니터링하고 사용자에게 변경 사항을 알리기 위해 사용되지만, 여러 계정이나 리전의 메트릭을 집계하거나 변환하지는 않습니다.",
            "CloudWatch 대시보드를 생성하는 것은 메트릭을 시각화하는 방법이지만, 메트릭 수학이 제공하는 집계 또는 변환 기능과는 관련이 없습니다.",
            "CloudWatch의 복합 경고는 여러 경고를 하나로 결합할 수 있지만, 메트릭에 대한 수학적 연산을 수행하거나 서로 다른 계정이나 리전 간의 변환을 허용하지는 않습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "한 회사가 보안 조치를 강화하기 위해 IAM 구성을 검토하고 있습니다. 그들은 AWS 리소스에 접근하는 모든 사용자가 회사 정책을 준수하며 안전하게 접근하고 있는지 확인하고자 합니다. 보안 팀은 다단계 인증(MFA)을 구현하고 강력한 비밀번호를 요구하는 비밀번호 정책을 시행할 것을 권장했습니다.",
        "Question": "이러한 보안 요구 사항을 충족하기 위해 SysOps 관리자가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "IAM 사용자 접근을 AWS Management Console로만 제한하고 모든 사용자의 API 접근을 비활성화합니다.",
            "2": "관리 접근을 부여하는 새로운 IAM 역할을 생성하고 모든 사용자에게 할당하여 관리의 용이성을 높입니다.",
            "3": "모든 IAM 사용자에 대해 MFA를 활성화하고 최소 12자 이상으로 대문자, 소문자, 숫자 및 기호의 조합을 요구하는 비밀번호 정책을 시행합니다.",
            "4": "모든 IAM 사용자에 대해 임시 보안 자격 증명을 사용하고 S3 버킷 정책을 설정하여 무제한 접근을 허용합니다."
        },
        "Correct Answer": "모든 IAM 사용자에 대해 MFA를 활성화하고 최소 12자 이상으로 대문자, 소문자, 숫자 및 기호의 조합을 요구하는 비밀번호 정책을 시행합니다.",
        "Explanation": "모든 IAM 사용자에 대해 MFA를 활성화하고 강력한 비밀번호 정책을 시행하면 추가 인증 계층이 추가되어 보안이 크게 강화되고 비밀번호가 복잡성 요구 사항을 충족하도록 보장됩니다.",
        "Other Options": [
            "IAM 사용자 접근을 AWS Management Console로만 제한하면 사용자의 기능이 제한되고 강력한 비밀번호나 MFA의 필요성을 해결하지 못합니다.",
            "관리 접근을 부여하는 새로운 IAM 역할을 생성하면 과도한 권한 부여로 이어질 수 있으며, 이는 보안 위험입니다. MFA나 비밀번호 관리의 필요성을 해결하지 못합니다.",
            "임시 보안 자격 증명을 사용하는 것은 보안을 강화할 수 있지만, MFA나 강력한 비밀번호 정책의 필요성을 대체하지 않으며, S3 버킷에 대한 무제한 접근을 허용하는 것은 심각한 보안 취약점입니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "AWS 환경을 관리하고 있으며 AWS CloudFormation을 사용하여 EC2 인스턴스 배포를 자동화해야 합니다. CloudFormation 템플릿에는 인스턴스 유형과 키 페어 이름에 대한 매개변수가 포함되어 있습니다. 스택을 배포한 후 인스턴스가 예상대로 시작되지 않는 것을 발견했습니다. 인스턴스가 올바르게 프로비저닝되도록 문제를 해결하고자 합니다.",
        "Question": "다음 중 EC2 인스턴스가 성공적으로 시작되지 않도록 할 수 있는 문제는 무엇입니까?",
        "Options": {
            "1": "매개변수에 지정된 인스턴스 유형이 선택한 리전에서 존재하지 않습니다.",
            "2": "매개변수에 제공된 키 페어 이름이 지정된 리전과 연결되어 있지 않습니다.",
            "3": "CloudFormation 템플릿에 'Resources' 섹션이 누락되었습니다.",
            "4": "CloudFormation 스택에 EC2 인스턴스를 시작할 수 있는 충분한 IAM 권한이 없습니다."
        },
        "Correct Answer": "매개변수에 지정된 인스턴스 유형이 선택한 리전에서 존재하지 않습니다.",
        "Explanation": "매개변수에 지정된 인스턴스 유형이 유효하지 않거나 선택한 AWS 리전에서 사용할 수 없는 경우, EC2 인스턴스가 시작되지 않아 스택 생성이 실패하게 됩니다.",
        "Other Options": [
            "IAM 권한이 부족하면 문제가 발생할 수 있지만, 템플릿이 EC2 인스턴스를 생성할 수 있도록 허용하면 시작을 방해하지 않아야 합니다. 권한이 올바르게 설정되었는지 확인해야 하지만, 이것이 주요 문제는 아닙니다.",
            "키 페어 이름이 지정된 리전과 연결되어 있지 않으면 인스턴스가 시작된 후 SSH 접근에 문제가 발생할 수 있지만, 인스턴스가 처음 생성되는 것을 방해하지는 않습니다.",
            "CloudFormation 템플릿에서 'Resources' 섹션이 누락되면 스택이 실패하게 되지만, 질문은 템플릿이 올바르게 구조화되어 있다고 가정하므로 매개변수에 집중하고 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "조직이 온프레미스 네트워크를 AWS 클라우드로 확장할 계획입니다. 그들은 공용 인터넷을 통하지 않고도 VPC와의 개인적인 통신을 허용하는 안전한 연결이 필요합니다. 또한 VPC가 공용 서비스에 대해 여전히 인터넷에 연결될 수 있도록 보장하고 싶어합니다.",
        "Question": "조직이 이러한 요구 사항을 충족하기 위해 구현해야 할 게이트웨이 조합은 무엇입니까?",
        "Options": {
            "1": "안전한 온프레미스 연결을 위해 가상 프라이빗 게이트웨이만 사용합니다.",
            "2": "인터넷 게이트웨이와 가상 프라이빗 게이트웨이를 배포합니다.",
            "3": "VPC에 대한 공용 액세스를 허용하기 위해 인터넷 게이트웨이만 설정합니다.",
            "4": "인터넷 및 VPN 연결을 위해 트랜짓 게이트웨이를 구현합니다."
        },
        "Correct Answer": "인터넷 게이트웨이와 가상 프라이빗 게이트웨이를 배포합니다.",
        "Explanation": "조직의 요구 사항을 충족하기 위해서는 VPC에 호스팅된 서비스에 대한 공용 액세스를 위한 인터넷 게이트웨이와 온프레미스에서 VPC로의 안전하고 개인적인 연결을 위한 가상 프라이빗 게이트웨이가 모두 필요합니다. 이를 통해 트래픽이 공용 인터넷에 노출되지 않습니다.",
        "Other Options": [
            "가상 프라이빗 게이트웨이만 사용하는 것은 VPC에 호스팅된 서비스에 필요한 공용 인터넷 연결을 제공하지 않습니다.",
            "인터넷 게이트웨이만 설정하면 공용 액세스만 허용되며 온프레미스 네트워크에 대한 안전한 VPN 연결을 제공하지 않습니다.",
            "트랜짓 게이트웨이를 구현하는 것은 이 시나리오에 필요하지 않으며, 요구 사항은 인터넷 게이트웨이와 가상 프라이빗 게이트웨이로 충족할 수 있습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "SysOps 관리자가 Amazon CloudFront를 콘텐츠 배달 네트워크로 사용하는 애플리케이션을 배포했습니다. 최근 사용자들이 애플리케이션에 접근할 때 오래된 콘텐츠를 보고 있다고 보고했습니다. 관리자는 CloudFront에서 콘텐츠가 업데이트되고 사용자가 최신 버전의 콘텐츠를 받을 수 있도록 해야 합니다.",
        "Question": "SysOps 관리자가 CloudFront의 캐싱 문제를 해결하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "CloudFront에 오래된 특정 파일의 캐시된 객체를 무효화하도록 지시합니다.",
            "2": "전체 CloudFront 배포를 삭제하고 최신 구성으로 다시 생성합니다.",
            "3": "CloudFront 배포의 TTL(Time to Live) 설정을 줄여 콘텐츠가 더 자주 새로 고쳐지도록 합니다.",
            "4": "원본 서버를 업데이트하여 파일 이름에 버전 번호를 포함하고 이를 애플리케이션에서 참조합니다."
        },
        "Correct Answer": "CloudFront에 오래된 특정 파일의 캐시된 객체를 무효화하도록 지시합니다.",
        "Explanation": "CloudFront에 오래된 특정 파일의 캐시된 객체를 무효화하도록 지시하는 것은 오래된 콘텐츠를 캐시에서 제거하여 사용자가 가장 최신 버전을 즉시 받을 수 있도록 하는 문제를 직접 해결합니다.",
        "Other Options": [
            "원본 서버를 업데이트하여 파일 이름에 버전 번호를 포함하는 것은 캐시 무효화를 위한 유용한 전략이 될 수 있지만, 현재 CloudFront 배포의 즉각적인 캐싱 문제를 해결하지는 않습니다.",
            "TTL(Time to Live) 설정을 줄이는 것은 장기적으로 도움이 될 수 있지만, 사용자가 경험하고 있는 오래된 콘텐츠 문제에 대한 즉각적인 해결책을 제공하지는 않습니다.",
            "전체 CloudFront 배포를 삭제하고 다시 생성하는 것은 극단적이고 불필요한 단계로, 다운타임과 잠재적인 데이터 손실로 이어질 수 있습니다. 무효화가 더 효율적인 접근 방식입니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 회사가 AWS에서 엄격한 액세스 제어를 구현하여 할당된 권한이 조직 내 특정 사용자 역할과 밀접하게 연결되도록 하고 있습니다. SysOps 관리자로서, 귀하는 이 목적을 위해 인라인 정책의 사용을 권장합니다.",
        "Question": "AWS IAM의 맥락에서 인라인 정책에 대한 다음 설명 중 어떤 것이 사실입니까?",
        "Options": {
            "1": "인라인 정책은 주체 엔터티가 삭제된 후에도 자동으로 유지됩니다.",
            "2": "인라인 정책은 그룹에 연결할 수 있어 모든 구성원 간에 권한을 공유할 수 있습니다.",
            "3": "인라인 정책은 여러 주체 엔터티 간에 권한을 공유할 수 있는 방법을 제공합니다.",
            "4": "인라인 정책은 정책과 주체 엔터티 간의 엄격한 일대일 관계를 허용합니다."
        },
        "Correct Answer": "인라인 정책은 정책과 주체 엔터티 간의 엄격한 일대일 관계를 허용합니다.",
        "Explanation": "인라인 정책은 단일 주체 엔터티와 직접 연결되도록 설계되어, 부여된 권한이 다른 엔터티와 공유되거나 우발적으로 할당되지 않도록 보장합니다. 이는 개별 사용자 또는 역할에 특정한 엄격한 액세스 제어를 유지하는 데 이상적입니다.",
        "Other Options": [
            "인라인 정책은 여러 주체 엔터티 간에 공유될 수 없으며, 이는 재사용을 위해 설계된 관리형 정책의 특징입니다.",
            "인라인 정책은 연결된 주체 엔터티가 삭제될 때 삭제되며, 이는 관리형 정책의 기능입니다.",
            "인라인 정책은 그룹에 연결될 수 없으며, 개별 사용자 또는 역할에만 적용되며, 관리형 정책은 그룹에 사용할 수 있습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "SysOps 관리자는 Amazon RDS를 사용하여 읽기 중심 애플리케이션의 성능을 개선하는 임무를 맡았습니다. 현재 애플리케이션은 단일 데이터베이스 인스턴스에서 실행되고 있어 피크 사용 시간 동안 성능 병목 현상이 발생하고 있습니다. 관리자는 애플리케이션 아키텍처에 큰 변경 없이 읽기 트래픽을 확장하고 분산할 수 있는 솔루션을 구현해야 합니다.",
        "Question": "관리자가 단일 진실의 출처를 유지하면서 데이터베이스의 읽기 성능을 향상시키기 위해 구현해야 할 기능은 무엇입니까?",
        "Options": {
            "1": "Amazon RDS Multi-AZ 배포",
            "2": "Amazon DynamoDB",
            "3": "Amazon RDS 읽기 복제본",
            "4": "Amazon ElastiCache"
        },
        "Correct Answer": "Amazon RDS 읽기 복제본",
        "Explanation": "Amazon RDS 읽기 복제본은 여러 데이터베이스 인스턴스에 걸쳐 읽기 트래픽을 분산시켜 읽기 중심 워크로드에 대한 읽기 처리량과 성능을 증가시킵니다. 이 기능은 기존 애플리케이션 구조를 변경하지 않고도 요구 사항을 효과적으로 해결합니다.",
        "Other Options": [
            "Amazon RDS Multi-AZ 배포는 고가용성과 장애 조치를 위해 설계되었지만, 여전히 읽기를 위해 기본 인스턴스에서 작동하므로 읽기 트래픽을 확장할 수 있는 기능을 제공하지 않습니다.",
            "Amazon ElastiCache는 읽기 성능을 개선하는 데 도움이 되는 캐싱 서비스이지만, 읽기 복제본과 같은 방식으로 RDS와 직접 통합되지 않습니다. 또한 캐싱 전략을 활용하기 위해 애플리케이션 수정이 필요합니다.",
            "Amazon DynamoDB는 기존 RDS 구성과 호환되지 않는 NoSQL 데이터베이스 서비스이며, 이를 전환하려면 애플리케이션 아키텍처에 상당한 변경이 필요합니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "SysOps 관리자는 Route 53을 사용하여 DNS 관리를 하는 고가용성 웹 애플리케이션을 설정하는 임무를 맡았습니다. 애플리케이션은 여러 지역의 다양한 리소스에 걸쳐 트래픽을 효율적으로 처리해야 합니다. 관리자는 기본 지역이 사용할 수 없게 될 경우 자동 건강 검사를 수행하고 보조 지역으로 장애 조치를 허용하는 Route 53 구성을 만들어야 합니다.",
        "Question": "관리자가 웹 애플리케이션의 고가용성과 자동 장애 조치를 달성하기 위해 구현해야 할 Route 53 기능은 무엇입니까?",
        "Options": {
            "1": "가중 라우팅",
            "2": "지연 기반 라우팅",
            "3": "지리적 위치 기반 라우팅",
            "4": "장애 조치 라우팅"
        },
        "Correct Answer": "장애 조치 라우팅",
        "Explanation": "장애 조치 라우팅은 Route 53이 리소스의 상태를 모니터링하고 기본 리소스가 실패할 경우 자동으로 트래픽을 보조 리소스로 리디렉션할 수 있도록 특별히 설계되었습니다. 이 접근 방식은 건강 문제 발생 시 트래픽을 재라우팅할 수 있도록 하여 고가용성 요구 사항을 충족합니다.",
        "Other Options": [
            "지연 기반 라우팅은 사용자에게 가장 낮은 지연 시간의 엔드포인트로 안내하지만, 건강 검사나 장애 조치 기능을 제공하지 않습니다.",
            "가중 라우팅은 할당된 가중치에 따라 여러 리소스에 트래픽을 분산할 수 있지만, 건강 모니터링 및 자동 장애 조치 기능이 부족합니다.",
            "지리적 위치 기반 라우팅은 사용자의 지리적 위치에 따라 트래픽을 안내하지만, 건강 검사나 자동 장애 조치의 필요성을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "금융 서비스 회사는 AWS 환경에서 비용을 줄이려고 합니다. SysOps 관리자는 현재 EC2 인스턴스 사용량을 평가하고 성능에 영향을 주지 않으면서 EC2 스팟 인스턴스로 전환할 수 있는 워크로드를 식별하는 임무를 맡았습니다.",
        "Question": "SysOps 관리자가 EC2 스팟 인스턴스에 적합한 워크로드를 식별하기 위해 고려해야 할 전략은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "비용 절감을 극대화하기 위해 모든 워크로드를 EC2 스팟 인스턴스로 마이그레이션합니다.",
            "2": "스팟 인스턴스가 중단될 경우 자동으로 교체하도록 Auto Scaling 그룹을 구성합니다.",
            "3": "중단을 견딜 수 있고 빠르게 재시작할 수 있는 워크로드를 식별합니다.",
            "4": "일관된 사용 패턴을 결정하기 위해 시간에 따른 평균 CPU 사용량을 평가합니다.",
            "5": "각 워크로드에 대해 온디맨드와 스팟 인스턴스 간의 비용 차이를 분석합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "중단을 견딜 수 있고 빠르게 재시작할 수 있는 워크로드를 식별합니다.",
            "일관된 사용 패턴을 결정하기 위해 시간에 따른 평균 CPU 사용량을 평가합니다."
        ],
        "Explanation": "중단을 견딜 수 있는 워크로드는 EC2 스팟 인스턴스에 이상적인 후보로, 사용자에게 큰 영향을 주지 않고 일시 중지 및 재개할 수 있습니다. 또한 CPU 사용량을 평가하면 가변 사용 패턴을 가진 워크로드를 식별하는 데 도움이 되어, 용량이 낮은 비용으로 제공될 때 스팟 인스턴스에 적합하게 만듭니다.",
        "Other Options": [
            "이 옵션은 너무 광범위합니다. 비용 평가가 중요하지만, 개별 워크로드의 중단 내성을 기반으로 스팟 인스턴스에 적합성을 구체적으로 다루지 않습니다.",
            "Auto Scaling 그룹을 구성하는 것은 중단 관리를 도와줄 수 있지만, 이 접근 방식만으로는 워크로드를 스팟 인스턴스에 적합하게 만들지 않으며, 단지 중단 시 인스턴스를 처리하는 방법을 제공할 뿐입니다.",
            "모든 워크로드를 EC2 스팟 인스턴스로 마이그레이션하는 것은 건전한 전략이 아닙니다. 모든 워크로드가 중단 가능성 때문에 스팟 가격에 적합하지 않으며, 이는 성능 문제로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "귀사는 규제 요구 사항 준수를 보장하기 위해 데이터 분류 체계를 구현했습니다. 이 분류 체계를 모든 AWS 리소스에 적용해야 하며, 특히 Amazon S3에 저장된 민감한 데이터에 중점을 두어야 합니다. 귀하의 접근 방식이 효과적이고 업계 표준을 준수하는지 확인하고자 합니다.",
        "Question": "데이터 분류 체계를 적용하기 위해 어떤 조치를 취할 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "S3 버킷에 대한 모든 접근 이벤트를 캡처하는 중앙 집중식 로깅 메커니즘을 생성하고 데이터 분류 체계 준수를 위해 로그를 수동으로 검토합니다.",
            "2": "모든 S3 버킷을 수동으로 검토하여 데이터 분류 체계에 부합하는지 확인하고 그에 따라 업데이트합니다.",
            "3": "S3 버킷이 데이터 분류 체계에 부합하는지 평가하고 비준수가 감지될 때 경고하는 AWS Config 규칙을 구현합니다.",
            "4": "AWS Lambda 함수를 사용하여 분류 수준에 따라 S3 객체를 자동으로 암호화하여 모든 민감한 데이터가 저장 시 암호화되도록 합니다.",
            "5": "Amazon S3 객체 태깅을 활용하여 객체를 분류 수준에 따라 분류합니다. 이러한 태그를 기반으로 접근을 제한하는 IAM 정책을 적용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3 객체 태깅을 활용하여 객체를 분류 수준에 따라 분류합니다. 이러한 태그를 기반으로 접근을 제한하는 IAM 정책을 적용합니다.",
            "S3 버킷이 데이터 분류 체계에 부합하는지 평가하고 비준수가 감지될 때 경고하는 AWS Config 규칙을 구현합니다."
        ],
        "Explanation": "Amazon S3 객체 태깅을 사용하면 객체를 분류에 따라 분류하고 접근을 관리할 수 있으며, AWS Config 규칙은 데이터 분류 체계 준수를 지속적으로 모니터링하고 비준수에 대한 경고를 제공합니다.",
        "Other Options": [
            "S3 버킷의 수동 검토를 예약하는 것은 확장 가능한 솔루션이 아니며, 분류 체계의 실시간 모니터링이나 집행을 제공하지 않습니다.",
            "암호화를 위한 AWS Lambda 사용은 좋은 관행이지만, 분류 체계를 직접 집행하지 않으며, 단순히 암호화 계층을 추가할 뿐입니다.",
            "중앙 집중식 로깅 메커니즘을 생성하는 것은 접근 모니터링에 도움이 되지만, 데이터 분류 체계 준수를 적극적으로 집행하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "Elastic Load Balancer (ELB) 뒤에 호스팅된 EC2 인스턴스에서 웹 애플리케이션이 간헐적인 다운타임을 겪고 있습니다. SysOps 관리자으로서, ELB가 EC2 인스턴스의 상태를 정확하게 판단하여 트래픽이 건강한 인스턴스에만 라우팅되도록 해야 합니다.",
        "Question": "다음 구성 중 ELB 헬스 체크가 EC2 인스턴스의 상태를 정확하게 평가하도록 보장하는 것은 무엇입니까?",
        "Options": {
            "1": "ELB 헬스 체크를 기본 HTTP 프로토콜을 사용하도록 구성하고 핑 경로를 애플리케이션의 루트로 설정합니다.",
            "2": "ELB 헬스 체크를 애플리케이션이 수신 대기하는 사용자 지정 포트에서 TCP 프로토콜을 사용하도록 설정하고 건강한 임계값을 5로 설정합니다.",
            "3": "애플리케이션이 건강할 때 200 OK 응답을 반환하는 특정 경로를 가진 HTTP 헬스 체크를 사용하고 타임아웃을 10초로 설정합니다.",
            "4": "HTTPS 프로토콜을 사용하여 헬스 체크를 구현하고 비정상 임계값을 3으로 설정하여 더 빠른 실패 감지를 허용합니다."
        },
        "Correct Answer": "애플리케이션이 건강할 때 200 OK 응답을 반환하는 특정 경로를 가진 HTTP 헬스 체크를 사용하고 타임아웃을 10초로 설정합니다.",
        "Explanation": "특정 경로를 가진 HTTP 헬스 체크를 사용하면 애플리케이션이 제대로 작동하고 있음을 나타내는 200 OK 응답을 신뢰성 있게 반환합니다. 적절한 타임아웃을 설정하면 ELB가 일시적인 문제로 인해 인스턴스를 조기에 비정상으로 표시하지 않도록 보장합니다.",
        "Other Options": [
            "ELB 헬스 체크를 기본 HTTP 프로토콜을 사용하도록 구성하고 핑 경로를 애플리케이션의 루트로 설정하는 것은 루트 경로가 일관되게 200 OK 응답을 반환하지 않으면 애플리케이션의 상태를 정확하게 평가하지 못할 수 있습니다.",
            "ELB 헬스 체크를 사용자 지정 포트에서 TCP 프로토콜을 사용하도록 설정하는 것은 애플리케이션 수준의 상태를 판단할 수 없으며, 네트워크 연결성만 확인할 뿐입니다.",
            "HTTPS 프로토콜을 사용하여 헬스 체크를 구현하고 낮은 비정상 임계값을 설정하면 일시적인 문제로 인해 인스턴스가 너무 빨리 비정상으로 표시될 수 있어 애플리케이션의 전체 가용성에 영향을 미칠 수 있습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "한 회사가 TCP를 사용하여 프론트엔드와 백엔드 연결을 모두 처리하는 Elastic Load Balancer (ELB) 뒤에서 웹 애플리케이션을 운영하고 있습니다. 개발 팀은 ELB가 백엔드 인스턴스에 대한 수신 요청의 원본 IP 주소를 제공하여 더 나은 로깅 및 보안 목적을 달성할 수 있도록 요청했습니다. 이 기능을 위해 Proxy Protocol을 활성화하는 것을 고려하고 있습니다.",
        "Question": "이 시나리오에서 Elastic Load Balancer에서 Proxy Protocol을 활성화하는 주요 이점은 무엇입니까?",
        "Options": {
            "1": "클라이언트와 백엔드 인스턴스 간의 트래픽을 암호화하여 보안을 강화합니다.",
            "2": "원본 IP 주소와 포트 정보를 포함하는 사람이 읽을 수 있는 헤더를 요청에 추가합니다.",
            "3": "ELB가 백엔드 인스턴스에 대해 더 빈번한 간격으로 헬스 체크를 수행할 수 있도록 합니다.",
            "4": "백엔드 인스턴스에 요청 데이터를 전송하기 전에 압축하여 ELB의 처리량을 증가시킵니다."
        },
        "Correct Answer": "원본 IP 주소와 포트 정보를 포함하는 사람이 읽을 수 있는 헤더를 요청에 추가합니다.",
        "Explanation": "Proxy Protocol을 활성화하면 Elastic Load Balancer가 원본 클라이언트의 IP 주소와 포트를 포함한 추가 연결 정보를 백엔드 인스턴스에 전송할 수 있습니다. 이는 요청 생애 주기 동안 클라이언트의 신원을 유지하는 데 필수적입니다.",
        "Other Options": [
            "이 옵션은 Proxy Protocol이 트래픽을 암호화하는 것과 관련이 없으므로 잘못된 것입니다; 단순히 요청 헤더에 연결 정보를 추가합니다.",
            "이 옵션은 Proxy Protocol이 데이터를 압축하여 처리량을 증가시킨다고 제안하므로 잘못된 것입니다; Proxy Protocol은 연결 정보를 전달하는 데 중점을 둡니다.",
            "이 옵션은 Proxy Protocol이 헬스 체크 빈도에 영향을 미치지 않으므로 잘못된 것입니다; 헬스 체크는 별도로 구성되며 Proxy Protocol 설정과는 독립적입니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "한 회사가 VPC 내에서 여러 Amazon EC2 인스턴스에서 접근할 수 있는 공유 파일 시스템을 필요로 하는 애플리케이션을 배포하고 있습니다. 그들은 확장성과 가용성 기능 때문에 Amazon EFS를 사용하기로 결정했습니다.",
        "Question": "Amazon EFS를 EC2 인스턴스와 함께 사용할 때 다음 중 어떤 진술이 사실입니까?",
        "Options": {
            "1": "Amazon EFS는 파일 시스템을 마운트하기 위해 EC2 인스턴스가 동일한 가용 영역에 있어야 합니다.",
            "2": "Amazon EFS는 여러 EC2 인스턴스에서 동시에 마운트할 수 있습니다.",
            "3": "Amazon EFS는 파일 시스템 접근을 위해 NFSv4와 NFSv3 프로토콜을 모두 지원합니다.",
            "4": "Amazon EFS는 한 번에 하나의 EC2 인스턴스에서만 마운트할 수 있습니다."
        },
        "Correct Answer": "Amazon EFS는 여러 EC2 인스턴스에서 동시에 마운트할 수 있습니다.",
        "Explanation": "Amazon EFS는 여러 EC2 인스턴스가 동일한 파일 시스템을 동시에 마운트할 수 있도록 하여 EFS에 저장된 파일에 대한 공유 접근을 가능하게 하며, 데이터에 대한 동시 접근이 필요한 애플리케이션에 적합합니다.",
        "Other Options": [
            "이것은 잘못된 것입니다. Amazon EFS는 동시에 여러 EC2 인스턴스에 마운트할 수 있으며, 하나만이 아닙니다.",
            "이것은 잘못된 것입니다. Amazon EFS는 NFS 버전 4.0 및 4.1 프로토콜만 지원하며, NFSv3는 지원하지 않습니다.",
            "이것은 잘못된 것입니다. Amazon EFS는 여러 가용 영역에서 접근할 수 있도록 설계되어 있어, 서로 다른 영역의 인스턴스가 동일한 파일 시스템을 마운트할 수 있습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "SysOps 관리자는 AWS에 호스팅된 웹 애플리케이션의 네트워킹 기능과 연결성을 개선하는 임무를 맡고 있습니다. 현재 애플리케이션은 단일 VPC 내에서 Amazon EC2 인스턴스를 사용하고 있으며, 피크 트래픽 시간 동안 지연 및 가용성에 대한 우려가 있습니다.",
        "Question": "관리자가 네트워킹 및 연결성을 향상시키기 위해 구현할 수 있는 다음 옵션의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "개선된 DNS 해석을 위해 Amazon Route 53 헬스 체크 및 장애 조치 라우팅 정책을 구현합니다.",
            "2": "들어오는 트래픽을 여러 EC2 인스턴스에 분산하기 위해 Elastic Load Balancer를 배포합니다.",
            "3": "온프레미스 데이터 센터에서 전용 네트워크 연결을 설정하기 위해 AWS Direct Connect를 설정합니다.",
            "4": "서로 다른 지역의 두 VPC 간의 통신을 허용하기 위해 VPC 피어링 연결을 생성합니다.",
            "5": "애플리케이션의 가용성과 성능을 개선하기 위해 AWS Global Accelerator를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "애플리케이션의 가용성과 성능을 개선하기 위해 AWS Global Accelerator를 구성합니다.",
            "개선된 DNS 해석을 위해 Amazon Route 53 헬스 체크 및 장애 조치 라우팅 정책을 구현합니다."
        ],
        "Explanation": "AWS Global Accelerator를 구현하면 애플리케이션으로 가는 경로를 최적화하여 지연을 줄이고 AWS 글로벌 네트워크를 통해 가용성을 높입니다. Route 53의 헬스 체크 및 장애 조치 라우팅과 결합하여 트래픽이 효율적으로 라우팅되고 중단에 대한 회복력을 제공합니다.",
        "Other Options": [
            "AWS Direct Connect는 주로 온프레미스 데이터 센터와 AWS 간의 전용 네트워크 연결을 설정하는 데 사용되며, 클라우드에만 호스팅된 웹 애플리케이션의 연결성을 직접적으로 향상시키지 않을 수 있습니다.",
            "Elastic Load Balancer를 배포하면 EC2 인스턴스 간의 트래픽 분산이 개선되지만, Global Accelerator와 Route 53만큼 효과적으로 네트워킹 기능이나 연결성을 넓은 범위에서 향상시키지 않습니다.",
            "VPC 피어링 연결을 생성하면 두 VPC 간의 통신을 허용하지만 단일 VPC에 호스팅된 애플리케이션의 지연이나 가용성 문제를 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 회사가 자원 전반에 걸쳐 준수를 모니터링하기 위해 AWS Config를 구현했습니다. SysOps 관리자는 특정 준수 위반이 발생할 때 자동으로 수정 작업을 수행하고자 합니다. 관리자는 이를 위해 AWS Systems Manager Automation 런북을 사용할 계획입니다.",
        "Question": "SysOps 관리자가 AWS Config 규칙에 따라 준수 위반의 수정을 자동화하기 위해 취해야 할 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Config를 AWS Systems Manager State Manager와 통합하여 리소스 구성에 대한 변경 사항을 자동으로 적용합니다.",
            "2": "AWS Config에서 감지된 준수 위반에 대해 팀에 알리기 위해 Amazon SNS 주제를 설정합니다.",
            "3": "각 규칙에 필요한 수정 작업을 설명하는 AWS Systems Manager Automation 런북을 정의합니다.",
            "4": "필요한 수정 단계를 수행하고 AWS Config로 트리거되는 AWS Lambda 함수를 생성합니다.",
            "5": "AWS Systems Manager Automation 런북을 매일 호출하기 위해 CloudWatch Events 규칙을 예약합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "각 규칙에 필요한 수정 작업을 설명하는 AWS Systems Manager Automation 런북을 정의합니다.",
            "필요한 수정 단계를 수행하고 AWS Config로 트리거되는 AWS Lambda 함수를 생성합니다."
        ],
        "Explanation": "AWS Systems Manager Automation 런북을 정의하면 관리자가 준수 위반이 감지될 때 수정 작업에 대한 세부 단계를 지정할 수 있습니다. 또한 AWS Lambda 함수를 생성하면 AWS Config 위반에 대한 응답으로 이러한 수정 작업을 프로그래밍 방식으로 실행할 수 있는 방법을 제공합니다.",
        "Other Options": [
            "Amazon SNS 주제를 설정하는 것은 위반에 대해 팀에 알리기만 할 뿐, 수정을 자동화하지 않으므로 이 작업에 효과적이지 않습니다.",
            "AWS Config를 AWS Systems Manager State Manager와 통합하는 것은 준수 위반에 대한 특정 수정 작업을 실행하는 것과는 관련이 없습니다.",
            "CloudWatch Events 규칙을 예약하여 AWS Systems Manager Automation 런북을 매일 호출하는 것은 AWS Config 위반에 따라 실시간 수정을 필요로 하는 요구를 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 API 키 및 데이터베이스 자격 증명과 같은 민감한 정보를 안전하게 관리하고 접근할 필요가 있습니다. 이들은 보안 모범 사례를 준수하면서 이러한 비밀을 저장하고 검색할 수 있도록 도와줄 다양한 AWS 서비스를 평가하고 있습니다. SysOps 관리자 역할로서, 이 목적에 가장 적합한 AWS 서비스를 추천해야 합니다.",
        "Question": "비밀을 안전하게 저장하기 위해 관리자가 사용해야 할 AWS 서비스는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Systems Manager Parameter Store는 구성 데이터와 비밀을 저장하고 검색하는 데 사용됩니다.",
            "2": "AWS S3는 서버 측 암호화를 사용하여 비밀을 일반 텍스트 파일로 저장합니다.",
            "3": "AWS CloudFormation은 스택 템플릿에서 비밀을 관리하고 저장하는 데 사용됩니다.",
            "4": "AWS Secrets Manager는 비밀의 자동 회전 및 세분화된 접근 제어를 제공합니다.",
            "5": "AWS IAM은 비밀 접근과 관련된 사용자 권한을 관리하는 데 사용됩니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Secrets Manager는 비밀의 자동 회전 및 세분화된 접근 제어를 제공합니다.",
            "AWS Systems Manager Parameter Store는 구성 데이터와 비밀을 저장하고 검색하는 데 사용됩니다."
        ],
        "Explanation": "AWS Secrets Manager는 자동 회전을 허용하여 시간이 지남에 따라 보안을 유지하는 데 중요하며, 세분화된 접근 제어를 제공합니다. 마찬가지로, AWS Systems Manager Parameter Store는 매개변수와 비밀을 안전하게 저장하도록 설계되어 민감한 데이터를 관리하는 데 적합합니다.",
        "Other Options": [
            "AWS S3는 비밀 관리를 위해 설계되지 않았습니다. 일반 텍스트 파일을 저장하는 것은 서버 측 암호화가 있더라도 상당한 보안 위험을 초래합니다. 자동 회전이나 비밀에 맞춘 접근 제어 기능을 제공하지 않기 때문입니다.",
            "AWS CloudFormation은 주로 리소스 관리 도구이며 비밀을 안전하게 저장하는 기능을 제공하지 않습니다. 보안 문제로 인해 비밀을 스택 템플릿에 하드코딩해서는 안 됩니다.",
            "AWS IAM은 AWS 리소스에 대한 권한 및 접근을 관리하는 데 사용되지만 비밀을 저장하지는 않습니다. 비밀에 접근할 수 있는 사람을 제어하는 데 필수적이지만, 비밀을 저장하는 솔루션을 제공하지는 않습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 회사가 Amazon CloudFront를 통해 정적 웹사이트 콘텐츠를 제공하고자 하며, 오직 CloudFront만이 웹사이트 콘텐츠를 저장하는 S3 버킷에 접근할 수 있도록 하고자 합니다. 이 회사는 CloudFront의 S3 오리진에 대해 Origin Access Control (OAC)을 활성화했습니다.",
        "Question": "OAC를 사용하여 S3 버킷 정책을 구성하여 접근을 CloudFront로만 제한하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "OAC를 사용하여 CloudFront에 대한 접근을 허용하고 특정 IP 주소에서의 접근을 허용하는 버킷 정책을 구현합니다.",
            "2": "CloudFront에 대한 접근을 허용하고 AWS 계정의 모든 IAM 사용자에게 버킷 접근을 부여하는 S3 버킷 정책을 설정합니다.",
            "3": "S3 버킷 정책을 구성하여 버킷에 대한 공개 접근을 허용하지만 사용자 에이전트 헤더에 따라 접근을 제한합니다.",
            "4": "CloudFront 오리진 접근 신원 (OAI)에 대한 접근을 허용하고 모든 다른 요청을 거부하는 S3 버킷 정책을 생성합니다."
        },
        "Correct Answer": "CloudFront 오리진 접근 신원 (OAI)에 대한 접근을 허용하고 모든 다른 요청을 거부하는 S3 버킷 정책을 생성합니다.",
        "Explanation": "가장 좋은 방법은 CloudFront OAI에 대한 접근을 명시적으로 허용하는 S3 버킷 정책을 만드는 것입니다. 이렇게 하면 오직 CloudFront만이 S3 버킷에서 객체를 검색할 수 있으며, 모든 다른 요청은 거부되어 S3 버킷 콘텐츠가 안전하게 보호됩니다.",
        "Other Options": [
            "이 옵션은 S3 버킷에 대한 공개 접근을 허용하는 것이 CloudFront에 대한 접근을 독점적으로 제한하는 목적에 반하기 때문에 잘못된 것입니다.",
            "이 옵션은 AWS 계정의 모든 IAM 사용자에게 접근을 부여하는 것이 CloudFront에 대한 접근을 제한하지 않기 때문에 잘못된 것입니다. 이는 버킷의 콘텐츠를 무단 사용자에게 노출할 수 있습니다.",
            "이 옵션은 특정 IP 주소에서의 접근을 허용하는 것이 OAC의 사용을 강제하지 않기 때문에 잘못된 것입니다. OAC는 오직 CloudFront에 대한 접근을 제한하는 데 필요합니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 회사가 온프레미스 데이터 센터와 VPC에 호스팅된 AWS 리소스 간의 간헐적인 네트워크 연결 문제를 겪고 있습니다. 운영 팀은 애플리케이션에 대한 신뢰할 수 있는 접근을 보장하기 위해 연결 문제의 근본 원인을 파악해야 합니다.",
        "Question": "운영 팀이 네트워크 연결 문제를 해결하기 위해 가장 먼저 취해야 할 단계는 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 무단 변경에 대한 API 호출 로그를 검토합니다.",
            "2": "AWS Direct Connect 연결의 상태를 검사합니다.",
            "3": "VPC 내 리소스와 관련된 보안 그룹 규칙을 확인합니다.",
            "4": "VPC 서브넷에 대한 라우트 테이블 구성을 확인합니다."
        },
        "Correct Answer": "VPC 내 리소스와 관련된 보안 그룹 규칙을 확인합니다.",
        "Explanation": "네트워크 연결 문제를 해결하는 첫 번째 단계는 보안 그룹 규칙을 확인하는 것입니다. 보안 그룹은 AWS 리소스에 대한 인바운드 및 아웃바운드 트래픽을 제어합니다. 잘못 구성된 규칙은 연결 문제를 초래할 수 있으므로 필요한 트래픽을 허용하는지 확인하는 것이 중요합니다.",
        "Other Options": [
            "라우트 테이블 구성을 확인하는 것도 중요하지만, 보안 그룹을 확인한 후에 수행해야 합니다. 보안 그룹은 라우트가 올바르게 설정되어 있어도 트래픽을 차단할 수 있습니다.",
            "AWS CloudTrail은 API 호출을 감사하고 추적하는 데 유용하지만 네트워크 연결 문제에 대한 즉각적인 통찰력을 제공하지는 않습니다.",
            "AWS Direct Connect 연결의 상태를 검사하는 것은 회사가 Direct Connect를 사용하는 경우에만 관련이 있습니다. 그렇지 않으면 연결 문제의 근본 원인을 해결하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 매일 오전 2시 UTC에 Amazon RDS 인스턴스의 백업을 자동화하고자 합니다. 시스템 관리자는 수동 개입 없이 이 백업 프로세스를 트리거하는 솔루션을 만들어야 합니다.",
        "Question": "Amazon RDS 인스턴스의 일일 백업을 자동화하기 위한 요구 사항을 충족하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Lambda 함수를 트리거하여 매일 오전 2시 UTC에 RDS 인스턴스의 백업을 시작하는 Amazon EventBridge 규칙을 생성합니다.",
            "2": "AWS Systems Manager를 사용하여 매일 오전 2시 UTC에 RDS 인스턴스 백업을 트리거하는 유지 관리 창을 생성합니다.",
            "3": "AWS CloudFormation 템플릿을 사용하여 매일 오전 2시 UTC에 RDS 스냅샷 생성을 예약합니다.",
            "4": "EC2 인스턴스에서 cron 작업을 설정하여 매일 오전 2시 UTC에 RDS 인스턴스의 스냅샷을 생성하기 위해 RDS API를 호출합니다."
        },
        "Correct Answer": "AWS Lambda 함수를 트리거하여 매일 오전 2시 UTC에 RDS 인스턴스의 백업을 시작하는 Amazon EventBridge 규칙을 생성합니다.",
        "Explanation": "Amazon EventBridge 규칙을 사용하여 AWS Lambda 함수를 트리거하는 것은 백업 프로세스를 자동화하는 가장 효율적인 방법입니다. 이 솔루션은 서버리스 아키텍처를 허용하며 작업 예약을 위해 EC2 인스턴스나 다른 리소스를 관리할 필요가 없습니다.",
        "Other Options": [
            "AWS CloudFormation은 주로 코드로서 인프라를 관리하는 데 사용되며, 백업 생성을 위한 예약 작업을 직접 지원하지 않습니다.",
            "EC2 인스턴스에서 cron 작업을 사용하는 것은 불필요한 복잡성과 관리 오버헤드를 추가하며, 백업 예약을 위해 EC2 인스턴스를 유지 관리해야 합니다.",
            "AWS Systems Manager 유지 관리 창은 운영 작업에 사용되지만, EventBridge와 Lambda가 할 수 있는 방식으로 RDS 인스턴스의 자동 백업을 시작하도록 특별히 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 금융 서비스 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며, 아키텍처가 다운타임 없이 갑작스러운 작업량 증가를 처리할 수 있도록 해야 합니다. 애플리케이션은 서비스 간 데이터 일관성을 유지하면서 독립적인 확장 및 배포를 허용하기 위해 느슨하게 결합되어야 합니다.",
        "Question": "이 요구 사항을 충족하기 위해 SysOps 관리자가 구현해야 할 아키텍처 설계 패턴은 무엇입니까?",
        "Options": {
            "1": "AWS Elastic Beanstalk를 사용하여 밀접하게 결합된 애플리케이션을 배포합니다.",
            "2": "Amazon EC2 인스턴스를 사용하여 모놀리식 애플리케이션 아키텍처를 구현합니다.",
            "3": "데이터베이스 신뢰성을 위해 Amazon RDS Multi-AZ 배포를 배포합니다.",
            "4": "AWS Lambda 함수를 사용하여 Amazon SQS 큐의 이벤트를 처리합니다."
        },
        "Correct Answer": "AWS Lambda 함수를 사용하여 Amazon SQS 큐의 이벤트를 처리합니다.",
        "Explanation": "AWS Lambda 함수는 Amazon SQS의 이벤트에 의해 트리거될 수 있어, 작업량에 따라 자동으로 확장되는 느슨하게 결합된 아키텍처를 허용합니다. 이 설계 패턴은 신뢰성을 높이고 각 구성 요소가 독립적으로 작동할 수 있도록 보장하여 갑작스러운 작업량 변화에 이상적입니다.",
        "Other Options": [
            "모놀리식 애플리케이션 아키텍처는 개별 구성 요소를 독립적으로 확장하는 데 필요한 유연성을 제공하지 않으며, 이는 작업량이 증가할 때 다운타임으로 이어질 수 있습니다.",
            "Amazon RDS Multi-AZ 배포는 데이터베이스 신뢰성을 향상시키지만, 전체 애플리케이션 스택에 걸쳐 느슨하게 결합된 아키텍처의 필요성을 해결하지 않습니다.",
            "AWS Elastic Beanstalk를 사용하여 밀접하게 결합된 애플리케이션을 배포하는 것은 느슨한 결합의 요구 사항에 반하며, 개별 서비스의 독립적인 확장 및 배포를 제한합니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 Amazon Elastic Block Store (EBS)에 의존하는 애플리케이션에서 지연 문제를 겪고 있습니다. 애플리케이션은 EC2 인스턴스에서 실행되며, 팀은 불필요한 비용을 발생시키지 않으면서 EBS 성능을 최적화하고자 합니다.",
        "Question": "팀이 EBS 볼륨의 성능 효율성을 높이기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "EBS 볼륨 유형을 Provisioned IOPS SSD (io1 또는 io2)로 변경합니다.",
            "2": "EBS 볼륨을 Throughput Optimized HDD (st1) 유형으로 수정합니다.",
            "3": "EBS 볼륨의 크기를 최대 허용 한도로 증가시킵니다.",
            "4": "볼륨에 대해 EBS Multi-Attach 기능을 활성화합니다."
        },
        "Correct Answer": "EBS 볼륨 유형을 Provisioned IOPS SSD (io1 또는 io2)로 변경합니다.",
        "Explanation": "EBS 볼륨 유형을 Provisioned IOPS SSD (io1 또는 io2)로 변경하면 높은 일관된 성능을 제공하여 높은 입출력 작업 수(IOPS)를 요구하는 지연에 민감한 애플리케이션에 이상적입니다. 이 조치는 신뢰성을 저하시키지 않으면서 성능 문제를 직접 해결합니다.",
        "Other Options": [
            "EBS 볼륨의 크기를 증가시키는 것은 본질적으로 성능을 향상시키지 않으며, 지연 문제를 해결하지 않고 불필요한 비용을 초래할 수 있습니다.",
            "EBS Multi-Attach를 활성화하는 것은 단일 인스턴스에 연결된 단일 볼륨의 성능을 증가시키지 않으며, 여러 인스턴스가 동일한 볼륨에 접근할 수 있게 하지만, 단일 애플리케이션의 성능 향상에는 적합하지 않습니다.",
            "Throughput Optimized HDD (st1)로 전환하는 것은 낮은 지연 접근이 필요한 애플리케이션에 적합하지 않으며, 이러한 볼륨은 IOPS보다 처리량에 최적화되어 있습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "한 금융 서비스 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있습니다. 그들은 EC2 인스턴스를 사용하여 작업을 실행하고 있으며 비용과 성능을 최적화할 필요가 있습니다. 높은 처리량을 요구하는 애플리케이션의 네트워크 성능을 개선하고 지연 시간을 줄이기 위해 최신 EC2 기능을 활용하고자 합니다.",
        "Question": "다음 옵션 중 동일한 가용 영역 내의 EC2 인스턴스 간에 최상의 네트워크 성능과 낮은 지연 통신을 제공하는 것은 무엇입니까?",
        "Options": {
            "1": "높은 처리량과 낮은 지연을 위해 Elastic Network Adapter (ENA)를 사용하십시오.",
            "2": "최적의 성능을 위해 vCPU 수에 따라 인스턴스 유형을 선택하십시오.",
            "3": "중복성을 높이기 위해 EC2 인스턴스를 서로 다른 가용 영역에 배포하십시오.",
            "4": "애플리케이션의 IOPS를 증가시키기 위해 인스턴스 스토어 볼륨을 활용하십시오."
        },
        "Correct Answer": "높은 처리량과 낮은 지연을 위해 Elastic Network Adapter (ENA)를 사용하십시오.",
        "Explanation": "Elastic Network Adapter (ENA)를 사용하면 인스턴스가 더 높은 대역폭과 낮은 지연을 달성할 수 있으며, 이는 최적의 네트워크 성능을 요구하는 애플리케이션에 필수적입니다. ENA는 또한 고성능 작업 부하에 중요한 향상된 네트워킹과 같은 고급 기능을 지원합니다.",
        "Other Options": [
            "EC2 인스턴스를 서로 다른 가용 영역에 배포하면 가용성과 내결함성을 개선할 수 있지만, 동일한 영역 내의 인스턴스 간의 네트워크 성능이나 지연 시간을 직접적으로 향상시키지는 않습니다.",
            "vCPU 수에 따라 인스턴스 유형을 선택하는 것은 최적의 네트워크 성능을 보장하지 않으며, 네트워크 성능은 ENA와 같은 고급 네트워킹 기능의 사용과 더 밀접하게 관련되어 있습니다.",
            "인스턴스 스토어 볼륨을 활용하면 주로 스토리지의 IOPS를 개선하지만, EC2 인스턴스 간의 통신에 대한 네트워크 성능이나 지연 시간에 직접적인 영향을 미치지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사가 AWS에서 웹 애플리케이션을 운영하고 있으며, 하루 동안 다양한 수준의 트래픽을 경험하고 있습니다. 시스템 관리자는 애플리케이션이 다운타임 없이 갑작스러운 트래픽 급증을 처리할 수 있도록 해야 합니다. 관리자는 높은 트래픽 기간 동안 용량을 증가시키고 낮은 트래픽 기간 동안 비용을 관리할 수 있는 확장 전략을 선택해야 합니다.",
        "Question": "관리자가 성능과 비용을 최적화하기 위해 선택해야 할 확장 전략은 무엇입니까?",
        "Options": {
            "1": "트래픽 증가를 처리하기 위해 더 많은 인스턴스를 추가하여 수평 확장을 구현하십시오.",
            "2": "비용을 효과적으로 관리하기 위해 피크 시간에만 수직 확장을 선택하십시오.",
            "3": "최적의 자원 활용을 보장하기 위해 수평 확장과 수직 확장의 혼합을 구현하십시오.",
            "4": "성능을 개선하기 위해 기존 인스턴스의 크기를 늘리기 위해 수직 확장을 사용하십시오."
        },
        "Correct Answer": "트래픽 증가를 처리하기 위해 더 많은 인스턴스를 추가하여 수평 확장을 구현하십시오.",
        "Explanation": "수평 확장은 클라우드 환경에서 다양한 수준의 트래픽을 관리하는 데 선호되는 방법입니다. 이는 부하를 분산하기 위해 더 많은 인스턴스를 추가할 수 있게 하여, 피크 시간 동안 애플리케이션이 반응성을 유지하도록 보장하며, 비피크 시간 동안 축소할 수 있는 유연성을 제공합니다. 따라서 비용을 최적화할 수 있습니다.",
        "Other Options": [
            "수직 확장은 기존 인스턴스의 자원을 증가시키는 것이며, 이는 다운타임을 초래할 수 있고 수평 확장만큼의 중복성과 유연성을 제공하지 않습니다.",
            "수평 확장과 수직 확장의 혼합은 유익할 수 있지만, 이 접근 방식은 자원 관리의 복잡성을 증가시키고 트래픽 급증 시 신속한 확장과 비용 효율성을 완전히 해결하지 못할 수 있습니다.",
            "피크 시간에만 수직 확장을 하는 것은 트래픽 급증 시 발생할 수 있는 다운타임과 성능 문제를 해결하지 못하며, 이는 단일 인스턴스에 의존하기 때문에 갑작스러운 부하 증가를 처리하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 SysOps 관리자가 Amazon CloudWatch로부터 EC2 인스턴스의 CPU 사용률이 지난 10분 동안 85%를 초과했다는 경고를 받았습니다. 관리자는 문제를 신속하게 진단하고 인스턴스에서 실행 중인 애플리케이션이 성능을 유지하도록 수정 조치를 취해야 합니다.",
        "Question": "SysOps 관리자가 높은 CPU 사용률 경고를 해결하기 위해 FIRST로 해야 할 일은 무엇입니까?",
        "Options": {
            "1": "작업 부하를 수용하기 위해 EC2 인스턴스를 더 큰 인스턴스 유형으로 확장하십시오.",
            "2": "CPU 사용률 외에 디스크 I/O를 모니터링하기 위해 CloudWatch 경고를 추가하십시오.",
            "3": "애플리케이션 로그를 분석하여 장기 실행 프로세스를 식별하십시오.",
            "4": "잠재적인 소프트웨어 문제를 해결하기 위해 EC2 인스턴스를 재부팅하십시오."
        },
        "Correct Answer": "애플리케이션 로그를 분석하여 장기 실행 프로세스를 식별하십시오.",
        "Explanation": "높은 CPU 사용률 문제를 해결하는 첫 번째 단계는 애플리케이션 로그를 분석하여 과도한 자원을 소비하는 특정 프로세스나 기능이 있는지 확인하는 것입니다. 이를 통해 문제가 애플리케이션 코드 때문인지, 인스턴스를 확장해야 하는지 여부를 파악할 수 있습니다. 로그에서 얻은 통찰력을 바탕으로 수정 조치를 취하는 것이 더 효과적인 해결책으로 이어질 수 있습니다.",
        "Other Options": [
            "EC2 인스턴스를 재부팅하면 문제를 일시적으로 해결할 수 있지만, 높은 CPU 사용률의 근본 원인을 해결하지는 않습니다. 이러한 조치를 취하기 전에 스파이크의 원인을 이해하는 것이 중요합니다.",
            "EC2 인스턴스를 확장하는 것은 장기적인 해결책이 될 수 있지만, 먼저 문제를 진단하는 것이 중요합니다. 문제가 비효율적인 애플리케이션 코드 때문이라면, 확장은 최적화의 필요성을 미루는 것일 수 있습니다.",
            "디스크 I/O에 대한 CloudWatch 경고를 추가하는 것은 추가 모니터링을 제공할 수 있지만, 높은 CPU 사용률의 즉각적인 문제를 해결하지는 않습니다. 관리자는 모니터링 범위를 확장하기 전에 현재 경고를 이해하고 해결하는 데 집중해야 합니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "한 회사가 Amazon Elastic Container Service (ECS)를 사용하여 마이크로서비스 기반 애플리케이션을 AWS로 마이그레이션할 계획입니다. 이 애플리케이션은 수요에 따라 확장되도록 설계되었으며, Docker 컨테이너의 원활한 오케스트레이션이 필요합니다. SysOps 관리자는 배포가 고가용성과 내결함성 요구 사항을 충족하는지 확인하고자 합니다.",
        "Question": "SysOps 관리자가 ECS 애플리케이션의 고가용성을 보장하기 위해 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "단일 VPC 내에서 여러 가용 영역에 걸쳐 ECS 서비스를 배포합니다.",
            "2": "지연 시간을 최소화하기 위해 단일 가용 영역의 EC2 인스턴스를 사용합니다.",
            "3": "여러 클러스터에 걸쳐 단일 작업 정의를 사용하도록 ECS 서비스를 구성합니다.",
            "4": "비용을 줄이기 위해 모든 컨테이너를 단일 EC2 인스턴스에서 실행합니다."
        },
        "Correct Answer": "단일 VPC 내에서 여러 가용 영역에 걸쳐 ECS 서비스를 배포합니다.",
        "Explanation": "여러 가용 영역에 걸쳐 ECS 서비스를 배포하면 하나의 가용 영역에서 장애가 발생하더라도 애플리케이션이 계속 사용할 수 있어 내결함성과 고가용성이 향상됩니다.",
        "Other Options": [
            "단일 가용 영역의 EC2 인스턴스를 사용하는 것은 해당 영역에서 장애가 발생할 경우 모든 인스턴스에 영향을 미치므로 다운타임의 위험을 증가시킵니다.",
            "모든 컨테이너를 단일 EC2 인스턴스에서 실행하면 비용을 줄일 수 있지만 고가용성에 대한 상당한 위험을 초래합니다. 해당 인스턴스가 실패하면 전체 애플리케이션이 중단됩니다.",
            "여러 클러스터에 걸쳐 단일 작업 정의를 사용하도록 ECS 서비스를 구성하는 것은 본질적으로 고가용성을 제공하지 않습니다. 단일 클러스터 내에서 여러 가용 영역에 작업을 분산하는 것이 더 효과적입니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "SysOps 관리자는 Amazon S3 버킷에 저장된 민감한 데이터가 무단 접근으로부터 보호되도록 해야 합니다. 관리자는 데이터가 저장 중일 때 보안을 유지하고 사용자 역할에 따라 접근 제어를 허용하는 솔루션을 구현하고자 합니다.",
        "Question": "S3 버킷을 보호하기 위한 이러한 요구 사항을 충족하는 접근 방식은 무엇입니까?",
        "Options": {
            "1": "S3에 대한 VPC 엔드포인트를 구현하고 VPC 내의 인스턴스에 버킷 접근을 제한합니다.",
            "2": "S3 버킷 로깅을 구성하고 모든 접근 요청에 대한 알림을 설정합니다.",
            "3": "S3 버킷에 대한 서버 측 암호화를 활성화하고 접근 제어를 위한 버킷 정책을 구성합니다.",
            "4": "사용자 태그에 따라 S3 버킷에 대한 접근을 부여하는 IAM 정책을 사용하고 버전 관리를 활성화합니다."
        },
        "Correct Answer": "S3 버킷에 대한 서버 측 암호화를 활성화하고 접근 제어를 위한 버킷 정책을 구성합니다.",
        "Explanation": "서버 측 암호화를 활성화하면 데이터가 저장 중일 때 암호화되며, 버킷 정책을 구성하면 관리자가 사용자 역할에 따라 접근을 제어할 수 있어 데이터 보호와 접근 제어 두 가지 요구 사항을 모두 충족합니다.",
        "Other Options": [
            "사용자 태그에 기반한 IAM 정책을 사용하는 것은 저장 중인 데이터가 암호화되도록 보장하지 않으며, 버전 관리는 보안 기능이 아닙니다.",
            "VPC 엔드포인트를 구현하면 VPC 내에서 S3 버킷에 대한 접근을 제한하지만 저장 중인 데이터에 대한 암호화를 제공하지 않습니다.",
            "S3 버킷 로깅을 구성하고 알림을 설정하면 접근을 모니터링하는 데 도움이 되지만, 저장 중인 데이터를 효과적으로 보호하거나 접근을 제어하지는 않습니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "SysOps 관리자는 AWS에 호스팅된 웹 애플리케이션의 성능을 최적화해야 합니다. 이 애플리케이션은 Amazon CloudFront를 콘텐츠 전송 네트워크(CDN)로 사용하여 사용자에게 더 가까운 곳에서 콘텐츠를 캐시합니다. 그러나 관리자는 낮은 캐시 적중률을 발견했으며, 이는 애플리케이션 성능에 영향을 미치고 있습니다. 목표는 원본 서버가 아닌 CloudFront 엣지 캐시에서 제공되는 요청 수를 최대화하는 것입니다.",
        "Question": "CloudFront 배포의 캐시 적중률을 개선하기 위해 관리자가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "원본에서 불필요한 요청 헤더를 제거합니다.",
            "2": "모든 미디어 콘텐츠에 대해 압축을 활성화합니다.",
            "3": "객체의 TTL(유효 기간)을 증가시킵니다.",
            "4": "배포를 구성하여 모든 쿼리 문자열 매개변수를 전달합니다."
        },
        "Correct Answer": "객체의 TTL(유효 기간)을 증가시킵니다.",
        "Explanation": "객체의 TTL을 증가시키면 CloudFront가 콘텐츠를 더 오랜 기간 동안 캐시할 수 있어 원본 서버로 전송되는 요청 수를 줄이고 캐시 적중률을 개선합니다.",
        "Other Options": [
            "모든 쿼리 문자열 매개변수를 전달하면 매개변수 조합마다 고유한 캐싱이 발생하여 더 많은 캐시 가능한 객체가 생성되어 캐시 적중률이 낮아질 수 있습니다.",
            "모든 미디어 콘텐츠에 대해 압축을 활성화하는 것은 캐시 적중률에 직접적인 영향을 미치지 않습니다. 전송 시간을 개선할 수는 있지만 원본에 대한 요청 수를 줄이지는 않습니다.",
            "불필요한 요청 헤더를 제거하면 고유한 캐시 항목 수를 줄이는 데 도움이 될 수 있지만, TTL을 증가시키는 것만큼 효과적으로 캐시 적중률을 개선하지는 않습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 회사가 AWS Storage Gateway를 사용하여 하이브리드 클라우드 스토리지 솔루션을 구현할 계획입니다. 그들은 Amazon S3를 주요 데이터 저장소로 사용하면서 자주 접근하는 데이터를 로컬에 저장하여 애플리케이션의 저지연 접근을 보장하고자 합니다. 그들은 요구 사항을 충족하기 위해 Storage Gateway의 다양한 구성을 평가하고 있습니다.",
        "Question": "회사가 스토리지 전략을 최적화하기 위해 선택해야 할 두 가지 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "전체 데이터 세트에 대한 저지연 접근을 위해 Stored Volume Gateway를 사용합니다.",
            "2": "온프레미스 스토리지 요구 사항을 최소화하기 위해 Cached Volume Gateway를 사용합니다.",
            "3": "자주 접근하는 데이터에 대한 저지연 접근을 위해 Cached Volume Gateway를 사용합니다.",
            "4": "전체 데이터 세트에 대한 접근을 위해 Cached Volume Gateway를 사용합니다.",
            "5": "자주 접근하는 데이터에 대해서만 Stored Volume Gateway를 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "자주 접근하는 데이터에 대한 저지연 접근을 위해 Cached Volume Gateway를 사용합니다.",
            "전체 데이터 세트에 대한 저지연 접근을 위해 Stored Volume Gateway를 사용합니다."
        ],
        "Explanation": "Cached Volume Gateway는 Amazon S3를 주요 스토리지로 사용하면서 자주 접근하는 데이터를 로컬에 저장하도록 설계되어 저지연 접근을 제공합니다. 반면, Stored Volume Gateway는 전체 데이터 세트에 대한 저지연 접근이 필요한 시나리오에 적합하여 두 가지 옵션 모두 회사의 전략에 최적입니다.",
        "Other Options": [
            "이 옵션은 Cached Volume Gateway가 전체 데이터 세트가 아닌 자주 접근하는 데이터에만 특정화되어 있기 때문에 잘못된 것입니다.",
            "이 옵션은 Stored Volume Gateway가 자주 접근하는 데이터가 아닌 전체 데이터 세트를 위한 것이기 때문에 잘못된 것입니다.",
            "이 옵션은 Cached Volume Gateway가 자주 접근하는 데이터에 가장 적합하며 전체 데이터 세트 접근 요구 사항을 지원하지 않기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 소매 회사가 휴일 세일 동안 트래픽 급증으로 인해 DynamoDB 테이블에 접근할 때 높은 지연 시간을 경험하고 있습니다. 시스템 관리자 역할로서 애플리케이션 아키텍처를 재설계하지 않고 DynamoDB 작업의 성능을 향상시켜야 합니다.",
        "Question": "다음 솔루션 중 어떤 것이 DynamoDB 접근 패턴의 성능을 가장 잘 개선할 수 있습니까?",
        "Options": {
            "1": "Amazon DynamoDB Accelerator (DAX)를 구현하여 자주 접근하는 데이터를 메모리에 캐시합니다.",
            "2": "애플리케이션을 수정하여 DynamoDB 테이블의 읽기 용량 단위를 증가시킵니다.",
            "3": "더 나은 접근 속도를 위해 DynamoDB 테이블의 기본 키 구조를 최적화합니다.",
            "4": "Amazon Elasticache for Redis를 사용하여 DynamoDB 외부에서 데이터 캐싱을 처리합니다."
        },
        "Correct Answer": "Amazon DynamoDB Accelerator (DAX)를 구현하여 자주 접근하는 데이터를 메모리에 캐시합니다.",
        "Explanation": "Amazon DynamoDB Accelerator (DAX)는 DynamoDB를 위한 인메모리 캐싱을 제공하도록 특별히 설계되어 읽기 작업의 지연 시간을 크게 줄이고 초당 수백만 개의 요청을 처리합니다. 이는 애플리케이션 아키텍처 변경 없이 문제를 직접 해결하므로 이 시나리오에서 성능을 개선하는 최선의 옵션입니다.",
        "Other Options": [
            "읽기 용량 단위를 증가시키는 것은 어느 정도 도움이 될 수 있지만 지연 시간 문제를 효과적으로 해결하지 못하며, 상당한 개선을 보장하지 않고 비용이 증가할 수 있습니다.",
            "Amazon Elasticache for Redis를 사용하는 것은 추가 관리와 복잡성을 요구하며, DAX처럼 DynamoDB와 본질적으로 통합되지 않는 외부 캐싱 솔루션입니다.",
            "기본 키 구조를 최적화하면 접근 속도가 향상될 수 있지만 DAX를 구현하는 것만큼의 성능 향상을 제공하지 않으며, 특히 트래픽이 많은 조건에서는 더욱 그렇습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 회사가 인스턴스 간 저지연 통신이 필요한 고성능 컴퓨팅(HPC) 애플리케이션을 AWS에 배포하고 있습니다. SysOps 관리자는 이 애플리케이션의 네트워크 성능을 최적화하기 위해 가장 적합한 배치 전략을 선택해야 합니다.",
        "Question": "SysOps 관리자가 인스턴스가 최적의 저지연 네트워크 성능을 위해 밀접하게 배치되도록 보장하기 위해 선택해야 할 배치 전략은 무엇입니까?",
        "Options": {
            "1": "클러스터 배치 그룹을 사용하여 가용 영역 내에서 인스턴스를 밀접하게 배치합니다.",
            "2": "전용 배치 그룹을 사용하여 물리적 하드웨어에서 인스턴스를 예약합니다.",
            "3": "더 나은 접근 속도를 위해 파티션 배치 그룹을 사용하여 인스턴스를 여러 논리 파티션에 분산합니다.",
            "4": "스프레드 배치 그룹을 사용하여 인스턴스를 서로 다른 기본 하드웨어에 배치합니다."
        },
        "Correct Answer": "클러스터 배치 그룹을 사용하여 가용 영역 내에서 인스턴스를 밀접하게 배치합니다.",
        "Explanation": "HPC 애플리케이션에는 클러스터 배치 그룹을 선택해야 하며, 이는 가용 영역 내에서 인스턴스를 밀접하게 배치하여 노드 간의 긴밀한 통신에 필수적인 저지연 네트워크 성능을 보장합니다.",
        "Other Options": [
            "파티션 배치 그룹을 사용하는 것은 인스턴스를 논리 파티션에 분산시키므로 저지연 통신에 적합하지 않으며, 이는 노드 간의 지연을 초래할 수 있습니다.",
            "스프레드 배치 그룹을 사용하는 것은 서로 다른 하드웨어에 인스턴스를 분산시켜 상관된 실패를 줄이기 위해 설계되었지만 HPC 작업에 필요한 저지연 통신을 최적화하지 않습니다.",
            "전용 배치 그룹을 사용하는 것은 물리적 하드웨어에서 인스턴스를 예약하기 위한 것이며, HPC 애플리케이션의 저지연 요구 사항을 특별히 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 회사가 정기적인 애플리케이션 업데이트와 보안 패치를 요구하는 Amazon EC2 인스턴스의 플릿을 관리하고 있습니다. SysOps 관리자는 다운타임을 최소화하고 회사 정책을 준수하면서 패치 관리 프로세스를 자동화하는 솔루션을 구현해야 합니다.",
        "Question": "SysOps 관리자가 EC2 인스턴스 전반에 걸쳐 패치 관리 프로세스를 자동화하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "AWS Systems Manager Patch Manager를 사용하여 EC2 인스턴스의 패치를 자동화합니다.",
            "2": "모든 EC2 인스턴스에 대해 매주 다운타임 창을 예약하여 패치를 수동으로 적용합니다.",
            "3": "Amazon CloudWatch Events를 활용하여 수동 패치 프로세스를 트리거합니다.",
            "4": "각 EC2 인스턴스에서 패치를 확인하고 적용하는 사용자 정의 스크립트를 생성합니다."
        },
        "Correct Answer": "AWS Systems Manager Patch Manager를 사용하여 EC2 인스턴스의 패치를 자동화합니다.",
        "Explanation": "AWS Systems Manager Patch Manager는 EC2 인스턴스의 패치 프로세스를 자동화하는 중앙 집중식 방법을 제공하여 최신 패치와 업데이트를 준수하도록 보장하며 다운타임을 최소화합니다. 패치 기준선과 자동 패치 적용 일정을 정의할 수 있습니다.",
        "Other Options": [
            "각 EC2 인스턴스에서 사용자 정의 스크립트를 생성하는 것은 상당한 유지 관리가 필요하며 중앙 집중식 제어가 부족하여 Patch Manager와 같은 관리형 서비스를 사용하는 것보다 비효율적입니다.",
            "Amazon CloudWatch Events를 사용하여 수동 패치 프로세스를 트리거하는 것은 패치를 자동화하지 않으며, 수동 개입만 촉진하여 불일치와 관리 오버헤드를 증가시킬 수 있습니다.",
            "수동 패치를 위한 매주 다운타임 창을 예약하는 것은 비효율적이며 비즈니스 운영을 방해할 수 있으며, 이는 인간의 개입에 의존하고 적시에 패치를 보장하는 자동화된 솔루션을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "한 회사의 재무 팀이 AWS 비용과 사용량을 분석하여 절감할 수 있는 영역을 식별하고 있습니다. 그들은 비용 최적화를 위해 분석할 수 있는 상세한 청구 보고서를 자동으로 받기를 원합니다. 회사는 마스터 계정과 여러 회원 계정으로 AWS Organizations를 설정했습니다.",
        "Question": "재무 팀이 조직 구조에 맞는 상세한 AWS 비용 및 사용량 보고서를 받기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "조직의 모든 회원 계정에 직접 전달되도록 비용 및 사용량 보고서를 활성화하여 개별 분석을 수행합니다.",
            "2": "비용 및 사용량 보고서를 조직의 회원 계정 중 하나가 소유한 Amazon S3 버킷에 저장하도록 구성합니다.",
            "3": "AWS Support에 요청하여 비용 및 사용량 보고서를 제3자 청구 관리 도구로 직접 전송하도록 합니다.",
            "4": "비용 및 사용량 보고서를 AWS Organization의 마스터 계정이 소유한 Amazon S3 버킷에 게시하도록 설정합니다."
        },
        "Correct Answer": "비용 및 사용량 보고서를 AWS Organization의 마스터 계정이 소유한 Amazon S3 버킷에 게시하도록 설정합니다.",
        "Explanation": "재무 팀은 비용 및 사용량 보고서를 AWS Organization의 마스터 계정이 소유한 Amazon S3 버킷으로 전달되도록 구성해야 합니다. 이러한 보고서를 수신하기 위한 S3 버킷은 오직 마스터 계정만 소유할 수 있어야 하며, 이는 통합 청구 기능을 준수하도록 보장합니다.",
        "Other Options": [
            "이 옵션은 AWS가 비용 및 사용량 보고서를 수신하는 S3 버킷이 회원 계정이 아닌 마스터 계정에 의해 소유되어야 한다고 요구하기 때문에 잘못되었습니다.",
            "이 옵션은 AWS가 비용 및 사용량 보고서를 회원 계정에 직접 전달하는 것을 허용하지 않기 때문에 실행 가능하지 않습니다; 보고서는 마스터 계정의 버킷으로 전달되어야 합니다.",
            "이 옵션은 AWS가 비용 및 사용량 보고서를 제3자 도구로 직접 전송하는 기능을 제공하지 않기 때문에 잘못되었습니다; 보고서는 마스터 계정이 소유한 S3 버킷에 저장되어야 합니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "데이터 분석 팀이 데이터 로딩 및 언로딩 작업을 위해 Amazon Redshift 클러스터의 네트워크 트래픽을 최적화하려고 합니다. 그들은 모든 COPY 및 UNLOAD 작업이 보안을 강화하고 제어를 향상시키기 위해 Amazon VPC를 통해 라우팅되도록 하고 싶어합니다.",
        "Question": "SysOps 관리자가 Amazon Redshift 클러스터에서 모든 COPY 및 UNLOAD 트래픽이 Amazon VPC를 통해 가도록 보장하기 위해 어떤 기능을 활성화해야 합니까?",
        "Options": {
            "1": "PrivateLink",
            "2": "Direct Connect",
            "3": "Enhanced VPC Routing",
            "4": "VPC Peering"
        },
        "Correct Answer": "Enhanced VPC Routing",
        "Explanation": "Enhanced VPC Routing은 Amazon Redshift 클러스터와 데이터 저장소 간의 모든 COPY 및 UNLOAD 트래픽이 Amazon VPC를 통해 이동하도록 강제합니다. 이는 보안을 강화하고 보안 그룹 및 네트워크 ACL과 같은 표준 VPC 기능을 사용할 수 있게 합니다.",
        "Other Options": [
            "PrivateLink는 서비스를 공개 인터넷에 노출하지 않고 안전하게 연결하는 데 사용되지만, COPY 및 UNLOAD 트래픽이 VPC를 통해 라우팅되도록 보장하지는 않습니다.",
            "VPC Peering은 두 개의 VPC를 비공식적으로 연결할 수 있지만 Amazon Redshift에서 COPY 및 UNLOAD 트래픽을 라우팅하는 것과는 관련이 없습니다.",
            "Direct Connect는 귀하의 시설에서 AWS로의 전용 네트워크 연결을 제공하지만, COPY 및 UNLOAD 트래픽이 VPC를 통해 라우팅되는 것을 제어하지는 않습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "당신은 하이브리드 클라우드 환경을 관리하고 있으며, 일부 리소스는 온프레미스에 호스팅되고 다른 리소스는 AWS에 있습니다. 온프레미스 네트워크에서 DNS 쿼리가 AWS 환경의 리소스 이름을 효율적으로 해결할 수 있도록 해야 합니다. 이 기능을 활성화하기 위해 Amazon Route 53 Resolver를 사용하고자 합니다.",
        "Question": "어떤 구성이 온프레미스 네트워크가 Route 53 Resolver를 사용하여 AWS 리소스에 대한 DNS 쿼리를 해결할 수 있도록 할까요?",
        "Options": {
            "1": "AWS에 VPN 연결을 설정하고 온프레미스 DNS 서버를 구성하여 Route 53 Resolver를 사용하지 않고 AWS DNS 서버로 요청을 전달합니다.",
            "2": "Route 53 Resolver에 인바운드 엔드포인트를 생성하여 온프레미스 DNS 서버의 쿼리를 수락하고 DNS 해석 규칙을 구성합니다.",
            "3": "VPC에서 DNS 서비스를 실행하는 EC2 인스턴스를 배포하고 이를 온프레미스 DNS 쿼리의 포워더로 작동하도록 구성합니다.",
            "4": "AWS 리소스에 대해 Route 53 공용 호스팅 영역을 사용하고 온프레미스 DNS 서버를 호스팅 영역의 공용 IP 주소로 지정합니다."
        },
        "Correct Answer": "Route 53 Resolver에 인바운드 엔드포인트를 생성하여 온프레미스 DNS 서버의 쿼리를 수락하고 DNS 해석 규칙을 구성합니다.",
        "Explanation": "Route 53 Resolver에 인바운드 엔드포인트를 생성하면 온프레미스 네트워크에서 AWS 리소스에 대한 DNS 쿼리를 처리할 수 있습니다. 이 설정은 하이브리드 클라우드 환경을 위해 설계되어 AWS 리소스 이름의 효율적인 해석을 보장합니다.",
        "Other Options": [
            "VPN 연결을 설정하고 DNS 요청을 AWS DNS 서버로 직접 전달하면 Route 53 Resolver를 우회하게 되며, 이는 하이브리드 DNS 해석 관리를 위해 특별히 설계된 것입니다.",
            "공용 호스팅 영역을 사용하면 내부 AWS 리소스의 안전하거나 효율적인 해석을 제공하지 않으며, DNS 레코드를 공개적으로 노출하고 개인 DNS 쿼리에 적합하지 않습니다.",
            "EC2 인스턴스를 DNS 포워더로 배포하면 불필요한 복잡성과 유지 관리 오버헤드가 발생하며, 반면 Route 53 Resolver는 DNS 쿼리 처리를 단순화하는 관리형 솔루션입니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 회사가 Amazon Route 53에 도메인을 호스팅하고 있으며, 더 나은 성능과 신뢰성을 위해 DNS 레코드를 최적화하려고 합니다.",
        "Question": "SysOps 관리자가 사용자의 지리적 위치에 따라 트래픽을 라우팅하기 위해 어떤 유형의 Route 53 레코드를 사용해야 합니까?",
        "Options": {
            "1": "가중 라우팅 정책",
            "2": "페일오버 라우팅 정책",
            "3": "지연 라우팅 정책",
            "4": "지리적 위치 라우팅 정책"
        },
        "Correct Answer": "지리적 위치 라우팅 정책",
        "Explanation": "지리적 위치 라우팅 정책을 사용하면 사용자의 지리적 위치에 따라 트래픽을 라우팅할 수 있습니다. 이는 사용자를 가장 가까운 엔드포인트로 안내하여 지연 시간과 사용자 경험을 개선하는 데 도움이 됩니다.",
        "Other Options": [
            "지연 라우팅 정책은 사용자에게 가장 낮은 지연 시간을 제공하는 AWS 리전으로 트래픽을 라우팅하지만, 사용자의 지리적 위치에 따라 특정하게 타겟팅하지는 않습니다.",
            "가중 라우팅 정책은 미리 정의된 가중치에 따라 여러 리소스에 트래픽을 분배할 수 있지만, 사용자의 지리적 위치는 고려하지 않습니다.",
            "페일오버 라우팅 정책은 트래픽을 기본 리소스로 라우팅하고 기본 리소스가 사용할 수 없을 때 보조 리소스로 전환하는 데 사용되며, 사용자 위치에 따른 라우팅을 다루지 않습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "한 회사가 Amazon S3를 사용하여 애플리케이션 데이터를 저장하고 있습니다. 특정 사용자가 새 파일을 업로드할 수 있을 뿐만 아니라 기존 파일을 덮어쓰거나 삭제하여 관리할 수 있도록 해야 합니다. 또한 S3 버킷의 액세스 제어 목록(ACL)을 관리해야 하는 사용자도 있습니다. 보안 팀은 이러한 요구 사항을 충족하기 위해 이 사용자에게 부여해야 할 권한을 검토하고 있습니다.",
        "Question": "S3 버킷에서 객체를 생성, 덮어쓰기, 삭제하고 ACL을 관리할 수 있도록 사용자에게 부여해야 하는 ACL 권한은 무엇입니까?",
        "Options": {
            "1": "WRITE 및 WRITE_ACP 권한",
            "2": "READ 및 WRITE_ACP 권한",
            "3": "READ 및 WRITE 권한",
            "4": "WRITE 및 READ 권한"
        },
        "Correct Answer": "WRITE 및 WRITE_ACP 권한",
        "Explanation": "WRITE 권한은 사용자가 버킷에서 객체를 생성, 덮어쓰고 삭제할 수 있도록 하며, WRITE_ACP 권한은 버킷의 ACL을 변경할 수 있도록 합니다. 따라서 WRITE 및 WRITE_ACP 권한을 모두 부여하면 객체 및 ACL 관리를 위한 요구 사항을 충족합니다.",
        "Other Options": [
            "READ 권한은 사용자가 버킷의 객체를 보기만 할 수 있도록 하며, 수정하거나 ACL을 관리할 수 없으므로 이 조합은 불충분합니다.",
            "READ 권한은 객체를 생성하거나 삭제할 수 있는 능력을 부여하지 않으므로, 이 조합은 객체 수명 주기를 관리하는 요구 사항을 충족하지 않습니다.",
            "READ 권한은 객체를 수정하거나 ACL을 관리할 수 없으므로, 요구 사항에 적합하지 않은 옵션입니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "SysOps 관리자가 전 세계 사용자에게 높은 가용성과 낮은 대기 시간을 보장하기 위해 여러 AWS 리전에서 호스팅되는 새로운 웹 애플리케이션을 구성하고 있습니다. 관리자는 사용자의 지리적 위치에 따라 가장 가까운 리전으로 사용자를 안내해야 하며, 모든 리전에서 도메인 이름이 올바르게 해석되도록 해야 합니다.",
        "Question": "관리자가 도메인 이름 해석을 효과적으로 관리하고 사용자를 가장 가까운 리전으로 라우팅하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Direct Connect with public virtual interface",
            "2": "Amazon CloudFront with geo-restriction",
            "3": "Amazon Route 53 with latency-based routing",
            "4": "AWS Global Accelerator with static IP addresses"
        },
        "Correct Answer": "Amazon Route 53 with latency-based routing",
        "Explanation": "Amazon Route 53 with latency-based routing은 사용자의 대기 시간이 가장 짧은 리전으로 트래픽을 라우팅할 수 있게 해주어 웹 애플리케이션의 성능을 향상시킵니다. 도메인 이름을 효과적으로 해석하고 사용자를 가장 가까운 AWS 리전으로 안내합니다.",
        "Other Options": [
            "AWS Global Accelerator는 정적 IP 주소를 제공하고 가용성과 성능을 향상시키지만, 도메인 이름 해석을 관리하거나 대기 시간 기반 라우팅을 직접 수행하지 않습니다.",
            "Amazon CloudFront는 사용자에게 더 가까운 곳에 콘텐츠를 캐시하는 콘텐츠 전송 네트워크이지만, 서로 다른 리전의 대기 시간을 기반으로 한 도메인 이름 해석 및 라우팅 수준을 제공하지 않습니다.",
            "AWS Direct Connect는 온프레미스에서 AWS로 전용 네트워크 연결을 설정하는 데 사용되지만, 도메인 이름 해석이나 지리적 위치에 따라 트래픽을 라우팅하기 위한 서비스가 아닙니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 회사가 온프레미스 데이터 센터에서 AWS로 대량의 데이터를 전송해야 합니다. 데이터 전송은 효율적이고 비용 효과적이어야 하며, 특히 이 작업에 사용할 수 있는 대역폭이 제한적입니다. 회사는 이 목적을 위해 AWS Snowball을 사용하기로 결정했습니다.",
        "Question": "다음 중 이 시나리오에서 AWS Snowball의 주요 사용 사례를 가장 잘 설명하는 행동은 무엇입니까?",
        "Options": {
            "1": "재해 복구를 위한 AWS 서비스의 백업 생성.",
            "2": "온프레미스와 AWS 간의 실시간 데이터 동기화 수행.",
            "3": "AWS에서 데이터 처리를 위한 임시 저장 솔루션 제공.",
            "4": "인터넷에 의존하지 않고 AWS로 대량의 데이터를 안전하게 전송."
        },
        "Correct Answer": "인터넷에 의존하지 않고 AWS로 대량의 데이터를 안전하게 전송.",
        "Explanation": "AWS Snowball은 고객이 대량의 데이터를 AWS로 안전하고 비용 효과적으로 전송할 수 있도록 특별히 설계되었습니다. 특히 인터넷 대역폭이 제한적이거나 비쌀 때 유용합니다. 물리적 장치를 사용하여 인터넷 전송의 필요성을 우회합니다.",
        "Other Options": [
            "이 옵션은 AWS Snowball이 실시간 데이터 동기화를 위한 것이 아니기 때문에 잘못되었습니다. 이는 대량 전송에 중점을 둔 물리적 데이터 전송 솔루션입니다.",
            "이 옵션은 AWS Snowball이 AWS 서비스의 백업 생성을 위해 주로 설계되지 않았기 때문에 잘못되었습니다. 그 주요 기능은 데이터 전송이지 백업 솔루션이 아닙니다.",
            "이 옵션은 AWS Snowball이 데이터 처리를 위한 임시 저장소를 제공하기 위한 것이 아니기 때문에 잘못되었습니다. 이는 AWS로 데이터를 이동하는 데 도움을 주는 데이터 전송 서비스이지 저장 솔루션이 아닙니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 회사가 AWS에서 인프라의 배포를 자동화하여 일관성과 속도를 보장하고자 합니다. 팀은 코드를 통해 인프라를 관리하고 버전 관리를 가능하게 하는 인프라를 코드(IaC) 접근 방식을 사용하고자 합니다. 또한 다른 AWS 서비스와 잘 통합되는 솔루션이 필요합니다.",
        "Question": "SysOps 관리자가 인프라 배포를 효율적으로 자동화하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS CloudFormation을 사용하여 인프라를 코드로 정의하고 리소스 배포를 자동화합니다.",
            "2": "AWS OpsWorks를 구현하여 Chef 또는 Puppet을 사용하여 애플리케이션 스택을 구성하고 관리합니다.",
            "3": "AWS CodeDeploy를 활용하여 EC2 인스턴스 간의 코드 배포 프로세스를 자동화합니다.",
            "4": "AWS Elastic Beanstalk를 활용하여 애플리케이션을 배포하고 기본 리소스를 자동으로 관리합니다."
        },
        "Correct Answer": "AWS CloudFormation을 사용하여 인프라를 코드로 정의하고 리소스 배포를 자동화합니다.",
        "Explanation": "AWS CloudFormation은 템플릿을 사용하여 인프라를 코드로 정의할 수 있게 해주며, AWS 리소스의 배포, 수정 및 버전 관리를 일관되게 신뢰성 있게 자동화할 수 있습니다.",
        "Other Options": [
            "AWS Elastic Beanstalk는 주로 애플리케이션 배포 및 관리에 중점을 두지만, CloudFormation이 제공하는 기본 인프라에 대한 동일한 수준의 제어를 제공하지 않습니다.",
            "AWS OpsWorks는 애플리케이션 구성 관리 및 배포를 위해 설계되었지만, CloudFormation에 비해 인프라 프로비저닝에 덜 집중하고 있습니다.",
            "AWS CodeDeploy는 EC2 인스턴스에 대한 코드 배포를 자동화하는 데 사용되며, 이 시나리오에 필수적인 인프라 리소스의 프로비저닝을 처리하지 않습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 회사가 Amazon S3에 저장된 대규모 데이터 세트를 분석하기 위해 Amazon Athena를 사용하고 있습니다. 데이터는 자주 업데이트되며, 회사는 불필요한 비용을 발생시키지 않고 최신 데이터를 쿼리하고자 합니다.",
        "Question": "Amazon Athena를 사용할 때 쿼리 성능을 최적화하고 비용을 최소화하기 위해 SysOps 관리자가 구현해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "모든 쿼리를 SELECT * 문으로 실행합니다.",
            "2": "관련 키를 기반으로 S3의 데이터를 파티셔닝합니다.",
            "3": "AWS Glue를 사용하여 모든 데이터 세트에 대한 데이터 카탈로그를 생성합니다.",
            "4": "향후 사용을 위해 쿼리 결과를 별도의 S3 버킷에 저장합니다."
        },
        "Correct Answer": "관련 키를 기반으로 S3의 데이터를 파티셔닝합니다.",
        "Explanation": "S3의 데이터를 파티셔닝하면 Athena가 전체 데이터 세트가 아닌 관련 파티션만 스캔할 수 있어 쿼리 성능이 크게 향상되고 처리되는 데이터 양을 최소화하여 비용을 줄일 수 있습니다.",
        "Other Options": [
            "AWS Glue를 사용하여 데이터 카탈로그를 생성하는 것은 메타데이터 관리를 위해 유용하지만, Athena에서 데이터 스캔과 관련된 쿼리 성능 최적화나 비용 최소화에는 직접적인 도움이 되지 않습니다.",
            "SELECT * 문으로 쿼리를 실행하면 전체 데이터 세트를 스캔해야 하므로 높은 비용과 느린 성능을 초래할 수 있으며, 이는 특히 대규모 데이터 세트에서 비효율적입니다.",
            "쿼리 결과를 별도의 S3 버킷에 저장하는 것은 결과를 캐싱하는 데 유용할 수 있지만, Athena에서 원본 데이터 세트를 쿼리할 때 성능 최적화나 비용 절감 문제를 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "한 회사가 증가된 수요로 인해 Amazon ElastiCache for Memcached 클러스터에서 성능 문제를 겪고 있습니다. SysOps 관리자로서, 다운타임 없이 새로운 부하를 처리하기 위해 클러스터를 확장하는 가장 효과적인 방법을 결정해야 합니다.",
        "Question": "Amazon ElastiCache for Memcached 클러스터를 수평적으로 효과적으로 확장하기 위해 어떤 전략을 구현하시겠습니까?",
        "Options": {
            "1": "기존 Memcached 클러스터에 추가 노드를 추가합니다.",
            "2": "동일한 수의 노드로 새로운 Memcached 클러스터를 생성합니다.",
            "3": "성능을 개선하기 위해 클러스터의 노드 수를 줄입니다.",
            "4": "기존 노드를 더 큰 인스턴스 유형으로 업그레이드합니다."
        },
        "Correct Answer": "기존 Memcached 클러스터에 추가 노드를 추가합니다.",
        "Explanation": "Memcached 클러스터를 수평적으로 효과적으로 확장하기 위해 추가 노드를 추가하면 부하를 분산하고 캐시 용량을 증가시킬 수 있습니다. 이 접근 방식은 다운타임 없이 증가된 수요를 처리하고 성능을 향상시킵니다.",
        "Other Options": [
            "기존 노드를 수직적으로 업그레이드하는 것은 더 높은 부하를 처리하기 위한 용량 증가의 필요성을 해결하지 않으며, 현재 노드의 성능만 개선합니다.",
            "노드 수를 줄이면 클러스터의 요청 처리 능력에 부정적인 영향을 미쳐 성능 저하와 잠재적인 중단을 초래할 수 있습니다.",
            "새로운 Memcached 클러스터를 생성하는 것은 기존 클러스터를 확장하는 데 즉각적인 이점을 제공하지 않으며, 추가 구성 작업이 필요하고 데이터 일관성 문제를 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "한 회사가 구성 관리 도구를 사용하여 여러 환경에서 애플리케이션 서버의 배포 및 구성을 자동화하려고 합니다. 그들은 인스턴스가 클라우드에 있든 온프레미스에 있든 관계없이 일관되게 구성되고 관리되기를 원합니다.",
        "Question": "서버 구성을 자동화하기 위해 Chef 또는 Puppet을 사용하기 위해 회사가 활용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS CodeDeploy",
            "2": "AWS CloudFormation",
            "3": "AWS OpsWorks",
            "4": "AWS Systems Manager"
        },
        "Correct Answer": "AWS OpsWorks",
        "Explanation": "AWS OpsWorks는 구성 관리를 위해 특별히 설계되었으며, Chef 및 Puppet의 관리형 인스턴스를 제공하여 다양한 환경에서 서버가 구성되고 배포되며 관리되는 방식을 자동화할 수 있습니다.",
        "Other Options": [
            "AWS CodeDeploy는 주로 애플리케이션 배포 자동화를 위해 사용되며, 서버의 구성 관리에는 사용되지 않습니다.",
            "AWS CloudFormation은 인프라를 코드로 정의하고 프로비저닝하는 서비스이지만, Chef 또는 Puppet의 구성 관리 기능을 제공하지 않습니다.",
            "AWS Systems Manager는 여러 AWS 서비스의 운영 데이터를 제공하여 AWS 리소스 전반에 걸쳐 작업을 자동화하지만, Chef 또는 Puppet을 사용한 구성 관리에 특별히 맞춰져 있지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "시스템 관리자는 여러 AWS 계정을 가진 조직의 AWS 비용을 모니터링하는 임무를 맡고 있습니다. 관리자는 예기치 않은 지출 증가에 대한 정보를 유지하기 위해 알림을 설정하고자 합니다. 그러나 알람을 설정하기 전에 AWS Management Console에서 청구 알림이 활성화되어 있는지 확인해야 합니다.",
        "Question": "시스템 관리자가 AWS 비용 모니터링을 위한 청구 알림을 활성화하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "AWS Budgets 서비스에서 예상 요금을 추적하기 위한 예산을 설정합니다.",
            "2": "AWS Management Console의 계정 기본 설정 섹션에서 청구 알림을 활성화합니다.",
            "3": "조직의 모든 사용자에게 청구 접근을 허용하는 새로운 IAM 정책을 생성합니다.",
            "4": "청구 및 비용 관리 대시보드에서 상세 청구 보고서를 활성화합니다."
        },
        "Correct Answer": "AWS Management Console의 계정 기본 설정 섹션에서 청구 알림을 활성화합니다.",
        "Explanation": "AWS 비용 모니터링을 위한 청구 알림을 활성화하려면 시스템 관리자가 AWS Management Console의 계정 기본 설정 섹션에서 청구 알림을 활성화해야 합니다. 이 단계는 예상 요금을 기반으로 알람을 생성하기 전에 필요합니다.",
        "Other Options": [
            "새로운 IAM 정책을 생성하는 것은 직접적으로 청구 알림을 활성화하지 않으며, 청구 정보에 대한 접근을 제공할 수 있지만 알림 자체를 설정하지는 않습니다.",
            "상세 청구 보고서를 활성화하는 것은 비용 추적에 유용하지만 예상 요금에 대한 알림 설정과는 직접적인 관련이 없습니다.",
            "AWS Budgets에서 예산을 설정하는 것은 비용 관리에 좋은 방법이지만, 청구 알림을 활성화하는 것과는 별개이며, 이는 먼저 계정 기본 설정에서 활성화해야 합니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "SysOps 관리자는 가변 부하 패턴을 가진 애플리케이션의 현재 AWS 리소스 사용량 및 비용을 검토하고 있습니다. 이 애플리케이션은 여러 EC2 인스턴스, RDS 데이터베이스 및 S3 스토리지로 구성되어 있습니다. 비용을 최적화하면서 성능을 보장하기 위해 관리자는 여러 전략을 고려하고 있습니다. 관리자가 애플리케이션 성능을 저해하지 않으면서 효과적으로 비용을 줄이기 위해 어떤 전략을 구현해야 합니까?",
        "Question": "비용을 최소화하면서 성능을 유지하기 위해 관리자가 우선적으로 고려해야 할 비용 최적화 전략은 무엇입니까?",
        "Options": {
            "1": "사용량 메트릭에 따라 기존 EC2 인스턴스를 분석하고 적정 크기로 조정합니다.",
            "2": "잠재적인 미래 성장을 수용하기 위해 S3 스토리지의 크기를 늘립니다.",
            "3": "더 나은 가용성을 위해 RDS 데이터베이스를 Multi-AZ 배포로 마이그레이션합니다.",
            "4": "최대 유연성을 위해 모든 EC2 인스턴스를 온디맨드 가격으로 전환합니다."
        },
        "Correct Answer": "사용량 메트릭에 따라 기존 EC2 인스턴스를 분석하고 적정 크기로 조정합니다.",
        "Explanation": "실제 사용량 메트릭에 따라 EC2 인스턴스를 적정 크기로 조정하면 관리자는 인스턴스가 과도하게 프로비저닝되거나 과소 활용되지 않도록 보장할 수 있으며, 애플리케이션에 필요한 성능을 유지하면서 비용을 효과적으로 줄일 수 있습니다.",
        "Other Options": [
            "모든 EC2 인스턴스를 온디맨드 가격으로 전환하는 것은 유연성을 제공할 수 있지만, 인스턴스가 지속적으로 실행되는 경우 상당히 높은 비용으로 이어질 수 있습니다.",
            "RDS 데이터베이스를 Multi-AZ 배포로 마이그레이션하는 것은 가용성을 개선하지만, 일반적으로 추가 요금이 발생하므로 비용 최적화와는 직접적인 관련이 없습니다.",
            "현재 사용량을 분석하지 않고 S3 스토리지의 크기를 늘리는 것은 불필요한 비용을 초래할 수 있으며, 현재의 필요를 검증하지 않고 미래 성장을 가정합니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 회사는 AWS에 웹 애플리케이션을 배포했으며, 이 애플리케이션은 가변적인 트래픽 패턴을 경험하고 있습니다. 피크 부하 동안 애플리케이션이 최적의 성능을 발휘하도록 하면서 저트래픽 기간 동안 비용을 최소화하기 위해 SysOps 관리자는 성능 최적화 전략을 구현하는 임무를 맡고 있습니다.",
        "Question": "SysOps 관리자가 웹 애플리케이션의 성능과 비용을 최적화하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "애플리케이션을 AWS Lambda로 마이그레이션하고 서버리스 아키텍처를 채택하여 수요에 따라 자동으로 확장하여 EC2 인스턴스의 필요를 없앱니다.",
            "2": "트래픽 패턴에 따라 EC2 인스턴스 수를 동적으로 조정하고 기본 성능을 보장하기 위해 최소 인스턴스 수를 설정하기 위해 Auto Scaling을 구현합니다.",
            "3": "피크 부하를 처리하기 위해 더 큰 EC2 인스턴스 유형을 배포하여 고트래픽 기간 동안 애플리케이션에 충분한 리소스를 제공합니다.",
            "4": "Amazon CloudFront를 활용하여 정적 콘텐츠를 사용자에게 더 가까이 캐시하여 대기 시간을 줄이고 원본 서버의 트래픽을 오프로드합니다."
        },
        "Correct Answer": "트래픽 패턴에 따라 EC2 인스턴스 수를 동적으로 조정하고 기본 성능을 보장하기 위해 최소 인스턴스 수를 설정하기 위해 Auto Scaling을 구현합니다.",
        "Explanation": "Auto Scaling을 구현하면 애플리케이션이 실시간 트래픽 수요에 따라 용량을 자동으로 조정할 수 있어 피크 부하 동안 최적의 성능을 보장하면서 저트래픽 기간 동안 비용을 최소화할 수 있습니다. 이 접근 방식은 성능과 비용 효율성 간의 균형을 유지합니다.",
        "Other Options": [
            "AWS Lambda로 마이그레이션하는 것은 애플리케이션이 서버리스 아키텍처에 맞게 설계되지 않은 경우 실현 가능하지 않을 수 있으며, 코드 리팩토링 및 상태 관리에서 어려움을 초래할 수 있습니다.",
            "Amazon CloudFront를 활용하여 정적 콘텐츠를 캐시하는 것은 성능을 개선할 수 있지만, 가변 트래픽 패턴 동안 기본 EC2 인스턴스의 동적 확장 요구를 해결하지는 않습니다.",
            "더 큰 EC2 인스턴스 유형을 배포하는 것은 저트래픽 기간 동안 과소 활용으로 이어질 수 있으며, 이는 비용을 증가시키면서 피크 시간 동안 성능을 반드시 개선하지는 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "SysOps 관리자는 AWS 리소스에 대한 특정 API 호출을 모니터링하고 이러한 호출을 기반으로 경고를 생성해야 합니다. 관리자는 이 기능을 구현하기 위해 CloudWatch 메트릭 필터를 사용하기로 결정했습니다.",
        "Question": "SysOps 관리자가 CloudWatch Logs에서 특정 API 호출을 추적하기 위한 메트릭 필터를 생성하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "AWS Config를 사용하여 API 호출의 준수를 모니터링하고 이를 CloudWatch에 보고합니다.",
            "2": "로그 데이터에서 특정 API 호출 패턴을 캡처하는 메트릭 필터를 정의합니다.",
            "3": "로그 파일을 파싱하고 데이터를 CloudWatch 메트릭으로 푸시하는 Lambda 함수를 설정합니다.",
            "4": "로그 그룹의 로그 이벤트 수를 기반으로 CloudWatch 경고를 생성합니다."
        },
        "Correct Answer": "로그 데이터에서 특정 API 호출 패턴을 캡처하는 메트릭 필터를 정의합니다.",
        "Explanation": "로그 데이터에서 특정 API 호출 패턴을 캡처하는 메트릭 필터를 생성하면 관리자가 이러한 API 호출의 발생을 직접 추적할 수 있어 추가 모니터링 및 경고를 위한 필요한 데이터를 제공합니다.",
        "Other Options": [
            "로그 이벤트 수를 기반으로 CloudWatch 경고를 생성하는 것은 API 호출을 특정적으로 필터링하지 않으며, 관련 없는 경고로 이어질 수 있습니다.",
            "로그 파일을 파싱하는 Lambda 함수를 설정하는 것은 메트릭 필터가 CloudWatch Logs에서 필요한 정보를 직접 추출하고 모니터링할 수 있기 때문에 불필요합니다.",
            "API 호출의 준수를 모니터링하기 위해 AWS Config를 사용하는 것은 리소스 구성에 초점을 맞추고 있으며, 특정 API 호출에 대한 상세한 메트릭과 경고를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사는 AWS Organization 아래에 여러 AWS 계정을 조직하고 있습니다. 보안 팀은 서비스 제어 정책(SCP)이 올바르게 구현되어 준수를 강제하고 조직 전반에 걸쳐 특정 작업을 제한하도록 해야 합니다. 팀은 특정 계정에 적용된 SCP가 준수 요구 사항에 부합하는지 확인해야 합니다.",
        "Question": "조직 내 계정에 적용된 서비스 제어 정책(SCP)을 효과적으로 검증하기 위해 SysOps 관리자가 취해야 할 행동은 무엇입니까?",
        "Options": {
            "1": "AWS CLI를 사용하여 특정 계정에 대한 SCP와 그 효과를 나열합니다.",
            "2": "AWS Config 규칙을 확인하여 리소스가 SCP를 준수하는지 확인합니다.",
            "3": "각 계정에 로그인하여 각 사용자에 대한 권한을 수동으로 검토합니다.",
            "4": "계정의 IAM 역할에 연결된 IAM 정책을 검토하여 준수 여부를 확인합니다."
        },
        "Correct Answer": "AWS CLI를 사용하여 특정 계정에 대한 SCP와 그 효과를 나열합니다.",
        "Explanation": "AWS CLI를 사용하여 SCP를 나열하면 계정에 적용된 정책과 그 효과를 직접 확인할 수 있는 방법을 제공합니다. 이 방법을 통해 관리자는 정책이 의도한 대로 작업을 올바르게 제한하거나 허용하는지 검증할 수 있어 준수를 보장합니다.",
        "Other Options": [
            "IAM 역할에 연결된 IAM 정책을 검토하는 것은 SCP를 직접 검증하지 않으며, IAM 정책은 SCP와 독립적으로 작동하므로 계정 수준에서 적용됩니다.",
            "AWS Config 규칙을 확인하는 것은 SCP를 구체적으로 검증하지 않으며, 정의된 규칙에 따라 AWS 리소스와 구성의 준수를 평가하는 다른 보안 측면입니다.",
            "각 사용자에 대한 권한을 수동으로 검토하는 것은 비효율적이며 오류가 발생하기 쉬우며, 조직 수준에서 적용된 SCP에 대한 포괄적인 보기를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "SysOps 관리자는 서로 다른 지리적 지역에 위치한 사용자들이 Amazon S3 버킷에 효율적으로 파일을 업로드할 수 있도록 해야 합니다. 관리자는 특히 장거리에서 전송되는 대용량 파일의 업로드 속도를 가속화하는 기능을 활용하고자 합니다. 업로드 성능을 향상시키기 위해 관리자가 활성화해야 할 것은 무엇입니까?",
        "Question": "관리자가 장거리 사용자에 대한 파일 전송을 최적화하기 위해 Amazon S3에서 활성화해야 할 기능은 무엇입니까?",
        "Options": {
            "1": "S3 수명 주기 정책을 구성하여 파일 저장을 보다 효율적으로 관리합니다.",
            "2": "S3 Transfer Acceleration을 활성화하여 S3 버킷으로의 업로드 속도를 높입니다.",
            "3": "S3 교차 지역 복제를 활성화하여 여러 지역에 파일 복사본을 유지합니다.",
            "4": "AWS Direct Connect를 사용하여 AWS에 전용 네트워크 연결을 설정합니다."
        },
        "Correct Answer": "S3 Transfer Acceleration을 활성화하여 S3 버킷으로의 업로드 속도를 높입니다.",
        "Explanation": "S3 Transfer Acceleration은 전 세계의 클라이언트에서 S3로 콘텐츠 업로드 속도를 높이기 위해 특별히 설계되었으며, CloudFront의 전 세계적으로 분산된 엣지 위치를 활용하여 장거리 데이터 전송을 촉진합니다.",
        "Other Options": [
            "교차 지역 복제는 업로드 속도를 향상시키지 않으며, 오히려 데이터의 중복성과 가용성을 위해 서로 다른 지역에 데이터를 복제합니다.",
            "S3 수명 주기 정책은 데이터 저장 비용과 전환 관리를 목표로 하지만 파일 업로드 속도에는 영향을 미치지 않습니다.",
            "AWS Direct Connect는 전용 네트워크 연결을 제공하지만 S3 업로드 최적화를 위해 특별히 설계되지 않았으며 모든 사용 사례에 대해 비용 효율적이지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "데이터 엔지니어링 팀은 AWS 서비스를 사용하여 매일 데이터의 이동 및 처리를 자동화해야 합니다. 그들은 전용 네트워크 라인에 의존하지 않고 이러한 작업의 일정 관리 및 실행을 도와주는 서비스를 활용하고자 합니다.",
        "Question": "팀이 데이터 처리 활동을 위한 파이프라인을 효율적으로 생성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Lambda를 사용하여 트리거에 응답하여 코드를 실행하고 이벤트 기반 워크플로를 관리합니다.",
            "2": "AWS Data Pipeline을 사용하여 활동, 데이터 노드 및 일정을 정의합니다.",
            "3": "AWS Glue를 사용하여 다양한 소스에 저장된 데이터에 대해 ETL 작업을 수행합니다.",
            "4": "Amazon Kinesis를 사용하여 실시간 스트리밍 데이터를 지속적으로 처리합니다."
        },
        "Correct Answer": "AWS Data Pipeline을 사용하여 활동, 데이터 노드 및 일정을 정의합니다.",
        "Explanation": "AWS Data Pipeline은 데이터 이동 및 처리 활동의 일정을 관리하도록 특별히 설계되었습니다. 사용자가 활동 및 데이터 노드를 포함하는 파이프라인을 정의할 수 있도록 하여 팀의 요구 사항에 적합한 선택입니다.",
        "Other Options": [
            "AWS Lambda는 이벤트 기반 실행에 중점을 두기 때문에 정기적인 데이터 이동을 예약하는 데 이상적이지 않습니다.",
            "Amazon Kinesis는 주로 실시간 데이터 스트리밍 및 처리를 위해 사용되며, 예약된 데이터 이동 및 배치 처리 작업에는 적합하지 않습니다.",
            "AWS Glue는 데이터 변환을 수행할 수 있는 관리형 ETL 서비스이지만, AWS Data Pipeline처럼 데이터 이동의 일정을 관리하지는 않습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사는 최근 다양한 AWS 서비스의 보안 결과를 집계하기 위해 AWS Security Hub를 배포했습니다. 보안 팀은 Amazon GuardDuty의 일부 중요한 결과가 Security Hub에 나타나지 않는 것을 발견했습니다. 팀은 모든 관련 결과가 보고되고 있는지 확인하고자 합니다.",
        "Question": "보안 팀이 GuardDuty의 모든 결과가 AWS Security Hub에 제대로 통합되도록 하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "Security Hub 설정에서 GuardDuty 통합을 활성화합니다.",
            "2": "AWS CLI를 사용하여 GuardDuty 결과를 Security Hub에 수동으로 가져옵니다.",
            "3": "GuardDuty 설정에서 GuardDuty 탐지 빈도를 증가시킵니다.",
            "4": "AWS Lambda 함수를 생성하여 GuardDuty에서 Security Hub로 결과를 푸시합니다."
        },
        "Correct Answer": "Security Hub 설정에서 GuardDuty 통합을 활성화합니다.",
        "Explanation": "GuardDuty의 모든 결과가 AWS Security Hub에 보고되도록 하려면 이 두 서비스 간의 통합이 활성화되어야 합니다. 이를 통해 Security Hub는 GuardDuty의 결과를 자동으로 수신하고 표시할 수 있습니다.",
        "Other Options": [
            "GuardDuty 결과는 Security Hub에 수동으로 가져올 수 없으며, 직접 통합되어야 합니다.",
            "결과를 푸시하기 위해 Lambda 함수를 생성하는 것은 불필요하며, 기본 통합이 존재할 때 복잡성을 추가합니다.",
            "GuardDuty에서 탐지 빈도를 증가시키는 것은 Security Hub와의 통합에 영향을 미치지 않으며, 단지 GuardDuty가 데이터를 분석하는 빈도만 변경합니다."
        ]
    }
]