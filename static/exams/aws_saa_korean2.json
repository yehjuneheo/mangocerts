[
    {
        "Question Number": "1",
        "Situation": "금융 서비스 회사는 여러 출처에서 다양한 형식으로 거래 데이터를 수집합니다. 분석을 수행하기 전에 데이터는 정리되고, 표준화되며, 보강되어야 합니다. 이 회사는 이 ETL(추출, 변환, 적재) 프로세스를 자동화할 수 있는 서버리스 솔루션을 찾고 있습니다.",
        "Question": "데이터 변환을 위해 솔루션 아키텍트가 추천해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon EMR",
            "2": "AWS Glue",
            "3": "AWS Lambda",
            "4": "Amazon Redshift Spectrum"
        },
        "Correct Answer": "AWS Glue",
        "Explanation": "AWS Glue는 데이터 준비 및 변환을 위해 특별히 설계된 완전 관리형 ETL(추출, 변환, 적재) 서비스입니다. 데이터 발견, 카탈로그화 및 변환 프로세스를 자동화하여 다양한 출처에서 거래 데이터를 정리하고 표준화하며 보강해야 하는 금융 서비스 회사에 적합합니다. AWS Glue는 서버리스 작업을 처리할 수 있어 회사의 서버리스 솔루션 요구 사항과 일치합니다.",
        "Other Options": [
            "Amazon EMR은 Apache Hadoop 및 Apache Spark와 같은 빅데이터 프레임워크를 실행하는 것을 간소화하는 관리형 클러스터 플랫폼입니다. ETL 작업을 수행할 수 있지만 서버리스 솔루션이 아니며 AWS Glue에 비해 더 많은 관리 및 구성이 필요합니다.",
            "AWS Lambda는 이벤트에 응답하여 코드를 실행하는 서버리스 컴퓨팅 서비스입니다. 데이터 변환에 사용할 수 있지만 ETL 프로세스를 위해 특별히 설계되지 않았으며 AWS Glue가 제공하는 데이터 카탈로그화 및 스키마 추론 기능이 부족합니다.",
            "Amazon Redshift Spectrum은 S3에 저장된 데이터에 대해 쿼리를 실행할 수 있게 해주지만, ETL 서비스가 아니라 주로 쿼리 서비스이며, 분석 전에 데이터를 정리하고 보강하는 데 필요한 데이터 변환 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 회사는 Amazon CloudWatch를 사용하여 AWS 리소스의 보안을 모니터링하고 있습니다. 이 회사는 네트워크 트래픽에서 비정상적인 패턴이나 무단 접근 시도가 감지될 때 remediation 작업을 트리거하여 잠재적인 보안 위협에 자동으로 대응할 수 있는 시스템을 설정해야 합니다.",
        "Question": "보안 사고가 실시간으로 감지되고 수정되도록 하기 위해 회사가 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "CloudWatch Logs를 사용하여 EC2 인스턴스의 로그를 수집하고, 로그에서 특정 패턴이 감지될 때 remediation 작업을 위해 Lambda 함수를 트리거하는 CloudWatch Alarms를 설정합니다.",
            "2": "CloudWatch Metrics를 사용하여 EC2 인스턴스의 상태를 모니터링하고, 다른 AWS 보안 서비스와 통합하지 않고 보안 임계값이 초과될 때 자동 스케일링을 구성합니다.",
            "3": "CloudWatch Events를 설정하여 CloudTrail의 로그 데이터를 외부 SIEM(보안 정보 및 이벤트 관리) 시스템으로 전달하여 실시간 분석 및 자동 remediation을 수행합니다.",
            "4": "CloudWatch Dashboards를 활성화하여 EC2 메트릭을 시각화하고, 필요할 때 Amazon SNS를 통해 경고를 트리거하기 위해 데이터를 수동으로 검사합니다."
        },
        "Correct Answer": "CloudWatch Logs를 사용하여 EC2 인스턴스의 로그를 수집하고, 로그에서 특정 패턴이 감지될 때 remediation 작업을 위해 Lambda 함수를 트리거하는 CloudWatch Alarms를 설정합니다.",
        "Explanation": "이 옵션은 보안 사고의 실시간 감지 및 수정 필요성을 직접적으로 해결하기 때문에 올바릅니다. CloudWatch Logs를 사용하여 EC2 인스턴스의 로그를 수집함으로써 회사는 잠재적인 보안 위협을 나타내는 특정 패턴을 모니터링할 수 있습니다. CloudWatch Alarms를 설정하면 AWS Lambda 함수를 통해 자동 응답이 가능하며, 위협이 감지될 때 즉시 미리 정의된 remediation 작업을 실행할 수 있습니다. 이 구성은 보안 사고가 실시간으로 감지될 뿐만 아니라 자동으로 조치를 취하여 AWS 리소스의 전반적인 보안 태세를 강화합니다.",
        "Other Options": [
            "이 옵션은 CloudWatch Logs 및 알람을 사용하는 것을 제안하지만, 자동 remediation을 위한 Lambda 함수 사용을 명시하지 않기 때문에 잘못되었습니다. 자동화가 없으면 감지된 위협에 대한 응답은 실시간이 아니며, 이는 효과적인 보안 관리에 매우 중요합니다.",
            "이 옵션은 EC2 인스턴스의 상태 모니터링 및 자동 스케일링에 초점을 맞추고 있어 보안 위협 감지 및 수정과는 직접적인 관련이 없습니다. 인스턴스 상태 모니터링은 중요하지만, 비정상적인 네트워크 트래픽이나 무단 접근 시도와 같은 보안 사고에 대응하는 특정 필요를 해결하지 않습니다.",
            "이 옵션은 로그 데이터를 외부 SIEM 시스템으로 전달하는 것이 분석에 유용할 수 있지만, 실시간 remediation 작업을 위한 직접적인 메커니즘을 제공하지 않습니다. 외부 시스템에 의존하는 것은 응답 시간에 지연을 초래하여 즉각적인 위협 완화에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "금융 서비스 회사는 재해 발생 시 중요한 거래 애플리케이션이 매우 짧은 시간 내에 복구되고 운영될 수 있도록 해야 합니다. 운영 요구 사항을 충족하기 위해 회사는 15분의 복구 시간 목표(RTO)를 설정했으며, 이는 정전 발생 시 애플리케이션이 이 시간 내에 다시 온라인 상태가 되어야 함을 의미합니다.",
        "Question": "이 RTO 요구 사항을 가장 잘 충족하는 재해 복구 전략은 무엇입니까?",
        "Options": {
            "1": "Amazon S3에 저장된 야간 백업을 활용하여 애플리케이션을 필요할 때 복구할 수 있는 백업 및 복원",
            "2": "파일럿 라이트, 필요할 때 애플리케이션을 복원하기 위해 빠르게 시작할 수 있는 미리 구성된 인프라 유지",
            "3": "웜 스탠바이, 15분 RTO 내에 전체 생산 용량으로 확장할 수 있는 최소 실행 버전의 애플리케이션",
            "4": "멀티사이트 액티브-액티브 설정, 여러 위치에 완전 운영 리소스를 유지하여 즉각적인 장애 조치 및 제로 다운타임 보장"
        },
        "Correct Answer": "멀티사이트 액티브-액티브 설정, 여러 위치에 완전 운영 리소스를 유지하여 즉각적인 장애 조치 및 제로 다운타임 보장",
        "Explanation": "멀티사이트 액티브-액티브 설정은 15분 복구 시간 목표(RTO)를 충족하기 위한 최상의 재해 복구 전략입니다. 이 설정은 여러 위치에서 항상 완전 운영 리소스를 사용할 수 있도록 보장합니다. 재해 발생 시 시스템은 다운타임 없이 즉시 다른 사이트로 장애 조치할 수 있어 애플리케이션이 즉시 온라인 상태가 되는 엄격한 요구 사항을 충족합니다. 이 설정은 가용성과 복원력이 가장 높은 수준을 제공하여 지연을 허용할 수 없는 중요한 거래 애플리케이션에 이상적입니다.",
        "Other Options": [
            "백업 및 복원은 야간 백업에서 복원하는 데 15분 이상 걸릴 수 있으므로 15분 RTO 요구 사항을 충족하지 않습니다. 특히 백업이 크거나 복원 과정에서 문제가 발생할 경우 더욱 그렇습니다.",
            "파일럿 라이트는 빠르게 시작할 수 있는 최소 인프라를 유지하지만, 필요한 리소스를 시작하는 데 시간이 걸리며 15분 RTO 내에 애플리케이션이 완전히 운영될 수 있다는 보장을 제공하지 않습니다.",
            "웜 스탠바이는 최소 버전의 애플리케이션을 유지하지만, 전체 생산 용량으로 확장하는 데 15분 이상 걸릴 수 있으며, 특히 리소스 제약이 있거나 애플리케이션이 상당한 초기화 시간이 필요한 경우 더욱 그렇습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "Amazon EC2 인스턴스에서 실행되는 고성능 컴퓨팅(HPC) 애플리케이션은 임시 데이터 저장을 위해 초저지연 및 가능한 최고의 IOPS를 요구합니다. 인스턴스가 중지되거나 실패하더라도 데이터는 유지될 필요가 없으며, 비용이 주요 concern입니다.",
        "Question": "솔루션 아키텍트가 추천해야 할 스토리지 옵션은 무엇입니까?",
        "Options": {
            "1": "Amazon EBS 일반 목적 SSD (gp3)",
            "2": "Amazon EBS 프로비저닝 IOPS SSD (io2)",
            "3": "인스턴스 스토어",
            "4": "전송 가속화가 적용된 Amazon S3"
        },
        "Correct Answer": "인스턴스 스토어",
        "Explanation": "인스턴스 스토어는 호스트 서버에 물리적으로 연결되어 있어 가능한 최고의 IOPS와 초저지연을 제공합니다. 이는 빠른 임시 데이터 저장이 필요한 고성능 컴퓨팅 애플리케이션에 적합합니다. 데이터가 인스턴스가 중지되거나 실패할 경우 유지될 필요가 없으므로, 인스턴스 스토어를 사용하는 것은 EBS 볼륨과 같은 추가 요금이 발생하지 않아 비용 효율적입니다.",
        "Other Options": [
            "Amazon EBS 일반 목적 SSD (gp3)는 좋은 성능을 제공하고 비용 효율적이지만, 인스턴스 스토어와 같은 수준의 IOPS 및 지연 시간을 제공하지 않아 초저지연이 필요한 HPC 애플리케이션에는 적합하지 않습니다.",
            "Amazon EBS 프로비저닝 IOPS SSD (io2)는 높은 IOPS를 제공하며 지속적인 성능이 필요한 애플리케이션을 위해 설계되었지만, 인스턴스 스토어보다 비용이 더 비쌉니다. 또한 유지될 필요가 없는 임시 데이터 저장에는 필요하지 않습니다.",
            "전송 가속화가 적용된 Amazon S3는 인터넷을 통한 고속 데이터 전송을 위해 설계되었으며, 초저지연 요구 사항에는 적합하지 않습니다. 또한 S3는 객체 저장 서비스로, 빠른 접근이 필요한 HPC 애플리케이션의 임시 데이터 저장에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 전자상거래 회사는 예상치 못한 지역 장애가 발생할 경우 데이터베이스를 신속하게 복구할 수 있는 재해 복구 솔루션이 필요합니다. 이들은 최소한의 다운타임과 데이터 손실을 요구합니다.",
        "Question": "회사가 낮은 복구 지점 목표(RPO)와 낮은 복구 시간 목표(RTO)를 충족하기 위해 고려해야 할 AWS 서비스와 전략은 무엇입니까?",
        "Options": {
            "1": "Amazon RDS의 Multi-AZ 배포 및 교차 지역 읽기 복제본을 사용하여 자동 장애 조치 및 빠른 복구를 위한 교차 지역 복제를 제공합니다.",
            "2": "버전 관리가 활성화된 Amazon S3를 사용하여 가용 영역 간에 각 객체의 여러 버전을 유지하여 데이터 내구성을 보장합니다.",
            "3": "AWS Backup을 사용하여 데이터베이스의 정기적인 스냅샷을 제공하여 여러 지역에서 데이터베이스의 시점 복구를 제공합니다.",
            "4": "Amazon EC2 Auto Scaling을 사용하여 예약된 백업을 통해 자동 스케일링 및 주기적인 데이터 복구를 허용합니다."
        },
        "Correct Answer": "Amazon RDS의 Multi-AZ 배포 및 교차 지역 읽기 복제본을 사용하여 자동 장애 조치 및 빠른 복구를 위한 교차 지역 복제를 제공합니다.",
        "Explanation": "Amazon RDS의 Multi-AZ 배포는 높은 가용성과 내구성을 위해 설계되었습니다. Multi-AZ 설정에서 RDS는 데이터베이스를 다른 가용 영역의 대기 인스턴스로 자동 복제하여 장애 발생 시 자동 장애 조치를 허용합니다. 이 설정은 다운타임을 최소화하고(낮은 RTO) 데이터가 지속적으로 복제되도록 하여 낮은 복구 지점 목표(RPO)를 달성합니다. 또한 교차 지역 읽기 복제본을 사용하면 지역 장애 발생 시 추가 데이터 중복성과 더 빠른 복구를 가능하게 하여 회사의 요구 사항에 이상적인 솔루션이 됩니다.",
        "Other Options": [
            "버전 관리가 활성화된 Amazon S3는 주로 객체 저장을 위한 것이며 필요한 데이터베이스 복구 기능을 제공하지 않습니다. 객체의 여러 버전을 유지하여 데이터 내구성을 보장하지만, 데이터베이스에 대한 낮은 RPO 및 RTO 요구 사항을 해결하지 않습니다.",
            "AWS Backup을 사용하여 데이터베이스의 정기적인 스냅샷을 제공하면 시점 복구가 가능하지만, Multi-AZ 배포 및 교차 지역 읽기 복제본만큼 낮은 RPO 및 RTO 요구 사항을 효과적으로 충족하지 못할 수 있습니다. 스냅샷 복원에는 시간이 걸릴 수 있어 다운타임이 길어질 수 있습니다.",
            "Amazon EC2 Auto Scaling을 사용하여 예약된 백업은 EC2 인스턴스의 스케일링에 초점을 맞추고 있으며, 데이터베이스에 대한 재해 복구 솔루션을 본질적으로 제공하지 않습니다. 예약된 백업은 회사가 요구하는 즉각적인 장애 조치 및 낮은 RPO/RTO를 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 회사가 Amazon RDS에서 웹 애플리케이션을 운영하고 있으며, 기본 데이터베이스에서 읽기 쿼리를 오프로드하여 애플리케이션의 읽기 성능을 개선하고자 합니다. 이 회사는 피크 트래픽 시간 동안 기본 데이터베이스가 과부하에 걸리지 않도록 해야 합니다. 그들은 증가된 읽기 부하를 처리하기 위해 읽기 복제본을 사용하는 것을 고려하고 있습니다.",
        "Question": "회사가 읽기 복제본을 사용해야 하는 시점을 가장 잘 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "애플리케이션이 높은 쓰기 처리량을 요구하고 여러 지역에 걸쳐 쓰기를 분산해야 할 때 읽기 복제본을 사용합니다.",
            "2": "애플리케이션에 읽기 중심의 쿼리가 많고 여러 복제본에 걸쳐 읽기 용량을 확장해야 할 때 읽기 복제본을 사용합니다.",
            "3": "애플리케이션이 이미지나 문서와 같은 비정형 데이터를 저장해야 하고 높은 가용성이 필요할 때 읽기 복제본을 사용합니다.",
            "4": "애플리케이션 성능 개선이 아닌 데이터 마이그레이션 목적으로만 읽기 복제본을 사용합니다."
        },
        "Correct Answer": "애플리케이션에 읽기 중심의 쿼리가 많고 여러 복제본에 걸쳐 읽기 용량을 확장해야 할 때 읽기 복제본을 사용합니다.",
        "Explanation": "읽기 복제본은 기본 데이터베이스에서 읽기 트래픽을 오프로드하도록 특별히 설계되었습니다. 애플리케이션이 높은 볼륨의 읽기 쿼리를 경험할 때, 읽기 복제본을 사용하면 애플리케이션이 이러한 쿼리를 여러 인스턴스에 분산시킬 수 있어 읽기 성능이 향상되고 기본 데이터베이스가 피크 트래픽 시간 동안 과부하에 걸리지 않도록 보장합니다. 이 설정은 읽기 중심의 작업 부하에 대한 확장성과 응답성을 향상시킵니다.",
        "Other Options": [
            "애플리케이션이 높은 쓰기 처리량을 요구하고 여러 지역에 걸쳐 쓰기를 분산해야 할 때 읽기 복제본을 사용하는 것은 잘못된 것입니다. 읽기 복제본은 읽기 작업을 위한 것이지 쓰기 작업을 분산하기 위한 것이 아닙니다. 쓰기는 항상 기본 데이터베이스로 향합니다.",
            "애플리케이션이 비정형 데이터를 저장해야 하고 높은 가용성이 필요할 때 읽기 복제본을 사용하는 것은 잘못된 것입니다. 읽기 복제본은 비정형 데이터를 저장하는 데 사용되지 않으며, 데이터베이스의 구조화된 데이터에 대한 읽기 성능을 향상시키기 위해 사용됩니다.",
            "애플리케이션 성능 개선이 아닌 데이터 마이그레이션 목적으로만 읽기 복제본을 사용하는 것은 잘못된 것입니다. 읽기 복제본은 데이터 마이그레이션 중에 사용할 수 있지만, 그 주요 목적은 읽기 쿼리를 처리하여 애플리케이션 성능을 개선하는 것이지 단순히 마이그레이션을 위한 것이 아닙니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 미디어 제작 회사는 비디오 편집을 위한 고성능 스토리지가 필요하지만 비용을 낮게 유지하고 싶어합니다. 그들은 고성능과 저성능 작업이 혼합되어 있으며 적절한 블록 스토리지 유형을 선택해야 합니다.",
        "Question": "회사가 성능 요구 사항을 충족하면서 비용을 최적화하기 위해 어떤 블록 스토리지 옵션 조합을 사용해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "모든 볼륨에 대해 Provisioned IOPS SSD (io2) 사용",
            "2": "고성능 작업에 대해 General Purpose SSD (gp3) 사용하고 저성능 작업에 대해 Throughput Optimized HDD (st1) 사용",
            "3": "모든 볼륨에 대해 Cold HDD (sc1) 사용",
            "4": "모든 데이터에 대해 블록 스토리지 대신 Amazon S3 사용",
            "5": "대부분의 작업에 대해 General Purpose SSD (gp3) 사용하고 아카이브 스토리지 요구에 대해 Cold HDD (sc1) 사용"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "모든 볼륨에 대해 Provisioned IOPS SSD (io2) 사용",
            "고성능 작업에 대해 General Purpose SSD (gp3) 사용하고 저성능 작업에 대해 Throughput Optimized HDD (st1) 사용"
        ],
        "Explanation": "Provisioned IOPS SSD (io2)는 빠르고 예측 가능하며 일관된 처리량을 제공하는 고성능 스토리지 옵션으로, 비디오 편집과 같은 고성능 작업에 적합합니다. 그러나 다른 옵션보다 비용이 더 비쌉니다. 반면, General Purpose SSD (gp3)는 가격과 성능의 균형을 제공하여 다양한 작업 부하에 적합합니다. Throughput Optimized HDD (st1)는 저비용 옵션으로 보통의 성능을 제공하여 덜 요구되는 작업에 적합합니다.",
        "Other Options": [
            "모든 볼륨에 대해 Cold HDD (sc1)를 사용하는 것은 적합하지 않습니다. 이는 자주 접근하지 않는 장기적이고 순차적인 콜드 데이터 또는 아카이브 스토리지를 위해 설계되었기 때문입니다. 비디오 편집에 필요한 높은 성능을 제공하지 않습니다.",
            "모든 데이터에 대해 블록 스토리지 대신 Amazon S3를 사용하는 것은 이상적이지 않습니다. S3는 객체 스토리지 서비스이지 블록 스토리지 서비스가 아니며, 비디오 편집과 같은 고성능 작업에 필요한 저지연 데이터 접근을 위해 설계되지 않았습니다.",
            "대부분의 작업에 대해 General Purpose SSD (gp3)를 사용하고 아카이브 스토리지 요구에 대해 Cold HDD (sc1)를 사용하는 것은 최선의 선택이 아닙니다. gp3는 대부분의 작업에 적합하지만, sc1은 고성능 작업에 적합하지 않습니다. 이는 자주 접근하지 않는 장기적이고 순차적인 콜드 데이터 또는 아카이브 스토리지를 위해 설계되었습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "대규모 멀티 VPC 아키텍처에서 수많은 포인트 투 포인트 연결을 유지하고 네트워크 복잡성이 증가하는 문제를 겪고 있습니다.",
        "Question": "네트워크 아키텍처를 단순화하면서 확장성과 복원력을 향상시키기 위한 최선의 솔루션은 무엇입니까?",
        "Options": {
            "1": "각 VPC 쌍 간에 VPN 연결을 설정하여 직접 통신을 보장하고 보안을 강화합니다.",
            "2": "각 VPC에 대해 AWS Direct Connect를 사용하여 각 VPC가 독립적으로 온프레미스 네트워크에 연결되도록 합니다.",
            "3": "Transit Gateway (TGW)를 구현하여 중앙 집중식 허브 역할을 하여 모든 VPC를 연결하고 개별 연결의 필요성을 줄입니다.",
            "4": "모든 VPC 간에 피어링 연결을 구성하여 높은 가용성을 유지하고 연결 간 최소 지연을 보장합니다."
        },
        "Correct Answer": "Transit Gateway (TGW)를 구현하여 중앙 집중식 허브 역할을 하여 모든 VPC를 연결하고 개별 연결의 필요성을 줄입니다.",
        "Explanation": "Transit Gateway (TGW)는 여러 VPC와 온프레미스 네트워크를 상호 연결하는 중앙 허브 역할을 하여 네트워크 아키텍처를 단순화합니다. 이는 수많은 포인트 투 포인트 연결을 관리하는 복잡성을 줄여주며, 모든 VPC가 TGW를 통해 통신할 수 있습니다. 또한, 새로운 VPC를 추가할 때마다 새로운 연결을 설정할 필요가 없어 확장성이 향상됩니다. 더불어, 단일 관리 및 모니터링 지점을 제공하여 문제 해결 및 유지 관리를 간소화함으로써 복원력을 개선합니다.",
        "Other Options": [
            "각 VPC 쌍 간에 VPN 연결을 설정하는 것은 복잡한 연결 망을 생성하여 관리 오버헤드를 증가시키고 잠재적인 성능 병목 현상을 초래할 수 있습니다. 이 접근 방식은 VPC 수가 증가함에 따라 잘 확장되지 않습니다.",
            "각 VPC에 대해 AWS Direct Connect를 사용하는 것은 온프레미스 네트워크에 대한 독립적인 연결을 허용하지만, VPC 간 통신의 복잡성을 해결하지는 않습니다. 각 VPC는 여전히 자체 설정 및 관리가 필요하므로 네트워크 아키텍처가 단편화될 수 있습니다.",
            "모든 VPC 간에 피어링 연결을 구성하는 것도 복잡한 메쉬 네트워크를 생성합니다. 낮은 지연 연결을 제공할 수 있지만, VPC 수가 증가함에 따라 수많은 피어링 연결을 관리하는 것이 번거로워져 Transit Gateway에 비해 확장성이 떨어집니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 의료 회사는 재해 복구를 위해 환자 데이터를 AWS에 백업해야 합니다. 비용을 줄이기 위해, 그들은 저장 비용을 최소화하면서 백업의 장기 보존을 보장하는 솔루션이 필요합니다. 또한 필요할 경우 몇 시간 내에 데이터를 검색할 수 있는 옵션을 원합니다.",
        "Question": "이 요구 사항을 가장 잘 충족하는 백업 전략은 무엇입니까?",
        "Options": {
            "1": "Amazon S3 Standard에 백업 저장",
            "2": "아카이브 스토리지에 Amazon S3 Glacier Flexible Retrieval 사용",
            "3": "Amazon S3 Standard-IA에 백업 저장",
            "4": "같은 지역에 저장된 Amazon EBS 스냅샷 사용"
        },
        "Correct Answer": "아카이브 스토리지에 Amazon S3 Glacier Flexible Retrieval 사용",
        "Explanation": "Amazon S3 Glacier Flexible Retrieval은 장기 데이터 아카이빙을 위해 설계되었으며, 자주 접근하지 않는 데이터를 저장하는 비용 효율적인 솔루션을 제공합니다. 데이터 검색이 몇 시간 내에 가능하여, 의료 회사가 백업을 적시에 검색할 수 있는 요구 사항과 일치합니다. 이 옵션은 저장 비용을 최소화하면서 데이터를 오랜 기간 보존할 수 있도록 하여 재해 복구 목적에 가장 적합합니다.",
        "Other Options": [
            "Amazon S3 Standard에 백업을 저장하는 것은 장기 저장에 비용 효율적이지 않습니다. 이는 자주 접근하는 데이터를 위해 설계되었기 때문에, 시간이 지남에 따라 Glacier에 비해 더 높은 비용이 발생합니다.",
            "아카이브 스토리지에 Amazon S3 Glacier Flexible Retrieval을 사용하는 것은 올바른 답변이지만, S3 Glacier Deep Archive 옵션을 고려하면 장기 저장에 더 저렴할 수 있습니다. 그러나 데이터 검색이 몇 시간 내에 가능하다는 요구 사항을 충족하지 않으며, 검색 시간은 최대 12시간이 걸릴 수 있습니다.",
            "Amazon S3 Standard-IA (Infrequent Access)에 백업을 저장하는 것은 Standard보다 나은 옵션이지만, 여전히 장기 저장에 대해 Glacier만큼 비용 효율적이지 않습니다. 자주 접근하지 않는 데이터에 적합하지만, Glacier에 비해 장기 보존에 대한 비용 절감 효과가 떨어집니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 SaaS 회사가 중앙 Amazon RDS for MySQL 데이터베이스에 연결되는 웹 애플리케이션을 제공합니다. 이 애플리케이션은 간헐적으로 연결 스파이크가 발생하여 데이터베이스의 최대 허용 연결 수를 초과하는 경우가 있습니다.",
        "Question": "솔루션 아키텍트가 데이터베이스 연결을 효과적으로 관리하고 연결 한도를 초과하지 않도록 하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "Amazon RDS 인스턴스에서 허용되는 최대 연결 수를 증가시킵니다.",
            "2": "데이터베이스 쿼리를 처리하고 직접 연결을 줄이기 위해 Amazon ElastiCache 클러스터를 배포합니다.",
            "3": "데이터베이스 연결을 효율적으로 풀링하고 공유하기 위해 Amazon RDS Proxy를 구현합니다.",
            "4": "AWS Lambda 함수를 사용하여 데이터베이스 연결을 동적으로 관리하고 분배합니다."
        },
        "Correct Answer": "데이터베이스 연결을 효율적으로 풀링하고 공유하기 위해 Amazon RDS Proxy를 구현합니다.",
        "Explanation": "Amazon RDS Proxy는 여러 애플리케이션 인스턴스 간에 연결을 풀링하고 공유하여 데이터베이스 연결을 효율적으로 관리하도록 설계되었습니다. 이는 데이터베이스에 대한 동시 연결 수를 줄이는 데 도움이 되며, 애플리케이션이 연결 요청의 스파이크를 경험할 때 특히 유용합니다. RDS Proxy를 사용하면 애플리케이션이 데이터베이스에 대한 활성 연결 수를 줄일 수 있어 연결 한도를 초과하지 않도록 하고, 전반적인 애플리케이션 성능과 신뢰성을 개선합니다.",
        "Other Options": [
            "Amazon RDS 인스턴스에서 허용되는 최대 연결 수를 증가시키는 것은 임시 해결책이 될 수 있지만, 연결 스파이크의 근본적인 문제를 해결하지는 않습니다. 이 접근 방식은 자원 소비를 증가시킬 수 있으며, 애플리케이션이 계속 성장할 경우 지속 가능하지 않을 수 있습니다.",
            "Amazon ElastiCache 클러스터를 배포하면 자주 접근하는 데이터를 캐싱하여 데이터베이스의 부하를 줄이는 데 도움이 될 수 있지만, 데이터베이스 연결을 직접 관리하지는 않습니다. 데이터베이스에 전송되는 쿼리 수를 줄여 성능을 개선할 수 있지만, 최대 연결 한도를 초과하는 문제를 해결하지는 않습니다.",
            "AWS Lambda 함수를 사용하여 데이터베이스 연결을 동적으로 관리하고 분배하는 것은 이 시나리오에 효과적인 솔루션이 아닙니다. Lambda 함수는 상태가 없고 이벤트 기반 아키텍처를 위해 설계되었으며, 데이터베이스 연결의 스파이크를 처리하는 데 필요한 연결 풀링 및 관리 기능을 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 회사가 AWS에서 데이터베이스 솔루션을 배포하려고 하며, 맞춤형 OS 패치 및 소프트웨어 설치에 대한 유연성을 유지하면서 백업 및 확장을 위한 관리형 서비스의 이점을 누리고자 합니다. 그들은 Amazon RDS, RDS Custom 및 EC2에서 데이터베이스를 실행하는 것을 고려하고 있습니다.",
        "Question": "제어와 관리형 서비스의 균형을 위한 요구 사항에 가장 잘 부합하는 옵션은 무엇입니까?",
        "Options": {
            "1": "Amazon RDS는 AWS에 의해 완전 관리되며 자동 백업 및 확장을 제공하지만, OS 및 소프트웨어 사용자 정의는 제한적입니다.",
            "2": "RDS Custom은 회사가 맞춤형 OS 패치 및 소프트웨어 설치를 처리할 수 있도록 하며, AWS는 백업 및 확장을 관리합니다.",
            "3": "자체 관리 데이터베이스가 있는 EC2는 OS 및 소프트웨어에 대한 완전한 제어를 제공하지만, 회사가 백업을 포함한 모든 관리 작업을 처리해야 합니다.",
            "4": "Multi-AZ가 활성화된 Amazon RDS는 가용성과 백업의 균형을 맞추지만, 사용자 정의를 위한 OS 수준의 접근을 허용하지 않습니다."
        },
        "Correct Answer": "RDS Custom은 회사가 맞춤형 OS 패치 및 소프트웨어 설치를 처리할 수 있도록 하며, AWS는 백업 및 확장을 관리합니다.",
        "Explanation": "RDS Custom은 맞춤형 OS 패치 및 소프트웨어 설치의 유연성을 제공하도록 특별히 설계되었으며, 여전히 AWS가 제공하는 관리형 서비스의 이점, 즉 자동 백업 및 확장을 누릴 수 있습니다. 이 옵션은 제어와 관리의 적절한 균형을 이루어 회사가 관리형 서비스의 이점을 희생하지 않고 특정 요구 사항에 맞게 데이터베이스 환경을 조정할 수 있게 합니다.",
        "Other Options": [
            "Amazon RDS는 AWS에 의해 완전 관리되며 자동 백업 및 확장을 포함하지만, OS 또는 소프트웨어 설치의 사용자 정의를 허용하지 않으므로 회사의 유연성 요구 사항을 충족하지 않습니다.",
            "자체 관리 데이터베이스가 있는 EC2는 운영 체제 및 소프트웨어에 대한 완전한 제어를 제공하지만, 회사가 백업 및 확장을 포함한 데이터베이스의 모든 측면을 관리해야 하므로 관리형 서비스에 대한 그들의 욕구와 모순됩니다.",
            "Multi-AZ가 활성화된 Amazon RDS는 가용성을 향상시키고 자동 백업을 제공하지만, 표준 RDS와 마찬가지로 OS 수준의 접근이나 사용자 정의를 허용하지 않으므로 회사의 요구에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "여러 AWS 계정을 가진 회사가 모든 계정의 보안 및 권한을 중앙 집중적으로 관리하는 접근 방식을 구현하고자 합니다. 회사는 각 계정이 엄격한 준수 정책을 따르도록 요구하면서, 개별 계정 관리자가 자신의 계정 내에서 사용자를 관리할 수 있도록 허용합니다.",
        "Question": "회사가 이러한 요구 사항을 달성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS IAM Identity Center (AWS Single Sign-On)",
            "2": "AWS Organizations와 서비스 제어 정책(SCP)",
            "3": "AWS IAM과 교차 계정 역할",
            "4": "Amazon Cognito"
        },
        "Correct Answer": "AWS Organizations와 서비스 제어 정책(SCP)",
        "Explanation": "AWS Organizations는 여러 AWS 계정을 중앙에서 관리하고 해당 계정에 정책을 적용할 수 있게 해줍니다. 서비스 제어 정책(SCP)은 AWS Organizations의 기능으로, 계정에 대한 권한 가드레일을 설정하여 엄격한 정책 준수를 보장하면서도 개별 계정 관리자가 자신의 계정 내에서 사용자 및 권한을 관리할 수 있도록 합니다. 이 설정은 여러 계정에 걸쳐 중앙 집중식 관리 및 준수 강화를 위한 회사의 요구 사항을 충족합니다.",
        "Other Options": [
            "AWS IAM Identity Center (AWS Single Sign-On)은 주로 AWS 계정 및 애플리케이션 간의 사용자 접근 및 단일 로그인 관리를 위해 사용됩니다. 사용자 관리에 도움이 되지만, AWS Organizations와 SCP가 제공하는 중앙 집중식 정책 집행 기능을 제공하지 않습니다.",
            "AWS IAM과 교차 계정 역할은 서로 다른 AWS 계정 간에 권한을 부여할 수 있지만, 여러 계정에 걸쳐 준수 정책을 집행하는 중앙 집중식 방법을 제공하지 않습니다. 각 계정은 여전히 자신의 IAM 정책을 관리해야 하며 SCP가 제공하는 포괄적인 제어가 없습니다.",
            "Amazon Cognito는 웹 및 모바일 애플리케이션의 사용자 인증 및 관리를 위해 설계되었습니다. 여러 AWS 계정 간의 권한 및 준수를 관리하는 데 적합하지 않으며, 사용자 신원에 초점을 맞추고 있습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "전자상거래 회사인 ABC Online은 CloudFront, Application Load Balancer (ALB), AppSync 및 API Gateway와 같은 서비스를 사용하여 웹사이트와 API를 AWS에서 호스팅합니다. SQL 인젝션, 교차 사이트 스크립팅(XSS) 및 IP 기반 공격과 같은 위협으로부터 보호하기 위해 ABC Online은 악의적인 트래픽을 동적으로 차단하면서 합법적인 사용자가 중단 없이 접근할 수 있도록 하는 방화벽 솔루션을 구현하고자 합니다. 그들은 AWS Web Application Firewall (WAF)와 Web Access Control Lists (Web ACLs)를 사용하여 여러 AWS 서비스에서 애플리케이션을 보호하는 것을 고려하고 있습니다. 보안 팀은 특정 기준에 따라 트래픽 흐름을 제어하고 공격을 방지하기 위해 사용자 정의 규칙을 구성하고자 합니다.",
        "Question": "AWS Web Application Firewall (WAF)와 Web ACLs가 CloudFront, ALB, AppSync 및 API Gateway와 같은 AWS 서비스에 배포된 애플리케이션을 보호하는 방식에 대해 가장 잘 설명하는 진술은 무엇입니까?",
        "Options": {
            "1": "AWS WAF는 미리 정의된 규칙을 적용하여 수동 조정이나 업데이트 없이 모든 수신 트래픽을 자동으로 허용하거나 거부하여 일반적인 위협에 대한 정적 보호를 제공합니다.",
            "2": "AWS WAF의 Web ACL은 CloudFront 또는 지역 서비스와 같은 특정 리소스에 적용할 수 있는 규칙 및 규칙 그룹으로 구성되어 있으며, IP 평판, SQL 인젝션 및 교차 사이트 스크립팅(XSS) 공격과 같은 정의된 기준에 따라 접근을 제어합니다.",
            "3": "AWS WAF는 특정 IP 주소에서 발생하는 트래픽만 차단하는 Web ACL을 사용하여 작동하므로 IP 기반 공격을 방지하는 데만 효과적입니다.",
            "4": "Web ACL은 CloudFront 배포와만 호환되며 ALB, AppSync 또는 API Gateway와 같은 다른 AWS 서비스와는 사용할 수 없습니다."
        },
        "Correct Answer": "AWS WAF의 Web ACL은 CloudFront 또는 지역 서비스와 같은 특정 리소스에 적용할 수 있는 규칙 및 규칙 그룹으로 구성되어 있으며, IP 평판, SQL 인젝션 및 교차 사이트 스크립팅(XSS) 공격과 같은 정의된 기준에 따라 접근을 제어합니다.",
        "Explanation": "AWS WAF는 웹 트래픽을 필터링하기 위해 규칙 및 규칙 그룹을 포함하는 Web Access Control Lists (Web ACLs)를 생성할 수 있게 해줍니다. 이러한 규칙은 SQL 인젝션 및 XSS와 같은 특정 위협을 목표로 하도록 사용자 정의할 수 있으며, CloudFront, ALB, AppSync 및 API Gateway를 포함한 다양한 AWS 서비스에 적용할 수 있습니다. 이러한 유연성은 조직이 악의적인 트래픽을 동적으로 차단하면서 합법적인 사용자가 중단 없이 접근할 수 있도록 하여 애플리케이션 보안을 유지하는 데 필수적입니다.",
        "Other Options": [
            "옵션 1은 AWS WAF가 미리 정의된 규칙에만 의존하지 않기 때문에 잘못되었습니다. AWS WAF는 사용자 정의 규칙을 생성할 수 있으며, 진화하는 위협에 적응하기 위해 수동 조정이 필요합니다. 이는 정적 보호가 아닌 동적 보호를 제공합니다.",
            "옵션 3은 AWS WAF가 특정 IP 주소에서 발생하는 트래픽만 차단하는 것이 아니기 때문에 잘못되었습니다. AWS WAF는 SQL 인젝션 및 XSS를 포함한 다양한 기준에 따라 트래픽을 차단하거나 허용할 수 있어 웹 애플리케이션 보안을 위한 포괄적인 솔루션입니다.",
            "옵션 4는 Web ACL이 CloudFront뿐만 아니라 여러 AWS 서비스와 호환되기 때문에 잘못되었습니다. Web ACL은 Application Load Balancer, API Gateway 및 기타 지역 서비스에도 적용할 수 있어 다양한 플랫폼에서 웹 애플리케이션 보안을 위한 통합 접근 방식을 제공합니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 회사가 AWS에서 고가용성 관계형 데이터베이스를 배포하여 가용 영역 장애 발생 시 원활하게 장애 조치할 수 있도록 하기를 원합니다. 그들은 또한 읽기 트래픽을 오프로드하고 재해 복구를 위한 백업을 유지하는 데 관심이 있습니다.",
        "Question": "이러한 요구 사항을 달성하기 위해 어떤 AWS RDS 구성을 사용해야 합니까?",
        "Options": {
            "1": "Amazon RDS를 Multi-AZ 배포로 구성하여 대기 인스턴스로의 동기 복제를 설정하고, 읽기 확장을 위해 다른 지역에 읽기 복제본을 생성합니다.",
            "2": "단일 Amazon RDS 인스턴스를 사용하고 정기적인 EBS 스냅샷을 구성하며, 장애 조치를 위해 원격 접근을 허용하는 공용 주소를 설정합니다.",
            "3": "Amazon RDS를 Multi-AZ 배포로 설정하고 동일한 가용 영역 내에서 읽기 복제본을 위한 비동기 복제를 설정합니다.",
            "4": "Amazon RDS를 교차 지역 복제로 배포하여 주요 인스턴스가 실패할 경우 다른 AWS 지역의 주요 인스턴스로 장애 조치할 수 있도록 합니다."
        },
        "Correct Answer": "Amazon RDS를 Multi-AZ 배포로 구성하여 대기 인스턴스로의 동기 복제를 설정하고, 읽기 확장을 위해 다른 지역에 읽기 복제본을 생성합니다.",
        "Explanation": "이 구성은 상황에서 설명된 모든 요구 사항을 충족합니다. Multi-AZ 배포는 장애가 발생할 경우 다른 가용 영역의 대기 인스턴스로 자동으로 장애 조치하여 고가용성을 제공합니다. 동기 복제는 데이터가 대기 인스턴스에 일관되게 복제되도록 보장합니다. 또한, 다른 지역에 읽기 복제본을 생성하면 회사가 읽기 트래픽을 오프로드하고 읽기 작업을 확장할 수 있으며, 백업을 통한 재해 복구 옵션도 제공합니다.",
        "Other Options": [
            "단일 Amazon RDS 인스턴스를 사용하고 정기적인 EBS 스냅샷을 구성하는 것은 고가용성이나 원활한 장애 조치를 제공하지 않으며, 복구를 위해 수동 개입에 의존합니다. 공용 주소는 가용성을 향상시키지 않으며 데이터베이스를 보안 위험에 노출시킬 수 있습니다.",
            "Amazon RDS를 Multi-AZ 배포로 설정하고 동일한 가용 영역 내에서 읽기 복제본을 위한 비동기 복제를 설정하는 것은 필요한 고가용성 및 장애 조치 기능을 제공하지 않으며, 장애 조치를 위한 Multi-AZ의 이점을 활용하지 않으며 읽기 트래픽을 효과적으로 오프로드할 수 없습니다.",
            "Amazon RDS를 교차 지역 복제로 배포하는 것은 요구 사항에 필요하지 않으며, 설정을 복잡하게 하고 지연을 초래할 수 있습니다. 주요 초점은 동일한 지역 내에서 고가용성을 위한 Multi-AZ 배포와 확장을 위한 읽기 복제본에 두어야 합니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 회사가 SSL을 사용하여 콘텐츠를 안전하게 제공하기 위해 CloudFront 배포를 설정하고 있습니다. 그들은 대체 도메인 이름을 사용하고, 시청자와 CloudFront 간의 안전한 연결과 CloudFront와 S3 버킷 및 Application Load Balancer (ALB) 간의 안전한 연결을 보장하고자 합니다.",
        "Question": "안전한 SSL 연결을 보장하기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "CloudFront가 배포된 지역에서 ACM을 사용하여 SSL 인증서를 구성합니다.",
            "2": "S3 버킷에 대해 ACM에서 SSL 인증서를 구성하여 CloudFront가 HTTPS로 버킷을 직접 사용할 수 있도록 합니다.",
            "3": "ALB에 대해 ACM의 인증서를 사용하고, 모든 사용자 정의 원본에 대해 외부 인증서를 사용합니다; 자체 서명된 인증서는 허용됩니다.",
            "4": "CloudFront에서 여러 HTTPS 사이트를 단일 IP에서 처리할 수 있도록 SNI 지원을 구성하고, 대체 도메인 이름에 대해 us-east-1에서 ACM 인증서를 생성합니다."
        },
        "Correct Answer": "CloudFront가 배포된 지역에서 ACM을 사용하여 SSL 인증서를 구성합니다.",
        "Explanation": "설정 전반에 걸쳐 안전한 SSL 연결을 보장하기 위해 회사는 CloudFront에서 AWS Certificate Manager (ACM)를 사용하여 SSL 인증서를 구성해야 합니다. 이 인증서는 시청자와 CloudFront 간의 연결을 암호화하는 데 사용됩니다. CloudFront는 대체 도메인 이름과 함께 사용되기 위해 SSL 인증서가 미국 동부(버지니아 북부) 지역(us-east-1)에 있어야 한다는 점에 유의해야 합니다. 이 단계는 CloudFront가 제공하는 콘텐츠가 HTTPS를 통해 안전하게 전달되도록 보장합니다.",
        "Other Options": [
            "S3 버킷에 대해 ACM에서 SSL 인증서를 구성하는 것은 필요하지 않습니다. CloudFront는 S3에서 HTTPS로 콘텐츠를 제공할 수 있으며, 버킷 자체에 대한 별도의 SSL 인증서가 필요하지 않습니다. CloudFront가 SSL 종료를 처리합니다.",
            "ALB에 대해 ACM의 인증서를 사용하고 모든 사용자 정의 원본에 대해 외부 인증서를 사용하는 것은 최선의 방법이 아닙니다. 모든 원본은 일관성과 관리 용이성을 위해 이상적으로 ACM 인증서를 사용하는 것이 좋습니다. 자체 서명된 인증서는 신뢰 문제로 인해 일반적으로 프로덕션 환경에서 권장되지 않습니다.",
            "CloudFront에서 SNI 지원을 구성하는 것은 이 시나리오에 필요하지 않습니다. SNI(서버 이름 표시)는 단일 IP 주소에서 여러 SSL 인증서를 제공할 수 있도록 하지만, 기본 요구 사항은 CloudFront에 대해 SSL 인증서를 올바르게 구성하는 것이며, 이는 대체 도메인 이름에 대한 SSL 종료를 처리합니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "한 회사가 온프레미스 데이터 센터와 AWS 환경 간에 민감한 데이터에 접근하기 위해 안전하고 신뢰할 수 있는 연결을 설정해야 합니다. 이 회사는 낮은 대기 시간, 높은 대역폭 및 전송 중 데이터 암호화를 요구합니다.",
        "Question": "어떤 솔루션이 이러한 요구 사항을 가장 잘 충족할까요?",
        "Options": {
            "1": "온프레미스와 AWS 간의 암호화 및 안전한 데이터 전송을 제공하기 위해 VPN 오버레이와 함께 AWS Direct Connect 연결을 설정합니다.",
            "2": "VPC에서 표준 인터넷 게이트웨이를 구성하고 IPsec VPN 터널을 사용하여 전송 중 데이터를 암호화합니다.",
            "3": "인터넷 게이트웨이를 AWS Shield와 함께 사용하여 DDoS 보호를 제공하고 HTTPS에 의존하여 암호화합니다.",
            "4": "온프레미스 데이터 센터와 AWS VPC 간에 VPC 피어링 연결을 설정하여 안전하고 낮은 대기 시간의 통신을 보장합니다."
        },
        "Correct Answer": "온프레미스와 AWS 간의 암호화 및 안전한 데이터 전송을 제공하기 위해 VPN 오버레이와 함께 AWS Direct Connect 연결을 설정합니다.",
        "Explanation": "AWS Direct Connect는 온프레미스 데이터 센터에서 AWS로의 전용 네트워크 연결을 제공하여 낮은 대기 시간과 높은 대역폭을 보장합니다. VPN 오버레이를 추가함으로써 전송 중 데이터가 암호화되어 민감한 데이터의 안전한 전송 요구 사항을 충족합니다. 이 조합은 Direct Connect의 성능 이점과 VPN의 보안을 모두 제공하여 주어진 시나리오에 가장 적합한 솔루션이 됩니다.",
        "Other Options": [
            "VPC에서 표준 인터넷 게이트웨이를 구성하고 IPsec VPN 터널을 사용하는 것은 암호화를 제공하지만, 인터넷 게이트웨이는 공용 인터넷에 의존하므로 Direct Connect와 같은 전용 연결에 비해 더 높은 대기 시간과 신뢰성을 초래할 수 있습니다.",
            "인터넷 게이트웨이를 AWS Shield와 함께 사용하여 DDoS 보호를 제공하고 HTTPS에 의존하여 암호화하는 것은 낮은 대기 시간과 높은 대역폭 요구 사항을 충족하지 못합니다. HTTPS는 전송 중 데이터 보안에 적합하지만, 공용 인터넷에 의존하면 성능이 변동할 수 있어 민감한 데이터 접근에 적합하지 않습니다.",
            "VPC 피어링 연결을 설정하는 것은 이 맥락에서 적용되지 않으며, VPC 피어링은 AWS 내 두 VPC를 연결하는 데 사용되며, 온프레미스 데이터 센터와 AWS를 연결하는 데 사용되지 않습니다. 또한 VPC 피어링은 회사의 요구에 중요한 암호화나 전용 연결을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "한 회사가 VPC의 프라이빗 서브넷 내에서 Amazon EC2 인스턴스에 애플리케이션을 배포했습니다. 이 애플리케이션은 업데이트를 다운로드하고 다른 공용 서비스와 통신하기 위해 인터넷에 접근해야 하지만, 인터넷에서 직접 접근할 수 없어야 합니다.",
        "Question": "회사가 이러한 요구 사항을 충족하기 위해 어떤 구성을 사용해야 합니까?",
        "Options": {
            "1": "프라이빗 서브넷에 인터넷 게이트웨이를 연결하고 EC2 인스턴스를 공용 IP로 구성하여 아웃바운드 접근을 제공합니다.",
            "2": "공용 서브넷에 NAT 게이트웨이를 배포하고, 프라이빗 서브넷과 연결된 라우트 테이블을 구성하여 0.0.0.0/0 트래픽을 NAT 게이트웨이로 유도하며, NAT 게이트웨이에 Elastic IP를 할당합니다.",
            "3": "프라이빗 서브넷을 인터넷 접근이 가능한 다른 VPC에 연결하기 위해 VPC 피어링을 사용하고 두 VPC 간의 라우팅을 구성합니다.",
            "4": "프라이빗 서브넷과 인터넷 접근이 가능한 온프레미스 네트워크 간에 VPN 연결을 설정하여 EC2 인스턴스가 아웃바운드 트래픽을 위해 온프레미스 네트워크를 통해 라우팅할 수 있도록 합니다."
        },
        "Correct Answer": "공용 서브넷에 NAT 게이트웨이를 배포하고, 프라이빗 서브넷과 연결된 라우트 테이블을 구성하여 0.0.0.0/0 트래픽을 NAT 게이트웨이로 유도하며, NAT 게이트웨이에 Elastic IP를 할당합니다.",
        "Explanation": "NAT 게이트웨이는 프라이빗 서브넷의 인스턴스가 인터넷으로 아웃바운드 트래픽을 시작할 수 있도록 하면서 인터넷으로부터의 인바운드 트래픽을 차단합니다. 공용 서브넷에 NAT 게이트웨이를 배포하고 프라이빗 서브넷의 라우트 테이블을 0.0.0.0/0 트래픽을 NAT 게이트웨이로 유도하는 라우트와 연결함으로써, EC2 인스턴스는 인터넷에 접근하여 업데이트 및 통신을 할 수 있지만 인터넷에서 직접 접근할 수는 없습니다. NAT 게이트웨이에 할당된 Elastic IP는 아웃바운드 트래픽을 위한 공용 IP를 제공하여 적절한 인터넷 연결을 보장합니다.",
        "Other Options": [
            "프라이빗 서브넷에 인터넷 게이트웨이를 연결하고 EC2 인스턴스를 공용 IP로 구성하는 것은 인스턴스를 인터넷에 직접 노출시켜 인터넷에서 직접 접근할 수 없다는 요구 사항에 위배됩니다.",
            "프라이빗 서브넷을 인터넷 접근이 가능한 다른 VPC에 연결하기 위해 VPC 피어링을 사용하는 것은 프라이빗 서브넷의 인스턴스가 인터넷에 접근할 수 있는 직접 경로를 제공하지 않습니다. VPC 피어링은 NAT와 같은 추가 구성이 없이는 프라이빗 서브넷의 인터넷 접근을 용이하게 하지 않습니다.",
            "프라이빗 서브넷과 인터넷 접근이 가능한 온프레미스 네트워크 간에 VPN 연결을 설정하는 것은 아키텍처를 복잡하게 만들고 대기 시간을 초래할 수 있습니다. 또한 EC2 인스턴스가 인터넷에 접근할 수 있도록 하는 요구 사항을 직접적으로 해결하지 않으며, 인터넷 접근을 위해 외부 네트워크에 의존합니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 금융 서비스 회사가 매일 온프레미스에서 대량의 고객 데이터를 생성하고 저장합니다. 엄격한 규제 및 준수 요구 사항으로 인해 이 데이터는 로컬에 보관해야 하지만, 저장 비용을 절감하기 위해 오래된 비정기적으로 접근하는 데이터를 AWS로 오프로드하고자 합니다. 그들은 기존 애플리케이션이나 워크플로우를 방해하지 않으면서 아카이브된 데이터에 접근할 수 있도록 현재의 저장 인프라를 AWS로 원활하게 확장할 수 있는 솔루션이 필요합니다.",
        "Question": "어떤 AWS 서비스가 회사의 요구 사항을 가장 잘 충족할까요? (두 가지 선택)",
        "Options": {
            "1": "Amazon S3와 라이프사이클 정책",
            "2": "AWS Direct Connect",
            "3": "AWS Storage Gateway",
            "4": "Amazon EBS 스냅샷 내보내기",
            "5": "Amazon Glacier Deep Archive와 Vault Lock"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3와 라이프사이클 정책",
            "AWS Storage Gateway"
        ],
        "Explanation": "Amazon S3와 라이프사이클 정책은 정의된 규칙에 따라 데이터를 다른 저장 클래스으로 자동으로 마이그레이션할 수 있게 해주므로, 비정기적으로 접근하는 데이터의 저장 비용을 절감하는 데 도움이 됩니다. AWS Storage Gateway는 온프레미스 애플리케이션을 AWS 저장소에 원활하게 연결할 수 있는 방법을 제공하므로 회사의 요구 사항에 적합합니다. 파일, 볼륨 및 테이프 저장 유형을 지원하며, S3, Glacier 및 EBS에 데이터를 저장하는 데 사용할 수 있습니다.",
        "Other Options": [
            "AWS Direct Connect는 주로 온프레미스에서 AWS로의 전용 네트워크 연결을 설정하는 데 사용되며, 저장소나 아카이빙 목적에 특별히 사용되지 않습니다.",
            "Amazon EBS 스냅샷 내보내기는 Amazon EBS 스냅샷을 Amazon S3 버킷으로 내보낼 수 있게 해주지만, 온프레미스 저장 인프라를 AWS로 원활하게 확장하는 방법을 제공하지 않습니다.",
            "Amazon Glacier Deep Archive와 Vault Lock은 매우 낮은 비용으로 데이터 아카이빙 및 장기 백업을 위한 저장 클래스입니다. 그러나 온프레미스 저장을 AWS로 원활하게 확장하는 방법을 제공하지 않으며, 데이터 검색 시간은 최대 12시간이 걸릴 수 있어 아카이브된 데이터에 접근하는 회사의 요구 사항을 충족하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "한 비디오 스트리밍 서비스가 특히 라이브 이벤트 중에 시청자 트래픽의 예측할 수 없는 급증을 경험합니다. 이 서비스는 수동 개입 없이 갑작스러운 부하 증가를 처리할 수 있어야 하며, 비수기 동안 비용을 최소화해야 합니다.",
        "Question": "솔루션 아키텍트가 트래픽 패턴에 따라 EC2 인스턴스 수를 자동으로 조정하기 위해 어떤 AWS 기능을 구성해야 합니까?",
        "Options": {
            "1": "AWS Elastic Beanstalk 스케일링",
            "2": "Amazon CloudWatch 알람",
            "3": "Amazon EC2 Auto Scaling",
            "4": "AWS Lambda 자동 스케일링"
        },
        "Correct Answer": "Amazon EC2 Auto Scaling",
        "Explanation": "Amazon EC2 Auto Scaling은 변화하는 트래픽 패턴에 따라 EC2 인스턴스 수를 자동으로 조정하도록 설계되었습니다. 피크 시간 동안 인스턴스를 추가하고 비수기 동안 인스턴스를 제거할 수 있으며, 수동 개입이 필요하지 않습니다. 이 기능은 라이브 이벤트 중과 같이 예측할 수 없는 시청자 트래픽의 급증을 처리하는 데 이상적이며, 수요가 낮은 기간 동안 비용을 최소화합니다.",
        "Other Options": [
            "AWS Elastic Beanstalk 스케일링은 애플리케이션 및 환경 관리를 위한 기능으로, 스케일링을 포함하지만 EC2 인스턴스 관리에 직접적으로 초점을 맞추지 않습니다. 이는 트래픽 패턴에 따라 원시 인스턴스 스케일링보다는 애플리케이션에 더 적합합니다.",
            "Amazon CloudWatch 알람은 메트릭을 모니터링하고 임계값에 따라 작업을 트리거할 수 있지만, EC2 인스턴스를 직접적으로 스케일링하지는 않습니다. EC2 Auto Scaling과 함께 사용하여 스케일링 작업을 트리거할 수 있지만, 스케일링 자체를 수행하지는 않습니다.",
            "AWS Lambda 자동 스케일링은 서버리스 컴퓨팅과 관련이 있으며, 들어오는 요청 수에 따라 Lambda 함수 인스턴스 수를 자동으로 조정합니다. 그러나 이는 EC2 인스턴스를 스케일링하는 데 적용되지 않으며, 이 시나리오의 요구 사항에 맞지 않습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 지속적인 가용성과 복원력을 보장하기 위해 us-east-1 리전 내에서 Amazon EC2 인스턴스에서 중요한 애플리케이션을 실행합니다. 높은 가용성 아키텍처를 달성하기 위해, 이들은 개별 호스트, 가용 영역(AZ) 또는 인스턴스와 같은 다양한 수준에서 잠재적인 실패를 견딜 수 있도록 EC2 배포를 설계해야 합니다.",
        "Question": "다음 접근 방식 중 어떤 것이 복원력 있는 EC2 아키텍처를 가장 잘 지원합니까? (두 가지 선택)",
        "Options": {
            "1": "가용 영역 실패 시 결함 격리 및 중복성을 제공하기 위해 리전 내 여러 가용 영역에 걸쳐 EC2 인스턴스를 배포합니다.",
            "2": "단일 가용 영역에 EC2 인스턴스를 배포하되, 실패한 인스턴스를 즉시 교체하기 위해 EC2 Auto Scaling을 활용합니다.",
            "3": "모든 EC2 인스턴스를 하나의 가용 영역 내 전용 호스트에 배치하여 자원 활용도를 극대화하고 관리를 단순화합니다.",
            "4": "고성능을 보장하기 위해 인스턴스 스토어 볼륨만으로 EC2 인스턴스를 구성하고 내구성을 위해 스냅샷에 의존합니다.",
            "5": "여러 가용 영역에 분산된 Auto Scaling 그룹과 함께 Elastic Load Balancing(ELB)을 사용하여 트래픽을 분산하고 인스턴스 실패를 원활하게 처리합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "가용 영역 실패 시 결함 격리 및 중복성을 제공하기 위해 리전 내 여러 가용 영역에 걸쳐 EC2 인스턴스를 배포합니다.",
            "여러 가용 영역에 분산된 Auto Scaling 그룹과 함께 Elastic Load Balancing(ELB)을 사용하여 트래픽을 분산하고 인스턴스 실패를 원활하게 처리합니다."
        ],
        "Explanation": "리전 내 여러 가용 영역에 걸쳐 EC2 인스턴스를 배포하면 AZ 실패 시 결함 격리 및 중복성을 제공합니다. 이는 한 AZ가 다운되더라도 애플리케이션이 다른 AZ에서 계속 사용 가능하도록 보장합니다. 여러 가용 영역에 분산된 Auto Scaling 그룹과 함께 Elastic Load Balancing(ELB)을 사용하면 트래픽을 분산하고 인스턴스 실패를 원활하게 처리할 수 있습니다. ELB는 트래픽을 인스턴스에 고르게 분산시키고, Auto Scaling은 수요에 따라 인스턴스 수를 조정하여 높은 가용성과 결함 허용성을 제공합니다.",
        "Other Options": [
            "단일 가용 영역에 EC2 인스턴스를 배포하고 EC2 Auto Scaling을 활용하여 실패한 인스턴스를 즉시 교체하는 것은 AZ 수준에서 결함 허용성을 제공하지 않습니다. 단일 AZ가 다운되면 전체 애플리케이션이 사용할 수 없게 됩니다.",
            "모든 EC2 인스턴스를 하나의 가용 영역 내 전용 호스트에 배치하여 자원 활용도를 극대화하고 관리를 단순화하는 것은 AZ 수준에서 결함 허용성을 제공하지 않습니다. 단일 AZ가 다운되면 전체 애플리케이션이 사용할 수 없게 됩니다.",
            "인스턴스 스토어 볼륨만으로 EC2 인스턴스를 구성하고 내구성을 위해 스냅샷에 의존하는 것은 AZ 수준에서 결함 허용성을 제공하지 않습니다. 인스턴스 스토어 볼륨은 일시적이며 인스턴스가 중지되거나 실패하면 데이터가 손실되므로 이 옵션은 덜 복원력 있습니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 스타트업이 AWS에서 다양한 소스에서 데이터를 수집하고 처리하여 분석을 위해 결과를 저장하는 데이터 처리 파이프라인을 구축하고 있습니다. 이 파이프라인은 변동성이 큰 작업 부하를 처리하고 들어오는 데이터 양에 따라 자동으로 확장해야 합니다. 회사는 서버 관리의 운영 오버헤드를 최소화하고자 합니다.",
        "Question": "이 파이프라인에 대해 솔루션 아키텍트가 추천해야 할 AWS 서비스 조합은 무엇입니까? (두 가지 선택하십시오.)",
        "Options": {
            "1": "Amazon EC2 인스턴스와 Auto Scaling",
            "2": "AWS Lambda",
            "3": "Amazon EMR",
            "4": "Amazon Kinesis Data Firehose",
            "5": "Amazon RDS"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambda",
            "Amazon Kinesis Data Firehose"
        ],
        "Explanation": "AWS Lambda는 이벤트에 응답하여 코드를 실행하고 기본 컴퓨팅 리소스를 자동으로 관리하는 서버리스 컴퓨팅 서비스로, 운영 오버헤드를 최소화하려는 회사의 요구 사항에 부합합니다. 또한 들어오는 데이터 양에 따라 자동으로 확장할 수 있어 변동성이 큰 작업 부하를 처리하는 데 이상적입니다. Amazon Kinesis Data Firehose는 데이터 레이크, 데이터 저장소 및 분석 서비스에 스트리밍 데이터를 신뢰성 있게 로드하는 가장 쉬운 방법입니다. Amazon S3, Amazon Redshift, Amazon Elasticsearch Service 및 Splunk와 같은 AWS 서비스에 스트리밍 데이터를 캡처, 변환 및 로드하여 기존 비즈니스 인텔리전스 도구 및 대시보드로 거의 실시간 분석을 가능하게 합니다.",
        "Other Options": [
            "Amazon EC2 인스턴스와 Auto Scaling: EC2 인스턴스와 Auto Scaling은 변동성이 큰 작업 부하를 처리하고 들어오는 데이터 양에 따라 확장할 수 있지만, 회사가 여전히 EC2 인스턴스를 관리해야 하므로 서버 관리의 운영 오버헤드를 최소화하지 않습니다.",
            "Amazon EMR: Amazon EMR은 클라우드 네이티브 빅데이터 플랫폼으로, Apache Spark 및 Hadoop과 같은 인기 있는 분산 프레임워크를 사용하여 대량의 데이터를 빠르고 비용 효율적으로 처리할 수 있습니다. 그러나 서버 클러스터를 관리해야 하므로 운영 오버헤드를 최소화하려는 회사의 요구 사항과 일치하지 않습니다.",
            "Amazon RDS: Amazon RDS는 관계형 데이터베이스 서비스로, 변동성이 큰 작업 부하를 처리하고 들어오는 데이터 양에 따라 자동으로 확장해야 하는 데이터 처리 파이프라인의 요구 사항과 일치하지 않습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "비디오 스트리밍 플랫폼은 특히 수백만 명의 시청자를 끌어들이는 라이브 이벤트 동안 예측할 수 없는 트래픽 급증을 경험합니다. 성능을 유지하고 중단을 피하기 위해 플랫폼은 컴퓨팅 용량을 신속하고 효율적으로 확장해야 합니다. 현재 스트리밍 애플리케이션은 여러 가용 영역에 걸쳐 Amazon EC2 인스턴스에서 실행되고 있으며, 팀은 특히 예기치 않은 트래픽 급증 동안 이러한 인스턴스가 수요에 따라 자동으로 프로비저닝되도록 하여 성능 저하를 방지하고자 합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 솔루션 아키텍트가 구현해야 할 구성은 무엇입니까? (두 가지 선택하십시오.)",
        "Options": {
            "1": "모든 가용 영역에 걸쳐 고정된 수의 EC2 인스턴스를 설정하여 피크 부하를 처리합니다.",
            "2": "CPU 사용률과 같은 메트릭을 기반으로 동적 확장 정책이 구성된 Auto Scaling Group을 사용하여 수요에 따라 자동으로 확장 및 축소합니다.",
            "3": "트래픽 패턴을 수동으로 모니터링하고 고트래픽 이벤트 동안 필요에 따라 EC2 인스턴스를 추가합니다.",
            "4": "웹사이트 콘텐츠를 Amazon S3에 호스팅하고 EC2 인스턴스가 웹사이트 트래픽을 처리할 필요를 제거합니다.",
            "5": "Amazon CloudWatch를 사용하여 예측 확장을 구현하여 트래픽 급증을 예측하고 용량을 사전 조정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "CPU 사용률과 같은 메트릭을 기반으로 동적 확장 정책이 구성된 Auto Scaling Group을 사용하여 수요에 따라 자동으로 확장 및 축소합니다.",
            "Amazon CloudWatch를 사용하여 예측 확장을 구현하여 트래픽 급증을 예측하고 용량을 사전 조정합니다."
        ],
        "Explanation": "AWS의 Auto Scaling Groups는 수요에 따라 EC2 인스턴스를 동적으로 확장할 수 있도록 합니다. 즉, 수요가 증가하면 더 많은 인스턴스를 프로비저닝하여 부하를 처리하고, 수요가 감소하면 인스턴스를 종료하여 비용을 절감할 수 있습니다. 이는 예측할 수 없는 트래픽 급증을 처리하는 데 이상적입니다. Amazon CloudWatch의 예측 확장은 기계 학습 알고리즘을 사용하여 미래의 수요를 예측하고 사전에 용량을 조정합니다. 이는 트래픽 급증을 예측하고 수요를 충족하기 위해 사전 확장하는 데 유용합니다.",
        "Other Options": [
            "모든 가용 영역에 걸쳐 고정된 수의 EC2 인스턴스를 설정하여 피크 부하를 처리하는 것은 효율적인 솔루션이 아닙니다. 이는 수요의 변동을 고려하지 않으며, 과잉 프로비저닝(수요가 낮을 때 자원 낭비) 또는 부족 프로비저닝(수요가 높을 때 자원이 부족)으로 이어질 수 있습니다.",
            "트래픽 패턴을 수동으로 모니터링하고 고트래픽 이벤트 동안 필요에 따라 EC2 인스턴스를 추가하는 것은 확장 가능하거나 효율적인 솔루션이 아닙니다. 이는 지속적인 모니터링과 수동 개입이 필요하며, 확장하는 데 지연이 발생할 수 있어 성능에 영향을 미칠 수 있습니다.",
            "웹사이트 콘텐츠를 Amazon S3에 호스팅하고 EC2 인스턴스가 웹사이트 트래픽을 처리할 필요를 제거하는 것은 비디오 스트리밍 플랫폼에 적합한 솔루션이 아닙니다. S3는 정적 웹사이트 호스팅에 적합하지만, 비디오 스트리밍 플랫폼은 동적 콘텐츠 전달과 컴퓨팅 용량이 필요하며, 이는 EC2 인스턴스가 더 잘 처리합니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 회사가 온프레미스 데이터 센터와 AWS 간의 네트워크 연결의 일관성과 속도를 개선하기 위해 AWS Direct Connect를 고려하고 있습니다.",
        "Question": "AWS Direct Connect를 사용할 때의 이점과 제한 사항을 정확하게 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "AWS Direct Connect는 복원력이 내장된 전용 사설 회선을 통해 안전한 데이터 전송을 제공하지만, 연결당 1 Gbps 대역폭으로 제한됩니다.",
            "2": "AWS Direct Connect는 인터넷 의존 없이 AWS 공용 및 사설 서비스에 직접 고속 및 저지연 연결을 제공할 수 있지만, 물리적 케이블에 의존하므로 본질적으로 복원력을 제공하지 않습니다.",
            "3": "AWS Direct Connect는 AWS와 온프레미스 환경 간의 복원력 있는 고속 데이터 전송을 제공하며, 자동 장애 조치 옵션이 있지만, 전 세계의 특정 AWS 리전에서만 사용할 수 있습니다.",
            "4": "AWS Direct Connect는 인터넷 기반 데이터 전송을 위한 비용 효율적인 솔루션을 제공하여 데이터를 AWS 공용 엔드포인트를 통해 라우팅할 수 있지만, 공유 인프라로 인해 VPN 기반 솔루션보다 더 높은 지연에 직면할 수 있습니다."
        },
        "Correct Answer": "AWS Direct Connect는 인터넷 의존 없이 AWS 공용 및 사설 서비스에 직접 고속 및 저지연 연결을 제공할 수 있지만, 물리적 케이블에 의존하므로 본질적으로 복원력을 제공하지 않습니다.",
        "Explanation": "AWS Direct Connect는 공용 인터넷을 우회하여 AWS 서비스에 고속 및 저지연 연결을 제공하도록 설계되었습니다. 이는 성능과 신뢰성을 향상시킵니다. 그러나 전용 연결을 제공하지만 자동으로 중복성이나 복원력을 포함하지 않으며, 물리적 연결이 중단되면 중단이 발생할 수 있습니다. 따라서 사용자는 복원력을 보장하기 위해 여러 연결이나 장애 조치 전략과 같은 추가 조치를 구현해야 합니다.",
        "Other Options": [
            "옵션 1은 AWS Direct Connect가 사설 회선을 통해 안전한 데이터 전송을 제공하지만, 연결당 1 Gbps 대역폭으로 엄격하게 제한되지 않기 때문에 잘못되었습니다. AWS Direct Connect는 요구 사항에 따라 10 Gbps 이상의 여러 연결 속도를 제공합니다.",
            "옵션 3은 AWS Direct Connect가 서로 다른 위치에 중복 연결을 생성할 수 있는 복원력 옵션을 제공하므로 잘못되었습니다. 또한, 많은 AWS 리전에서 사용할 수 있어 접근성이 향상됩니다.",
            "옵션 4는 AWS Direct Connect가 인터넷 기반 솔루션이 아니며, 일반적으로 VPN 솔루션보다 더 낮은 지연을 초래하는 전용 연결을 제공하므로 잘못되었습니다. 이는 공용 엔드포인트를 통해 데이터를 라우팅하지 않으며, Direct Connect를 사용하는 주요 장점입니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "한 다국적 기업이 북미, 유럽 및 아시아의 사용자에게 서비스를 제공할 새로운 고객 대면 애플리케이션을 AWS에 배포할 계획입니다. 애플리케이션 성능을 최적화하고 각 지역의 데이터 거주 규정을 준수하기 위해, 기업은 사용자 데이터가 사용자 지리적 위치에 가까운 곳에서 처리되고 저장되도록 하기를 원합니다. 또한, 각 지역의 사용자 기반에 가장 가까운 인프라로 서비스를 제공하여 지연 시간을 최소화하고자 합니다.",
        "Question": "이 애플리케이션을 배포하기 위한 가장 적절한 전략은 무엇입니까?",
        "Options": {
            "1": "모든 글로벌 사용자를 중앙 집중식 위치에서 처리하기 위해 고용량 인스턴스가 있는 단일 AWS 리전에 애플리케이션을 배포합니다.",
            "2": "여러 AWS 리전에 애플리케이션을 배포하여 각 리전이 사용자 기반을 제공하고 데이터 거주 요구 사항을 충족하도록 합니다.",
            "3": "하나의 중앙 AWS 리전에 애플리케이션을 배포한 후, 다른 지역에서 데이터 캐싱을 위해 콘텐츠 전송 네트워크(CDN)를 사용하여 접근 속도를 개선합니다.",
            "4": "단일 AWS 리전 내에서 가용 영역을 사용하여 글로벌 사용자에게 서비스를 제공하고, 여러 리전으로 배포하지 않고도 중복성을 보장합니다."
        },
        "Correct Answer": "여러 AWS 리전에 애플리케이션을 배포하여 각 리전이 사용자 기반을 제공하고 데이터 거주 요구 사항을 충족하도록 합니다.",
        "Explanation": "여러 AWS 리리에 애플리케이션을 배포하면 기업이 북미, 유럽 및 아시아의 사용자 데이터 처리 및 저장을 사용자 가까이에 배치할 수 있습니다. 이 전략은 애플리케이션에 접근하는 사용자에 대한 지연 시간을 줄여 성능을 최적화할 뿐만 아니라, 특정 지리적 위치 내에 데이터를 저장해야 하는 데이터 거주 규정을 준수하는 데도 도움이 됩니다. 각 지역에 로컬 인프라를 두면 기업은 법적 요구 사항을 준수하면서 사용자 기반에 효과적으로 서비스를 제공할 수 있습니다.",
        "Other Options": [
            "모든 글로벌 사용자를 처리하기 위해 고용량 인스턴스가 있는 단일 AWS 리전에 애플리케이션을 배포하는 것은 중앙 집중식 실패 지점을 만들고 해당 리전에서 멀리 떨어진 사용자에게 지연 시간을 증가시킵니다. 이 접근 방식은 특정 지리적 위치에 데이터를 저장해야 하는 데이터 거주 규정을 해결하지 않습니다.",
            "다른 지역에서 데이터 캐싱을 위해 콘텐츠 전송 네트워크(CDN)를 사용하는 것은 정적 콘텐츠에 대한 접근 속도를 개선할 수 있지만, 데이터 거주 및 처리 요구 사항 문제를 해결하지 않습니다. 동적 데이터 처리 및 저장은 여전히 적절한 지역에서 이루어져야 규정을 준수할 수 있습니다.",
            "단일 AWS 리전 내에서 가용 영역을 사용하는 것은 중복성과 높은 가용성을 제공하지만, 지리적 분포의 필요성을 해결하지 않습니다. 이 옵션은 여전히 단일 리전에서 멀리 떨어진 사용자에게 지연 시간을 증가시키고 데이터 거주 요구 사항을 충족하지 못합니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "한 의료 기관이 Amazon EC2 인스턴스, RDS 데이터베이스 및 EFS 파일 시스템을 포함한 여러 AWS 서비스에 저장된 민감한 환자 데이터에 대한 포괄적인 백업 솔루션을 찾고 있습니다. 이들은 여러 AWS 계정과 리전에서 백업을 관리하고, 우발적인 변경을 방지하기 위해 쓰기-한번, 읽기-많이(WORM) 규정을 준수하여 데이터 무결성을 보장하며, 중요한 데이터 보호를 위한 규제 및 운영 요구 사항을 충족하기 위해 시점 복구를 제공하는 솔루션이 필요합니다.",
        "Question": "이러한 요구 사항을 가장 잘 충족하는 AWS 서비스 구성은 무엇입니까?",
        "Options": {
            "1": "각 리소스에 대해 수동 스냅샷을 설정하고 추가 중복성을 위해 교차 리전 복제를 활성화합니다.",
            "2": "AWS Backup을 사용하여 백업 계획, WORM 준수를 위한 Vault Lock 및 신뢰할 수 있는 백업 및 복구를 위한 시점 복구(PITR)를 설정합니다.",
            "3": "Amazon S3에 백업을 저장하고 버전 관리 및 복제를 활성화하여 데이터 무결성과 교차 리전 가용성을 보장합니다.",
            "4": "AWS CloudTrail을 활성화하여 로깅하고 로그 데이터를 기반으로 수동 복구 절차를 생성합니다."
        },
        "Correct Answer": "AWS Backup을 사용하여 백업 계획, WORM 준수를 위한 Vault Lock 및 신뢰할 수 있는 백업 및 복구를 위한 시점 복구(PITR)를 설정합니다.",
        "Explanation": "AWS Backup은 여러 계정과 리전에서 AWS 리소스의 백업을 중앙 집중화하고 자동화하도록 설계되었습니다. 사용자는 백업 빈도 및 보존 정책을 정의하는 백업 계획을 생성할 수 있습니다. 또한, AWS Backup은 WORM 준수를 제공하는 Vault Lock을 지원하여 백업 데이터에 대한 우발적인 변경을 방지하고 데이터 무결성을 보장합니다. 시점 복구(PITR) 기능은 데이터를 특정 시점으로 복원할 수 있게 하여 중요한 데이터 보호를 위한 규제 및 운영 요구 사항을 충족하는 데 중요합니다.",
        "Other Options": [
            "각 리소스에 대해 수동 스냅샷을 설정하고 교차 리전 복제를 활성화하는 것은 일부 수준의 중복성을 제공할 수 있지만, 자동화 및 중앙 집중식 관리가 부족합니다. 이 접근 방식은 노동 집약적이며 WORM 준수나 시점 복구를 보장하지 않으므로 조직의 포괄적인 백업 요구 사항에 적합하지 않습니다.",
            "Amazon S3에 백업을 저장하고 버전 관리 및 복제를 활성화하는 것은 데이터 무결성과 가용성에 도움이 될 수 있지만, 여러 AWS 서비스나 계정에 대한 백업 관리 기능을 제공하지 않습니다. 또한, 민감한 환자 데이터에 필요한 WORM 준수나 시점 복구를 본질적으로 제공하지 않습니다.",
            "AWS CloudTrail을 활성화하고 로그 데이터를 기반으로 수동 복구 절차를 생성하는 것은 백업 솔루션이 아닙니다. CloudTrail은 주로 API 호출을 감사하고 모니터링하는 데 사용되며, 리소스에 대한 변경 사항을 이해하는 데 도움이 될 수 있지만, 데이터를 백업하거나 복구하는 메커니즘을 제공하지 않으며, WORM 준수나 시점 복구 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 기술 회사가 EC2 인스턴스를 위한 Auto Scaling 그룹을 구성하고 있습니다. 이들은 변경이 필요할 때마다 전체 인프라를 재구성할 필요 없이 구성 업데이트를 가능하게 하는 설정을 구현하려고 합니다.",
        "Question": "회사가 구성 업데이트를 효율적으로 수행하기 위해 선택해야 할 옵션은 무엇이며, 이 선택의 정당성은 무엇인가요?",
        "Options": {
            "1": "버전 관리를 지원하고 재구성이 필요 없이 업데이트를 가능하게 하므로 Launch Configurations를 활용합니다.",
            "2": "버전 관리 기능을 제공하여 새로운 템플릿을 생성하지 않고도 구성 업데이트를 가능하게 하므로 Launch Templates를 사용합니다.",
            "3": "관리의 용이성과 고유한 버전 관리 기능 때문에 Launch Configurations를 선택합니다.",
            "4": "버전 관리 없이 Auto Scaling 그룹 내에서 실시간 업데이트를 가능하게 하므로 Launch Templates를 선택합니다."
        },
        "Correct Answer": "버전 관리 기능을 제공하여 새로운 템플릿을 생성하지 않고도 구성 업데이트를 가능하게 하므로 Launch Templates를 사용합니다.",
        "Explanation": "Launch Templates는 Auto Scaling 그룹을 구성하는 데 선호되는 선택입니다. 이는 버전 관리를 지원하여 사용자가 템플릿의 여러 버전을 생성할 수 있게 합니다. 즉, 구성 변경이 필요할 때 회사는 전체 인프라를 재구성할 필요 없이 기존 템플릿의 새로운 버전을 간단히 생성할 수 있습니다. 이 기능은 구성 업데이트 프로세스를 간소화하고 관리 효율성을 높이며, 필요할 경우 이전 버전으로 쉽게 롤백할 수 있게 합니다.",
        "Other Options": [
            "버전 관리를 지원하고 재구성이 필요 없이 업데이트를 가능하게 하므로 Launch Configurations를 활용합니다. (잘못된 선택입니다. Launch Configurations는 버전 관리를 지원하지 않으며, 정적이어서 생성 후 업데이트할 수 없습니다. 변경 사항이 있을 경우 새로운 Launch Configuration을 생성해야 합니다.)",
            "관리의 용이성과 고유한 버전 관리 기능 때문에 Launch Configurations를 선택합니다. (잘못된 선택입니다. Launch Configurations는 버전 관리 기능이 부족하여 Launch Templates에 비해 구성 업데이트에 덜 유연합니다.)",
            "버전 관리 없이 Auto Scaling 그룹 내에서 실시간 업데이트를 가능하게 하므로 Launch Templates를 선택합니다. (잘못된 선택입니다. Launch Templates는 버전 관리를 허용하지만, Auto Scaling 그룹 내에서 실시간 업데이트를 직접 허용하지 않으며, 업데이트는 여전히 템플릿의 새로운 버전을 생성해야 합니다.)"
        ]
    },
    {
        "Question Number": "27",
        "Situation": "연구팀이 매우 복잡한 과학 모델링 시뮬레이션을 실행하고 있으며, 이는 정확한 결과를 신속하게 생성하기 위해 매우 높은 CPU 성능과 빠른 처리 속도가 필요합니다. 이러한 시뮬레이션은 컴퓨팅 집약적이며 미디어 인코딩, 계산 유체 역학 및 일반 기계 학습 모델 훈련과 같은 작업을 포함합니다. 팀은 이러한 작업이 주로 CPU에 의존하므로 높은 메모리나 GPU 지원이 필요하지 않습니다.",
        "Question": "어떤 EC2 인스턴스 카테고리가 그들의 요구에 가장 적합할까요?",
        "Options": {
            "1": "일반 목적",
            "2": "메모리 최적화",
            "3": "컴퓨팅 최적화",
            "4": "가속 컴퓨팅"
        },
        "Correct Answer": "컴퓨팅 최적화",
        "Explanation": "컴퓨팅 최적화 EC2 인스턴스 카테고리는 높은 CPU 성능이 필요한 컴퓨팅 집약적 작업을 위해 특별히 설계되었습니다. 연구팀의 시뮬레이션이 CPU에 의존하고 높은 메모리나 GPU 지원이 필요하지 않기 때문에, 컴퓨팅 최적화 인스턴스는 미디어 인코딩, 계산 유체 역학 및 기계 학습 모델 훈련과 같은 작업을 효율적으로 처리하는 데 필요한 처리 능력과 속도를 제공합니다. 이러한 인스턴스는 높은 컴퓨팅 용량을 요구하는 작업에 이상적이며, 정확한 결과를 생성하는 데 걸리는 시간을 크게 줄일 수 있습니다.",
        "Other Options": [
            "일반 목적 인스턴스는 컴퓨팅, 메모리 및 네트워킹 자원의 균형을 제공하여 다양한 작업에 적합하지만, 컴퓨팅 집약적 작업에 최적화되어 있지 않습니다. 이들은 설명된 시뮬레이션에 필요한 높은 CPU 성능을 제공하지 않을 수 있습니다.",
            "메모리 최적화 인스턴스는 인메모리 데이터베이스 및 실시간 빅데이터 분석과 같은 높은 메모리 용량과 처리량이 필요한 작업을 위해 설계되었습니다. 연구팀이 높은 메모리 지원이 필요하지 않으므로, 이 카테고리는 그들의 컴퓨팅 집약적 시뮬레이션에 적합하지 않습니다.",
            "가속 컴퓨팅 인스턴스는 GPU 또는 FPGA와 같은 하드웨어 가속기가 이점을 주는 작업에 맞춰져 있습니다. 이러한 인스턴스는 기계 학습 추론 및 그래픽 처리와 같은 작업에 이상적이지만, CPU에 의존하는 작업에는 필요하지 않으므로 팀의 요구에 덜 적합합니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "물류 회사가 배송 차량의 데이터를 실시간으로 처리하여 경로 및 교통 상황을 모니터링해야 합니다. 이들은 지연 시간을 줄이고 클라우드로 전송되는 데이터 양을 최소화하기 위해 가능한 한 소스에 가까운 곳에서 데이터를 처리하고자 합니다.",
        "Question": "이러한 요구를 가장 잘 충족할 수 있는 분산 컴퓨팅 전략은 무엇인가요?",
        "Options": {
            "1": "가장 가까운 AWS 리전의 Amazon EC2 인스턴스에서 모든 데이터 처리를 실행합니다.",
            "2": "엣지 처리를 사용하여 장치에서 데이터를 로컬로 처리합니다.",
            "3": "AWS Lambda에 데이터를 전송하여 서버리스 처리를 수행합니다.",
            "4": "회사의 데이터 센터에 AWS Outposts 랙을 사용합니다."
        },
        "Correct Answer": "엣지 처리를 사용하여 장치에서 데이터를 로컬로 처리합니다.",
        "Explanation": "엣지 처리는 데이터 소스에 가능한 한 가까운 곳에서 데이터를 처리할 수 있게 하여 배송 차량의 실시간 모니터링에 매우 중요합니다. 장치에서 데이터를 로컬로 처리함으로써 물류 회사는 지연 시간을 크게 줄일 수 있으며, 데이터가 처리하기 위해 먼 클라우드 서버로 이동할 필요가 없습니다. 이 접근 방식은 클라우드로 전송되는 데이터 양을 최소화하여 데이터 처리의 효율성과 속도에 대한 회사의 요구에 완벽하게 부합합니다.",
        "Other Options": [
            "가장 가까운 AWS 리전의 Amazon EC2 인스턴스에서 모든 데이터 처리를 실행하는 것은 데이터가 클라우드에 도달하기 위해 이동해야 하는 거리 때문에 지연 시간을 초래합니다. 이 옵션은 엣지 처리만큼 실시간 처리 요구를 효과적으로 충족하지 못합니다.",
            "AWS Lambda에 데이터를 전송하여 서버리스 처리를 수행하는 것도 지연 시간이 발생합니다. 데이터가 클라우드로 전송되어야 처리되기 때문입니다. AWS Lambda는 많은 사용 사례에 대해 효율적이지만, 즉각적인 분석이 필요한 배송 차량에서 생성된 데이터의 실시간 처리에는 최적이 아닙니다.",
            "회사의 데이터 센터에 AWS Outposts 랙을 사용하는 것은 일부 로컬 처리의 이점을 제공할 수 있지만, 여전히 물리적 설정이 필요하며 진정한 엣지 처리만큼 민첩하거나 비용 효율적이지 않을 수 있습니다. 또한, 엣지 장치에서 직접 처리하는 것보다 데이터 소스에 더 가깝지 않을 수 있어 지연 시간이 증가할 수 있습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 회사가 각각 고유한 HTTPS 도메인 이름을 가진 두 개의 웹 애플리케이션을 호스팅하고 있습니다. 이들은 HTTPS 지원을 유지하면서 사용하는 로드 밸런서의 수를 줄여야 합니다.",
        "Question": "이 요구에 가장 적합한 AWS 로드 밸런서 유형은 무엇이며, 그 이유는 무엇인가요?",
        "Options": {
            "1": "Classic Load Balancer (CLB), 여러 도메인을 단일 로드 밸런서로 통합할 수 있기 때문입니다.",
            "2": "Application Load Balancer (ALB), 호스트 기반 라우팅을 지원하여 단일 로드 밸런서에서 여러 HTTPS 도메인을 허용하기 때문입니다.",
            "3": "Network Load Balancer (NLB), 레이어 4 라우팅을 제공하고 여러 HTTPS 도메인을 처리할 수 있기 때문입니다.",
            "4": "Elastic Load Balancer (ELB)와 스티키 세션을 사용하여 동일한 로드 밸런서 아래 여러 대상 그룹을 허용하기 때문입니다."
        },
        "Correct Answer": "Application Load Balancer (ALB), 호스트 기반 라우팅을 지원하여 단일 로드 밸런서에서 여러 HTTPS 도메인을 허용하기 때문입니다.",
        "Explanation": "Application Load Balancer (ALB)는 HTTP 및 HTTPS 트래픽을 처리하도록 특별히 설계되었으며, 호스트 기반 라우팅을 포함한 고급 라우팅 기능을 지원합니다. 이는 요청의 호스트 이름에 따라 서로 다른 대상 그룹으로 요청을 라우팅할 수 있음을 의미하며, 고유한 HTTPS 도메인 이름을 가진 여러 웹 애플리케이션을 호스팅하는 데 필수적입니다. 또한 ALB는 Server Name Indication (SNI)을 지원하여 단일 IP 주소에서 여러 SSL 인증서를 제공할 수 있어, 별도의 로드 밸런서 없이 각 도메인에 대한 안전한 연결을 가능하게 합니다.",
        "Other Options": [
            "Classic Load Balancer (CLB)는 호스트 기반 라우팅이나 SNI를 지원하지 않으므로 여러 HTTPS 도메인을 효율적으로 처리하는 데 적합하지 않습니다. 이는 기본적인 로드 밸런싱을 위해 설계되었으며, 이 시나리오에 필요한 고급 기능이 부족합니다.",
            "Network Load Balancer (NLB)는 레이어 4에서 작동하며 TCP 트래픽을 처리하는 데 최적화되어 있습니다. 여러 도메인을 처리할 수 있지만, HTTPS 트래픽을 효과적으로 관리하는 데 필요한 SSL 종료나 호스트 기반 라우팅 기능을 제공하지 않습니다.",
            "Elastic Load Balancer (ELB)는 ALB와 NLB를 포함하는 일반 용어입니다. 스티키 세션을 구성할 수 있지만, 단일 로드 밸런서에서 여러 HTTPS 도메인을 지원하는 요구를 해결하지 않습니다. ALB가 이 시나리오의 요구를 충족하는 특정 유형입니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션할 계획입니다. 이 애플리케이션은 사용자 인증 및 그룹 관리를 위해 Active Directory에 크게 의존하고 있습니다. IT 팀은 최대 3,000명의 사용자를 지원하고 Amazon Workspaces와 통합되며 복잡한 온프레미스 통합이 필요 없는 AWS의 관리형 솔루션을 원합니다. 또한, 자원의 중앙 집중식 관리를 위해 동일한 사용자 이름과 비밀번호로 Windows 환경을 지원할 수 있는 솔루션이 필요합니다.",
        "Question": "어떤 AWS Directory Service 옵션이 이러한 요구를 가장 잘 충족할까요?",
        "Options": {
            "1": "Standalone 디렉토리 관리를 위한 Small 인스턴스의 Simple AD",
            "2": "다중 AZ 배포가 있는 AWS Managed Microsoft AD",
            "3": "크로스 계정 액세스를 위한 AWS SSO (Single Sign-On)",
            "4": "사용자 풀 관리를 위한 Amazon Cognito"
        },
        "Correct Answer": "다중 AZ 배포가 있는 AWS Managed Microsoft AD",
        "Explanation": "AWS Managed Microsoft AD는 AWS 클라우드에서 완전 관리형 Active Directory를 제공하도록 설계되었습니다. 이는 Windows 환경을 지원하며, Active Directory에 의존하는 애플리케이션과의 원활한 통합을 허용합니다. 최대 50,000명의 사용자를 지원할 수 있어 3,000명의 요구를 초과합니다. 또한 Amazon Workspaces와 잘 통합되어 사용자가 중앙 집중식 관리를 위해 동일한 사용자 이름과 비밀번호를 가질 수 있도록 하여, 복잡한 온프레미스 통합 없이 회사의 요구를 충족합니다. 다중 AZ 배포는 높은 가용성과 복원력을 보장합니다.",
        "Other Options": [
            "Small 인스턴스의 Simple AD는 Active Directory 기능의 제한된 집합만 지원하는 기본 디렉토리 서비스로, 전체 Active Directory 기능이 필요한 애플리케이션에 적합하지 않습니다. 또한 AWS Managed Microsoft AD만큼 Amazon Workspaces와의 통합 수준을 지원하지 않습니다.",
            "AWS SSO (Single Sign-On)는 여러 AWS 계정 및 애플리케이션에 대한 액세스를 관리하기 위해 주로 설계되었지만, Windows 환경에서 사용자 인증 및 그룹 관리를 위해 필요한 전체 Active Directory 기능을 제공하지 않습니다. Active Directory의 직접적인 대체품이 아닙니다.",
            "Amazon Cognito는 웹 및 모바일 애플리케이션을 위한 사용자 인증 및 관리에 중점을 두고 있지만, 회사의 애플리케이션에 필요한 Active Directory 기능을 제공하지 않습니다. 이는 Active Directory 통합이 필요한 Windows 환경을 관리하기보다는 사용자 풀 및 연합된 신원 관리에 더 적합합니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 여러 Amazon EC2 인스턴스에 걸쳐 다양한 가용 영역에서 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 사용자 생성 콘텐츠를 저장하고 접근하기 위한 공유 파일 시스템이 필요합니다. 회사는 또한 온프레미스 데이터 센터를 AWS의 공유 스토리지에 연결할 수 있는 유연성을 원합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 솔루션 아키텍트가 추천해야 할 AWS 솔루션은 무엇입니까?",
        "Options": {
            "1": "Amazon EBS와 Multi-Attach를 사용하여 가용 영역 간에 연결",
            "2": "Amazon EFS를 사용하여 각 가용 영역에 마운트 대상을 설정하고 온프레미스 연결을 위해 VPN 또는 Direct Connect를 통해 접근",
            "3": "Amazon S3와 Transfer Acceleration을 사용하여 교차 지역 접근",
            "4": "Amazon RDS와 각 가용 영역에 읽기 복제본 설정"
        },
        "Correct Answer": "Amazon EFS를 사용하여 각 가용 영역에 마운트 대상을 설정하고 온프레미스 연결을 위해 VPN 또는 Direct Connect를 통해 접근",
        "Explanation": "Amazon EFS (Elastic File System)는 여러 EC2 인스턴스에 걸쳐 마운트할 수 있는 완전 관리형 파일 스토리지 서비스로, 애플리케이션을 위한 공유 파일 시스템을 제공합니다. NFS (Network File System) 프로토콜을 지원하여 파일에 대한 공유 접근이 필요한 애플리케이션에 적합합니다. 또한 EFS는 온프레미스 데이터 센터에서 VPN 또는 AWS Direct Connect를 통해 접근할 수 있어 온프레미스와 AWS 스토리지 간의 연결 요구 사항을 충족합니다.",
        "Other Options": [
            "Amazon EBS (Elastic Block Store)와 Multi-Attach를 사용하면 여러 EC2 인스턴스가 단일 EBS 볼륨에 연결할 수 있지만, 이는 단일 가용 영역에 제한됩니다. 이는 여러 가용 영역에 걸친 공유 파일 시스템 요구 사항을 충족하지 않습니다.",
            "Amazon S3 (Simple Storage Service)는 객체 스토리지 서비스로 사용자 생성 콘텐츠를 저장할 수 있지만, 애플리케이션이 일반적으로 요구하는 전통적인 파일 시스템 인터페이스를 제공하지 않습니다. Transfer Acceleration은 업로드 및 다운로드 속도를 높이는 데 사용되지만, EC2 인스턴스 간의 공유 파일 시스템 필요를 해결하지 않습니다.",
            "Amazon RDS (Relational Database Service)는 관리형 데이터베이스 서비스로, 높은 가용성을 위해 다양한 가용 영역에 읽기 복제본을 가질 수 있지만, 사용자 생성 콘텐츠를 공유 파일 시스템 형식으로 저장하는 데 적합하지 않습니다. RDS는 구조화된 데이터 및 관계형 데이터베이스 사용 사례를 위해 설계되었으며, 파일 저장소에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 미디어 회사가 전 세계적으로 비디오 콘텐츠를 스트리밍하고 있으며, 다양한 지리적 지역의 사용자에게 전달 속도를 개선하고 지연 시간을 줄일 필요가 있습니다. 회사는 피크 시간 동안 높은 수요를 보고 있으며, 콘텐츠 버퍼링이 사용자 경험에 영향을 미치고 있습니다. 또한, 리소스 소모를 방지하기 위해 원본 서버의 부하를 줄여야 합니다.",
        "Question": "회사가 이러한 목표를 달성하기 위해 어떤 AWS 서비스를 사용해야 하며, 어떤 이점을 제공합니까?",
        "Options": {
            "1": "Amazon CloudFront를 CDN으로 사용하여 전 세계 엣지 위치에서 콘텐츠를 캐시하여 지연 시간을 줄이고 원본 서버의 트래픽을 오프로드합니다.",
            "2": "Amazon Route 53을 사용하여 지리적 라우팅으로 사용자를 가장 가까운 S3 버킷으로 안내합니다.",
            "3": "Amazon S3를 저장소로 사용하고 사용자를 한 지역의 단일 EC2 인스턴스로 안내하여 모든 비디오 콘텐츠를 제공합니다.",
            "4": "AWS Direct Connect를 사용하여 전 세계 모든 고객에게 전용 네트워크 연결을 설정하여 더 빠른 콘텐츠 전달을 합니다."
        },
        "Correct Answer": "Amazon CloudFront를 CDN으로 사용하여 전 세계 엣지 위치에서 콘텐츠를 캐시하여 지연 시간을 줄이고 원본 서버의 트래픽을 오프로드합니다.",
        "Explanation": "Amazon CloudFront는 전 세계적으로 콘텐츠를 캐시하는 콘텐츠 배달 네트워크(CDN)입니다. CloudFront를 사용함으로써 미디어 회사는 사용자에게 비디오 콘텐츠를 더 가까이 전달할 수 있어 지연 시간을 크게 줄이고 전달 속도를 개선할 수 있습니다. 이 캐싱 메커니즘은 원본 서버의 트래픽을 오프로드하여 피크 수요 시간 동안 리소스 소모를 방지하는 데 도움을 줍니다. 전반적으로 CloudFront는 버퍼링을 최소화하고 콘텐츠에 대한 더 빠른 접근을 보장하여 사용자 경험을 향상시킵니다.",
        "Other Options": [
            "Amazon Route 53을 사용하여 지리적 라우팅을 통해 사용자를 가장 가까운 리소스로 안내할 수 있지만, 콘텐츠를 캐시하거나 지연 시간을 효과적으로 줄이지는 않습니다. 주로 DNS 라우팅을 관리하며 버퍼링 문제나 원본 서버의 부하를 해결하지 않습니다.",
            "Amazon S3를 저장소로 사용하고 사용자를 한 지역의 단일 EC2 인스턴스로 안내하는 것은 전 세계 콘텐츠 전달에 효과적이지 않습니다. 이 접근 방식은 EC2 인스턴스에서 멀리 떨어진 사용자에게 높은 지연 시간을 초래할 수 있으며, 원본 서버의 부하를 줄이지 못해 피크 시간 동안 성능 문제를 초래할 수 있습니다.",
            "AWS Direct Connect는 전용 네트워크 연결을 제공하지만 콘텐츠 전달을 위해 설계되지 않았습니다. 이는 온프레미스 데이터 센터와 AWS 간의 개인 연결을 설정하는 데 더 적합하며, 전 세계 최종 사용자에게 콘텐츠 전달 속도를 개선하는 데는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 조직이 온프레미스 데이터 센터와 AWS 환경 간에 안전한 연결을 설정하고자 합니다. 이 연결은 높은 가용성과 중요한 애플리케이션 데이터에 대한 저지연 링크를 지원해야 합니다.",
        "Question": "어떤 솔루션이 이러한 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "인터넷을 통한 VPN 연결 설정",
            "2": "중복 연결을 갖춘 AWS Direct Connect 사용",
            "3": "트래픽 분산을 위한 Elastic Load Balancer 구성",
            "4": "VPC 피어링 연결 사용"
        },
        "Correct Answer": "중복 연결을 갖춘 AWS Direct Connect 사용",
        "Explanation": "AWS Direct Connect는 온프레미스 데이터 센터에서 AWS로의 전용 네트워크 연결을 제공하며, 이는 높은 가용성과 저지연 요구 사항에 이상적입니다. 중복 연결을 갖춘 Direct Connect를 사용함으로써 조직은 기본 링크가 실패할 경우 백업 링크가 제공되어 높은 가용성을 유지할 수 있습니다. 이 솔루션은 기업 수준의 연결을 위해 특별히 설계되었으며, 중요한 애플리케이션 데이터를 효율적으로 처리할 수 있습니다.",
        "Other Options": [
            "인터넷을 통한 VPN 연결 설정은 안전한 연결을 제공할 수 있지만, 일반적으로 AWS Direct Connect와 같은 전용 연결에 비해 저지연이나 높은 가용성을 보장하지 않습니다. VPN 연결은 인터넷 트래픽의 영향을 받을 수 있으며 지연 시간에 변동성을 초래할 수 있습니다.",
            "Elastic Load Balancer를 구성하는 것은 온프레미스 데이터 센터와 AWS 간의 직접 연결을 설정하는 것과 관련이 없습니다. 로드 밸런서는 여러 대상 간에 들어오는 애플리케이션 트래픽을 분산하는 데 사용되지만, 이 시나리오에서 필요한 안전한 연결을 촉진하지 않습니다.",
            "VPC 피어링 연결을 사용하는 것은 AWS 내 두 VPC를 연결하는 데 유용하지만, 온프레미스 데이터 센터와 AWS를 연결하는 요구 사항을 해결하지 않습니다. VPC 피어링은 전용 저지연 연결을 제공하지 않으며 이 시나리오에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 외부 계약자에게 S3 버킷에 대한 임시 접근 권한을 부여해야 합니다. 접근 권한은 지정된 기간 후에 자동으로 만료되어야 하며 특정 작업으로 제한되어야 합니다.",
        "Question": "회사가 구현해야 할 솔루션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "각 계약자에 대한 IAM 사용자 생성 및 S3 접근 정책 부착",
            "2": "AWS IAM Identity Center (AWS Single Sign-On)를 사용하여 임시 접근 역할 설정",
            "3": "계약자가 접근해야 하는 S3 객체에 대한 사전 서명된 URL 생성",
            "4": "접근을 제한하기 위해 시간 기반 조건이 있는 버킷 정책 부착",
            "5": "AWS Security Token Service (STS)를 사용하여 임시 보안 자격 증명 구현"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "계약자가 접근해야 하는 S3 객체에 대한 사전 서명된 URL 생성",
            "AWS Security Token Service (STS)를 사용하여 임시 보안 자격 증명 구현"
        ],
        "Explanation": "사전 서명된 URL은 특정 S3 객체에 대한 임시 접근을 부여하는 방법을 제공합니다. 이 URL은 만료 시간이 설정되어 생성되며, 만료 후에는 더 이상 유효하지 않습니다. 이는 지정된 기간 후에 접근이 자동으로 만료되는 요구 사항과 일치합니다. AWS Security Token Service (STS)는 AWS Identity and Access Management (IAM) 사용자에 대한 임시 제한 권한 자격 증명을 요청할 수 있는 웹 서비스입니다. 이러한 임시 보안 자격 증명에 대한 권한을 지정할 수 있어 계약자가 수행할 수 있는 작업을 제한할 수 있습니다.",
        "Other Options": [
            "각 계약자에 대한 IAM 사용자 생성 및 S3 접근 정책 부착은 임시 솔루션이 아니며 자동으로 만료되지 않습니다. 이는 접근을 철회하기 위해 수동 개입이 필요합니다.",
            "AWS IAM Identity Center (AWS Single Sign-On)를 사용하여 임시 접근 역할을 설정할 수 있지만, 특정 작업이나 S3 객체에 대한 접근을 본질적으로 제한하지는 않습니다.",
            "접근을 제한하기 위해 시간 기반 조건이 있는 버킷 정책을 부착하는 것은 실행 가능한 솔루션이 아닙니다. AWS는 버킷 정책에서 시간 기반 조건을 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 웹 애플리케이션을 설계하고 있으며, 관심사를 분리하고 확장성을 높이기 위해 다계층 아키텍처를 구현하고자 합니다. 사용자의 수요에 따라 변동하는 작업 부하를 예상하고 있으며, 아키텍처는 트래픽 패턴에 따라 자동으로 확장되어야 합니다. 회사는 또한 무단 접근을 방지하기 위해 계층을 분리하여 보안을 개선하고자 합니다.",
        "Question": "회사가 구현해야 할 아키텍처를 가장 잘 설명하는 것은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "웹 계층으로 Amazon EC2 인스턴스 사용, 데이터베이스 계층으로 Amazon RDS 사용, 웹 계층의 인스턴스 간 트래픽을 분산하기 위해 Application Load Balancer (ALB) 사용",
            "2": "웹 및 데이터베이스 계층 모두에 AWS Lambda 함수를 사용하여 인프라 관리 감소 및 자동 확장 가능",
            "3": "저장소로 Amazon S3 사용, 계산을 위해 Amazon EC2 인스턴스 사용, 계층 간 안전한 통신을 위해 AWS Direct Connect 사용",
            "4": "웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 사설 서브넷을 갖춘 VPC 구현, 웹 및 애플리케이션 계층을 위한 Auto Scaling 그룹 사용, 사설 서브넷에 RDS 인스턴스 배포",
            "5": "웹 및 데이터베이스 계층 모두에 단일 EC2 인스턴스를 사용하고 이를 VPC를 통해 연결하여 격리"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "웹 계층으로 Amazon EC2 인스턴스 사용, 데이터베이스 계층으로 Amazon RDS 사용, 웹 계층의 인스턴스 간 트래픽을 분산하기 위해 Application Load Balancer (ALB) 사용",
            "웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 사설 서브넷을 갖춘 VPC 구현, 웹 및 애플리케이션 계층을 위한 Auto Scaling 그룹 사용, 사설 서브넷에 RDS 인스턴스 배포"
        ],
        "Explanation": "첫 번째 정답은 웹 계층으로 Amazon EC2를 사용하여 변동하는 작업 부하를 처리하고 자동으로 확장할 수 있습니다. 데이터베이스 계층으로 Amazon RDS를 사용하여 데이터베이스 관리를 위한 확장 가능하고 안전한 솔루션을 제공합니다. Application Load Balancer는 웹 계층의 인스턴스 간 트래픽을 분산하여 변동하는 작업 부하를 관리하는 데 도움을 줍니다. 두 번째 정답은 웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 사설 서브넷을 갖춘 VPC를 사용하여 격리를 제공하고 보안을 강화합니다. 웹 및 애플리케이션 계층을 위한 Auto Scaling 그룹은 변동하는 작업 부하를 처리하고 자동으로 확장할 수 있습니다. 사설 서브넷에 배포된 RDS 인스턴스는 데이터베이스 관리를 위한 확장 가능하고 안전한 솔루션을 제공합니다.",
        "Other Options": [
            "웹 및 데이터베이스 계층 모두에 AWS Lambda 함수를 사용하는 것은 인프라 관리 감소 및 자동 확장을 가능하게 할 수 있지만, 보안을 강화하기 위해 계층 간의 필요한 격리를 제공하지 않을 수 있습니다.",
            "저장소로 Amazon S3를 사용하고 계산을 위해 Amazon EC2 인스턴스를 사용하며 계층 간 안전한 통신을 위해 AWS Direct Connect를 사용하는 것은 다계층 아키텍처를 제공할 수 있지만, 변동하는 작업 부하를 처리하거나 트래픽 패턴에 따라 자동으로 확장하는 메커니즘을 언급하지 않습니다.",
            "웹 및 데이터베이스 계층 모두에 단일 EC2 인스턴스를 사용하고 이를 VPC를 통해 연결하는 것은 다계층 아키텍처를 제공하지 않습니다. 또한 변동하는 작업 부하를 처리하거나 트래픽 패턴에 따라 자동으로 확장하는 메커니즘을 언급하지 않습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "의료 애플리케이션은 환자 기록을 안전하게 저장해야 합니다. 기록은 업데이트를 위해 자주 접근해야 하며 파일 계층 구조와 메타데이터를 유지해야 합니다. 애플리케이션 팀은 저장 비용을 최적화하고자 하지만 일관된 저지연 접근도 필요합니다.",
        "Question": "이러한 요구 사항을 가장 잘 충족하는 저장 유형은 무엇입니까?",
        "Options": {
            "1": "Object storage (Amazon S3)",
            "2": "File storage (Amazon EFS)",
            "3": "Block storage (Amazon EBS)",
            "4": "Cold storage (Amazon S3 Glacier)"
        },
        "Correct Answer": "File storage (Amazon EFS)",
        "Explanation": "File storage인 Amazon EFS (Elastic File System)는 파일 계층 구조와 메타데이터가 필요한 사용 사례를 위해 설계되어 환자 기록 저장에 이상적입니다. EFS는 저지연 접근을 제공하며 여러 인스턴스가 동시에 동일한 데이터에 접근할 수 있게 하여 환자 기록을 자주 업데이트해야 하는 애플리케이션에 필수적입니다. 또한, EFS는 자동으로 확장할 수 있어 성능을 유지하면서 저장 비용을 최적화합니다.",
        "Other Options": [
            "Object storage (Amazon S3)는 비구조화된 데이터를 위해 설계되었기 때문에 이 시나리오에 적합하지 않으며, 파일 계층 구조를 유지하거나 환자 기록을 효과적으로 관리하는 데 필요한 전통적인 파일 시스템 의미를 지원하지 않습니다.",
            "Block storage (Amazon EBS)는 일반적으로 데이터베이스나 가상 머신을 위한 고성능 저장소가 필요한 애플리케이션에 사용됩니다. 저지연 접근을 제공하지만 파일 계층 구조를 제공하지 않으며 여러 인스턴스 간의 파일 공유가 용이하지 않아 의료 애플리케이션의 요구 사항을 충족하지 않습니다.",
            "Cold storage (Amazon S3 Glacier)는 자주 접근하지 않는 데이터를 위해 설계되었으며, 자주 업데이트되고 저지연 접근이 필요한 애플리케이션에는 적합하지 않습니다. 주로 데이터 아카이빙에 사용됩니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "한 회사는 여러 AWS 계정에서 특정 IAM 역할이 접근해야 하는 민감한 데이터를 포함하는 S3 버킷을 가지고 있습니다. 회사는 이러한 역할만 접근할 수 있도록 하면서 관리가 간단하고 복잡한 IAM 사용자 구성을 피하고자 합니다.",
        "Question": "이 접근 제어를 구현하기 위한 가장 적절한 방법은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "각 계정에 S3 버킷에 대한 접근을 허용하는 IAM 정책을 생성하고 필요한 역할에 연결합니다.",
            "2": "각 계정의 필요한 IAM 역할에 대한 접근을 명시적으로 허용하는 버킷 정책을 S3 버킷에 연결합니다.",
            "3": "AWS Secrets Manager를 사용하여 버킷에 접근해야 하는 각 IAM 역할의 접근 자격 증명을 저장하고 관리합니다.",
            "4": "각 계정에 VPC 엔드포인트를 설정하여 VPC 네트워크 구성을 기반으로 S3 버킷에 대한 접근을 제어합니다.",
            "5": "여러 계정에서 허용된 IAM 역할을 지정하는 정책과 함께 Amazon S3 Access Points를 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "각 계정에 S3 버킷에 대한 접근을 허용하는 IAM 정책을 생성하고 필요한 역할에 연결합니다.",
            "각 계정의 필요한 IAM 역할에 대한 접근을 명시적으로 허용하는 버킷 정책을 S3 버킷에 연결합니다."
        ],
        "Explanation": "각 계정에 S3 버킷에 대한 접근을 허용하는 IAM 정책을 생성하고 필요한 역할에 연결하는 것은 올바른 답변입니다. IAM 정책은 여러 AWS 계정의 권한을 관리하는 방법입니다. 이 접근 방식은 회사가 각 계정의 어떤 역할이 S3 버킷에 접근할 수 있는지를 지정할 수 있게 합니다. 또한, S3 버킷에 필요한 IAM 역할에 대한 접근을 명시적으로 허용하는 버킷 정책을 연결하는 것도 올바릅니다. 버킷 정책은 해당 버킷의 모든 객체에 적용되며, S3 버킷에 대한 교차 계정 접근을 허용하는 데 사용될 수 있습니다.",
        "Other Options": [
            "AWS Secrets Manager를 사용하여 각 IAM 역할의 접근 자격 증명을 저장하고 관리하는 것은 최선의 선택이 아닙니다. 이는 접근 자격 증명 관리에 불필요한 복잡성을 추가할 수 있습니다. 회사는 복잡한 IAM 사용자 구성을 피하고자 하며, Secrets Manager를 사용하는 것은 S3 버킷에 대한 접근 관리의 간소화를 제공하지 않습니다.",
            "각 계정에 VPC 엔드포인트를 설정하여 S3 버킷에 대한 접근을 제어하는 것은 최선의 선택이 아닙니다. 이는 어떤 IAM 역할이 S3 버킷에 접근할 수 있는지를 직접적으로 제어하지 않기 때문입니다. VPC 엔드포인트는 VPC를 지원되는 AWS 서비스에 비공식적으로 연결하는 데 사용되며, IAM 역할 수준에서 S3 버킷에 대한 접근을 관리하는 데 사용되지 않습니다.",
            "Amazon S3 Access Points를 사용하여 여러 계정에서 허용된 IAM 역할을 지정하는 정책을 사용하는 것은 최선의 선택이 아닙니다. S3 Access Points는 공유 데이터 세트를 사용하는 애플리케이션의 데이터 접근 관리를 간소화하기 위해 사용됩니다. 이들은 여러 계정에서 IAM 역할 수준에서 S3 버킷에 대한 접근을 관리하는 방법을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사는 지역 내 인프라 장애를 견딜 수 있는 고가용성 웹 애플리케이션을 설계하고, 여러 위치의 사용자에게 저지연 접근을 제공하고자 합니다.",
        "Question": "회사가 여러 가용 영역에 걸쳐 트래픽 분배를 관리하기 위해 어떤 AWS 서비스를 사용해야 하며, 어떤 이점을 제공합니까?",
        "Options": {
            "1": "Amazon Route 53",
            "2": "AWS Direct Connect",
            "3": "Amazon S3",
            "4": "Amazon DynamoDB"
        },
        "Correct Answer": "Amazon Route 53",
        "Explanation": "Amazon Route 53은 사용자 요청을 가장 가까운 건강한 엔드포인트로 라우팅하여 여러 가용 영역에 걸쳐 트래픽 분배를 관리할 수 있는 확장 가능한 도메인 이름 시스템(DNS) 웹 서비스입니다. 이는 저지연 접근과 높은 가용성을 보장하여 인프라 장애를 견디고 다양한 지리적 위치에서 성능을 유지해야 하는 애플리케이션에 이상적입니다.",
        "Other Options": [
            "AWS Direct Connect는 귀하의 시설에서 AWS로의 전용 네트워크 연결을 제공하는 클라우드 서비스입니다. 네트워크 성능을 개선할 수 있지만 가용 영역 간의 트래픽 분배를 관리하지 않습니다.",
            "Amazon S3 (Simple Storage Service)는 데이터에 대한 고도로 확장 가능한 저장소를 제공하는 객체 저장 서비스입니다. 웹 애플리케이션의 트래픽 분배나 라우팅을 처리하지 않습니다.",
            "Amazon DynamoDB는 빠르고 예측 가능한 성능을 제공하는 완전 관리형 NoSQL 데이터베이스 서비스입니다. 이는 여러 가용 영역에 걸쳐 사용자 요청을 관리하거나 트래픽 분배를 위해 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 회사는 AWS Lambda 함수와 DynamoDB 및 S3를 안전하게 통합하고자 합니다. Lambda 함수가 이러한 서비스에서 특정 작업만 수행할 수 있도록 하면서, 어떤 다른 AWS 서비스와 계정이 함수를 호출할 수 있는지를 제한해야 합니다.",
        "Question": "이를 달성하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "DynamoDB 및 S3에 대한 허용된 작업을 지정하는 인라인 정책을 Lambda 함수에 연결하고, Lambda 함수를 호출할 수 있는 서비스 및 계정을 제한하는 리소스 정책을 적용합니다.",
            "2": "DynamoDB 및 S3에 대한 필요한 작업에 대한 권한을 부여하는 Lambda 실행 역할을 사용하고, 호출 권한을 제어하기 위해 Lambda 리소스 정책을 추가합니다.",
            "3": "DynamoDB 및 S3에 접근하기 위해 Lambda 함수에 관리형 IAM 정책을 연결하고, 호출을 제한하기 위해 Lambda 권한 경계를 구성합니다.",
            "4": "DynamoDB 및 S3에 접근하기 위해 Lambda 함수에 대한 서비스 연결 역할을 생성하고, 호출을 제한하기 위해 S3 버킷 정책을 사용합니다."
        },
        "Correct Answer": "DynamoDB 및 S3에 대한 필요한 작업에 대한 권한을 부여하는 Lambda 실행 역할을 사용하고, 호출 권한을 제어하기 위해 Lambda 리소스 정책을 추가합니다.",
        "Explanation": "Lambda 실행 역할을 사용하는 것은 AWS Lambda 함수에 권한을 부여하는 최선의 방법입니다. 이 역할은 함수가 DynamoDB 및 S3에서 특정 작업을 수행할 수 있도록 하여 필요한 권한만 부여되도록 합니다. 또한, Lambda 리소스 정책을 적용하여 어떤 AWS 서비스와 계정이 Lambda 함수를 호출할 수 있는지를 제어할 수 있어 안전하고 유연한 접근 관리 방법을 제공합니다.",
        "Other Options": [
            "Lambda 함수에 인라인 정책을 연결하는 것은 권장되지 않습니다. 인라인 정책은 특정 리소스에 연결되어 있으며 관리가 어려워질 수 있습니다. Lambda 실행 역할은 더 확장 가능하고 관리하기 쉬운 접근 방식입니다. 리소스 정책은 중요하지만, 실행 역할이 다른 AWS 서비스에 접근할 수 있는 권한을 부여하는 주요 방법입니다.",
            "Lambda 함수에 관리형 IAM 정책을 연결하는 것은 최선의 접근 방식이 아닙니다. 관리형 정책은 더 광범위하며 필요 이상으로 많은 권한을 부여할 수 있습니다. 또한, 권한 경계는 권한을 제한하는 데 도움이 될 수 있지만, 호출 권한을 제어하는 주요 방법은 리소스 정책이 더 적합합니다.",
            "Lambda 함수에 대한 서비스 연결 역할을 생성하는 것은 이 경우 적용되지 않습니다. 서비스 연결 역할은 AWS 서비스가 귀하를 대신하여 작업을 수행하는 데 사용하는 미리 정의된 역할입니다. 이는 DynamoDB 및 S3에 대한 접근을 제어하는 데 필요한 세분성을 제공하지 않습니다. S3 버킷 정책도 Lambda 호출 권한을 제어하는 데 적합하지 않으며, 이는 S3에 특정되어 있고 Lambda 함수에는 적용되지 않습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "글로벌 금융 거래 플랫폼은 전 세계의 사용자에 대한 지연 시간을 최소화해야 합니다. 이 플랫폼은 지연이나 패킷 손실의 위험을 줄이기 위해 일관되고 고속의 데이터 전송을 요구합니다. 또한, 다양한 실시간 애플리케이션을 위해 TCP 및 UDP 트래픽을 지원해야 합니다.",
        "Question": "어떤 AWS 서비스가 이러한 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "Amazon CloudFront with edge caching",
            "2": "AWS Direct Connect for dedicated connections",
            "3": "AWS Global Accelerator with Anycast IP addresses",
            "4": "Amazon Route 53 with latency-based routing"
        },
        "Correct Answer": "AWS Global Accelerator with Anycast IP addresses",
        "Explanation": "AWS Global Accelerator는 전 세계에 분산된 사용자와 애플리케이션의 가용성과 성능을 개선하기 위해 특별히 설계되었습니다. Anycast IP 주소를 사용하여 사용자 트래픽을 가장 가까운 AWS 엣지 위치로 라우팅하여 지연 시간을 최소화하고 데이터 전송을 위한 일관된 경로를 제공합니다. 이 서비스는 TCP 및 UDP 트래픽을 모두 지원하여 저지연 및 고속 데이터 전송이 필요한 실시간 애플리케이션에 이상적입니다. 또한, 사용자와 애플리케이션 간의 홉 수를 줄여 지연 및 패킷 손실을 최소화하는 데 도움이 됩니다.",
        "Other Options": [
            "Amazon CloudFront with edge caching은 주로 정적 콘텐츠 전달을 위한 콘텐츠 전송 네트워크(CDN)로, 엣지 위치에서 콘텐츠를 캐시하여 지연 시간을 줄입니다. 특정 유형의 애플리케이션의 성능을 개선할 수 있지만, 일관되고 고속의 데이터 전송 및 TCP와 UDP 트래픽 지원이 필요한 실시간 애플리케이션에 최적화되어 있지 않습니다.",
            "AWS Direct Connect는 귀하의 시설에서 AWS로의 전용 네트워크 연결을 제공하여 데이터 전송의 지연 시간을 줄일 수 있습니다. 그러나 이는 하이브리드 클라우드 아키텍처에 더 적합하며, 여러 지역 간의 글로벌 라우팅이나 TCP 및 UDP 트래픽 지원을 본질적으로 제공하지 않으므로 글로벌 금융 거래 플랫폼에 덜 적합합니다.",
            "Amazon Route 53 with latency-based routing은 지연 시간을 기반으로 사용자 요청을 가장 가까운 AWS 지역으로 안내하는 DNS 서비스입니다. 성능을 개선하는 데 도움이 될 수 있지만, AWS Global Accelerator와 같은 수준의 일관되고 고속의 데이터 전송 및 최소 홉 수를 제공하지 않으며, TCP 및 UDP 트래픽을 직접 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "IAM 관리자가 AWS 리소스에 대한 장기 액세스가 필요한 개발자 팀의 액세스를 설정하고 있습니다. 관리 오버헤드를 줄이기 위해 관리자는 정책이 재사용 가능하고 쉽게 업데이트될 수 있도록 하면서 여러 팀원에게 동일한 권한을 적용하고자 합니다.",
        "Question": "관리자가 이러한 요구 사항을 구현하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "특정 권한이 있는 개별 인라인 정책을 각 IAM 사용자에게 연결합니다.",
            "2": "고객 관리형 정책을 생성하고 이를 IAM 그룹에 연결한 다음 사용자를 그룹에 추가합니다.",
            "3": "AWS 관리형 정책을 사용하고 이를 각 IAM 사용자에게 직접 연결합니다.",
            "4": "필요한 권한으로 리소스 정책을 정의하고 이를 리소스에 직접 적용합니다."
        },
        "Correct Answer": "고객 관리형 정책을 생성하고 이를 IAM 그룹에 연결한 다음 사용자를 그룹에 추가합니다.",
        "Explanation": "고객 관리형 정책을 생성하면 IAM 관리자가 여러 사용자 간에 재사용할 수 있는 권한 집합을 정의할 수 있습니다. 이 정책을 IAM 그룹에 연결하면 해당 그룹의 모든 사용자가 정책에 정의된 권한을 상속받습니다. 이 접근 방식은 권한을 업데이트해야 할 경우 관리자가 각 사용자를 개별적으로 업데이트하는 대신 한 곳에서 정책을 수정할 수 있으므로 관리 오버헤드를 줄입니다. 이 방법은 모든 팀원 간에 권한이 일관되도록 보장합니다.",
        "Other Options": [
            "각 IAM 사용자에게 개별 인라인 정책을 연결하면 각 사용자에 대해 고유한 정책이 생성되어 관리 오버헤드가 증가하고 팀 전체에서 일관된 권한을 유지하기 어렵습니다. 인라인 정책은 재사용할 수 없으며 각 사용자에 대해 개별적으로 업데이트해야 합니다.",
            "AWS 관리형 정책을 사용하고 이를 각 IAM 사용자에게 직접 연결하면 권한 관리에 어려움이 발생할 수 있습니다. AWS 관리형 정책은 미리 정의되어 있으며 개발자 팀의 특정 요구를 충족하지 않을 수 있습니다. 또한 변경이 필요할 경우 각 사용자를 개별적으로 업데이트해야 하므로 관리 오버헤드가 증가합니다.",
            "필요한 권한으로 리소스 정책을 정의하고 이를 리소스에 직접 적용하는 것은 사용자 권한 관리를 위한 적절한 방법이 아닙니다. 리소스 정책은 여러 사용자 간의 사용자 권한 관리를 위한 것이 아니라 특정 AWS 리소스에 대한 액세스를 제어하기 위한 것입니다. 이 접근 방식은 사용자 팀을 위한 재사용 가능하고 쉽게 업데이트할 수 있는 권한 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 회사가 AWS에 중요한 비즈니스 데이터를 저장하고 있으며 재해 복구를 위해 여러 지역에 걸쳐 높은 내구성과 복제를 제공하는 저장 솔루션을 선택해야 합니다.",
        "Question": "회사가 내구성과 데이터 복제를 보장하기 위해 어떤 저장 옵션을 선택해야 합니까?",
        "Options": {
            "1": "Amazon EBS(Elastic Block Store)를 사용하여 스냅샷으로 백업 및 복제를 수행하고, 데이터가 다른 가용 영역으로 복제되도록 합니다.",
            "2": "버전 관리가 활성화된 Amazon S3를 사용하고 교차 지역 복제를 통해 데이터 내구성과 글로벌 복제를 보장합니다.",
            "3": "공유 액세스를 위해 Amazon EFS(Elastic File System)를 사용하며, 자동 복제를 제공하지만 지역 간 데이터 내구성을 보장하지는 않습니다.",
            "4": "아카이브 저장을 위해 Amazon Glacier를 사용하며, 저렴한 비용으로 내구성을 제공하지만 지역 간 복제를 지원하지 않습니다."
        },
        "Correct Answer": "버전 관리가 활성화된 Amazon S3를 사용하고 교차 지역 복제를 통해 데이터 내구성과 글로벌 복제를 보장합니다.",
        "Explanation": "Amazon S3는 높은 내구성과 가용성을 위해 설계되었으며, SLA는 99.999999999% (11 nines) 내구성을 제공합니다. 버전 관리를 활성화하면 회사는 객체의 여러 버전을 유지할 수 있어 우발적인 삭제나 덮어쓰기로부터 복구하는 데 도움이 됩니다. 교차 지역 복제(CRR)는 회사가 서로 다른 AWS 지역에 데이터를 자동으로 복제할 수 있도록 하여 재해 복구의 추가 계층을 제공하고, 한 지역에서 중단이 발생하더라도 중요한 데이터가 사용 가능하도록 보장합니다. 이는 S3가 여러 지역에 걸쳐 내구성과 복제를 위한 회사의 요구에 가장 적합한 선택이 되게 합니다.",
        "Other Options": [
            "Amazon EBS를 스냅샷과 함께 사용하면 내구성과 백업 생성 기능을 제공하지만, 주로 동일한 가용 영역 내에서 데이터를 복제하거나 수동으로 다른 지역으로 복사할 수 있습니다. EBS는 자동 교차 지역 복제를 위해 설계되지 않았으므로 여러 지역에 걸친 재해 복구에 적합하지 않습니다.",
            "Amazon EFS는 여러 인스턴스에서 액세스할 수 있는 관리형 파일 시스템을 제공하며, 어느 정도의 중복성과 가용성을 제공합니다. 그러나 지역 간에 데이터를 자동으로 복제하지 않으므로 이 시나리오에서 재해 복구를 위한 중요한 요구 사항을 충족하지 않습니다.",
            "Amazon Glacier는 주로 장기 아카이브 저장을 위해 설계되었으며 저렴한 내구성을 제공합니다. 매우 내구성이 뛰어나지만 지역 간 자동 복제를 지원하지 않으므로 즉각적인 액세스와 재해 복구 기능이 필요한 회사의 요구에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 회사가 Amazon RDS 데이터베이스에 대한 복원력 있는 백업 전략을 보장하여 실패 시 데이터를 복구하고자 합니다. 그들은 백업이 자동으로 생성되고 최대 35일 동안 유지되며, 필요 시 특정 시점으로 복원할 수 있는 기능이 필요합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 어떤 구성을 사용해야 하며, 주요 기능은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "자동 백업을 구성하여 데이터를 최대 35일 동안 유지하고, 초기 전체 스냅샷 이후에 증분 백업을 수행합니다. 자동 백업은 보존 기간 내의 모든 5분 간격으로 시점 복원을 허용합니다.",
            "2": "매일 수동 스냅샷을 사용하고 각 스냅샷을 무기한 유지하여 데이터 복구를 보장합니다. 자동 백업은 시점 복원을 지원하지 않습니다.",
            "3": "백업을 위한 교차 지역 복제를 설정하여 여러 지역에서 복원력을 보장하지만, 비용을 줄이기 위해 보존 기간을 7일로 제한합니다.",
            "4": "한 번의 전체 백업을 구현하고 매 5분마다 자동 RDS 스냅샷을 활성화하여 시점 복원 요구 사항을 충족합니다.",
            "5": "버전 관리가 활성화된 Amazon S3에 지속적인 백업을 활성화하여 35일 이내의 이전 상태로 복원할 수 있도록 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "자동 백업을 구성하여 데이터를 최대 35일 동안 유지하고, 초기 전체 스냅샷 이후에 증분 백업을 수행합니다. 자동 백업은 보존 기간 내의 모든 5분 간격으로 시점 복원을 허용합니다.",
            "버전 관리가 활성화된 Amazon S3에 지속적인 백업을 활성화하여 35일 이내의 이전 상태로 복원할 수 있도록 합니다."
        ],
        "Explanation": "Amazon RDS의 자동 백업은 데이터베이스의 백업을 자동으로 생성하고, 이러한 백업을 최대 35일 동안 유지할 수 있는 기능입니다. 또한 시점 복원을 허용하므로 보존 기간 내의 특정 시간으로 데이터베이스를 복원할 수 있습니다. 이는 회사의 자동 생성 및 보존 요구 사항을 충족하며, 특정 시점으로 복원할 수 있는 기능을 제공합니다. 버전 관리가 활성화된 Amazon S3에 대한 지속적인 백업도 이러한 요구 사항을 충족하며, 보존 기간 내의 이전 상태로 복원할 수 있습니다.",
        "Other Options": [
            "수동 스냅샷은 백업의 자동 생성 요구 사항을 충족하지 않습니다. 또한 무기한 유지할 수 있지만 시점 복원을 지원하지 않으므로 요구 사항을 충족하지 않습니다.",
            "백업을 위한 교차 지역 복제는 복원력을 제공하지만, 보존 기간을 7일로 제한하는 것은 최대 35일 동안 유지해야 한다는 요구 사항을 충족하지 않습니다.",
            "한 번의 전체 백업을 구현하고 매 5분마다 자동 RDS 스냅샷을 활성화하는 것은 최대 35일 동안 유지해야 한다는 요구 사항을 충족하지 않으며, 이러한 스냅샷이 얼마나 오래 유지될 것인지에 대한 명시가 없습니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 전자상거래 회사가 대량의 거래 데이터를 처리하고 있으며, 지역 간 데이터 내구성과 가용성을 보장하고자 합니다. 그들은 재해나 데이터 손상 시 데이터를 신속하게 복원할 수 있는 신뢰할 수 있는 백업 및 복제 전략이 필요합니다. 이러한 요구 사항을 충족하기 위해 회사는 백업 및 교차 지역 복제를 구현하기 위한 가장 적절한 AWS 서비스 및 구성을 결정해야 합니다.",
        "Question": "이 백업 및 복제 전략을 설정할 때 무엇을 고려해야 합니까?",
        "Options": {
            "1": "Amazon S3를 사용하고 교차 지역 복제를 활성화하여 서로 다른 지역에 데이터를 자동으로 복제하고, 백업 관리를 위한 수명 주기 정책을 설정합니다.",
            "2": "Amazon EC2 스냅샷에 의존하고 각 인스턴스에 대한 백업 파일을 수동으로 지역 간 전송합니다.",
            "3": "재해 발생 시 데이터를 복제하고 보호하기 위해 AWS Shield Advanced를 활성화합니다.",
            "4": "저렴한 저장 비용을 위해 Amazon Glacier에만 백업을 저장하고 비상 시에 검색합니다."
        },
        "Correct Answer": "Amazon S3를 사용하고 교차 지역 복제를 활성화하여 서로 다른 지역에 데이터를 자동으로 복제하고, 백업 관리를 위한 수명 주기 정책을 설정합니다.",
        "Explanation": "Amazon S3를 사용하고 교차 지역 복제(CRR)를 활성화하는 것은 지역 간 데이터 내구성과 가용성을 보장하기 위한 가장 효과적인 전략입니다. CRR은 S3 버킷의 객체를 다른 AWS 지역으로 자동으로 복제하여 데이터 손실이나 손상 시 신속한 복구 옵션을 제공합니다. 또한 수명 주기 정책을 설정하면 회사가 데이터 보존을 관리하고 오래된 데이터를 저비용 저장 클래스로 전환할 수 있어 비용을 최적화하면서 적절하게 백업됩니다.",
        "Other Options": [
            "Amazon EC2 스냅샷에 의존하고 각 지역 간 백업 파일을 수동으로 전송하는 것은 대량의 거래 데이터에는 적합하지 않습니다. 스냅샷은 개별 EC2 인스턴스에 연결되어 있으며 S3와 CRR만큼의 자동화 및 효율성을 제공하지 않습니다. 이 방법은 또한 인적 오류의 위험을 증가시키고 일관되지 않은 백업으로 이어질 수 있습니다.",
            "AWS Shield Advanced를 활성화하는 것은 주로 DDoS 보호에 중점을 두며 백업이나 복제 기능을 제공하지 않습니다. 보안에 중요하지만, 지역 간 데이터 내구성과 가용성 요구 사항을 충족하지 않습니다.",
            "Amazon Glacier에만 백업을 저장하는 것은 신속한 복구 요구 사항에 적합하지 않습니다. Glacier는 장기 아카이브 저장을 위해 설계되었으며 검색 시간은 몇 시간이 걸릴 수 있어 즉각적인 데이터 접근이 필요한 재해 복구 시나리오에는 적합하지 않습니다. 이 옵션은 또한 교차 지역 복제를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 회사가 AWS에서 Elastic Load Balancer (ELB)를 설정하여 여러 가용 영역(AZ)에 있는 여러 EC2 인스턴스에 수신 트래픽을 분산시키고자 합니다. 그들은 로드 밸런서가 인터넷을 통해 접근 가능하길 원하지만, VPC 내의 공용 및 사설 인스턴스에 대한 접근도 제어하고자 합니다.",
        "Question": "어떤 구성을 선택해야 하며, 이 설정이 대규모 트래픽 처리에 유리한 이유는 무엇입니까?",
        "Options": {
            "1": "인터넷에 노출된 ELB를 구성하고 노드에 공용 IP를 할당하여 VPC 내의 공용 및 사설 EC2 인스턴스 모두에 트래픽을 라우팅할 수 있도록 합니다. 이 설정은 AZ 간의 확장을 지원하고 높은 가용성을 제공합니다.",
            "2": "사설 IP를 가진 내부 로드 밸런서를 사용하여 VPC에 대한 접근을 제한하고 내부 트래픽만 인스턴스 간에 균형을 맞춥니다.",
            "3": "공용 접근을 제한하면서도 확장성을 유지하기 위해 사설 EC2 인스턴스만 있는 인터넷에 노출된 ELB를 설정합니다.",
            "4": "자원 활용을 최적화하고 여러 AZ 간의 확장을 제한하기 위해 로드 밸런서를 단일 노드 설정으로 구성합니다."
        },
        "Correct Answer": "인터넷에 노출된 ELB를 구성하고 노드에 공용 IP를 할당하여 VPC 내의 공용 및 사설 EC2 인스턴스 모두에 트래픽을 라우팅할 수 있도록 합니다. 이 설정은 AZ 간의 확장을 지원하고 높은 가용성을 제공합니다.",
        "Explanation": "인터넷에 노출된 Elastic Load Balancer (ELB)는 인터넷에서 수신하는 트래픽을 처리하도록 설계되었으며, 공용 및 사설 EC2 인스턴스 모두에 요청을 라우팅할 수 있습니다. ELB에 공용 IP를 할당함으로써 외부 소스에서 직접 트래픽을 수신하면서도 사설 인스턴스에 대한 내부 트래픽을 관리할 수 있습니다. 이 구성은 여러 가용 영역(AZ)에 있는 여러 EC2 인스턴스에 트래픽을 분산시켜 높은 가용성과 내결함성을 제공하므로, 한 AZ가 다운되더라도 다른 AZ가 부하를 처리할 수 있습니다. 이 설정은 수요에 따라 리소스를 원활하게 확장할 수 있도록 하여 대규모 트래픽 처리에 유리합니다.",
        "Other Options": [
            "사설 IP를 가진 내부 로드 밸런서를 사용하는 것은 VPC 내의 내부 트래픽만 허용하므로 인터넷을 통해 접근 가능하다는 요구 사항을 충족하지 않습니다. 이 옵션은 외부 사용자가 EC2 인스턴스에서 호스팅되는 서비스에 접근할 수 없게 됩니다.",
            "사설 EC2 인스턴스만 있는 인터넷에 노출된 ELB를 설정하는 것은 불가능합니다. 사설 인스턴스는 인터넷에서 직접 접근할 수 없기 때문에 이 구성은 ELB가 효과적으로 트래픽을 라우팅하는 것을 방해합니다.",
            "로드 밸런서를 단일 노드 설정으로 구성하는 것은 높은 가용성과 내결함성 같은 로드 밸런싱의 이점을 제한합니다. 이 설정은 여러 AZ 간의 트래픽 분산의 장점을 활용하지 않으므로 대규모 트래픽 처리에 필수적입니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 스타트업이 AWS에서 월간 네트워크 비용을 면밀히 모니터링하고 지출이 예산을 초과할 경우 알림을 받기를 원합니다. 또한, 시간이 지남에 따라 지역 간 데이터 전송 비용을 분석하고자 합니다.",
        "Question": "이러한 목표를 달성하기 위해 어떤 AWS 비용 관리 도구를 사용해야 합니까?",
        "Options": {
            "1": "AWS Cost and Usage Report 및 AWS Trusted Advisor",
            "2": "AWS Budgets 및 AWS Cost Explorer",
            "3": "AWS Trusted Advisor 및 AWS Budgets",
            "4": "AWS Support 및 AWS Cost Explorer"
        },
        "Correct Answer": "AWS Budgets 및 AWS Cost Explorer",
        "Explanation": "AWS Budgets는 사용자가 정의된 임계값을 초과할 경우 알림을 트리거할 수 있는 맞춤형 비용 및 사용 예산을 설정할 수 있게 해줍니다. 이는 스타트업이 월간 네트워크 비용을 모니터링하고 알림을 받을 수 있도록 하는 데 필수적입니다. AWS Cost Explorer는 시간에 따른 비용 및 사용 패턴에 대한 자세한 통찰력을 제공하여 지역 간 데이터 전송 비용을 분석하는 데 유용합니다. 이 두 도구는 스타트업의 예산 모니터링 및 비용 분석 요구 사항을 효과적으로 충족합니다.",
        "Other Options": [
            "AWS Cost and Usage Report는 상세한 청구 정보를 제공하지만 알림 기능은 제공하지 않습니다. AWS Trusted Advisor는 모범 사례 권장 사항을 제공하지만 예산 모니터링이나 상세한 비용 분석을 위해 특별히 설계되지 않았습니다.",
            "AWS Budgets가 예산 모니터링에 적합하게 식별되었지만, AWS Cost Explorer는 AWS Trusted Advisor에 비해 시간에 따른 비용 분석에 더 나은 선택입니다. AWS Trusted Advisor는 비용 관리보다는 리소스 최적화에 중점을 두고 있습니다.",
            "AWS Support는 기술 지원 서비스이며 비용 관리 기능을 제공하지 않습니다. AWS Cost Explorer는 비용 분석에 유용하지만 AWS Budgets가 없으면 스타트업은 예산 모니터링에 필요한 알림 기능이 부족하게 됩니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "전자상거래 애플리케이션이 Amazon DynamoDB를 사용하여 제품 카탈로그 데이터를 저장하고 플래시 세일 동안 높은 양의 읽기 요청을 처리해야 합니다. 애플리케이션 팀은 읽기 요청의 대기 시간을 줄여 사용자가 거의 즉시 제품 세부정보에 접근할 수 있도록 하기를 원합니다. 그러나 강력하게 일관된 읽기는 필요하지 않습니다.",
        "Question": "이러한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "플래시 세일 동안 증가된 부하를 처리하기 위해 DynamoDB Auto Scaling을 활성화합니다.",
            "2": "더 빠른 읽기 액세스를 위해 DynamoDB를 Amazon ElastiCache for Redis와 통합합니다.",
            "3": "읽기 중심 워크로드를 위한 인메모리 캐시를 제공하기 위해 DynamoDB Accelerator (DAX)를 활성화합니다.",
            "4": "DynamoDB 글로벌 테이블을 사용하여 여러 지역에 제품 카탈로그를 복제합니다."
        },
        "Correct Answer": "읽기 중심 워크로드를 위한 인메모리 캐시를 제공하기 위해 DynamoDB Accelerator (DAX)를 활성화합니다.",
        "Explanation": "DynamoDB Accelerator (DAX)는 DynamoDB를 위한 빠른 인메모리 캐싱을 제공하도록 특별히 설계되어 읽기 대기 시간을 크게 줄입니다. 애플리케이션이 강력하게 일관된 읽기를 요구하지 않기 때문에 DAX는 매우 낮은 대기 시간으로 최종 일관성 읽기를 제공할 수 있어 플래시 세일 동안 높은 양의 읽기 요청을 처리하는 데 이상적입니다. DAX는 트래픽의 급증을 처리하고 읽기 중심 워크로드의 성능을 개선하여 사용자가 거의 즉시 제품 세부정보에 접근할 수 있도록 보장합니다.",
        "Other Options": [
            "DynamoDB Auto Scaling을 활성화하면 트래픽 패턴에 따라 읽기 및 쓰기 용량을 자동으로 조정하여 증가된 부하를 관리하는 데 도움이 됩니다. 그러나 이는 플래시 세일 동안 읽기 요청의 대기 시간 문제를 직접적으로 해결하지 않으며, 이는 매우 중요합니다.",
            "DynamoDB를 Amazon ElastiCache for Redis와 통합하면 자주 접근되는 데이터를 캐싱하여 읽기 성능을 개선할 수 있습니다. 그러나 이는 아키텍처에 복잡성을 추가하며, DAX와 같이 DynamoDB에 최적화되어 있지 않을 수 있습니다.",
            "DynamoDB 글로벌 테이블을 사용하면 여러 지역에 제품 카탈로그를 복제하여 가용성을 개선하고 서로 다른 지리적 위치의 사용자에 대한 대기 시간을 줄일 수 있습니다. 그러나 이 솔루션은 높은 읽기 수요 동안 대기 시간을 줄여야 하는 필요성을 직접적으로 해결하지 않으며, 데이터 가용성과 중복성에 더 중점을 두고 있습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "온라인 게임 회사가 플레이어 데이터(프로필, 게임 상태 및 인벤토리 항목 포함)를 저장해야 합니다. 데이터는 높은 가용성과 내구성을 가져야 하며, 초당 수백만 개의 읽기 및 쓰기 요청을 처리할 수 있어야 합니다. 회사는 또한 빠른 성장을 예상하며 성능을 저하시키지 않고 증가하는 수요를 충족할 수 있는 저장 솔루션이 필요합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 솔루션 아키텍트가 추천해야 할 저장 솔루션은 무엇입니까?",
        "Options": {
            "1": "Amazon RDS for MySQL",
            "2": "Amazon DynamoDB",
            "3": "Amazon S3 Intelligent-Tiering",
            "4": "Amazon Redshift"
        },
        "Correct Answer": "Amazon DynamoDB",
        "Explanation": "Amazon DynamoDB는 높은 가용성과 내구성을 제공하는 완전 관리형 NoSQL 데이터베이스 서비스입니다. 초당 수백만 개의 읽기 및 쓰기 요청을 처리하도록 설계되어 있으며, 온라인 게임과 같은 높은 처리량 요구 사항을 가진 애플리케이션에 적합합니다. DynamoDB는 성능을 저하시키지 않고 증가하는 수요에 맞게 자동으로 확장되며, 이는 플레이어 기반이 확장됨에 따라 빠르게 성장할 수 있는 저장 솔루션에 대한 회사의 요구와 완벽하게 일치합니다. 또한 자동 백업 및 글로벌 복제와 같은 기능을 제공하여 데이터 내구성과 가용성을 보장합니다.",
        "Other Options": [
            "Amazon RDS for MySQL은 구조화된 데이터에 적합한 관계형 데이터베이스 서비스로 SQL 쿼리를 지원합니다. 그러나 DynamoDB와 같은 수준의 처리량을 처리하지 못할 수 있으며, 확장을 위해 더 많은 관리가 필요하므로 온라인 게임 플랫폼의 빠르게 성장하고 높은 가용성 요구 사항에 덜 적합합니다.",
            "Amazon S3 Intelligent-Tiering은 대량의 비구조화된 데이터를 저장하기 위해 설계된 객체 저장 서비스입니다. 내구성과 가용성을 제공하지만, 온라인 게임 맥락에서 플레이어 데이터에 필요한 높은 빈도의 읽기 및 쓰기 작업에 최적화되어 있지 않아 이 시나리오에 적합하지 않습니다.",
            "Amazon Redshift는 분석 쿼리 및 보고를 위해 최적화된 데이터 웨어하우스 서비스입니다. 이는 게임에서 실시간 플레이어 데이터 관리를 위해 필요한 고속 트랜잭션 워크로드를 처리하도록 설계되지 않았으므로, 요구 사항에 적합하지 않은 선택입니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "한 회사가 AWS에서 애플리케이션을 위한 안전한 VPC 아키텍처를 설계하고 있습니다. 그들은 서브넷 내의 특정 인스턴스에 대한 인바운드 및 아웃바운드 트래픽을 모두 제어하고 서브넷 수준에서 추가 보안 제어를 적용해야 합니다.",
        "Question": "다음 중 NACL과 Security Groups의 사용 및 차이를 올바르게 설명하는 것은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "NACL은 인스턴스 수준에서 작동하며 상태 기반 트래픽 필터링을 제공하는 반면, Security Groups는 서브넷 수준에서 작동하며 각 요청에 대한 비상태 제어를 제공합니다.",
            "2": "Security Groups는 인스턴스 수준에서 적용되며 상태 기반 제어를 제공하여 특정 IP 주소를 허용하거나 거부할 수 있는 반면, NACL은 서브넷 수준에서 적용되며 비상태 방식으로 특정 IP 범위를 허용하거나 거부하도록 구성할 수 있습니다.",
            "3": "NACL은 서브넷 수준에서 인바운드 트래픽에만 적용되며, Security Groups는 인바운드 및 아웃바운드 트래픽을 모두 제어하고 기본적으로 상태 기반입니다.",
            "4": "Security Groups와 NACL은 모두 인스턴스 수준에서 작동하지만, NACL은 상태 기반으로 여러 인스턴스 간의 동적 패킷 필터링을 허용합니다.",
            "5": "NACL은 하나 이상의 서브넷의 트래픽을 제어하기 위해 방화벽 역할을 하여 추가 보안 계층을 제공합니다. 이는 Security Groups와 독립적입니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Security Groups는 인스턴스 수준에서 적용되며 상태 기반 제어를 제공하여 특정 IP 주소를 허용하거나 거부할 수 있는 반면, NACL은 서브넷 수준에서 적용되며 비상태 방식으로 특정 IP 범위를 허용하거나 거부하도록 구성할 수 있습니다.",
            "NACL은 하나 이상의 서브넷의 트래픽을 제어하기 위해 방화벽 역할을 하여 추가 보안 계층을 제공합니다. 이는 Security Groups와 독립적입니다."
        ],
        "Explanation": "AWS의 Security Groups는 인스턴스 수준에서 적용되며 상태 기반 제어를 제공하여 네트워크 연결의 상태를 추적하고 허용된 아웃바운드 연결에 대한 반환 트래픽을 자동으로 허용합니다. 특정 IP 주소를 허용하거나 거부하도록 구성할 수 있습니다. 반면, 네트워크 접근 제어 목록(NACL)은 서브넷 수준에서 적용되며 비상태 제어를 제공하여 기존 연결을 고려하지 않고 각 패킷을 개별적으로 평가합니다. 특정 IP 범위를 허용하거나 거부하도록 구성할 수 있습니다. NACL은 또한 Security Groups와 독립적으로 하나 이상의 서브넷의 트래픽을 제어하기 위해 방화벽 역할을 하여 추가 보안 계층을 제공합니다.",
        "Other Options": [
            "옵션 1은 NACL이 서브넷 수준에서 작동하고 비상태 트래픽 필터링을 제공하며 인스턴스 수준에서 작동하지 않기 때문에 잘못되었습니다. 또한 Security Groups는 인스턴스 수준에서 작동하며 상태 기반 제어를 제공합니다.",
            "옵션 3은 NACL이 서브넷 수준에서 인바운드 및 아웃바운드 트래픽 모두에 적용되므로 잘못되었습니다.",
            "옵션 4는 Security Groups와 NACL이 모두 인스턴스 수준에서 작동하지 않기 때문에 잘못되었습니다. Security Groups는 인스턴스 수준에서 작동하고 NACL은 서브넷 수준에서 작동합니다. 또한 NACL은 비상태이며 상태 기반이 아닙니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 미디어 회사가 사용자로부터의 휴일 비디오 업로드 급증을 처리하기 위해 서버리스 아키텍처를 설정하고 있습니다. 그들은 설정이 완전 관리형이고 예측할 수 없는 트래픽을 처리하기 위해 자동으로 확장되며 사용자가 원활하게 인증할 수 있기를 원합니다. 이상적인 워크플로우는 비디오 업로드, 여러 형식으로의 처리 및 저장을 포함하며, 모든 과정에서 최소한의 오버헤드가 필요합니다.",
        "Question": "이 시나리오를 고려할 때, 어떤 AWS 서비스 조합이 이 아키텍처를 가장 잘 지원하며, 왜 최적의 선택인지 설명하십시오.",
        "Options": {
            "1": "Amazon Cognito를 사용하여 사용자 인증을 수행하고, 안전하게 ID 공급자 토큰을 AWS 임시 자격 증명으로 교환하여 S3 버킷에 직접 업로드할 수 있도록 합니다. 각 업로드 시 AWS Lambda 함수를 트리거하여 비디오 처리 파이프라인을 시작합니다.",
            "2": "사용자 인증, 비디오 업로드 및 트랜스코딩을 위해 Amazon EC2 인스턴스의 집합을 활용하고, 비디오 파일을 연결된 EBS 볼륨에 저장합니다. 수요 피크에 맞춰 인스턴스를 수동으로 확장합니다.",
            "3": "비디오 저장을 위해 Amazon S3를 설정하고, 비디오 업로드 시마다 AWS Lambda 함수를 시작하여 처리하며, 처리 작업 세부정보를 Amazon RDS 데이터베이스에 기록하여 복원력을 제공합니다.",
            "4": "IAM 역할을 사용하여 사용자를 인증하고, 비디오를 DynamoDB에 저장하며, 처리 작업을 처리하기 위해 EC2 인스턴스를 사용하고, 최종 처리된 비디오는 S3에 다시 저장하여 검색합니다."
        },
        "Correct Answer": "Amazon Cognito를 사용하여 사용자 인증을 수행하고, 안전하게 ID 공급자 토큰을 AWS 임시 자격 증명으로 교환하여 S3 버킷에 직접 업로드할 수 있도록 합니다. 각 업로드 시 AWS Lambda 함수를 트리거하여 비디오 처리 파이프라인을 시작합니다.",
        "Explanation": "이 옵션은 완전 관리형 서비스들을 활용하여 자동으로 확장되고 최소한의 운영 오버헤드를 요구하기 때문에 최적입니다. Amazon Cognito는 원활한 사용자 인증을 제공하여 사용자가 S3 버킷에 비디오를 직접 업로드할 수 있도록 하며, 이는 높은 가용성과 내구성을 위해 설계되었습니다. AWS Lambda를 사용하여 업로드 시 비디오 처리를 트리거하면 업로드 수에 따라 처리가 자동으로 확장되어 예측할 수 없는 트래픽을 효율적으로 처리할 수 있습니다. 이 아키텍처는 서버리스 및 완전 관리형 요구 사항과 완벽하게 일치합니다.",
        "Other Options": [
            "사용자 인증, 비디오 업로드 및 트랜스코딩을 위해 Amazon EC2 인스턴스의 집합을 활용하는 것은 상당한 관리 오버헤드를 도입하며 자동 확장을 제공하지 않습니다. EC2 인스턴스는 수동 개입이 필요하여 예측할 수 없는 트래픽 패턴에 적합하지 않으므로 이 옵션은 덜 적합합니다.",
            "Amazon S3를 비디오 저장을 위해 설정하고 비디오 업로드 시마다 AWS Lambda 함수를 시작하여 처리하는 것은 좋은 접근이지만, 처리 작업 세부정보를 Amazon RDS 데이터베이스에 기록하는 것은 불필요한 복잡성과 관리 오버헤드를 추가합니다. 오버헤드를 최소화하는 데 초점을 맞춰야 하며, 이 목적을 위해 데이터베이스를 사용하는 것은 완전 관리형 서버리스 아키텍처에서는 필요하지 않을 수 있습니다.",
            "IAM 역할을 사용하여 사용자를 인증하는 것은 이 맥락에서 사용자 인증에 적합하지 않으며, IAM 역할은 일반적으로 사용자 인증보다는 AWS 서비스 권한에 사용됩니다. 비디오를 DynamoDB에 저장하는 것도 큰 비디오 파일에 적합하지 않으며, S3는 이러한 사용 사례를 위해 특별히 설계되었습니다. 또한, 처리 작업을 위해 EC2 인스턴스를 사용하는 것은 서버리스 아키텍처 요구 사항에 모순됩니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "한 회사가 us-east-1 지역의 단일 가용 영역(AZ) 내에서 EC2 인스턴스에 연결된 데이터를 저장하기 위해 Amazon Elastic Block Store (EBS)를 사용하고 있습니다. 데이터 내구성과 복원력을 향상시키기 위해, 회사는 AZ 장애 발생 시에도 데이터가 안전하도록 보장하고자 합니다.",
        "Question": "EBS 데이터에 대한 최상의 복원력을 제공하는 전략은 무엇입니까?",
        "Options": {
            "1": "Amazon S3에 저장된 EBS 스냅샷을 사용하고, 이를 다른 지역으로 복사하여 교차 지역 재해 복구를 가능하게 합니다.",
            "2": "중복성을 위해 동일 지역 내의 여러 AZ에 걸쳐 EBS 볼륨을 여러 EC2 인스턴스에 연결합니다.",
            "3": "EBS 볼륨을 지역 내 모든 가용 영역에 걸쳐 자동으로 복제하도록 구성합니다.",
            "4": "EBS 대신 S3를 사용하여 데이터를 직접 저장합니다. S3는 AZ 전반에 걸쳐 더 높은 내구성과 가용성을 제공합니다."
        },
        "Correct Answer": "Amazon S3에 저장된 EBS 스냅샷을 사용하고, 이를 다른 지역으로 복사하여 교차 지역 재해 복구를 가능하게 합니다.",
        "Explanation": "Amazon S3에 저장된 EBS 스냅샷을 사용하고 이를 다른 지역으로 복사하는 것은 EBS 데이터에 대한 최상의 복원력을 제공합니다. 이는 데이터가 단순히 백업될 뿐만 아니라 다른 지리적 위치에 저장되도록 보장합니다. 이로 인해 전체 가용 영역 장애로 인한 데이터 손실로부터 보호받을 수 있으며, 스냅샷은 다른 지역에서 복원될 수 있습니다. 이 전략은 Amazon S3의 내구성과 교차 지역 기능을 활용하여 재해 복구 옵션을 향상시킵니다.",
        "Other Options": [
            "동일 지역 내 여러 AZ에 걸쳐 EBS 볼륨을 여러 EC2 인스턴스에 연결하는 것은 AZ 장애에 대한 복원력을 제공하지 않습니다. EBS 볼륨은 한 번에 하나의 인스턴스에만 연결될 수 있기 때문입니다. 일부 수준의 중복성을 제공할 수는 있지만 전체 AZ의 손실에 대한 보호는 제공하지 않습니다.",
            "EBS 볼륨을 지역 내 모든 가용 영역에 걸쳐 자동으로 복제하도록 구성하는 것은 EBS에서 제공하는 기능이 아닙니다. EBS 볼륨은 특정 AZ에 묶여 있으며, 스냅샷을 생성할 수는 있지만 AZ 간의 자동 복제는 없습니다. 따라서 이 옵션은 AZ 장애에 대한 복원력을 향상시키지 않습니다.",
            "EBS 대신 S3를 사용하여 모든 데이터를 직접 저장하는 것은 AZ 전반에 걸쳐 더 높은 내구성과 가용성을 제공할 수 있지만, 모든 사용 사례에 적합하지 않을 수 있습니다. 특히 블록 저장소를 요구하는 경우에는 더욱 그렇습니다. 또한, EC2 인스턴스의 EBS 데이터 복원력 요구를 직접적으로 해결하지 않으며, 이는 다른 저장소 패러다임을 포함합니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "한 금융 서비스 회사가 온프레미스 데이터 웨어하우스를 AWS로 마이그레이션하고 있습니다. 데이터 웨어하우스는 대량의 트랜잭션 데이터를 처리하며 ETL 작업을 위한 높은 처리량이 필요합니다. 회사는 비용을 최소화하면서 확장성과 성능을 보장하는 것을 목표로 하고 있습니다.",
        "Question": "데이터 웨어하우스 저장소를 위해 솔루션 아키텍트가 추천해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon RDS for PostgreSQL",
            "2": "Amazon Redshift",
            "3": "Amazon DynamoDB",
            "4": "Amazon Aurora"
        },
        "Correct Answer": "Amazon Redshift",
        "Explanation": "Amazon Redshift는 분석 워크로드를 위해 특별히 설계된 완전 관리형 페타바이트 규모의 데이터 웨어하우스 서비스입니다. 높은 처리량에 최적화되어 있으며 대량의 트랜잭션 데이터를 효율적으로 처리할 수 있어 ETL 작업에 적합합니다. Redshift의 열 저장소 및 병렬 처리 기능은 빠른 쿼리 성능과 확장성을 제공하여 회사의 AWS 데이터 웨어하우스 마이그레이션 시 성능 및 비용 효율성 요구 사항에 부합합니다.",
        "Other Options": [
            "Amazon RDS for PostgreSQL은 트랜잭션 워크로드에 적합한 관계형 데이터베이스 서비스이지만, Redshift와 같은 대규모 데이터 웨어하우스 및 분석에 최적화되어 있지 않습니다. 대량의 데이터 세트에 대한 ETL 작업에 대해 동일한 수준의 성능과 확장성을 제공하지 않을 수 있습니다.",
            "Amazon DynamoDB는 키-값 및 문서 데이터에 대한 높은 가용성과 저지연 액세스를 위해 설계된 NoSQL 데이터베이스 서비스입니다. 특정 유형의 애플리케이션에는 우수하지만, 복잡한 쿼리 및 대량 데이터 세트에 대한 분석을 필요로 하는 전통적인 데이터 웨어하우스 요구에는 적합하지 않습니다.",
            "Amazon Aurora는 높은 성능과 가용성을 제공하는 관계형 데이터베이스 서비스입니다. 그러나 RDS와 마찬가지로 데이터 웨어하우스를 위해 특별히 설계되지 않았으며, 분석 쿼리 및 ETL 작업에 대해 Amazon Redshift와 동일한 수준의 성능을 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 미디어 제작 회사가 비디오 편집을 위한 고성능 저장소가 필요하지만 비용을 낮게 유지하고자 합니다. 그들은 고성능 및 저성능 워크로드가 혼합되어 있으며 적절한 블록 저장소 유형을 선택해야 합니다.",
        "Question": "비용을 최적화하면서 성능 요구 사항을 충족하기 위해 회사가 사용해야 할 블록 저장소 옵션의 조합은 무엇입니까?",
        "Options": {
            "1": "모든 볼륨에 대해 프로비저닝된 IOPS SSD (io2)",
            "2": "고성능 작업에 대해 일반 목적 SSD (gp3) 및 저성능 작업에 대해 처리량 최적화 HDD (st1)",
            "3": "모든 볼륨에 대해 콜드 HDD (sc1)",
            "4": "모든 데이터에 대해 블록 저장소 대신 Amazon S3 사용"
        },
        "Correct Answer": "고성능 작업에 대해 일반 목적 SSD (gp3) 및 저성능 작업에 대해 처리량 최적화 HDD (st1)",
        "Explanation": "이 조합은 미디어 제작 회사가 성능과 비용을 효과적으로 균형을 맞출 수 있도록 합니다. 일반 목적 SSD (gp3)는 비디오 편집과 같은 고성능 워크로드에 대해 가격과 성능의 좋은 균형을 제공합니다. 반면, 처리량 최적화 HDD (st1)는 덜 자주 접근되는 비디오 파일이나 백업을 저장하는 저성능 작업에 대해 더 비용 효율적입니다. 이 하이브리드 접근 방식은 두 가지 유형의 워크로드에 대한 성능 요구 사항을 충족하면서 비용을 최적화합니다.",
        "Other Options": [
            "모든 볼륨에 대해 프로비저닝된 IOPS SSD (io2)를 사용하는 것은 저성능 작업에 대해 불필요하게 비쌀 것입니다. 이는 높은 IOPS 워크로드를 위해 설계되었으며, 그러한 성능이 필요하지 않은 작업에 대해 비용 효율성을 제공하지 않습니다.",
            "모든 볼륨에 대해 콜드 HDD (sc1)를 사용하는 것은 비디오 편집과 같은 고성능 작업의 성능 요구 사항을 충족하지 못할 것입니다. sc1은 드물게 접근하도록 설계되었으며 SSD 옵션에 비해 성능이 훨씬 낮습니다.",
            "모든 데이터에 대해 블록 저장소 대신 Amazon S3를 사용하는 것은 저지연 및 높은 처리량이 필요한 비디오 편집 워크로드에 적합하지 않을 수 있습니다. S3는 객체 저장소이며 고성능 애플리케이션에 필요한 블록 수준 액세스에 최적화되어 있지 않습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 회사가 공유 AWS 계정에서 프로젝트를 진행하는 개발자 팀을 위한 안전한 액세스를 설정하고자 합니다. 팀은 계정 내 특정 AWS 리소스에 대한 유연한 액세스가 필요하며, 액세스는 사용자별로 철회 가능해야 합니다.",
        "Question": "이러한 리소스에 대한 액세스를 부여하기 위한 가장 안전하고 유연한 접근 방식은 무엇입니까?",
        "Options": {
            "1": "각 개발자에 대해 특정 권한과 정책이 있는 IAM 사용자 생성",
            "2": "개발자들 간에 공유되는 액세스 키가 있는 단일 IAM 사용자 생성",
            "3": "AWS IAM Identity Center (AWS Single Sign-On)를 사용하여 각 개발자에게 역할 할당",
            "4": "공유 리소스에 IAM 역할을 할당하고 개발자를 포함하는 IAM 그룹에 권한 부여"
        },
        "Correct Answer": "AWS IAM Identity Center (AWS Single Sign-On)를 사용하여 각 개발자에게 역할 할당",
        "Explanation": "AWS IAM Identity Center (AWS Single Sign-On)를 사용하면 AWS 계정 및 애플리케이션 전반에 걸쳐 사용자 액세스를 중앙에서 관리할 수 있습니다. 이는 개별 개발자에게 역할을 유연하고 안전하게 할당할 수 있는 방법을 제공하여 그들이 필요한 리소스에만 액세스할 수 있도록 합니다. 이 접근 방식은 또한 사용자별로 액세스를 쉽게 철회할 수 있게 하여 공유 환경에서 보안을 유지하는 데 필수적입니다. 또한 IAM Identity Center는 기존의 신원 제공자와의 통합을 지원하여 보안 및 사용자 관리를 향상시킵니다.",
        "Other Options": [
            "각 개발자에 대해 특정 권한과 정책이 있는 IAM 사용자를 생성하는 것은 유효한 접근 방식이지만, 팀이 성장함에 따라 관리가 번거로워질 수 있습니다. 각 사용자를 개별적으로 관리해야 하며, 액세스를 철회하려면 각 사용자의 권한을 수정해야 하므로 IAM Identity Center를 사용하는 것보다 효율적이지 않습니다.",
            "개발자들 간에 공유되는 액세스 키가 있는 단일 IAM 사용자를 생성하는 것은 매우 안전하지 않습니다. 이 접근 방식은 최소 권한 원칙을 위반하며 개별 사용자 작업을 추적하기 어렵게 만듭니다. 액세스 키가 손상되면 모든 개발자의 액세스가 위험에 처하게 되며, 한 사용자의 액세스를 철회하려면 모든 사람의 키를 변경해야 합니다.",
            "공유 리소스에 IAM 역할을 할당하고 개발자를 포함하는 IAM 그룹에 권한을 부여하는 것은 합리적인 접근 방식이지만, AWS IAM Identity Center가 제공하는 유연성과 관리 용이성이 부족합니다. 이는 어느 정도의 액세스 제어를 허용하지만, IAM Identity Center와 같은 수준의 개별 사용자 관리 및 철회 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 다국적 전자상거래 회사가 전 세계 사용자에게 주문 정보에 대한 빠른 액세스를 제공해야 합니다. 이 애플리케이션은 서로 다른 대륙의 사용자에게 높은 가용성과 저지연을 보장하기 위해 데이터의 다중 지역 복제를 요구합니다. 또한 시스템은 서로 다른 지역에서 동시에 업데이트가 발생할 때 잠재적인 충돌을 원활하게 처리해야 합니다.",
        "Question": "DynamoDB Global Tables의 어떤 기능이 이러한 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "다중 마스터 복제 및 '최신 작성자 우선' 충돌 해결",
            "2": "데이터 일관성을 보장하기 위한 단일 마스터 복제",
            "3": "지역 간 모든 읽기 및 쓰기에 대한 글로벌 강력한 일관성",
            "4": "지역 간 엄격한 FIFO(선입선출) 충돌 해결"
        },
        "Correct Answer": "다중 마스터 복제 및 '최신 작성자 우선' 충돌 해결",
        "Explanation": "DynamoDB Global Tables는 다중 마스터 복제를 활용하여 여러 지역에서 동시에 업데이트를 수행할 수 있습니다. 이는 서로 다른 대륙에서 주문 정보에 대한 빠른 액세스를 제공해야 하는 다국적 전자상거래 회사에 매우 중요합니다. '최신 작성자 우선' 충돌 해결 전략은 서로 다른 지역에서 동시에 업데이트가 발생할 때 가장 최근의 업데이트(타임스탬프 기준)가 유지되도록 하여 잠재적인 충돌을 원활하게 처리할 수 있게 합니다. 이 기능은 높은 가용성과 저지연을 지원하여 애플리케이션의 요구 사항을 효과적으로 충족합니다.",
        "Other Options": [
            "단일 마스터 복제는 여러 지역에서 높은 가용성과 저지연 요구 사항을 충족하지 못합니다. 이는 업데이트를 단일 지역으로 제한하여 다른 지역의 사용자에게 지연을 초래할 수 있습니다.",
            "지역 간 모든 읽기 및 쓰기에 대한 글로벌 강력한 일관성은 DynamoDB Global Tables에서 지원되지 않습니다. 이는 조정을 요구하며, 이는 지연을 초래하고 가용성을 감소시킬 수 있어 빠른 액세스 및 저지연 요구 사항과 모순됩니다.",
            "엄격한 FIFO(선입선출) 충돌 해결은 DynamoDB Global Tables의 기능이 아닙니다. 이 접근 방식은 동시에 업데이트가 발생할 수 있는 다중 지역 설정에 적합하지 않으며, 이는 지연 및 데이터 가용성의 불일치를 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "한 회사가 새로운 AWS 환경을 설정하고 특정 AWS 리전 내에 개인적이고 격리된 네트워크가 필요합니다. 이 네트워크의 IP 주소 범위를 제어하고, 고가용성을 위해 각기 다른 가용 영역(AZ) 내에 여러 서브넷을 두고자 합니다. 또한, 회사는 동일한 리전 내에 여러 VPC를 가질 수 있는지와 기본 VPC를 사용할 경우 적용되는 기본 설정에 대해 알고 싶어합니다.",
        "Question": "회사가 이러한 요구 사항에 따라 네트워크를 구성하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "기본 VPC를 생성하여 리전 내 각 가용 영역에 서브넷을 자동으로 제공합니다. 기본 VPC는 고정 CIDR 범위인 172.31.0.0/16을 가지며, 동일한 리전 내에 추가 사용자 정의 VPC를 생성할 수 없습니다.",
            "2": "사용자 정의 VPC를 생성하여 회사가 자신의 CIDR 범위를 지정하고 각 가용 영역에 여러 서브넷을 생성할 수 있도록 합니다. 기본 VPC는 기본적으로 사용 가능하며, 필요 시 삭제하거나 재생성할 수 있습니다.",
            "3": "AWS에서 제공하는 기본 VPC를 사용하여 사용자 정의 CIDR 범위를 허용하고 서브넷 IP 주소 할당에 대한 완전한 제어를 제공합니다. 기본 VPC는 각 가용 영역당 하나의 서브넷만 허용합니다.",
            "4": "VPC는 기본적으로 글로벌이므로 여러 리전에서 단일 VPC를 설정합니다. 이 설정은 회사가 서로 다른 리전의 단일 VPC 내에 여러 가용 영역을 가질 수 있게 하여 중복성과 고가용성을 제공합니다."
        },
        "Correct Answer": "사용자 정의 VPC를 생성하여 회사가 자신의 CIDR 범위를 지정하고 각 가용 영역에 여러 서브넷을 생성할 수 있도록 합니다. 기본 VPC는 기본적으로 사용 가능하며, 필요 시 삭제하거나 재생성할 수 있습니다.",
        "Explanation": "사용자 정의 VPC를 생성하면 회사가 자신의 IP 주소 범위(CIDR 블록)를 정의하고 고가용성을 위해 서로 다른 가용 영역(AZ) 전역에 여러 서브넷을 생성할 수 있습니다. 이 설정은 IP 주소 범위에 대한 제어가 있는 개인적이고 격리된 네트워크의 요구 사항을 충족합니다. 또한, AWS는 동일한 리전 내에 여러 VPC를 생성할 수 있도록 허용하며, 기본 VPC는 기본적으로 사용 가능하여 필요 시 삭제하거나 재생성할 수 있습니다.",
        "Other Options": [
            "기본 VPC를 생성하면 회사가 자신의 CIDR 범위를 지정할 수 없으며, 고정 CIDR 범위인 172.31.0.0/16을 가집니다. 또한, 동일한 리전 내에 여러 사용자 정의 VPC를 생성할 수 있으므로 이 옵션은 잘못되었습니다.",
            "기본 VPC는 사용자 정의 CIDR 범위를 허용하지 않으며, 고정 CIDR 범위를 가집니다. 또한, 기본 VPC는 각 AZ에 서브넷을 제공하지만, 사용자 정의 VPC가 제공하는 것처럼 서브넷 IP 주소 할당에 대한 완전한 제어를 허용하지 않습니다. 따라서 이 옵션은 잘못되었습니다.",
            "VPC는 글로벌이 아니라 지역적입니다. 각 VPC는 단일 리전 내에 제한되며, VPC는 해당 리전 내에서 여러 AZ에 걸쳐 있을 수 있지만 여러 리전에 걸칠 수는 없습니다. 이 옵션은 AWS에서 VPC가 작동하는 방식을 잘못 설명하고 있으므로 잘못되었습니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "Amazon CloudFront를 사용하여 S3 버킷과 애플리케이션 로드 밸런서(ALB)에서 보안 콘텐츠를 제공하는 콘텐츠 배포 시스템을 설정하고 있습니다. 암호화된 통신을 보장하기 위해 SSL 인증서를 구성하기로 결정했습니다.",
        "Question": "SSL 요구 사항을 고려할 때, 뷰어와 CloudFront 배포 간의 안전한 HTTPS 연결을 활성화하는 데 중요한 것은 무엇입니까?",
        "Options": {
            "1": "us-east-1 리전의 ACM(Amazon Certificate Manager)에서 유효한 공개 인증서를 생성하거나 가져와서 도메인의 DNS 이름과 일치하도록 합니다.",
            "2": "비용 절감을 위해 원본(S3 및 ALB)에서 자체 서명된 인증서를 사용합니다. CloudFront가 SSL 종료를 처리할 것입니다.",
            "3": "각 CloudFront 엣지 위치에서 SSL 지원을 위해 전용 IP를 할당합니다. 이는 최신 브라우저가 HTTPS 연결을 설정하는 데 필수적입니다.",
            "4": "CloudFront 배포에서만 SSL을 활성화하고 원본 서버에서는 활성화하지 않습니다. CloudFront는 자동으로 모든 트래픽을 암호화합니다."
        },
        "Correct Answer": "us-east-1 리전의 ACM(Amazon Certificate Manager)에서 유효한 공개 인증서를 생성하거나 가져와서 도메인의 DNS 이름과 일치하도록 합니다.",
        "Explanation": "뷰어와 CloudFront 배포 간의 안전한 HTTPS 연결을 활성화하려면 유효한 SSL 인증서가 필요합니다. Amazon Certificate Manager(ACM)는 안전한 연결을 설정하는 데 필요한 SSL 인증서를 생성하거나 가져올 수 있도록 합니다. 인증서는 us-east-1 리전 내에 있어야 하며, CloudFront는 이 리전에서 발급된 SSL 인증서를 배포와 함께 사용해야 합니다. 또한, 인증서는 CloudFront 배포에서 사용되는 도메인 이름과 일치해야 SSL 핸드셰이크 중 올바른 검증을 보장합니다.",
        "Other Options": [
            "원본(S3 및 ALB)에서 자체 서명된 인증서를 사용하는 것은 클라이언트에 의해 신뢰되지 않기 때문에 프로덕션 환경에서는 권장되지 않으며, 보안 경고를 초래할 수 있습니다. CloudFront는 자체 서명된 인증서에 대한 SSL 종료를 처리하지 않으며, 클라이언트는 신뢰할 수 있는 인증서 없이는 안전한 연결을 설정하지 않습니다.",
            "각 CloudFront 엣지 위치에서 SSL 지원을 위해 전용 IP를 할당하는 것은 필요하지 않습니다. CloudFront는 SSL 종료를 위해 공유 인프라를 사용하며, 최신 브라우저는 HTTPS 연결을 위해 전용 IP를 요구하지 않습니다. 대신, 안전한 연결을 설정하기 위해 SSL 인증서에 의존합니다.",
            "CloudFront 배포에서만 SSL을 활성화하고 원본 서버에서는 활성화하지 않는 것은 바람직하지 않습니다. CloudFront가 뷰어와의 트래픽을 암호화할 수 있지만, CloudFront와 원본 서버(S3 및 ALB) 간의 연결도 보호하는 것이 중요하여 종단 간 암호화를 보장합니다. 이는 CloudFront에서 원본으로 데이터 전송 중 발생할 수 있는 잠재적 취약점을 방지합니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "한 머신 러닝 회사가 매우 낮은 네트워크 대기 시간과 높은 패킷 초당(PPS) 성능을 요구하는 고성능 컴퓨팅(HPC) 시뮬레이션을 실행하고 있습니다. 이 시뮬레이션은 컴퓨팅 집약적이며 인스턴스 간의 직접 통신이 최소한의 지연으로 이루어져야 합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 솔루션 아키텍트가 선택해야 할 EC2 배치 그룹 구성은 무엇입니까?",
        "Options": {
            "1": "여러 가용 영역에 걸쳐 분산 배치 그룹 생성",
            "2": "단일 가용 영역 내 클러스터 배치 그룹 생성",
            "3": "여러 랙에 걸쳐 파티션 배치 그룹 생성",
            "4": "전용 호스트 배치"
        },
        "Correct Answer": "단일 가용 영역 내 클러스터 배치 그룹 생성",
        "Explanation": "클러스터 배치 그룹은 인스턴스를 동일한 가용 영역 내에 물리적으로 가깝게 배치하여 인스턴스 간의 낮은 대기 시간과 높은 처리량을 제공합니다. 이 구성은 인스턴스 간의 빠른 통신이 필요한 컴퓨팅 집약적 애플리케이션에 이상적이며, 네트워크 대기 시간을 최소화하고 패킷 초당 성능을 극대화합니다. 시뮬레이션이 컴퓨팅 집약적이며 최소한의 지연으로 직접 통신이 필요하므로 클러스터 배치 그룹이 최선의 선택입니다.",
        "Other Options": [
            "여러 가용 영역에 걸쳐 분산 배치 그룹을 생성하는 것은 인스턴스를 서로 다른 물리적 하드웨어에 분산시켜 동시에 실패할 위험을 줄이기 위해 설계되었습니다. 높은 가용성을 제공하지만, 인스턴스가 서로 가까이 위치하지 않기 때문에 컴퓨팅 집약적 시뮬레이션에 필요한 낮은 대기 시간과 높은 PPS 성능을 제공하지 않습니다.",
            "여러 랙에 걸쳐 파티션 배치 그룹은 높은 가용성과 내결함성을 요구하는 애플리케이션에 유용하며, 인스턴스를 서로 다른 랙에 분산시킵니다. 그러나 인스턴스 간의 직접 통신에 필요한 낮은 대기 시간과 높은 처리량을 보장하지 않으므로 주어진 시나리오에 적합하지 않습니다.",
            "전용 호스트 배치는 사용자의 전용 서버로, 인스턴스 배치 및 라이센스에 대한 더 많은 제어를 허용합니다. 그러나 HPC 시뮬레이션에 필요한 낮은 대기 시간과 높은 패킷 초당 성능을 본질적으로 제공하지 않으며, 네트워크 성능보다는 준수 및 제어에 더 중점을 둡니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 의료 기관이 규제 요구 사항을 준수하기 위해 온프레미스 데이터 센터와 AWS 환경 간에 안전하고 신뢰할 수 있는 연결을 설정해야 합니다. 이 연결은 높은 대역폭을 지원하고 실시간 데이터 처리를 위해 낮은 대기 시간을 제공해야 합니다.",
        "Question": "솔루션 아키텍트가 추천해야 할 네트워크 연결 옵션은 무엇입니까?",
        "Options": {
            "1": "동적 라우팅을 사용하는 AWS Site-to-Site VPN",
            "2": "전용 연결을 사용하는 AWS Direct Connect",
            "3": "VPC 피어링을 사용하는 AWS Transit Gateway",
            "4": "AWS 서비스에 비공식적으로 접근하기 위한 AWS PrivateLink"
        },
        "Correct Answer": "전용 연결을 사용하는 AWS Direct Connect",
        "Explanation": "AWS Direct Connect는 온프레미스 데이터 센터와 AWS 간에 전용, 고대역폭, 저대기 시간 연결을 제공합니다. 이 옵션은 규제 준수를 위해 안전하고 신뢰할 수 있는 연결이 필요한 조직에 이상적이며, 특히 실시간 데이터 처리에 적합합니다. Direct Connect는 공용 인터넷을 우회하여 대기 시간을 줄이고 성능을 향상시켜 고처리량 애플리케이션에 적합합니다.",
        "Other Options": [
            "동적 라우팅을 사용하는 AWS Site-to-Site VPN은 공용 인터넷을 사용하여 안전한 연결을 설정하므로 대기 시간과 대역폭에 변동성을 초래할 수 있습니다. 안전한 옵션이지만, 실시간 데이터 처리에 필요한 높은 대역폭과 낮은 대기 시간 요구 사항을 충족하지 못할 수 있습니다.",
            "VPC 피어링을 사용하는 AWS Transit Gateway는 여러 VPC와 온프레미스 네트워크를 연결하는 데 주로 사용됩니다. 다양한 네트워크 간의 통신을 촉진할 수 있지만, 전용 연결을 제공하지 않으며 Direct Connect만큼 높은 대역폭과 낮은 대기 시간 요구 사항을 효과적으로 충족하지 못할 수 있습니다.",
            "AWS PrivateLink는 공용 인터넷에 트래픽을 노출하지 않고 AWS 서비스에 비공식적으로 접근하기 위해 설계되었습니다. 그러나 온프레미스 데이터 센터와 AWS 간의 직접 연결을 설정하지 않으므로 높은 대역폭과 낮은 대기 시간을 위한 안전하고 신뢰할 수 있는 연결의 특정 요구 사항에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 금융 서비스 회사가 단일 AWS 계정을 사용하여 다양한 부서의 비용을 추적하고자 합니다. 그들은 부서별로 리소스를 분류하고 상세한 비용 보고서를 생성할 방법이 필요합니다.",
        "Question": "그들이 이를 달성하는 데 가장 도움이 될 AWS 비용 관리 기능은 무엇입니까?",
        "Options": {
            "1": "다중 계정 청구 활성화",
            "2": "비용 할당 태그 사용",
            "3": "각 부서에 대한 AWS 예산 설정",
            "4": "부서별 스토리지에 대해 S3 요청자 지불 활성화"
        },
        "Correct Answer": "비용 할당 태그 사용",
        "Explanation": "비용 할당 태그를 사용하면 AWS 리소스를 부서 또는 선택한 다른 기준에 따라 분류할 수 있습니다. 이러한 태그를 리소스에 적용함으로써 금융 서비스 회사는 각 부서와 관련된 비용을 추적하고 이러한 태그를 기반으로 상세한 비용 보고서를 생성할 수 있습니다. 이 기능은 비용 추적 및 보고를 위해 특별히 설계되었으므로 그들의 요구에 가장 적합한 옵션입니다.",
        "Other Options": [
            "다중 계정 청구 활성화는 여러 AWS 계정을 사용하여 비용을 분리하는 것을 포함하므로 회사가 원하는 단일 AWS 계정 내에서 비용을 추적하는 것과는 적합하지 않습니다.",
            "각 부서에 대한 AWS 예산 설정은 지출 모니터링 및 경고 설정에 유용하지만, 상세한 비용 보고를 위한 리소스 분류를 제공하지 않습니다. 예산은 비용을 추적하고 제어하는 것에 더 중점을 두고 있습니다.",
            "부서별 스토리지에 대해 S3 요청자 지불을 활성화하는 것은 이 맥락에서 관련이 없습니다. 이 기능은 S3 데이터 접근 요청자에게 요금을 부과할 수 있지만, 부서 간 비용을 분류하거나 상세한 비용 보고서를 생성하는 데 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "한 전자상거래 회사가 마케팅, 판매 및 개발과 같은 다양한 비즈니스 유닛에 걸쳐 여러 AWS 계정을 운영하고 있으며, 부서별로 AWS 비용을 정확하게 추적하고 모니터링하고자 합니다. 그들은 데이터베이스 및 컴퓨팅 리소스와 같은 공유 리소스를 각 부서의 예산에 할당하고 각 비즈니스 유닛에 대한 투명한 비용 추적을 보장할 방법이 필요합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 어떤 AWS 비용 관리 기능을 사용해야 합니까?",
        "Options": {
            "1": "모든 계정에서 통합 청구를 사용하고 비용 할당 태그를 적용하여 특정 부서에 비용을 할당합니다.",
            "2": "모든 부서에 대해 단일 AWS 계정을 생성하고 내부 청구 관행을 사용하여 비용을 할당합니다.",
            "3": "각 부서의 리소스에 대해 S3 요청자 지불을 활성화하여 각 부서 내의 개별 사용자에게 비용을 전가합니다.",
            "4": "각 부서에 대해 별도의 청구 알림을 설정하여 비용을 독립적으로 추적합니다."
        },
        "Correct Answer": "모든 계정에서 통합 청구를 사용하고 비용 할당 태그를 적용하여 특정 부서에 비용을 할당합니다.",
        "Explanation": "통합 청구를 사용하면 전자상거래 회사가 단일 청구 계정 아래에서 여러 AWS 계정을 관리할 수 있어 결제 프로세스가 간소화됩니다. 비용 할당 태그를 적용함으로써 각 부서에서 사용하는 특정 리소스와 관련된 비용을 분류하고 추적할 수 있습니다. 이 방법은 비용 할당의 투명성을 제공하고 각 비즈니스 유닛에 대한 정확한 예산 추적을 가능하게 하여 AWS 비용을 효과적으로 모니터링할 수 있는 요구 사항을 충족합니다.",
        "Other Options": [
            "모든 부서에 대해 단일 AWS 계정을 생성하면 모든 리소스가 하나의 계정 아래에 집계되므로 비용 추적이 복잡해집니다. 이 접근 방식은 개별 부서에 비용을 정확하게 할당하는 데 필요한 세분성이 부족하여 예산을 효과적으로 관리하기 어렵습니다.",
            "S3 요청자 지불을 활성화하는 것은 Amazon S3 리소스에만 적용되므로 부서 간 비용 추적에 적합하지 않습니다. 이 기능은 데이터 요청자가 데이터 전송 비용을 지불하도록 하지만, 다양한 AWS 서비스 및 부서 간의 비용을 추적하고 할당하는 포괄적인 솔루션을 제공하지 않습니다.",
            "각 부서에 대해 별도의 청구 알림을 설정하면 비용을 모니터링하는 데 도움이 될 수 있지만, 공유 리소스를 할당하거나 부서 예산에 대한 비용을 정확하게 추적하는 방법을 제공하지 않습니다. 알림은 반응적이며, 세부적인 비용 관리나 할당을 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 금융 회사가 온프레미스 환경과 AWS 간의 전송 중 데이터를 암호화하고자 합니다. 데이터는 TLS 인증서를 사용하여 암호화되어야 합니다.",
        "Question": "회사가 TLS 인증서를 관리하고 배포하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Key Management Service (AWS KMS)",
            "2": "AWS Secrets Manager",
            "3": "AWS Certificate Manager (ACM)",
            "4": "Amazon S3"
        },
        "Correct Answer": "AWS Certificate Manager (ACM)",
        "Explanation": "AWS Certificate Manager (ACM)은 AWS 서비스 및 애플리케이션에서 사용할 TLS/SSL 인증서를 관리하고 배포하도록 특별히 설계되었습니다. 인증서를 프로비저닝, 관리 및 배포하는 과정을 간소화하여 금융 회사가 온프레미스 환경과 AWS 간의 전송 중 데이터를 쉽게 암호화할 수 있도록 합니다. ACM은 인증서 갱신도 자동으로 처리하여 수동 개입 없이 암호화가 유효하게 유지되도록 합니다.",
        "Other Options": [
            "AWS Key Management Service (AWS KMS)는 주로 애플리케이션 및 서비스의 암호화 키를 관리하는 데 사용됩니다. 암호화 및 복호화 과정에서 중요한 역할을 하지만, TLS 인증서를 직접 관리하지는 않습니다.",
            "AWS Secrets Manager는 데이터베이스 자격 증명, API 키 및 기타 민감한 정보를 관리하는 데 사용됩니다. TLS 인증서를 관리하는 기능을 제공하지 않으므로 이 특정 요구 사항에 적합하지 않습니다.",
            "Amazon S3는 언제든지 데이터를 저장하고 검색할 수 있는 스토리지 서비스입니다. TLS 인증서를 관리하거나 배포하는 기능이 없으므로 전송 중 데이터를 암호화하는 작업과 관련이 없습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 회사가 AWS에서 안전한 사용자 인증과 DDoS 공격 및 SQL 주입과 같은 외부 위협으로부터 보호가 필요한 웹 애플리케이션을 개발하고 있습니다. 이 애플리케이션은 사용자 자격 증명이 안전하게 관리되고 사용자가 역할에 따라 제한된 접근 권한을 가지도록 해야 합니다.",
        "Question": "회사가 이러한 보안 요구 사항을 충족하기 위해 어떤 AWS 서비스 조합을 사용해야 합니까?",
        "Options": {
            "1": "DDoS 보호를 위해 AWS Shield를 사용하고, 사용자 인증을 위해 Amazon Cognito를 사용하며, SQL 주입 공격을 차단하기 위해 AWS WAF를 사용합니다.",
            "2": "DDoS 보호를 위해 Amazon GuardDuty를 사용하고, 사용자 인증을 위해 IAM 역할을 사용하며, SQL 주입 보호를 위해 AWS CloudFront를 사용합니다.",
            "3": "사용자 인증을 위해 AWS Identity Center (AWS SSO)를 사용하고, DDoS 보호를 위해 AWS WAF를 사용하며, SQL 주입 방지를 위해 Amazon Macie를 사용합니다.",
            "4": "사용자 인증을 위해 AWS Secrets Manager를 사용하고, DDoS 보호를 위해 AWS Shield를 사용하며, SQL 주입 보호를 위해 AWS Lambda를 사용합니다."
        },
        "Correct Answer": "DDoS 보호를 위해 AWS Shield를 사용하고, 사용자 인증을 위해 Amazon Cognito를 사용하며, SQL 주입 공격을 차단하기 위해 AWS WAF를 사용합니다.",
        "Explanation": "이 서비스 조합은 시나리오에 명시된 모든 보안 요구 사항을 효과적으로 해결합니다. AWS Shield는 외부 위협으로부터 웹 애플리케이션을 보호하는 데 필수적인 강력한 DDoS 보호를 제공합니다. Amazon Cognito는 사용자 인증을 위해 특별히 설계되어 사용자 자격 증명을 안전하게 관리하고 역할 기반 접근 제어를 가능하게 합니다. AWS WAF (웹 애플리케이션 방화벽)는 SQL 주입 공격을 포함한 일반적인 웹 공격으로부터 웹 애플리케이션을 보호하도록 특별히 조정되어 있으며, 악의적인 요청을 차단하는 규칙을 생성할 수 있습니다.",
        "Other Options": [
            "DDoS 보호를 위해 Amazon GuardDuty를 사용하는 것은 잘못된 접근입니다. GuardDuty는 악의적인 활동 및 무단 행동을 모니터링하는 위협 탐지 서비스이며, 직접적인 DDoS 보호를 제공하지 않습니다. IAM 역할은 사용자 인증 서비스가 아니라 AWS 리소스에 대한 권한을 부여하는 데 사용됩니다. AWS CloudFront는 콘텐츠 전송 네트워크이며 직접적인 SQL 주입 보호를 제공하지 않습니다.",
            "AWS Identity Center (AWS SSO)는 단일 로그인 및 사용자 인증 서비스이지만, AWS WAF는 DDoS 보호를 위해 설계되지 않았습니다. 이는 웹 애플리케이션 보안을 위한 것입니다. Amazon Macie는 민감한 데이터를 발견하고 보호하는 데 도움을 주는 데이터 보안 및 개인 정보 보호 서비스이지만, SQL 주입 공격을 방지하지는 않습니다.",
            "AWS Secrets Manager는 API 키 및 데이터베이스 자격 증명과 같은 비밀을 관리하는 데 사용되지만, 인증 서비스가 아닙니다. AWS Shield는 DDoS 보호에 적합하지만, AWS Lambda는 본질적으로 SQL 주입 보호를 제공하지 않습니다. Lambda는 이벤트에 응답하여 코드를 실행할 수 있는 컴퓨팅 서비스이며, 웹 애플리케이션 보안에 직접적으로 대응하지 않습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "한 회사가 가상 사설 클라우드(VPC)를 구성하고 있으며, 여러 가용 영역(AZ)에 걸쳐 배포될 애플리케이션을 위해 여러 서브넷을 설계해야 합니다. 그들은 각 서브넷 내에서 IP 주소가 올바르게 할당되고 특정 기능을 위해 예약되도록 하기를 원합니다.",
        "Question": "VPC 서브넷을 설정하고 예약된 IP 주소를 처리하는 규칙에 대해 가장 잘 설명하는 문장은 무엇입니까?",
        "Options": {
            "1": "단일 서브넷은 VPC CIDR 블록 내에서 IP 주소 활용을 극대화하기 위해 여러 가용 영역에 걸쳐 있을 수 있습니다.",
            "2": "각 서브넷은 IP 주소 범위를 가지며, 각 서브넷 내에서 AWS에 의해 자동으로 네트워크 기능을 위해 예약된 다섯 개의 특정 IP 주소가 있습니다. 이에는 DNS 및 VPC 라우팅을 위한 주소가 포함됩니다.",
            "3": "서브넷에 할당된 IPv4 CIDR 블록은 공간 사용을 최적화하기 위해 서로 겹칠 수 있습니다, 특히 서브넷이 다른 AZ에 있을 때.",
            "4": "AWS의 DHCP 옵션 세트는 각 서브넷 내에서 자동으로 할당된 IP 주소를 편집하고 제거할 수 있습니다."
        },
        "Correct Answer": "각 서브넷은 IP 주소 범위를 가지며, 각 서브넷 내에서 AWS에 의해 자동으로 네트워크 기능을 위해 예약된 다섯 개의 특정 IP 주소가 있습니다. 이에는 DNS 및 VPC 라우팅을 위한 주소가 포함됩니다.",
        "Explanation": "AWS에서 각 서브넷은 VPC의 CIDR 블록에서 IP 주소 범위를 할당받으며, AWS는 각 서브넷 내에서 특정 네트워크 기능을 위해 다섯 개의 IP 주소를 자동으로 예약합니다. 이 예약된 주소는 VPC 라우터, DNS 및 기타 필수 서비스에 사용되며, 인스턴스에 할당되지 않도록 보장합니다. 이 규칙은 VPC와 그 서브넷의 기능을 유지하는 데 중요합니다.",
        "Other Options": [
            "단일 서브넷은 여러 가용 영역에 걸쳐 있을 수 없습니다. 각 서브넷은 반드시 하나의 가용 영역 내에 완전히 존재해야 합니다. 이 설계는 서로 다른 AZ의 리소스가 격리되어 고가용성과 장애 허용성을 제공할 수 있도록 합니다.",
            "서브넷에 할당된 IPv4 CIDR 블록은 서로 겹칠 수 없습니다. 각 서브넷은 충돌을 피하고 VPC 내에서 적절한 라우팅을 보장하기 위해 고유한 IP 주소 범위를 가져야 합니다. 겹치는 CIDR 블록은 라우팅 문제와 연결 문제를 초래할 수 있습니다.",
            "AWS의 DHCP 옵션 세트는 각 서브넷 내에서 자동으로 할당된 IP 주소를 편집하거나 제거할 수 없습니다. DHCP 옵션 세트는 인스턴스에 대한 DHCP 설정을 구성하는 데 사용되며, 도메인 이름 서버 및 NTP 서버와 같은 설정을 포함하지만, 서브넷 내의 예약된 IP 주소에는 영향을 미치지 않습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사가 글로벌 웹 애플리케이션을 배포하고 있으며, 전 세계 사용자에게 높은 가용성과 낮은 대기 시간을 보장하고자 합니다. 이 회사는 DNS 관리를 위해 Amazon Route 53을 사용하고 있으며, 장애 허용성을 보장하기 위해 여러 AWS 리전 내의 여러 가용 영역(AZ)에 걸쳐 애플리케이션을 배포하는 것을 고려하고 있습니다.",
        "Question": "회사의 높은 가용성과 재해 복구 요구 사항을 가장 잘 충족하는 접근 방식은 무엇입니까?",
        "Options": {
            "1": "Route 53을 사용하여 지리적 라우팅으로 사용자를 가장 가까운 리전으로 안내하고, 해당 리전의 여러 가용 영역에 애플리케이션을 배포하여 높은 가용성을 보장합니다.",
            "2": "Route 53을 사용하여 장애 조치 라우팅 정책을 적용하여 기본 리전에서 장애가 발생할 경우 트래픽을 백업 리전으로 라우팅합니다.",
            "3": "관리를 단순화하고 운영 복잡성을 줄이기 위해 단일 리전의 단일 가용 영역에 애플리케이션을 배포합니다.",
            "4": "Route 53을 사용하여 가중치 라우팅으로 모든 리전으로 트래픽을 균등하게 분산시켜 더 균형 잡힌 트래픽 분배를 합니다."
        },
        "Correct Answer": "Route 53을 사용하여 지리적 라우팅으로 사용자를 가장 가까운 리전으로 안내하고, 해당 리전의 여러 가용 영역에 애플리케이션을 배포하여 높은 가용성을 보장합니다.",
        "Explanation": "Route 53을 사용하여 지리적 라우팅을 적용하면 회사가 사용자를 가장 가까운 AWS 리전으로 안내할 수 있어 대기 시간이 최소화되고 사용자 경험이 향상됩니다. 해당 리전 내의 여러 가용 영역(AZ)에 애플리케이션을 배포함으로써, 회사는 장애 발생 시 트래픽이 자동으로 건강한 인스턴스로 라우팅될 수 있도록 하여 높은 가용성을 보장할 수 있습니다. 이 접근 방식은 여러 AZ 및 리전의 중복성을 활용하여 장애 허용성과 재해 복구 기능도 제공합니다.",
        "Other Options": [
            "Route 53을 사용하여 장애 조치 라우팅 정책을 적용하는 것은 재해 복구에 유용하지만, 주로 기본 리전에서 장애가 발생할 경우에만 백업 리전으로 트래픽을 라우팅하는 데 중점을 둡니다. 이는 전 세계 사용자에게 낮은 대기 시간 접근의 필요성을 해결하지 않으며, 최적의 성능을 위해 사용자를 가장 가까운 리전으로 안내하지 않을 수 있습니다.",
            "단일 리전의 단일 가용 영역에 애플리케이션을 배포하면 다운타임의 위험이 크게 증가하며 높은 가용성이나 장애 허용성을 제공하지 않습니다. 그 단일 AZ에서 장애가 발생하면 전체 애플리케이션이 사용할 수 없게 되어 회사의 높은 가용성 요구 사항에 반합니다.",
            "Route 53을 사용하여 가중치 라우팅으로 모든 리전으로 트래픽을 균등하게 분산시키는 것은 해당 리전의 가용성 및 대기 시간을 무시합니다. 이는 사용자에게 최적의 성능을 제공하지 못할 수 있으며, 트래픽이 더 멀리 떨어져 있거나 문제가 있는 리전으로 전송될 수 있어 회사의 낮은 대기 시간 접근 및 높은 가용성 목표를 충족하지 못할 수 있습니다."
        ]
    }
]