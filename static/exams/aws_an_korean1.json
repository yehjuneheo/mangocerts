[
    {
        "Question Number": "1",
        "Situation": "다국적 기업이 온프레미스 데이터 센터와 다양한 AWS 서비스를 포함하는 하이브리드 네트워크를 운영하고 있습니다. 네트워크 팀은 보안 표준 준수를 보장하고 두 환경에서의 네트워크 활동에 대한 가시성을 제공하는 로깅 및 모니터링 요구 사항을 설정해야 합니다.",
        "Question": "네트워크 팀이 하이브리드 네트워크 환경에서 네트워크 활동을 효과적으로 로깅하고 모니터링하기 위해 무엇을 구현해야 합니까?",
        "Options": {
            "1": "Amazon GuardDuty를 설정하여 위협을 모니터링하고 온프레미스 방화벽에서 상세 로깅을 활성화하여 포괄적인 가시성을 제공합니다.",
            "2": "AWS CloudTrail을 독점적으로 사용하여 AWS 및 온프레미스 환경의 모든 네트워크 활동을 로깅합니다.",
            "3": "AWS 리소스를 모니터링하기 위해 Amazon CloudWatch를 사용하고 AWS 환경에서 트래픽 로깅을 위해 VPC Flow Logs를 구성합니다.",
            "4": "구성 변경을 추적하기 위해 AWS Config를 구현하고 API 호출 로깅을 위해 CloudTrail만 사용합니다."
        },
        "Correct Answer": "AWS 리소스를 모니터링하기 위해 Amazon CloudWatch를 사용하고 AWS 환경에서 트래픽 로깅을 위해 VPC Flow Logs를 구성합니다.",
        "Explanation": "Amazon CloudWatch와 VPC Flow Logs를 함께 사용하면 AWS 리소스에 대한 포괄적인 모니터링 및 로깅 솔루션을 제공합니다. CloudWatch는 다양한 서비스의 메트릭을 집계할 수 있으며, VPC Flow Logs는 VPC의 네트워크 인터페이스 간의 IP 트래픽에 대한 상세 정보를 캡처하여 네트워크 활동에 대한 전체적인 관점을 제공합니다.",
        "Other Options": [
            "AWS Config와 CloudTrail을 구현하는 것은 완전한 네트워크 활동 로깅을 제공하지 않으며, AWS Config는 리소스 구성을 추적하는 데 더 중점을 두고, CloudTrail은 API 호출을 주로 로깅하여 모든 관련 네트워크 트래픽을 캡처하지 못할 수 있습니다.",
            "AWS CloudTrail에만 의존하면 가시성이 제한되며, 트래픽 흐름을 로깅하거나 메트릭을 제공하지 않기 때문에 하이브리드 환경에서 네트워크 활동을 모니터링하기에 불충분합니다.",
            "Amazon GuardDuty는 위협 탐지에 효과적이지만, 모든 네트워크 트래픽을 캡처하고 모니터링하기 위해 필요한 VPC Flow Logs 및 CloudWatch와 같은 강력한 로깅 솔루션의 필요성을 대체하지 않습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 회사가 AWS의 여러 가용 영역에 걸쳐 다계층 애플리케이션을 배포하고 있습니다. 그들은 내부 서비스가 VPC 내의 리소스에 대해서만 DNS 이름을 해결할 수 있도록 하면서 고객을 대상으로 하는 웹 애플리케이션에 대한 공개 액세스를 유지하고자 합니다. 이를 달성하기 위해 Route 53을 구성해야 합니다.",
        "Question": "네트워크 엔지니어가 이러한 요구 사항을 충족하기 위해 Amazon Route 53을 어떻게 설정해야 합니까?",
        "Options": {
            "1": "내부 서비스에 대한 공개 호스팅 영역을 Route 53에 생성하고 고객을 대상으로 하는 웹 애플리케이션에 대한 비공식 호스팅 영역을 생성합니다.",
            "2": "내부 서비스에 대한 비공식 호스팅 영역을 Route 53에 생성하고 고객을 대상으로 하는 웹 애플리케이션에 대한 공개 호스팅 영역을 생성하여 적절한 영역에 레코드가 생성되도록 합니다.",
            "3": "내부 서비스와 고객을 대상으로 하는 웹 애플리케이션 모두에 대해 Route 53에 단일 공개 호스팅 영역을 설정하여 DNS 관리를 단순화합니다.",
            "4": "고객을 대상으로 하는 웹 애플리케이션에 대한 비공식 호스팅 영역을 Route 53에 생성하고 내부 서비스에 대한 공개 호스팅 영역을 생성하여 공개 액세스를 허용합니다."
        },
        "Correct Answer": "내부 서비스에 대한 비공식 호스팅 영역을 Route 53에 생성하고 고객을 대상으로 하는 웹 애플리케이션에 대한 공개 호스팅 영역을 생성하여 적절한 영역에 레코드가 생성되도록 합니다.",
        "Explanation": "비공식 호스팅 영역을 생성하면 내부 서비스가 인터넷에 노출되지 않고 DNS 이름을 해결할 수 있으며, 공개 호스팅 영역은 외부 사용자가 고객을 대상으로 하는 웹 애플리케이션에 접근할 수 있도록 합니다. 이 설정은 보안과 가용성을 모두 최적화합니다.",
        "Other Options": [
            "고객을 대상으로 하는 웹 애플리케이션에 대한 비공식 호스팅 영역을 생성하면 접근이 제한되어 외부 사용자가 접근할 수 없게 되므로 공개 애플리케이션에 적합하지 않습니다.",
            "내부 서비스와 고객을 대상으로 하는 웹 애플리케이션 모두에 대해 단일 공개 호스팅 영역을 사용하는 것은 보안 위험을 초래할 수 있으며, 내부 리소스는 공개적으로 접근할 수 없어야 합니다.",
            "내부 서비스에 대한 공개 호스팅 영역을 설정하면 민감한 내부 DNS 레코드가 인터넷에 노출되어 보안 취약점이 발생합니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "시스템 관리자가 Amazon Linux를 실행하는 두 개의 Amazon EC2 인스턴스 간의 네트워크 성능을 평가해야 합니다. 관리자는 네트워크 연결 및 성능을 진단하고 분석하기 위해 다양한 도구를 사용하는 것을 고려하고 있습니다.",
        "Question": "관리자가 네트워크 성능 테스트 및 진단을 위해 어떤 도구 조합을 사용해야 합니까? (두 개 선택)",
        "Options": {
            "1": "ping과 traceroute 기능을 결합하는 mtr",
            "2": "TCP/IP 패킷을 조립하기 위한 hping3",
            "3": "네트워크 구성을 자동화하기 위한 ec2-net-utils",
            "4": "패킷 전송 분석을 위한 tcpdump",
            "5": "대역폭 및 성능 측정을 위한 iperf3"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "대역폭 및 성능 측정을 위한 iperf3",
            "ping과 traceroute 기능을 결합하는 mtr"
        ],
        "Explanation": "iperf3는 TCP 또는 UDP 프로토콜을 사용하여 네트워크 시스템 간의 대역폭 및 성능을 측정하도록 특별히 설계되어 있어 성능 테스트에 적합한 선택입니다. mtr은 ping과 traceroute의 기능을 결합하여 네트워크 경로의 지연 시간 및 패킷 손실에 대한 통찰력을 제공하므로 포괄적인 진단 도구로 작용합니다.",
        "Other Options": [
            "ec2-net-utils는 Amazon Linux 인스턴스에서 네트워크 인터페이스 구성을 자동화하는 데 주로 사용되며, 성능 측정이나 진단에는 사용되지 않습니다.",
            "tcpdump는 패킷 데이터를 캡처하고 표시할 수 있는 강력한 패킷 분석기이지만, iperf3처럼 네트워크 성능을 직접 측정하지는 않습니다.",
            "hping3는 사용자 정의 TCP/IP 패킷을 작성하고 전송하기 위한 명령줄 도구이지만, 네트워크 성능 측정을 위해 특별히 설계된 것은 아닙니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 회사가 하이브리드 클라우드 접근 방식을 사용하여 온프레미스 네트워크를 AWS와 통합하고 있습니다. 네트워크 엔지니어링 팀은 VPN 연결 및 라우팅 테이블을 포함한 네트워크 리소스의 배포를 자동화하고자 하며, 온프레미스 구성에 대한 제어를 유지하고자 합니다. 이들은 기존 자동화 도구와 원활하게 통합할 수 있는 AWS 네이티브 서비스를 사용하는 것을 고려하고 있습니다. 이 목표를 달성하기 위해 팀이 구현해야 할 것은 무엇인가요?",
        "Question": "하이브리드 클라우드 아키텍처에서 네트워크 리소스의 자동 구현을 가장 잘 지원하는 AWS 서비스는 무엇인가요?",
        "Options": {
            "1": "Amazon Route 53",
            "2": "AWS Direct Connect",
            "3": "AWS CloudFormation",
            "4": "AWS Config"
        },
        "Correct Answer": "AWS CloudFormation",
        "Explanation": "AWS CloudFormation은 팀이 네트워크 아키텍처를 코드로 정의할 수 있게 하여 AWS와 온프레미스 환경 모두에서 리소스의 생성 및 관리를 자동화합니다. 이를 통해 기존 IaC 워크플로우에 원활하게 통합할 수 있습니다.",
        "Other Options": [
            "AWS Config는 주로 리소스 구성 및 준수를 시간에 따라 추적하는 데 사용되며, 새로운 리소스를 자동으로 배포하는 데는 적합하지 않습니다.",
            "Amazon Route 53은 도메인 이름 해석을 관리하는 DNS 서비스이지만, 네트워크 리소스 배포를 자동화하는 직접적인 기능을 제공하지 않습니다.",
            "AWS Direct Connect는 온프레미스와 AWS 간의 전용 네트워크 연결을 설정하는 서비스이지만, 네트워크 리소스 관리의 자동화를 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "글로벌 온라인 스트리밍 서비스가 지리적으로 분산된 서버에 사용자 요청을 효율적으로 라우팅하는 데 어려움을 겪고 있습니다. 이 서비스는 DNS 관리를 위해 Amazon Route 53에 의존하고 있습니다. 사용자의 위치에 따라 가장 가까운 서버로 라우팅하여 높은 가용성과 최적의 성능을 보장해야 하며, 불건전한 엔드포인트로 트래픽이 유입되지 않도록 건강 검사를 수행해야 합니다. 팀은 이 기능을 구현하기 위해 다양한 Route 53 기능을 고려하고 있습니다.",
        "Question": "사용자 요청에 대한 최적의 라우팅과 높은 가용성을 달성하기 위해 구현해야 할 솔루션은 무엇인가요?",
        "Options": {
            "1": "Route 53 다중 값 응답 라우팅 정책을 설정하여 사용자에게 여러 개의 건강한 엔드포인트를 반환하고 모든 엔드포인트에 대해 건강 검사를 수행하도록 합니다.",
            "2": "Route 53 가중치 라우팅을 사용하여 모든 서버 간에 트래픽을 고르게 분배하고, 여러 VPC에서 DNS 쿼리를 관리하기 위해 Route 53 Resolver를 구성합니다.",
            "3": "트래픽을 가장 낮은 대기 시간의 서버로 라우팅하는 Route 53 대기 시간 기반 라우팅 정책을 생성하고, 모든 엔드포인트에 대해 건강 검사를 설정하여 건강한 서버만 사용하도록 합니다.",
            "4": "사용자의 지리적 위치에 따라 트래픽을 유도하는 Route 53 지리적 위치 라우팅 정책을 구현하고, 사용자에게 더 가까운 콘텐츠를 캐시하기 위해 Amazon CloudFront 배포를 구성합니다."
        },
        "Correct Answer": "트래픽을 가장 낮은 대기 시간의 서버로 라우팅하는 Route 53 대기 시간 기반 라우팅 정책을 생성하고, 모든 엔드포인트에 대해 건강 검사를 설정하여 건강한 서버만 사용하도록 합니다.",
        "Explanation": "대기 시간 기반 라우팅 정책을 구현하면 사용자 요청이 가장 빠르게 응답할 수 있는 서버로 라우팅되어 사용자 경험이 향상됩니다. 건강 검사는 불건전한 서버로의 라우팅을 방지하여 높은 가용성을 유지합니다.",
        "Other Options": [
            "지리적 위치 라우팅은 사용자 위치에 따라 트래픽을 유도할 수 있지만, 대기 시간을 고려하지 않기 때문에 최적의 성능을 보장하지 않습니다. 또한 가용성을 유지하는 데 중요한 내장 건강 검사가 부족합니다.",
            "가중치 라우팅은 미리 정의된 가중치에 따라 트래픽을 분배하므로 최적의 성능을 보장하지 않으며, 사용자에게 최상의 서버로 라우팅되지 않을 수 있습니다. 또한 불건전한 엔드포인트가 트래픽을 받지 않도록 하는 건강 검사가 포함되어 있지 않습니다.",
            "다중 값 응답 라우팅은 여러 개의 건강한 엔드포인트를 반환하지만, 가장 낮은 대기 시간의 서버로 라우팅하는 데 중점을 두지 않습니다. 이 방법은 대기 시간 고려 없이 사용자의 성능을 저하할 수 있습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 금융 기관이 거래 및 민감한 고객 데이터를 처리하기 위해 여러 AWS 서비스를 포함하는 새로운 아키텍처를 구현하고 있습니다. 네트워크 트래픽에 대한 가시성을 향상시키고 잠재적인 보안 위협을 식별하기 위해 네트워크 엔지니어가 모니터링 솔루션을 구현하는 임무를 맡고 있습니다. 조직은 프라이빗 서브넷에서 실행 중인 특정 EC2 인스턴스의 수신 및 송신 트래픽을 캡처하고 분석할 필요가 있습니다.",
        "Question": "지정된 EC2 인스턴스에 대한 네트워크 트래픽의 포괄적인 가시성을 보장하기 위해 네트워크 엔지니어가 취해야 할 접근 방식은 무엇인가요?",
        "Options": {
            "1": "AWS Transit Gateway를 구현하고 필요한 EC2 인스턴스에 대해 트래픽 미러링을 활성화합니다.",
            "2": "Amazon GuardDuty를 배포하여 EC2 인스턴스의 네트워크 트래픽 패턴을 분석합니다.",
            "3": "AWS Config를 설정하여 EC2 인스턴스의 네트워크 구성 및 변경 사항을 모니터링합니다.",
            "4": "서브넷에 대해 VPC 흐름 로그를 활성화하고 이를 Amazon CloudWatch Logs에 기록하도록 구성합니다."
        },
        "Correct Answer": "서브넷에 대해 VPC 흐름 로그를 활성화하고 이를 Amazon CloudWatch Logs에 기록하도록 구성합니다.",
        "Explanation": "VPC 흐름 로그를 활성화하면 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보가 캡처됩니다. 이는 트래픽 패턴에 대한 자세한 가시성을 제공하고 잠재적인 보안 문제나 이상 징후를 식별하는 데 도움이 됩니다. 또한 이러한 로그를 Amazon CloudWatch Logs로 전송하면 실시간 모니터링 및 경고가 가능합니다.",
        "Other Options": [
            "특정 EC2 인스턴스의 트래픽 가시성을 캡처하는 데 AWS Transit Gateway를 구현할 필요는 없으며, VPC 흐름 로그는 Transit Gateway 없이도 트래픽 정보를 직접 캡처합니다.",
            "AWS Config는 주로 구성 변경 사항을 모니터링하는 데 사용되므로 실시간 네트워크 트래픽 분석에는 적합하지 않습니다.",
            "Amazon GuardDuty는 AWS 계정 활동 및 네트워크 트래픽을 분석하여 악의적인 행동을 탐지하는 서비스이지만, VPC 흐름 로그와 같은 직접적인 트래픽 흐름 가시성을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 금융 서비스 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있습니다. 이러한 애플리케이션은 변동하는 사용자 수요를 처리하기 위해 높은 가용성과 원활한 확장성이 필요합니다. 회사의 네트워크 아키텍처는 들어오는 트래픽이 여러 EC2 인스턴스에 효율적으로 분산되도록 하면서 잠재적인 DDoS 공격에 대한 보안을 유지해야 합니다. 네트워크 아키텍트는 이러한 요구를 충족하는 솔루션을 설계하는 임무를 맡고 있습니다.",
        "Question": "어떤 솔루션이 회사의 애플리케이션에 대해 높은 수준의 가용성, 확장성 및 보안을 제공하면서 복잡성을 최소화할 수 있습니까?",
        "Options": {
            "1": "EC2 인스턴스 앞에 Global Accelerator를 설정하여 정적 IP와 여러 지역 간의 자동 트래픽 라우팅을 제공합니다. Global Accelerator 뒤에 ALB를 사용하여 애플리케이션 성능을 개선하고 AWS Shield Advanced를 활성화하여 DDoS 보호를 강화합니다.",
            "2": "여러 가용 영역에 걸쳐 EC2 인스턴스 앞에 Application Load Balancer (ALB)를 배포합니다. DDoS 보호를 위해 AWS Shield Standard를 활성화하고 Auto Scaling을 구성하여 트래픽 부하에 따라 인스턴스 수를 자동으로 조정합니다.",
            "3": "EC2 인스턴스 앞에 정적 IP 주소를 가진 Network Load Balancer (NLB)를 생성합니다. Route 53을 구성하여 지연 시간에 따라 트래픽을 라우팅하고 CloudFront 배포를 설정하여 일반 웹 공격으로부터 보호하는 Web Application Firewall (WAF)을 설정합니다.",
            "4": "EC2 인스턴스에 트래픽을 분산하기 위해 단일 가용 영역에 Classic Load Balancer (CLB)를 구현합니다. 피크 트래픽 시간 동안 인스턴스를 수동으로 확장하고 AWS Firewall Manager를 사용하여 보안 정책을 처리합니다."
        },
        "Correct Answer": "여러 가용 영역에 걸쳐 EC2 인스턴스 앞에 Application Load Balancer (ALB)를 배포합니다. DDoS 보호를 위해 AWS Shield Standard를 활성화하고 Auto Scaling을 구성하여 트래픽 부하에 따라 인스턴스 수를 자동으로 조정합니다.",
        "Explanation": "이 옵션은 애플리케이션 로드 밸런서를 활용하여 지능적인 트래픽 분배를 제공하고 높은 가용성을 위해 여러 가용 영역을 지원하는 강력한 아키텍처를 제공합니다. AWS Shield Standard를 활성화하면 DDoS 공격에 대한 보안이 강화되며, Auto Scaling은 애플리케이션이 변동하는 트래픽 부하를 원활하게 처리할 수 있도록 보장합니다.",
        "Other Options": [
            "이 옵션은 TCP 트래픽에 더 적합한 Network Load Balancer를 사용하며 ALB의 고급 라우팅 기능을 제공하지 않습니다. 정적 IP와 지연 기반 라우팅을 제공하지만 Auto Scaling 및 AWS Shield Standard가 제공하는 확장성과 보안 이점이 부족합니다.",
            "단일 가용 영역에서 Classic Load Balancer를 사용하는 것은 변동하는 트래픽에 필요한 높은 가용성이나 확장성을 제공하지 않습니다. 수동 확장은 효율적이지 않으며 운영 오버헤드를 증가시키고 AWS Firewall Manager는 DDoS 보호 요구를 효과적으로 해결하지 않습니다.",
            "Global Accelerator는 다중 지역 설정에 대한 이점을 제공하지만 추가적인 복잡성을 도입합니다. ALB와의 조합은 좋지만 추가된 레이어가 모든 애플리케이션에 필요하지 않을 수 있으며 Shield Advanced는 모든 시나리오에 대해 정당화되지 않을 수 있는 더 비싼 옵션입니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "솔루션 아키텍트가 여러 가용 영역에 걸쳐 로드 밸런싱이 필요한 고가용성 애플리케이션을 설계하고 있습니다. 아키텍트는 사용자가 세션 동안 동일한 백엔드 서버로 일관되게 라우팅되도록 하면서 가용 영역 간의 트래픽 분배를 가능하게 해야 합니다.",
        "Question": "아키텍트가 로드 밸런서를 위해 고려해야 할 구성 옵션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "들어오는 트래픽에 대해 고정 라운드 로빈 라우팅 알고리즘을 설정합니다.",
            "2": "클라이언트 IP 보존을 위해 로드 밸런서를 프록시 프로토콜을 사용하도록 구성합니다.",
            "3": "백엔드 서버에 대해 최소 연결 라우팅 알고리즘을 구현합니다.",
            "4": "사용자 상태 유지를 위해 세션 친화성(스티키 세션)을 활성화합니다.",
            "5": "트래픽을 고르게 분배하기 위해 교차 영역 로드 밸런싱을 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "사용자 상태 유지를 위해 세션 친화성(스티키 세션)을 활성화합니다.",
            "트래픽을 고르게 분배하기 위해 교차 영역 로드 밸런싱을 사용합니다."
        ],
        "Explanation": "세션 친화성(스티키 세션)을 활성화하면 로드 밸런서가 사용자의 요청을 세션 기간 동안 동일한 백엔드 서버로 라우팅할 수 있어 사용자 상태 유지를 위해 필수적입니다. 교차 영역 로드 밸런싱은 모든 가용 영역에 걸쳐 트래픽이 고르게 분배되도록 하여 높은 가용성과 내결함성을 제공합니다.",
        "Other Options": [
            "최소 연결 라우팅 알고리즘을 구현하는 것은 필수적이지 않으며, 세션 친화성이 사용자 세션에 우선할 수 있고 세션 지속성을 직접 지원하지 않습니다.",
            "프록시 프로토콜을 사용하는 것은 클라이언트 IP 정보를 보존하는 데 중요하지만 세션 지속성이나 가용 영역 간의 로드 분배에는 역할을 하지 않습니다.",
            "고정 라운드 로빈 라우팅 알고리즘을 설정하는 것은 사용자 상태를 유지하는 데 중요한 세션 지속성을 수용하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 회사가 AWS에서 새로운 마이크로서비스 아키텍처를 배포하고 있으며, 이는 AWS에 호스팅된 다양한 서비스와 온프레미스에 호스팅된 일부 내부 서비스 간의 통신을 필요로 합니다. 네트워크 아키텍트는 내부 및 외부 접근을 모두 지원하는 도메인 이름 해석을 위한 적절한 Route 53 호스팅 영역 유형을 결정해야 합니다. 주요 관심사는 다양한 환경에 대한 적절한 DNS 해석을 보장하면서 보안을 유지하는 것입니다.",
        "Question": "내부 서비스에 대한 안전한 DNS 해석을 보장하면서 외부 서비스에 대한 공개 접근을 허용하기 위해 네트워크 아키텍트는 어떤 유형의 Route 53 호스팅 영역을 사용해야 합니까?",
        "Options": {
            "1": "외부 도메인 이름에 대해 Amazon Route 53 공개 호스팅 영역을 구성합니다. 이렇게 하면 모든 리소스에 대한 무제한 접근이 가능합니다.",
            "2": "내부 도메인 이름에 대해 Amazon Route 53 비공개 호스팅 영역을 구성합니다. 이렇게 하면 AWS VPC 내의 리소스에 대한 DNS 쿼리가 제한됩니다.",
            "3": "내부 도메인 이름에 대해 Amazon Route 53 공개 호스팅 영역을 구성합니다. 이렇게 하면 내부 리소스에 대한 공개 DNS 해석이 가능합니다.",
            "4": "내부 도메인 이름에 대해 Amazon Route 53 비공개 호스팅 영역을 구성하고 외부 도메인 이름에 대해 공개 호스팅 영역을 구성합니다."
        },
        "Correct Answer": "내부 도메인 이름에 대해 Amazon Route 53 비공개 호스팅 영역을 구성하고 외부 도메인 이름에 대해 공개 호스팅 영역을 구성합니다.",
        "Explanation": "내부 도메인 이름에 대해 비공개 호스팅 영역을 사용하면 지정된 VPC 내의 리소스만 이러한 DNS 레코드에 접근할 수 있어 보안이 강화됩니다. 외부 도메인 이름에 대한 공개 호스팅 영역은 인터넷에서 접근할 수 있어야 하는 서비스에 대한 공개 접근을 허용하여 외부 클라이언트의 적절한 기능을 보장합니다.",
        "Other Options": [
            "이 옵션은 비공개 호스팅 영역만으로는 외부 서비스에 대한 공개 DNS 해석을 허용하지 않기 때문에 잘못된 것입니다.",
            "이 옵션은 내부 리소스를 공개 인터넷에 노출시키므로 심각한 보안 위험이 있습니다.",
            "이 옵션은 올바른 옵션입니다. 그러나 솔루션으로 명시적으로 언급되지 않았습니다. 보안 및 기능 요구 사항을 충족하기 위해 비공식 및 공개 호스팅 영역을 결합합니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 여러 리전에서 여러 개의 AWS VPC를 운영하고 있습니다. 네트워크 팀은 이러한 VPC 간의 네트워크 처리량을 최적화하기 위해 효율적인 라우팅을 보장하고 지연 시간을 최소화하는 솔루션을 구현하는 임무를 맡고 있습니다. VPC는 AWS Transit Gateway를 사용하여 상호 연결되어 있으며, 팀은 이 목표를 달성하기 위해 다양한 라우팅 정책과 구성을 고려하고 있습니다.",
        "Question": "VPC 간의 네트워크 처리량을 최적화하기 위한 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "모든 VPC 간에 VPC 피어링 연결을 구성하여 직접 트래픽 흐름을 향상시킵니다.",
            "2": "Amazon Route 53 지연 기반 라우팅을 사용하여 VPC 간의 트래픽을 관리합니다.",
            "3": "Transit Gateway를 통해 모든 VPC 연결에 대해 동일 비용 다중 경로 라우팅(ECMP)을 활성화합니다.",
            "4": "각 VPC에 대해 정의된 정적 경로로 Transit Gateway에 대한 경로 전파를 설정합니다.",
            "5": "AWS Global Accelerator를 구현하여 최적의 AWS 엣지 위치를 통해 트래픽을 유도합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Transit Gateway를 통해 모든 VPC 연결에 대해 동일 비용 다중 경로 라우팅(ECMP)을 활성화합니다.",
            "AWS Global Accelerator를 구현하여 최적의 AWS 엣지 위치를 통해 트래픽을 유도합니다."
        ],
        "Explanation": "ECMP를 활성화하면 여러 경로를 동시에 사용할 수 있어 이러한 경로 간의 트래픽을 균형 있게 분산시켜 처리량을 증가시킵니다. 또한, AWS Global Accelerator는 AWS 인프라에 대한 경로를 최적화하여 트래픽이 가장 빠른 네트워크 경로를 통해 라우팅되도록 하여 처리량을 더욱 향상시킵니다.",
        "Other Options": [
            "정적 경로로 경로 전파를 설정하면 라우팅을 단순화할 수 있지만, 여러 경로를 효과적으로 활용하지 않기 때문에 본질적으로 처리량을 최적화하지는 않습니다.",
            "VPC 피어링 연결은 VPC 간의 직접 통신을 촉진할 수 있지만, 확장성과 성능을 위해 설계된 Transit Gateway의 더 넓은 이점을 활용하지 않습니다.",
            "Amazon Route 53 지연 기반 라우팅은 DNS 쿼리를 관리하지만 VPC 간의 기본 네트워크 처리량에 직접적인 영향을 미치지 않습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 회사가 AWS Direct Connect와 VPN 연결을 포함하는 하이브리드 클라우드 아키텍처를 구현하고 있습니다. 이는 온프레미스 인프라와 AWS 환경 간의 안전한 통신을 보장합니다. 네트워크 엔지니어는 최적의 성능과 높은 가용성을 위해 Direct Connect를 활용할 수 있도록 VPN을 구성해야 합니다.",
        "Question": "네트워크 엔지니어가 AWS Direct Connect를 통해 높은 가용성을 갖춘 VPN을 성공적으로 구축하기 위해 구현해야 하는 구성은 무엇입니까?",
        "Options": {
            "1": "VPN 연결을 위해 정적 라우팅 테이블이 있는 단일 고객 게이트웨이와 함께 개인 VIF를 사용합니다.",
            "2": "온프레미스 인프라를 AWS 환경에 연결하기 위해 정적 라우팅이 있는 개인 VIF를 구성합니다.",
            "3": "동적 라우팅을 위해 구성된 여러 고객 게이트웨이와 함께 공용 VIF를 사용하여 VPN 연결을 설정합니다.",
            "4": "공용 VIF를 통해 VPN 연결을 생성하되, S3 엔드포인트를 통해서만 접근할 수 있도록 합니다."
        },
        "Correct Answer": "동적 라우팅을 위해 구성된 여러 고객 게이트웨이와 함께 공용 VIF를 사용하여 VPN 연결을 설정합니다.",
        "Explanation": "AWS Direct Connect를 통해 VPN을 실행하려면 VPN 엔드포인트에 접근하기 위해 공용 VIF가 필요합니다. 또한, 동적 라우팅을 사용하는 여러 고객 게이트웨이는 높은 가용성을 향상시켜 장애 조치 및 연결의 더 나은 복원력을 가능하게 합니다.",
        "Other Options": [
            "정적 라우팅이 있는 개인 VIF를 사용하면 VPN 엔드포인트에 접근할 수 없으며, Direct Connect를 통한 VPN 연결에는 공용 VIF가 필요합니다.",
            "정적 라우팅이 있는 단일 고객 게이트웨이는 높은 가용성을 제공하지 않으며, 중복성과 장애 조치 기능을 보장하기 위해 여러 게이트웨이와 동적 라우팅이 필요합니다.",
            "S3 엔드포인트를 통해 공용 VIF를 사용하여 VPN 연결을 설정할 수 없으며, S3 엔드포인트는 VPN 연결과 호환되지 않습니다. VPN 엔드포인트에 직접 연결하기 위해서는 공용 VIF가 필요합니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 회사가 VPN 연결을 사용하여 온프레미스 네트워크를 AWS와 통합하고 있습니다. 네트워크 엔지니어는 온프레미스 네트워크와 AWS의 VPC 간의 트래픽이 올바르게 라우팅되도록 라우팅을 구성해야 합니다. 이 설정에는 장애 조치 및 중복성을 용이하게 하기 위해 BGP를 사용하는 동적 라우팅이 포함됩니다.",
        "Question": "온프레미스 네트워크와 AWS VPC 간의 동적 라우팅이 효과적으로 작동하도록 보장하기 위해 필수적인 구성 단계는 무엇입니까?",
        "Options": {
            "1": "BGP 피어링 세션을 위한 암호화를 제공하기 위해 온프레미스 라우터에서 IPsec을 활성화합니다.",
            "2": "온프레미스 라우터와 세션을 설정하고 올바른 ASN이 사용되도록 AWS 측에서 BGP 피어링을 구성합니다.",
            "3": "트래픽 흐름을 관리하기 위해 온프레미스 라우터와 AWS VPC 라우트 테이블 모두에 정적 경로를 설정합니다.",
            "4": "VPC의 라우트 테이블에 온프레미스 네트워크로 향하는 모든 트래픽에 대해 인터넷 게이트웨이를 가리키는 기본 경로가 있는지 확인합니다."
        },
        "Correct Answer": "온프레미스 라우터와 세션을 설정하고 올바른 ASN이 사용되도록 AWS 측에서 BGP 피어링을 구성합니다.",
        "Explanation": "AWS 측에서 BGP 피어링을 구성하는 것은 온프레미스 네트워크와 AWS VPC 간의 동적 라우팅 세션을 설정하는 데 필수적입니다. 이는 자동 경로 업데이트를 가능하게 하고 장애 조치 및 중복성을 촉진하여 하이브리드 연결 솔루션에 매우 중요합니다.",
        "Other Options": [
            "정적 경로를 사용할 수 있지만, 네트워크 토폴로지의 변화에 적응하지 않기 때문에 BGP가 선호되는 동적 환경에서는 덜 효과적입니다.",
            "인터넷 게이트웨이를 가리키는 기본 경로는 온프레미스 네트워크로의 트래픽을 라우팅하는 데 적합하지 않으며, 경로는 온프레미스 CIDR에 대해 구체적이어야 합니다.",
            "IPsec은 전송 중인 데이터에 대한 암호화를 제공하지만 BGP 피어링의 기능에 직접적인 영향을 미치지 않습니다. BGP 세션은 효과적으로 작동하기 위해 적절한 ASN 구성 및 피어링 설정이 필요합니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사가 VPC 간의 통신을 효율적으로 관리하기 위해 허브-스포크 네트워크 아키텍처가 필요한 다중 지역 애플리케이션을 배포하고 있습니다. 이 회사는 네트워크 관리를 중앙 집중화하고 여러 계정과 지역에 걸친 VPC 피어링 연결의 복잡성을 줄이기를 원합니다.",
        "Question": "회사가 VPC를 위한 허브-스포크 아키텍처를 달성하기 위해 어떤 AWS 서비스를 구현해야 합니까?",
        "Options": {
            "1": "Amazon Route 53 Resolver를 배포하여 VPC 간의 DNS 쿼리를 관리하고, 이를 통해 직접 연결 없이 통신할 수 있도록 합니다.",
            "2": "AWS Transit Gateway를 구현하여 여러 VPC와 온프레미스 네트워크를 연결하고, 확장 가능하고 단순화된 네트워크 관리를 가능하게 합니다.",
            "3": "모든 VPC를 연결하고 중앙 VPC를 통해 라우팅을 관리하기 위해 VPN 연결 세트를 갖춘 전이 VPC를 생성합니다.",
            "4": "VPC 피어링 연결을 사용하여 아키텍처의 각 VPC를 다른 모든 VPC에 직접 연결하여 낮은 대기 시간 통신을 보장합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 여러 VPC와 온프레미스 네트워크를 연결하고, 확장 가능하고 단순화된 네트워크 관리를 가능하게 합니다.",
        "Explanation": "AWS Transit Gateway는 허브-스포크 모델에서 여러 VPC와 온프레미스 네트워크를 연결하기 위한 확장 가능하고 효율적인 솔루션을 제공합니다. 모든 VPC가 중앙 전이 게이트웨이에 연결될 수 있도록 하여 VPC 피어링의 복잡성을 줄이고 성능과 보안을 향상시킵니다.",
        "Other Options": [
            "VPC 피어링 연결은 VPC 수가 증가함에 따라 복잡해질 수 있으며, 관리 및 확장이 어려운 연결의 메쉬를 초래합니다. 이 접근 방식은 Transit Gateway가 제공하는 중앙 집중식 관리를 제공하지 않습니다.",
            "전이 VPC를 생성하면 연결성을 제공할 수 있지만, 추가적인 복잡성과 오버헤드를 추가합니다. VPN 연결 및 라우팅 구성을 관리해야 하며, 이는 보다 간소화된 AWS Transit Gateway 접근 방식에 비해 번거로울 수 있습니다.",
            "Amazon Route 53 Resolver를 DNS 관리에 사용하는 것은 VPC 간의 직접 네트워크 연결을 설정하지 않습니다. 이름 해석을 촉진할 수 있지만, 트래픽 관리를 위한 허브-스포크 아키텍처를 효과적으로 구현하지 않습니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 금융 서비스 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며 DNS 통신의 보안에 대해 우려하고 있습니다. 보안 팀은 모든 DNS 쿼리와 응답이 스푸핑 공격을 방지하고 데이터 무결성을 보장하기 위해 인증되어야 한다고 요구했습니다. 팀은 AWS 환경에서 DNS 통신을 보호하기 위한 다양한 옵션을 고려하고 있습니다.",
        "Question": "다음 옵션 중 인증 및 무결성 요구 사항을 충족하면서 DNS 통신을 보호하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "VPN 연결을 사용하여 네트워크를 통과하는 모든 DNS 쿼리와 응답을 암호화하여 개인 정보 보호 및 보안을 보장합니다.",
            "2": "AWS WAF 규칙을 구성하여 DNS 트래픽을 모니터링하고 필터링하여 DNS 기반 공격에 대한 추가 보안 계층을 제공합니다.",
            "3": "Amazon CloudFront를 사용자 지정 도메인으로 활성화하여 DNS 레코드를 캐시하고 성능을 개선하지만 DNS 통신을 보호하지는 않습니다.",
            "4": "Route 53의 호스팅 영역에 대해 DNSSEC를 구현하여 DNS 데이터의 무결성을 보호하고 응답의 진위를 보장합니다."
        },
        "Correct Answer": "Route 53의 호스팅 영역에 대해 DNSSEC를 구현하여 DNS 데이터의 무결성을 보호하고 응답의 진위를 보장합니다.",
        "Explanation": "Route 53의 호스팅 영역에 대해 DNSSEC를 구현하는 것은 DNS 응답을 인증하고 그 무결성을 보장하는 메커니즘을 제공하므로 스푸핑 공격을 방지하는 가장 좋은 방법입니다. DNSSEC는 DNS 통신을 위해 특별히 설계된 보안 계층을 추가합니다.",
        "Other Options": [
            "VPN 연결을 사용하면 전송 중 데이터가 암호화되지만 DNS 응답의 인증 및 무결성 필요성을 해결하지 않으며, 불필요한 복잡성을 초래할 수 있습니다.",
            "AWS WAF는 트래픽을 필터링하고 모니터링하는 데 효과적이지만 DNS 쿼리나 응답에 대한 인증을 제공하지 않아 DNS 통신을 보호하는 데는 불충분합니다.",
            "Amazon CloudFront를 활성화하면 웹 콘텐츠의 성능과 캐싱을 개선하지만 DNS 통신에 대한 보안을 제공하지 않으며, 이는 응답의 진위를 보장하는 데 중요합니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 글로벌 전자상거래 회사가 다양한 지역의 고객을 위한 사용자 경험을 향상시키고 트래픽을 효율적으로 관리할 계획입니다. 이들은 성능을 개선하고 낮은 대기 시간을 보장하기 위해 엣지 네트워크 서비스를 아키텍처에 통합하고자 합니다. 이 회사는 여러 AWS 리전을 운영하고 있으며 온프레미스 데이터 센터와 클라우드 리소스를 혼합하여 사용하고 있습니다.",
        "Question": "네트워크 아키텍트가 이 글로벌 아키텍처의 사용자 성능 및 트래픽 관리를 최적화하기 위해 어떤 설계 전략을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Transit Gateway를 설정하여 전 세계적으로 VPC를 상호 연결하고 트래픽을 보다 효과적으로 관리합니다.",
            "2": "Amazon CloudFront를 구현하여 엣지 위치에서 정적 콘텐츠를 캐시하여 최종 사용자에 대한 대기 시간을 줄입니다.",
            "3": "AWS Route 53을 지리적 라우팅 정책으로 구성하여 사용자 요청을 가장 가까운 애플리케이션 엔드포인트로 유도합니다.",
            "4": "AWS Global Accelerator를 배포하여 사용자 트래픽을 가장 가까운 AWS 엔드포인트로 유도하여 성능을 개선합니다.",
            "5": "AWS Direct Connect를 활용하여 온프레미스 데이터 센터와 단일 AWS 리전 간에 전용 연결을 설정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Global Accelerator를 배포하여 사용자 트래픽을 가장 가까운 AWS 엔드포인트로 유도하여 성능을 개선합니다.",
            "Amazon CloudFront를 구현하여 엣지 위치에서 정적 콘텐츠를 캐시하여 최종 사용자에 대한 대기 시간을 줄입니다."
        ],
        "Explanation": "AWS Global Accelerator를 배포하면 사용자 트래픽이 대기 시간을 기준으로 최적의 엔드포인트로 라우팅되어 성능이 향상됩니다. Amazon CloudFront를 구현하면 정적 콘텐츠가 엣지 위치에서 캐시되어 최종 사용자가 콘텐츠에 접근할 때 경험하는 대기 시간이 크게 줄어들어 전반적인 사용자 경험이 개선됩니다.",
        "Other Options": [
            "AWS Direct Connect는 단일 AWS 리전과의 전용 연결을 제공하지만, 글로벌 트래픽 관리 성능을 최적화하거나 여러 지역에서 낮은 대기 시간을 보장하지 않습니다. 이는 주로 온프레미스와 AWS 간의 연결을 강화하기 위한 것이며, 엣지 서비스를 포함하지 않습니다.",
            "AWS Transit Gateway는 VPC의 효율적인 상호 연결을 허용하지만, 사용자 성능 최적화나 엣지에서의 트래픽 관리에 직접 기여하지 않습니다. 이는 네트워크 연결에 관한 것이지 최종 사용자 대기 시간을 개선하는 것과는 관련이 없습니다.",
            "AWS Route 53을 지리적 라우팅 정책으로 구성하면 지리적 위치에 따라 트래픽을 유도하는 데 도움이 되지만, Global Accelerator나 CloudFront와 같은 엣지 캐싱이나 지능형 라우팅을 활용하여 성능을 본질적으로 최적화하거나 대기 시간을 줄이지는 않습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "대규모 조직이 네트워크 배포 프로세스를 간소화하기 위해 인프라를 코드로 관리하는 모델로 전환하고 있습니다. 팀은 코드로 네트워크 인프라를 정의하고, 리소스 프로비저닝을 자동화하며, 네트워크 구성에 대한 버전 관리를 보장할 수 있는 솔루션이 필요합니다. 그들은 다른 AWS 서비스와 원활하게 통합되고 반복 가능하며 일관된 배포를 가능하게 하는 도구를 찾고 있습니다.",
        "Question": "팀이 네트워크 리소스에 대한 인프라 자동화를 구현하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS CodeDeploy",
            "2": "AWS CloudFormation",
            "3": "AWS Config",
            "4": "AWS OpsWorks"
        },
        "Correct Answer": "AWS CloudFormation",
        "Explanation": "AWS CloudFormation은 인프라를 코드로 정의할 수 있게 해주는 가장 적합한 서비스입니다. 템플릿을 통해 AWS 리소스를 생성하고 관리할 수 있는 기능을 제공하여 네트워크 인프라 및 기타 리소스의 자동화되고 일관된 반복 가능한 배포를 가능하게 합니다.",
        "Other Options": [
            "AWS OpsWorks는 애플리케이션 관리를 돕는 구성 관리 서비스이지만, 네트워크 인프라 자동화에 특별히 초점을 맞추고 있지 않습니다.",
            "AWS Config는 주로 리소스 인벤토리, 구성 이력 및 준수 감사에 사용되며, 인프라를 코드로 프로비저닝하는 데는 사용되지 않습니다.",
            "AWS CodeDeploy는 애플리케이션 배포를 자동화하는 배포 서비스이지만, 네트워크 인프라를 정의하고 관리하는 목적에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "금융 서비스 회사가 AWS에 애플리케이션을 배포하고 있으며, 이는 엄격한 데이터 보호 규정을 준수해야 합니다. 애플리케이션은 네트워크를 통해 민감한 정보를 안전하게 전송해야 합니다. 네트워크 엔지니어는 전송 중 데이터 기밀성을 보장하기 위해 최상의 암호화 방법을 결정해야 합니다.",
        "Question": "네트워크 엔지니어가 전송 중 데이터에 대한 준수 요구 사항을 충족하기 위해 어떤 암호화 방법을 구현해야 합니까?",
        "Options": {
            "1": "SSH 터널링을 사용하여 인터넷을 통한 애플리케이션 트래픽을 보호합니다.",
            "2": "웹 클라이언트와 애플리케이션 서버 간의 통신을 보호하기 위해 TLS를 사용합니다.",
            "3": "온프레미스와 AWS 간의 트래픽을 암호화하기 위해 VPN 연결을 구성합니다.",
            "4": "애플리케이션 서버와 데이터베이스 간의 트래픽을 암호화하기 위해 IPsec을 구현합니다."
        },
        "Correct Answer": "웹 클라이언트와 애플리케이션 서버 간의 통신을 보호하기 위해 TLS를 사용합니다.",
        "Explanation": "TLS(전송 계층 보안)는 인터넷을 통한 통신을 보호하기 위해 사용되는 표준 프로토콜로, 웹 클라이언트와 애플리케이션 서버 간에 전송되는 민감한 데이터를 보호하는 데 이상적입니다. 이는 기밀성, 무결성 및 인증을 보장하여 전송 중 데이터 보호에 대한 준수 요구 사항에 부합합니다.",
        "Other Options": [
            "IPsec 구현은 네트워크 수준의 트래픽 보호에 더 적합하며, 애플리케이션 계층 암호화를 직접적으로 다루지 않기 때문에 이 시나리오에 덜 효과적일 수 있습니다.",
            "SSH 터널링은 트래픽 보호를 위한 유효한 옵션이지만, 일반적으로 원격 액세스를 위해 사용되며 클라이언트와 서버 간의 애플리케이션 수준 통신 보호에는 사용되지 않습니다.",
            "VPN 연결을 구성하면 온프레미스와 AWS 간의 트래픽을 보호하지만, 웹 클라이언트와 애플리케이션 서버 간의 통신 암호화는 TLS가 직접적으로 다루고 있습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 회사가 AWS Elastic Load Balancers (ELB)를 사용하여 웹 애플리케이션을 배포하여 트래픽을 효율적으로 관리하고 있습니다. 네트워크 엔지니어는 최적의 SSL 성능을 보장하고 유지 관리 중에 트래픽을 원활하게 처리하기 위해 연결 드레인(connection draining)을 활성화하도록 로드 밸런서를 구성해야 합니다.",
        "Question": "Elastic Load Balancer의 이러한 요구 사항을 충족하기 위해 엔지니어가 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "연결 드레인 시간을 1시간으로 설정하고 보안을 강화하기 위해 웹 애플리케이션 방화벽(WAF)을 사용하도록 클래식 로드 밸런서(ELB)를 설정합니다.",
            "2": "연결 드레인을 최소 1초로 설정하고 SSL 협상을 위한 기본 보안 정책을 사용하는 클래식 로드 밸런서(ELB)를 배포합니다.",
            "3": "연결 드레인 시간을 10분으로 설정하고 사용자 지정 보안 정책으로 SSL 종료를 활성화하는 애플리케이션 로드 밸런서(ALB)를 사용합니다.",
            "4": "연결 드레인 시간을 5분으로 설정하고 서버 순서 기본 설정을 엄격하게 설정하여 SSL 종료를 구성하는 애플리케이션 로드 밸런서(ALB)를 활용합니다."
        },
        "Correct Answer": "연결 드레인 시간을 5분으로 설정하고 서버 순서 기본 설정을 엄격하게 설정하여 SSL 종료를 구성하는 애플리케이션 로드 밸런서(ALB)를 활용합니다.",
        "Explanation": "올바른 옵션은 연결 드레인을 지원하고 보안 정책 및 서버 순서 기본 설정에 대한 특정 구성을 통해 SSL 종료를 허용하는 애플리케이션 로드 밸런서(ALB)를 활용합니다. 5분의 연결 드레인 시간은 트래픽 유지와 원활한 종료를 위한 균형을 제공합니다.",
        "Other Options": [
            "이 옵션은 SSL 종료를 위해 클래식 로드 밸런서(ELB)를 잘못 지정하고 있습니다. ELB는 사용자 지정 보안 정책으로 SSL 종료를 지원하지 않아 보안 애플리케이션에 대한 효과가 제한됩니다.",
            "이 옵션은 클래식 로드 밸런서와 1초의 연결 드레인 시간을 올바르게 언급하지만, SSL 구성에 대한 더 고급 기능과 유연성을 제공하는 ALB를 활용하지 못하고 있습니다.",
            "이 옵션은 연결 드레인 시간을 1시간으로 설정한 클래식 로드 밸런서를 제안하고 있으며, 이는 과도하고 WAF가 ELB와 함께 사용할 수 있다고 잘못 언급하고 있습니다. WAF는 ALB에서만 사용할 수 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "한 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있으며, 다양한 내부 및 외부 도메인에 대한 DNS를 구성해야 합니다. IT 팀은 내부 리소스를 위한 프라이빗 DNS 존을 설정하고 특정 도메인에 대한 DNS 쿼리를 해결하기 위해 조건부 포워딩을 구현하는 임무를 맡고 있습니다. 그들은 내부 DNS 쿼리가 공용 DNS로 가지 않도록 하여 보안과 효율성을 유지하고자 합니다.",
        "Question": "IT 팀이 AWS에서 프라이빗 DNS 존에 대한 조건부 포워딩을 구성하기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "Route 53에서 DNS 쿼리 로깅을 활성화하여 프라이빗 호스팅 존의 DNS 요청을 캡처하고 분석합니다.",
            "2": "특정 도메인에 대한 쿼리를 온프레미스 DNS 서버로 포워딩하는 Route 53 Resolver 규칙을 생성합니다.",
            "3": "Route 53에서 프라이빗 호스팅 존을 설정하고 이를 온프레미스 DNS 서버에 대한 별칭으로 구성합니다.",
            "4": "Route 53 공용 호스팅 존을 배포하고 DNS 쿼리 유형에 따라 트래픽을 라우팅하도록 구성합니다."
        },
        "Correct Answer": "특정 도메인에 대한 쿼리를 온프레미스 DNS 서버로 포워딩하는 Route 53 Resolver 규칙을 생성합니다.",
        "Explanation": "특정 도메인에 대한 쿼리를 온프레미스 DNS 서버로 포워딩하는 Route 53 Resolver 규칙을 생성하는 것은 AWS에서 조건부 포워딩을 구현하는 올바른 접근 방식입니다. 이를 통해 지정된 도메인에 대한 DNS 쿼리가 온프레미스 환경으로 직접 전달되어 내부 리소스가 공용 DNS 해상도에 노출되지 않고 올바르게 해결됩니다.",
        "Other Options": [
            "Route 53에서 포워딩 규칙을 생성하지 않고 프라이빗 호스팅 존을 설정하는 것은 조건부 포워딩의 필요성을 해결하지 않으며 특정 도메인 쿼리를 온프레미스 DNS 서버로 유도하지 않습니다.",
            "공용 호스팅 존을 배포하는 것은 내부 DNS 해상도에 적합하지 않으며 DNS 레코드를 공용 인터넷에 노출시켜 내부 쿼리의 보안 요구 사항과 모순됩니다.",
            "Route 53에서 DNS 쿼리 로깅을 활성화하는 것은 모니터링에 유용하지만 DNS 쿼리의 실제 포워딩을 구성하지 않으며, 이는 조건부 포워딩에 필요합니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "네트워킹 팀은 온프레미스 데이터 센터와 AWS 간의 일관된 연결을 유지해야 하는 글로벌 회사의 이중화 하이브리드 연결 모델을 설계하는 임무를 맡고 있습니다. 그들은 높은 가용성과 장애 조치를 보장하기 위해 AWS Direct Connect와 AWS Site-to-Site VPN을 모두 활용하는 것을 고려하고 있습니다.",
        "Question": "이중화 하이브리드 연결 모델을 가장 잘 지원하는 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "다른 위치에 두 번째 AWS Direct Connect 연결을 생성합니다.",
            "2": "장애 조치 없이 단일 Direct Connect 연결을 사용합니다.",
            "3": "이중화를 위해 여러 VPN 터널을 배포합니다.",
            "4": "정적 경로로 단일 VPN을 구현합니다.",
            "5": "Direct Connect의 백업으로 Site-to-Site VPN 연결을 설정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "다른 위치에 두 번째 AWS Direct Connect 연결을 생성합니다.",
            "Direct Connect의 백업으로 Site-to-Site VPN 연결을 설정합니다."
        ],
        "Explanation": "다른 위치에 두 번째 AWS Direct Connect 연결을 생성하면 기본 연결이 실패할 경우 이중화를 제공합니다. Direct Connect의 백업으로 Site-to-Site VPN 연결을 설정하면 데이터 전송을 위한 대체 경로가 확보되어 하이브리드 연결 모델의 복원력이 향상됩니다.",
        "Other Options": [
            "장애 조치 없이 단일 Direct Connect 연결을 사용하는 것은 이중화를 제공하지 않으며, 연결이 실패할 경우 네트워크가 중단될 위험이 있습니다.",
            "이중화를 위해 여러 VPN 터널을 배포하는 것은 가용성을 높일 수 있지만, 기본 Direct Connect 연결이 없으면 Direct Connect와 VPN을 결합한 하이브리드 모델의 요구 사항을 충족하지 않습니다.",
            "정적 경로로 단일 VPN을 구현하는 것은 이중화가 부족하며, 네트워크 토폴로지의 변화에 동적으로 적응할 수 없어 연결 유지에 중요합니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "네트워크 관리자가 VPC 환경에서 간헐적인 지연 문제를 해결하고 있습니다. 관리자는 패킷을 분석하고 패킷 형성의 잠재적인 문제를 식별하기 위해 VPC 트래픽 미러링을 사용하기로 결정했습니다. 목표는 패킷 형성이 애플리케이션 성능에 영향을 미치는지 확인하는 것입니다.",
        "Question": "관리자가 지연 문제를 효과적으로 분석하기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "AWS WAF 규칙을 활용하여 트래픽을 필터링하고 지연을 유발하는 특정 요청만 분석합니다.",
            "2": "VPC 트래픽 미러링을 구성하여 미러링된 패킷을 충분한 처리 리소스를 갖춘 EC2 인스턴스에서 실행되는 네트워크 분석 장치로 전송합니다.",
            "3": "미러링된 패킷을 나중에 분석하기 위해 Amazon S3 버킷을 사용하는 트래픽 미러 타겟을 설정합니다.",
            "4": "모든 트래픽 이벤트를 기록하기 위해 AWS CloudTrail과 함께 패킷 미러링을 구현합니다."
        },
        "Correct Answer": "VPC 트래픽 미러링을 구성하여 미러링된 패킷을 충분한 처리 리소스를 갖춘 EC2 인스턴스에서 실행되는 네트워크 분석 장치로 전송합니다.",
        "Explanation": "VPC 트래픽 미러링을 구성하여 미러링된 패킷을 네트워크 분석 장치로 전송하면 관리자는 실시간 패킷 분석을 수행하고 패킷 형성과 지연과 직접 관련된 문제를 식별할 수 있습니다. 이 방법은 애플리케이션 성능에 영향을 미치는 트래픽 패턴에 대한 즉각적인 통찰력을 제공합니다.",
        "Other Options": [
            "Amazon S3 버킷을 사용하는 트래픽 미러 타겟을 설정하는 것은 실시간 분석에 적합하지 않으며, S3는 주로 저장 용도로 사용되므로 패킷 데이터를 검토하는 데 상당한 지연을 초래합니다.",
            "AWS CloudTrail과 함께 패킷 미러링을 구현하는 것은 이 목적에 효과적이지 않으며, CloudTrail은 API 호출에 중점을 두고 패킷 수준의 세부 정보를 제공하지 않아 지연 문제를 해결하는 데 필요합니다.",
            "AWS WAF 규칙을 활용하여 트래픽을 필터링하는 것은 패킷 형성 문제를 분석하는 직접적인 방법이 아니며, WAF는 웹 애플리케이션 보안을 위해 설계되었고 지연 문제 해결에 필요한 패킷 세부 정보를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "한 회사가 AWS에서 다양한 로드 밸런싱 기술을 활용하는 새로운 애플리케이션 아키텍처를 설계하고 있습니다. 이 아키텍처는 효율적인 트래픽 분배와 애플리케이션 성능을 보장하기 위해 OSI 모델의 다양한 계층에서 로드 밸런서가 어떻게 작동하는지에 대한 상세한 이해가 필요합니다.",
        "Question": "다음 중 OSI 모델의 Layer 3, Layer 4, Layer 7에서 로드 밸런싱이 작동하는 방식의 주요 차이점을 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "Layer 3 로드 밸런싱은 애플리케이션 데이터를 검사하고, Layer 4 로드 밸런싱은 MAC 주소만을 기반으로 결정을 내리며, Layer 7 로드 밸런싱은 SSL 트래픽만을 전달합니다.",
            "2": "Layer 3 로드 밸런싱은 주로 대역폭 최적화에 중점을 두고, Layer 4 로드 밸런싱은 오직 보안 트래픽만 처리하며, Layer 7 로드 밸런싱은 HTTP 프로토콜만으로 작동할 수 있습니다.",
            "3": "Layer 3 로드 밸런싱은 애플리케이션 계층에서 작동하고, Layer 4 로드 밸런싱은 세션 지속성을 요구하며, Layer 7 로드 밸런싱은 SSL 종료를 지원하지 않습니다.",
            "4": "Layer 3 로드 밸런싱은 네트워크 계층에서 IP 주소를 기반으로 패킷을 전달하고, Layer 4 로드 밸런싱은 TCP/UDP 포트를 사용하며, Layer 7 로드 밸런싱은 HTTP 헤더와 같은 애플리케이션 수준의 콘텐츠를 기반으로 라우팅 결정을 내립니다."
        },
        "Correct Answer": "Layer 3 로드 밸런싱은 네트워크 계층에서 IP 주소를 기반으로 패킷을 전달하고, Layer 4 로드 밸런싱은 TCP/UDP 포트를 사용하며, Layer 7 로드 밸런싱은 HTTP 헤더와 같은 애플리케이션 수준의 콘텐츠를 기반으로 라우팅 결정을 내립니다.",
        "Explanation": "Layer 3 (네트워크 계층)에서의 로드 밸런싱은 패킷 전달을 위해 IP 주소에 의존합니다. Layer 4 (전송 계층)는 TCP/UDP 포트를 사용하여 라우팅 결정을 내리며, Layer 7 (애플리케이션 계층)은 HTTP 헤더와 같은 애플리케이션 특정 데이터를 평가하여 라우팅을 수행하여 콘텐츠 기반 라우팅과 같은 고급 기능을 제공합니다.",
        "Other Options": [
            "이 옵션은 Layer 3 로드 밸런싱이 애플리케이션 데이터를 검사한다고 잘못 설명하고 있으며, 이는 IP 주소에 중점을 두고 네트워크 계층에서 작동하기 때문에 사실이 아닙니다. 또한 Layer 4는 MAC 주소만을 기반으로 결정을 내리지 않으며, Layer 7은 SSL 트래픽만을 전달하지 않습니다.",
            "이 옵션은 Layer 3 로드 밸런싱이 주로 대역폭 최적화에 관한 것이 아니며, Layer 4 로드 밸런싱은 보안 트래픽과 비보안 트래픽 모두를 처리할 수 있고, Layer 7 로드 밸런싱은 HTTP 프로토콜에만 국한되지 않기 때문에 잘못되었습니다.",
            "이 옵션은 계층을 잘못 설명하고 있습니다. Layer 3는 애플리케이션 계층이 아니며, Layer 4 로드 밸런싱은 본질적으로 세션 지속성을 요구하지 않습니다. 또한 Layer 7 로드 밸런싱은 SSL 종료를 지원하며, 이는 보안 애플리케이션에 대한 일반적인 기능입니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 금융 서비스 회사가 AWS에 호스팅된 애플리케이션을 위해 SSL/TLS 인증서를 안전하게 관리해야 합니다. 이 회사는 규제 기준 준수와 인증서의 자동 갱신 및 적절한 관리를 보장하는 것에 특히 신경을 쓰고 있습니다. 이 솔루션은 운영 오버헤드를 최소화하면서 보안 및 규정 준수를 유지하기 위해 AWS 서비스를 활용해야 합니다.",
        "Question": "회사가 AWS 서비스를 사용하여 인증서 관리 솔루션을 구현하기 위한 가장 효과적인 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Lambda를 사용하여 SSL/TLS 인증서를 수동으로 생성하고 Amazon S3에 저장하며 주기적으로 업데이트하는 맞춤형 솔루션을 설정합니다.",
            "2": "SSL/TLS 인증서를 관리하기 위해 온프레미스 인증 기관을 배포하고, 인증서 관리를 위해 온프레미스 인프라에 안전하게 연결하기 위해 AWS VPN을 구성합니다.",
            "3": "AWS Private Certificate Authority (ACM PCA)를 활용하여 내부 애플리케이션을 위한 개인 SSL/TLS 인증서를 생성하고 관리하여 규제 기준을 준수합니다.",
            "4": "AWS Certificate Manager (ACM)를 사용하여 모든 애플리케이션에 대한 SSL/TLS 인증서를 요청합니다. 자동 갱신을 활성화하고 ACM을 Elastic Load Balancing (ELB)와 통합하여 배포합니다."
        },
        "Correct Answer": "AWS Certificate Manager (ACM)를 사용하여 모든 애플리케이션에 대한 SSL/TLS 인증서를 요청합니다. 자동 갱신을 활성화하고 ACM을 Elastic Load Balancing (ELB)와 통합하여 배포합니다.",
        "Explanation": "AWS Certificate Manager (ACM)를 사용하면 회사가 SSL/TLS 인증서의 관리 및 갱신을 자동화하여 운영 오버헤드를 줄일 수 있습니다. 또한 ACM은 Elastic Load Balancing과 같은 AWS 서비스와 원활하게 통합되어 인증서를 안전한 애플리케이션에 배포하고 보안 기준을 준수할 수 있도록 간소화합니다.",
        "Other Options": [
            "온프레미스 인증 기관을 배포하는 것은 상당한 운영 오버헤드를 수반하며, 클라우드 기반 애플리케이션의 인증서를 관리할 때 자동화 및 확장성에 대한 회사의 요구를 충족하지 못할 수 있습니다.",
            "AWS Private Certificate Authority (ACM PCA)는 개인 인증서 생성을 허용하지만, AWS Certificate Manager를 사용하는 것보다 추가적인 설정 및 관리가 필요하며, 이는 자동 갱신이 가능한 공개 인증서에 대해 더 간단한 솔루션을 제공합니다.",
            "AWS Lambda를 사용하여 SSL/TLS 인증서를 생성하고 관리하는 맞춤형 솔루션은 복잡하고 오류가 발생하기 쉬우며, 일관되지 않은 관리 관행으로 인해 규제 기준을 준수하지 못할 위험을 증가시킬 수 있습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "시스템 관리자가 네트워크 성능을 최적화하기 위해 Linux 기반 서버에서 점보 프레임을 활성화하고 있습니다. 관리자는 eth0 인터페이스의 MTU를 9001로 설정하고 이 구성이 재부팅 후에도 지속되도록 해야 합니다. 이 목표를 달성하기 위해 올바른 명령을 실행해야 합니다.",
        "Question": "시스템 관리자가 eth0 인터페이스에서 점보 프레임을 활성화하고 설정이 재시작 후에도 지속되도록 하려면 어떤 명령을 사용해야 합니까?",
        "Options": {
            "1": "sudo ip link set dev eth0 mtu 9001 && echo 'supercede interface-mtu 9001;' >> /etc/dhcp/dhclient-eth0.conf",
            "2": "sudo ip link set dev eth0 mtu 9001 && echo 'interface \"eth0\" { supercede interface-mtu 1500; }' >> /etc/dhcp/dhclient-eth0.conf",
            "3": "sudo ip link set dev eth0 mtu 1500 && echo 'supercede interface-mtu 9001;' >> /etc/dhcp/dhclient-eth0.conf",
            "4": "sudo ip link set dev eth0 mtu 9001 && echo 'supercede interface-mtu 1500;' >> /etc/dhcp/dhclient-eth0.conf"
        },
        "Correct Answer": "sudo ip link set dev eth0 mtu 9001 && echo 'interface \"eth0\" { supercede interface-mtu 1500; }' >> /etc/dhcp/dhclient-eth0.conf",
        "Explanation": "이 옵션은 eth0에 대해 MTU를 9001로 설정하여 점보 프레임을 올바르게 활성화하고, 재부팅 시 MTU 설정이 적용되도록 구성 파일을 형식화합니다.",
        "Other Options": [
            "이 옵션은 MTU를 9001 대신 1500으로 잘못 설정하여 점보 프레임을 활성화하는 요구 사항을 충족하지 않습니다.",
            "이 옵션은 eth0에 대한 올바른 MTU 설정을 하지만 dhclient 구성에서 MTU를 1500으로 잘못 지정하여 원하는 MTU 9001이 지속되지 않습니다.",
            "이 옵션은 MTU를 1500으로 설정하여 점보 프레임을 활성화하는 목표에 반하므로 잘못된 선택입니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "조직이 마이크로서비스 아키텍처를 위한 새로운 Amazon VPC를 설정할 계획입니다. 그들은 사용 가능한 서브넷의 수를 극대화하면서 효율적인 IP 주소 사용을 보장하는 CIDR 블록을 사용하고자 합니다. 그들은 VPC를 위한 여러 CIDR 범위를 고려하고 있습니다. 그들은 어떤 CIDR 블록 구성이 그들의 요구 사항에 가장 적합한지 알아야 합니다.",
        "Question": "조직이 AWS VPC 한도를 준수하면서 최대 서브넷 가용성을 보장하기 위해 VPC에 선택해야 할 CIDR 블록은 무엇입니까?",
        "Options": {
            "1": "10.0.0.0/16",
            "2": "10.1.0.0/22",
            "3": "192.168.0.0/15",
            "4": "172.16.0.0/12"
        },
        "Correct Answer": "10.0.0.0/16",
        "Explanation": "CIDR 블록 10.0.0.0/16은 총 65,536개의 IP 주소를 제공하여 256개의 /24 서브넷을 허용합니다. 이 구성은 사용 가능한 서브넷의 수를 많이 확보하면서 IP 주소를 효율적으로 사용하는 균형을 이루어 마이크로서비스 아키텍처에 이상적입니다.",
        "Other Options": [
            "CIDR 블록 192.168.0.0/15는 131,072개의 IP 주소만 제공하지만, /16 블록에 비해 더 작은 서브넷을 많이 제공할 수 없기 때문에 서브넷 가용성을 극대화하는 데 최적이 아닙니다.",
            "CIDR 블록 172.16.0.0/12는 큰 주소 공간을 제공하지만, 일반적으로 단일 VPC 구성에는 너무 광범위하며 사용 가능한 /24 서브넷의 수를 극대화하지 않습니다.",
            "CIDR 블록 10.1.0.0/22는 1,024개의 IP 주소만 제공하므로 서브넷의 수를 제한하고 여러 마이크로서비스가 있는 확장 가능한 아키텍처의 필요를 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "다국적 기업이 여러 AWS 계정을 운영하고 있으며, 각 계정은 내부 서비스에 대한 DNS 해상이 필요한 중요한 애플리케이션을 호스팅하고 있습니다. 이 회사는 DNS 관리를 중앙 집중화하고 AWS 계정 간에 DNS 서비스를 공유하여 효율성을 높이고 관리 오버헤드를 줄이기를 원합니다. 네트워크 아키텍트는 적절한 AWS 서비스를 사용하여 이를 달성할 방법을 모색하고 있습니다.",
        "Question": "여러 AWS 계정 간에 DNS 서비스를 효과적으로 공유하기 위해 사용할 수 있는 방법의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "DNS 쿼리를 계정 간에 중계하는 AWS Lambda 함수를 구현하여 서로 다른 AWS 계정 간에 동적 DNS 해상을 가능하게 합니다.",
            "2": "AWS Resource Access Manager (RAM)를 설정하여 Route 53 Resolver 규칙을 계정 간에 공유하여 모든 관련 계정에 대한 중앙 집중식 DNS 해상을 가능하게 합니다.",
            "3": "Amazon VPC Peering을 활용하여 계정 간 VPC를 연결하여 각 VPC가 서로의 Route 53 프라이빗 호스팅 존에 직접 접근할 수 있도록 합니다.",
            "4": "주 계정의 Route 53에서 프라이빗 호스팅 존을 생성하고 AWS RAM을 사용하여 다른 계정과 공유하여 그들이 공유된 존 내에서 DNS 쿼리를 해결할 수 있도록 합니다.",
            "5": "각 계정에서 Route 53 아웃바운드 엔드포인트를 구성하는 CloudFormation 스택을 배포하여 각 계정이 전용 DNS 해석기를 갖도록 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Resource Access Manager (RAM)를 설정하여 Route 53 Resolver 규칙을 계정 간에 공유하여 모든 관련 계정에 대한 중앙 집중식 DNS 해상을 가능하게 합니다.",
            "주 계정의 Route 53에서 프라이빗 호스팅 존을 생성하고 AWS RAM을 사용하여 다른 계정과 공유하여 그들이 공유된 존 내에서 DNS 쿼리를 해결할 수 있도록 합니다."
        ],
        "Explanation": "AWS Resource Access Manager (RAM)를 활용하여 Route 53 Resolver 규칙을 공유하면 여러 AWS 계정 간의 DNS 해상을 중앙 집중식으로 관리할 수 있습니다. 또한 프라이빗 호스팅 존을 생성하고 다른 계정과 공유하면 그들이 공유된 네임스페이스 내에서 DNS 쿼리를 일관되게 해결할 수 있어 DNS 관리가 효과적으로 중앙 집중화됩니다.",
        "Other Options": [
            "Route 53 아웃바운드 엔드포인트를 위한 CloudFormation 스택을 배포하는 것은 계정 간 DNS 서비스 공유를 촉진하지 않습니다. 대신, 각 계정에 대해 별도의 해석기를 생성하여 중앙 집중화의 목적을 무색하게 만듭니다.",
            "DNS 쿼리를 중계하기 위해 AWS Lambda 함수를 사용하는 것은 비효율적이며 불필요한 복잡성을 초래합니다. 이는 내장된 AWS 서비스에 비해 지연 시간이 증가하고 잠재적인 실패 지점을 초래할 수 있습니다.",
            "Amazon VPC Peering은 VPC 간의 네트워크 연결을 허용하지만 Route 53 프라이빗 호스팅 존을 공유하는 메커니즘을 본질적으로 제공하지 않습니다. 각 VPC의 DNS 설정은 적절한 서비스를 사용하여 특별히 공유되지 않는 한 고립된 상태로 남아 있습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "회사가 내부 기업 사용자와 외부 고객 모두에게 서비스를 제공해야 하는 웹 애플리케이션을 배포하고 있습니다. 애플리케이션 아키텍처는 여러 Amazon EC2 인스턴스에 트래픽을 효율적으로 분산하기 위해 로드 밸런서를 사용해야 합니다. 회사는 내부 사용자가 낮은 지연 시간으로 애플리케이션에 접근할 수 있도록 하면서 외부 사용자는 향상된 보안과 가용성을 누릴 수 있도록 하고자 합니다.",
        "Question": "회사가 이러한 요구 사항을 최적으로 충족하기 위해 구현해야 할 로드 밸런서 구성은 무엇입니까?",
        "Options": {
            "1": "내부 사용자를 위한 내부 네트워크 로드 밸런서와 외부 사용자를 위한 외부 애플리케이션 로드 밸런서를 배포합니다.",
            "2": "내부 사용자를 위한 내부 애플리케이션 로드 밸런서와 외부 사용자를 위한 외부 네트워크 로드 밸런서를 배포합니다.",
            "3": "내부 및 외부 트래픽을 처리하기 위해 단일 내부 애플리케이션 로드 밸런서를 배포합니다.",
            "4": "내부 및 외부 트래픽을 처리하기 위해 단일 외부 애플리케이션 로드 밸런서를 배포합니다."
        },
        "Correct Answer": "내부 사용자를 위한 내부 네트워크 로드 밸런서와 외부 사용자를 위한 외부 애플리케이션 로드 밸런서를 배포합니다.",
        "Explanation": "이 구성은 회사가 내부 사용자에게 내부 네트워크 로드 밸런서의 낮은 지연 시간과 높은 성능을 활용할 수 있게 하며, 외부 애플리케이션 로드 밸런서는 외부 고객을 위한 고급 라우팅, 보안 기능 및 가용성을 제공합니다.",
        "Other Options": [
            "내부 및 외부 트래픽을 모두 처리하기 위해 단일 외부 애플리케이션 로드 밸런서를 사용하는 것은 내부 사용자에게 낮은 지연 시간을 최적화하지 않으며, 외부 로드 밸런서는 추가적인 지연 시간을 초래합니다.",
            "내부 사용자를 위한 내부 네트워크 로드 밸런서를 배포하면 외부 사용자가 애플리케이션에 접근할 수 없으며, 내부 로드 밸런서는 VPC 외부에서 접근할 수 없습니다.",
            "단일 내부 애플리케이션 로드 밸런서는 외부 트래픽을 처리할 수 없으므로 외부 고객의 요청을 처리하는 데 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "한 스타트업이 AWS에서 높은 가용성과 성능을 보장하기 위해 신뢰할 수 있고 확장 가능한 DNS 설정이 필요한 새로운 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 EC2 인스턴스와 로드 밸런서를 포함한 다양한 리소스에 효율적으로 트래픽을 라우팅해야 하며, 서드파티 서비스에 대한 도메인 검증도 지원해야 합니다. 네트워크 아키텍트는 이 솔루션을 효과적으로 구현하기 위해 적절한 DNS 레코드 유형을 선택해야 합니다.",
        "Question": "효율적인 트래픽 라우팅과 도메인 검증을 촉진하기 위해 아키텍트가 사용해야 할 DNS 레코드 유형의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "애플리케이션을 호스팅하는 EC2 인스턴스의 공용 IPv4 주소에 도메인 이름을 매핑하는 A 레코드.",
            "2": "도메인 검증을 위해 기본 도메인을 서드파티 서비스에 별칭으로 지정하는 CNAME 레코드.",
            "3": "애플리케이션 트래픽을 제공하는 로드 밸런서의 공용 IPv6 주소에 도메인을 가리키는 AAAA 레코드.",
            "4": "애플리케이션의 정적 자산이 저장된 Amazon S3 버킷으로 트래픽을 라우팅하는 별칭 레코드.",
            "5": "애플리케이션을 호스팅하는 EC2 인스턴스의 공용 IP 주소에 대한 역 조회를 제공하는 PTR 레코드."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "애플리케이션을 호스팅하는 EC2 인스턴스의 공용 IPv4 주소에 도메인 이름을 매핑하는 A 레코드.",
            "도메인 검증을 위해 기본 도메인을 서드파티 서비스에 별칭으로 지정하는 CNAME 레코드."
        ],
        "Explanation": "A 레코드는 도메인 이름을 EC2 인스턴스의 공용 IPv4 주소에 매핑하는 데 필수적이며, 이를 통해 사용자가 애플리케이션에 접근할 수 있습니다. CNAME 레코드는 도메인이 서드파티 서비스로 가리키도록 하여 도메인 검증에 필요하므로 중요합니다.",
        "Other Options": [
            "애플리케이션이 라우팅을 위해 IPv6 주소를 특별히 요구하지 않는 경우 AAAA 레코드는 필요하지 않습니다. 설정이 주로 IPv4를 위한 것이므로 이 옵션은 덜 관련이 있습니다.",
            "PTR 레코드는 역 DNS 조회에 사용되며, 일반적으로 트래픽 라우팅이나 도메인 검증에 필요하지 않으므로 이 옵션은 주어진 시나리오와 관련이 없습니다.",
            "별칭 레코드는 특정 AWS 리소스에 유용할 수 있지만, 이 맥락에서는 애플리케이션이 EC2에서 호스팅되고 A 레코드에 직접 매핑이 필요하므로 필요하지 않습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 기업이 다양한 부서를 위해 서로 다른 AWS 리전에서 여러 AWS 계정을 설정했습니다. 각 부서는 VPC 피어링을 통해 연결된 자체 가상 사설 클라우드(VPC)를 운영하고 있으며, 이들은 자원을 안전하게 공유하면서도 이러한 VPC 간의 네트워크 트래픽이 효율적으로 관리되고 모니터링되기를 원합니다. 네트워크 팀은 높은 수준의 보안과 규정 준수를 유지하면서 이러한 계정 간의 리전 간 통신을 간소화하고자 합니다.",
        "Question": "네트워크 팀이 리전 간 통신 패턴을 최적화하고 네트워크 관리를 향상시키기 위해 구현해야 할 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Global Accelerator를 활용하여 서로 다른 리전의 VPC 간 트래픽을 라우팅하고 Amazon CloudWatch를 구성하여 네트워크 성능을 모니터링합니다.",
            "2": "AWS Transit Gateway를 구현하여 VPC 간의 리전 간 통신을 촉진하고 라우팅 및 보안 정책의 중앙 집중식 관리를 가능하게 합니다.",
            "3": "각 AWS 리전에서 기업 데이터 센터로 AWS Direct Connect 연결을 설정하고, 각 VPC에 대한 VPC 엔드포인트 서비스를 설정하여 통신을 관리합니다.",
            "4": "각 리전의 VPC 쌍 간에 AWS Site-to-Site VPN 연결을 생성하여 모든 트래픽이 암호화되고 안전하게 라우팅되도록 합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 VPC 간의 리전 간 통신을 촉진하고 라우팅 및 보안 정책의 중앙 집중식 관리를 가능하게 합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 VPC 간의 효율적이고 확장 가능한 리전 간 통신이 가능합니다. 이는 트래픽을 라우팅하고 보안 정책을 적용하기 위한 단일 지점을 제공하여 라우팅을 간소화합니다. 이 솔루션은 네트워크 관리를 향상시키고 여러 VPC 피어링 연결을 관리하는 것에 비해 운영 오버헤드를 줄입니다.",
        "Other Options": [
            "AWS Direct Connect 연결을 설정하는 것은 온프레미스 네트워크를 AWS에 연결하는 데 중점을 두며, 리전 간 VPC 통신을 최적화하는 것과는 관련이 없습니다. 전용 대역폭을 제공하지만, 서로 다른 리전 간의 VPC 간 통신을 간소화하지는 않습니다.",
            "각 VPC 쌍 간에 AWS Site-to-Site VPN 연결을 생성하면 여러 VPC에 필요한 연결 수로 인해 복잡한 관리가 발생할 수 있으며, 특히 다중 계정 설정에서는 트래픽 증가에 따라 효율적으로 확장되지 않을 수 있습니다.",
            "AWS Global Accelerator는 주로 AWS 글로벌 네트워크를 통해 트래픽을 라우팅하여 애플리케이션 성능을 최적화하지만, 리전 간 VPC 통신이나 보안 정책에 대한 중앙 집중식 관리 솔루션을 본질적으로 제공하지는 않습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 금융 기관이 애플리케이션을 AWS로 마이그레이션하고 있으며, 데이터 암호화와 관련된 규제 기준 준수를 유지하는 것에 대해 우려하고 있습니다. 이 기관은 AWS 공유 책임 모델 하에서 네트워크 암호화에 대한 책임을 이해할 필요가 있습니다.",
        "Question": "AWS 공유 책임 모델에서 네트워크 암호화에 대한 고객의 책임은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS에 호스팅된 애플리케이션에 사용되는 암호화 키를 관리합니다.",
            "2": "데이터를 자동으로 암호화하는 AWS 서비스를 활용합니다.",
            "3": "클라이언트와 AWS 서비스 간의 전송 중 데이터 암호화를 구현합니다.",
            "4": "AWS가 모든 네트워크 트래픽에 대해 기본적으로 암호화를 제공하는지 확인합니다.",
            "5": "AWS 리소스에 대한 접근을 제어하기 위해 보안 그룹을 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "클라이언트와 AWS 서비스 간의 전송 중 데이터 암호화를 구현합니다.",
            "AWS에 호스팅된 애플리케이션에 사용되는 암호화 키를 관리합니다."
        ],
        "Explanation": "AWS 공유 책임 모델에 따라 고객은 전송 중 데이터 암호화를 구현할 책임이 있으며, 이를 통해 민감한 정보가 네트워크를 통해 전송되는 동안 보호됩니다. 또한 고객은 사용하는 서비스에 대한 암호화 키를 관리하여 해당 키에 대한 접근 및 사용을 제어해야 합니다.",
        "Other Options": [
            "AWS는 모든 네트워크 트래픽에 대해 기본적으로 암호화를 제공하지 않으며, 고객이 전송 중 데이터를 보호하기 위한 암호화 메커니즘을 구현해야 합니다.",
            "보안 그룹을 구성하는 것은 네트워크 접근 제어에 중요하지만, 이는 데이터 보호보다는 접근 관리에 더 중점을 두므로 네트워크 암호화 책임과는 직접적인 관련이 없습니다.",
            "데이터를 자동으로 암호화하는 AWS 서비스는 AWS의 책임의 일부이며, 고객은 여전히 자신의 암호화 키를 관리하고 전송 중 데이터 암호화를 구현해야 합니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "네트워크 엔지니어가 온프레미스 데이터 센터와 Amazon VPC 간의 연결 문제를 해결하고 있습니다. 엔지니어는 라우팅 테이블이나 보안 그룹에 잘못된 구성으로 인해 적절한 통신이 이루어지지 않을 가능성이 있다고 의심하고 있습니다.",
        "Question": "엔지니어가 온프레미스 데이터 센터와 Amazon VPC 간의 도달 가능성을 확인하기 위해 어떤 AWS 도구를 사용해야 합니까?",
        "Options": {
            "1": "Reachability Analyzer를 사용하여 데이터 센터에서 VPC의 원하는 엔드포인트까지 경로 분석을 생성합니다.",
            "2": "VPC Flow Logs를 구현하여 데이터 센터와 VPC 간의 트래픽 패턴을 캡처하고 분석합니다.",
            "3": "데이터 센터에서 VPC 엔드포인트까지 traceroute 명령을 실행하여 연결 문제 발생 지점을 식별합니다.",
            "4": "AWS CloudTrail을 활용하여 VPC에 대한 API 호출을 검토하여 잘못된 구성을 식별합니다."
        },
        "Correct Answer": "Reachability Analyzer를 사용하여 데이터 센터에서 VPC의 원하는 엔드포인트까지 경로 분석을 생성합니다.",
        "Explanation": "Reachability Analyzer는 AWS에서 네트워크 연결 문제를 식별하고 해결하는 데 도움을 주기 위해 라우팅 구성 및 보안 설정을 분석하도록 특별히 설계되었습니다. 명확한 경로 분석을 제공하여 이 시나리오에 가장 효과적인 도구입니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출을 기록하지만 네트워크 연결 문제나 라우트 구성에 대한 직접적인 통찰력을 제공하지 않으므로 이 문제 해결 작업에 덜 효과적입니다.",
            "VPC Flow Logs는 트래픽 패턴을 모니터링하고 분석하는 데 유용하지만 잘못된 구성이나 도달 가능성 문제를 사전에 식별하지 않으므로 이 경우의 주요 관심사와는 관련이 없습니다.",
            "traceroute를 실행하면 패킷이 떨어지는 지점을 식별하는 데 도움이 될 수 있지만, 라우팅 테이블 및 보안 그룹 설정과 같은 AWS 특정 구성을 직접 분석하지는 않습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 회사가 AWS의 여러 리전에 걸쳐 여러 VPC를 배포했습니다. 이들은 이러한 VPC 간의 DNS 해석을 효과적으로 관리해야 하며, 특정 도메인에 대한 쿼리가 공용 인터넷을 통해 이동하는 대신 지정된 내부 DNS 서버로 리디렉션되도록 해야 합니다. 회사는 이를 달성하기 위해 DNS 위임 및 조건부 포워딩을 구현하고자 합니다.",
        "Question": "특정 도메인에 대한 DNS 쿼리를 다른 VPC의 지정된 내부 DNS 서버로 포워딩할 수 있도록 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "각 도메인에 대해 Route 53에서 개인 호스팅 영역을 설정하고 이를 대상 VPC와 연결합니다.",
            "2": "각 VPC에 EC2 인스턴스를 배포하여 도메인 쿼리에 대한 DNS 프록시 역할을 하도록 합니다.",
            "3": "VPC 간의 DNS 해석을 허용하도록 VPC 피어링 연결을 구성합니다.",
            "4": "특정 도메인에 대한 쿼리를 지정된 내부 DNS 서버로 포워딩하는 Route 53 Resolver 규칙을 생성합니다."
        },
        "Correct Answer": "특정 도메인에 대한 쿼리를 지정된 내부 DNS 서버로 포워딩하는 Route 53 Resolver 규칙을 생성합니다.",
        "Explanation": "Route 53 Resolver 규칙을 생성하면 어떤 DNS 쿼리를 내부 DNS 서버로 포워딩할지 지정할 수 있어 특정 도메인에 대한 VPC 간 DNS 해석을 효율적으로 관리할 수 있습니다.",
        "Other Options": [
            "Route 53에서 개인 호스팅 영역을 설정하는 것만으로는 쿼리를 포워딩하기에 충분하지 않습니다. 이는 단일 VPC 내에서 DNS 관리를 가능하게 하지만 VPC 간 DNS 해석을 촉진하지는 않습니다.",
            "EC2 인스턴스를 DNS 프록시로 배포하는 것은 불필요한 복잡성과 오버헤드를 추가합니다. DNS 쿼리를 포워딩하기 위해 Route 53 Resolver를 사용하는 것과 같은 수준의 통합 및 성능을 제공하지 않습니다.",
            "VPC 피어링 연결을 구성하면 서로 다른 VPC의 인스턴스가 통신할 수 있지만, VPC 간의 DNS 쿼리 포워딩이나 위임을 본질적으로 촉진하지는 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "데이터 집약적인 애플리케이션이 EC2 인스턴스에 배포되어 있으며, 노드 간 통신을 위해 높은 처리량과 낮은 대기 시간이 필요합니다. 애플리케이션의 네트워크 성능을 최적화하기 위해 EC2 인스턴스에 가장 적합한 네트워크 인터페이스를 선택해야 합니다.",
        "Question": "높은 처리량과 낮은 대기 시간 시나리오에서 최상의 성능을 달성하기 위해 어떤 네트워크 인터페이스를 선택해야 합니까?",
        "Options": {
            "1": "Elastic Fabric Adapter (EFA)",
            "2": "Elastic Network Interface (ENI)",
            "3": "Standard Virtual Network Interface",
            "4": "Elastic Network Adapter (ENA)"
        },
        "Correct Answer": "Elastic Fabric Adapter (EFA)",
        "Explanation": "Elastic Fabric Adapter (EFA)는 고성능 컴퓨팅(HPC) 애플리케이션을 위해 특별히 설계되어 인스턴스 간의 낮은 대기 시간과 높은 처리량을 제공합니다. 메시지 전달 인터페이스(MPI)를 지원하며 데이터 집약적인 애플리케이션에 중요한 향상된 네트워크 성능을 제공합니다.",
        "Other Options": [
            "Elastic Network Adapter (ENA)는 높은 처리량에 최적화되어 있지만 EFA와 같은 낮은 대기 시간 기능을 제공하지 않습니다. 많은 애플리케이션에 좋은 옵션이지만 높은 처리량과 낮은 대기 시간이 모두 중요한 시나리오에서는 최선의 선택이 아닙니다.",
            "Elastic Network Interface (ENI)는 EC2 인스턴스에 연결할 수 있는 가상 네트워크 인터페이스이지만 높은 처리량이나 낮은 대기 시간 시나리오에 대한 특정 성능 최적화를 제공하지 않습니다. 일반적인 용도의 인터페이스입니다.",
            "Standard Virtual Network Interface는 ENA 및 EFA에서 발견되는 성능 최적화를 결여하고 있습니다. 기본적인 네트워킹 요구에 적합하지만 데이터 집약적이고 고성능 애플리케이션에 필요한 고급 기능을 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 AWS로 서비스를 마이그레이션하고 도메인 관리를 위해 Amazon Route 53을 사용할 계획입니다. 이 회사는 도메인의 신뢰성과 보안을 지원하는 DNS 레코드가 필요합니다. 그들은 DNS 스푸핑으로부터 보호하고 데이터 무결성을 보장하기 위해 DNSSEC를 구현하고자 합니다.",
        "Question": "네트워크 엔지니어가 Route 53에서 회사의 도메인에 대해 DNSSEC를 활성화하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "Route 53에서 DNSSEC를 활성화하기 전에 등록 기관에서 DS 레코드를 구성하여 적절한 검증을 보장합니다.",
            "2": "Route 53의 호스팅 존에 대해 DNSSEC를 활성화하고 Route 53에서 생성된 DS 레코드로 등록 기관을 구성합니다.",
            "3": "Route 53에서 새로운 호스팅 존을 만들고 DNSSEC를 활성화하지만 등록 기관에서 DS 레코드를 구성하지 않습니다.",
            "4": "Route 53에서 등록 기관을 구성하지 않고 호스팅 존에 대해 DNSSEC를 활성화합니다. Route 53이 자동으로 DNSSEC를 처리하기 때문입니다."
        },
        "Correct Answer": "Route 53의 호스팅 존에 대해 DNSSEC를 활성화하고 Route 53에서 생성된 DS 레코드로 등록 기관을 구성합니다.",
        "Explanation": "Route 53에서 관리되는 도메인에 대해 DNSSEC를 활성화하려면 네트워크 엔지니어가 먼저 Route 53 호스팅 존에서 DNSSEC를 활성화해야 합니다. 그 후, 생성된 DS 레코드를 도메인 등록 기관에 구성하여 DNSSEC 검증이 발생할 수 있도록 해야 합니다. 이 설정은 DNS 스푸핑으로부터 보호하고 무결성을 유지하는 데 도움이 됩니다.",
        "Other Options": [
            "등록 기관을 구성하지 않고 Route 53에서 DNSSEC를 활성화하면 필요한 검증을 제공하지 않으며, DS 레코드는 DNSSEC가 올바르게 작동하기 위해 등록 기관에 존재해야 합니다.",
            "Route 53에서 DNSSEC를 활성화하기 전에 등록 기관에서 DS 레코드를 구성하는 것은 잘못된 것입니다. DNSSEC는 먼저 Route 53에서 활성화되어야 하며, 그 후 등록 기관에 추가해야 할 DS 레코드가 생성됩니다.",
            "Route 53에서 새로운 호스팅 존을 만들고 등록 기관에서 DS 레코드를 구성하지 않고 DNSSEC를 활성화하면 DNSSEC 보호를 제공하지 않으며, DS 레코드는 등록 기관이 DNSSEC 검증을 지원하는 데 필수적입니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 VPC 내에서 성능을 최적화하기 위해 Amazon EC2 인스턴스를 조정하고 있습니다. 그들은 인스턴스 간의 통신이 효율적이기를 원하며 Jumbo 프레임 사용을 고려하고 있습니다. 이 조직은 네트워크 트래픽을 더 잘 관리하기 위해 인스턴스에 두 개의 Elastic Network Interfaces (ENIs)를 구현하기로 결정했습니다.",
        "Question": "네트워크 엔지니어가 인스턴스 간의 통신을 위한 모범 사례를 따르면서 최적의 MTU 설정을 보장하기 위해 무엇을 구성해야 합니까?",
        "Options": {
            "1": "내부 ENI의 MTU를 9,001 바이트로 설정하고 외부 ENI의 MTU를 1,500 바이트로 설정하여 VPC 내 트래픽에 Jumbo 프레임을 활용합니다.",
            "2": "모든 트래픽의 성능을 극대화하기 위해 두 ENI의 MTU를 9,001 바이트로 설정합니다. 여기에는 인터넷 게이트웨이를 통해 전송되는 트래픽도 포함됩니다.",
            "3": "내부 ENI만 MTU를 9,001 바이트로 설정하고 외부 ENI는 기본값인 1,500 바이트로 유지하여 Jumbo 프레임을 활용합니다.",
            "4": "모든 유형의 트래픽, VPN 연결을 포함하여 호환성을 보장하기 위해 두 ENI의 MTU를 1,500 바이트로 설정합니다."
        },
        "Correct Answer": "내부 ENI의 MTU를 9,001 바이트로 설정하고 외부 ENI의 MTU를 1,500 바이트로 설정하여 VPC 내 트래픽에 Jumbo 프레임을 활용합니다.",
        "Explanation": "내부 ENI에 대해 9,001 바이트의 MTU를 사용하면 Jumbo 프레임을 활용하여 VPC 내 트래픽의 성능을 향상시킬 수 있으며, 외부 ENI는 표준 인터넷 트래픽 및 VPN 연결과의 호환성을 위해 1,500 바이트로 유지해야 합니다.",
        "Other Options": [
            "두 ENI를 1,500 바이트의 MTU로 설정하면 성능이 제한되고 내부 트래픽에 대해 Jumbo 프레임을 활용하지 않으므로 VPC 내 통신에 최적이 아닙니다.",
            "이 옵션은 부분적으로 올바르지만 외부 ENI를 1,500 바이트로 설정해야 할 필요성을 다루지 않으며, 이는 외부 통신에 필요합니다. 두 ENI를 모두 9,001 바이트로 설정해서는 안 됩니다.",
            "두 ENI를 모두 9,001 바이트로 설정하는 것은 잘못된 것입니다. 외부 ENI는 VPN 연결 및 인터넷 트래픽의 제한으로 인해 1,500 바이트로 유지해야 하며, 그보다 큰 MTU를 지원할 수 없습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "AWS 환경에 배포된 웹 애플리케이션이 인스턴스 간의 트래픽 분배가 고르지 않습니다. 개발 팀은 수신 요청을 처리하기 위해 Application Load Balancer (ALB)를 구현하고 사용자 경험을 향상시키기 위해 스티키 세션을 활성화했습니다. 그들은 분석을 위해 클라이언트 IP 주소가 기록되도록 하면서 여전히 일부 레거시 서비스에 사용 중인 Classic Load Balancer에 대한 적절한 구성을 유지해야 합니다.",
        "Question": "팀이 레거시 서비스에 대해 Classic Load Balancer가 적절하게 구성되도록 하면서 원래 클라이언트 IP 주소를 효과적으로 기록하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "Classic Load Balancer에 대해 Proxy Protocol을 활성화하고 ALB를 구성하여 액세스 로그에 x-forwarded-for 헤더를 포함합니다.",
            "2": "ALB에서 스티키 세션을 구성하고 Classic Load Balancer가 Proxy Protocol을 사용하지 않도록 합니다. 이는 필요하지 않습니다.",
            "3": "Alias 레코드를 사용하여 Classic Load Balancer를 가리키고 최적의 성능을 위해 유휴 시간 초과를 기본값인 60분으로 설정합니다.",
            "4": "Classic Load Balancer의 액세스 로그를 15분마다 기록하도록 설정하여 기본 로깅 간격을 수정합니다."
        },
        "Correct Answer": "Classic Load Balancer에 대해 Proxy Protocol을 활성화하고 ALB를 구성하여 액세스 로그에 x-forwarded-for 헤더를 포함합니다.",
        "Explanation": "Classic Load Balancer에서 Proxy Protocol을 활성화하면 원래 클라이언트 IP 주소를 백엔드 인스턴스로 전달할 수 있습니다. 이를 ALB의 x-forwarded-for 헤더와 결합하면 두 로드 밸런서 유형 모두에서 원래 클라이언트의 IP 주소가 정확하게 기록됩니다.",
        "Other Options": [
            "Alias 레코드를 사용하고 유휴 시간 초과를 60분으로 설정하는 것은 좋은 구성 관행이지만 클라이언트 IP 주소를 효과적으로 기록해야 할 필요성을 다루지 않습니다.",
            "ALB에서 스티키 세션을 구성하면 세션 관리가 개선되지만 Classic Load Balancer의 원래 클라이언트 IP 주소를 기록하는 문제를 해결하지는 않습니다.",
            "Classic Load Balancer의 액세스 로그를 15분마다 기록하도록 설정하는 것은 잘못된 것입니다. 기본 간격은 60분이며, 이를 더 짧은 기간으로 수정하는 것은 불가능합니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "네트워크 엔지니어는 온프레미스 인프라를 AWS에 연결하는 하이브리드 네트워크 아키텍처를 설계하는 임무를 맡았습니다. 이때 확장성과 중복성을 보장해야 합니다.",
        "Question": "온프레미스 네트워크와 AWS 내 여러 VPC 간에 고가용성 및 확장 가능한 연결을 제공하기 위해 엔지니어가 선택해야 할 연결 방법은 무엇입니까?",
        "Options": {
            "1": "각 VPC에서 온프레미스 네트워크로 VPN 연결을 설정합니다.",
            "2": "트랜짓 게이트웨이를 생성하고 이를 Direct Connect 게이트웨이에 연결하여 중앙 집중식 연결을 설정합니다.",
            "3": "AWS Site-to-Site VPN을 사용하여 온프레미스 네트워크를 단일 VPC에 연결합니다.",
            "4": "각 VPC에 대해 여러 가상 인터페이스(VIF)를 사용하여 AWS Direct Connect를 사용합니다."
        },
        "Correct Answer": "트랜짓 게이트웨이를 생성하고 이를 Direct Connect 게이트웨이에 연결하여 중앙 집중식 연결을 설정합니다.",
        "Explanation": "트랜짓 게이트웨이를 사용하면 여러 VPC에 대한 중앙 집중식 연결 지점을 제공하여 관리 및 확장을 간소화합니다. Direct Connect 게이트웨이와 결합하면 온프레미스 환경에 대한 고가용성 및 효율적인 연결을 가능하게 하여 여러 VPC를 원활하게 지원합니다.",
        "Other Options": [
            "각 VPC에 대해 여러 가상 인터페이스(VIF)를 사용하여 AWS Direct Connect를 사용하는 것은 여러 연결을 관리하는 데 복잡성을 증가시킬 수 있으며, 트랜짓 게이트웨이가 제공하는 중앙 집중식 라우팅 기능을 제공하지 않습니다.",
            "각 VPC에서 온프레미스 네트워크로 VPN 연결을 설정하면 네트워크 아키텍처가 단편화되어 관리가 더 복잡해지고 VPN 연결을 위한 인터넷 의존성으로 인해 신뢰성이 떨어질 수 있습니다.",
            "온프레미스 네트워크를 단일 VPC에 연결하기 위해 AWS Site-to-Site VPN을 사용하는 것은 확장성이 떨어지며, 단일 VPC에만 연결을 제한하고 여러 VPC를 효율적으로 관리하기 위한 트랜짓 게이트웨이의 이점을 활용하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사가 하이브리드 클라우드 인프라를 배포했으며, 온프레미스 애플리케이션이 Amazon Route 53에서 호스팅되는 도메인 이름을 해결해야 합니다. 온프레미스 DNS 서버가 구성되어 있지만, 사용자들은 AWS에서 필요한 리소스에 접근할 수 없다고 보고합니다. 네트워크 엔지니어는 온프레미스에서의 DNS 쿼리가 AWS 호스팅 서비스로 올바르게 해결되도록 해야 합니다.",
        "Question": "온프레미스 DNS 서버가 AWS 호스팅 도메인 이름을 해결할 수 있도록 네트워크 엔지니어가 구성해야 할 것은 무엇입니까?",
        "Options": {
            "1": "Direct Connect 링크를 설정하고 Route 53 Resolver로 DNS 포워딩을 구성합니다.",
            "2": "Route 53 호스팅 영역을 수정하여 온프레미스 DNS 서버 IP를 포함합니다.",
            "3": "VPC 설정에서 DNS 해상을 활성화하고 VPN 연결을 구성합니다.",
            "4": "Route 53 Resolver 엔드포인트를 생성하고 이를 VPC와 연결합니다."
        },
        "Correct Answer": "Route 53 Resolver 엔드포인트를 생성하고 이를 VPC와 연결합니다.",
        "Explanation": "Route 53 Resolver 엔드포인트를 생성하고 이를 VPC와 연결함으로써 온프레미스 DNS 서버는 AWS 호스팅 도메인 이름에 대한 쿼리를 Route 53으로 포워딩하여 AWS 리소스에 대한 적절한 접근을 가능하게 합니다.",
        "Other Options": [
            "VPC 설정에서 DNS 해상을 활성화하고 VPN 연결을 구성하는 것은 온프레미스 DNS 서버가 AWS 도메인 이름을 해결할 수 있는 직접적인 방법을 제공하지 않으며, 필요한 포워딩 메커니즘이 부족합니다.",
            "Direct Connect 링크를 설정하고 Route 53 Resolver로 DNS 포워딩을 구성하는 것만으로는 충분하지 않으며, 온프레미스에서의 DNS 쿼리를 처리하기 위해 Resolver 엔드포인트를 생성해야 합니다.",
            "Route 53 호스팅 영역을 수정하여 온프레미스 DNS 서버 IP를 포함하는 것은 잘못된 접근 방식입니다. 호스팅 영역은 적절한 포워딩 없이 온프레미스 DNS 쿼리에 대한 해상을 직접적으로 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있으며, VPC를 보호하기 위해 보안 장비를 구현해야 합니다. 이 회사는 악성 콘텐츠를 검사하고 여러 VPC에 걸쳐 보안 정책을 시행할 수 있는 솔루션이 필요합니다. 또한 기존 온프레미스 보안 솔루션과의 통합이 가능해야 합니다.",
        "Question": "AWS에서 여러 VPC에 걸쳐 트래픽 검사를 위한 보안 장비를 배포하고 정책을 시행하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "전용 보안 장비가 있는 중앙 집중식 보안 VPC를 생성하고 AWS PrivateLink를 사용하여 다른 VPC에서 트래픽을 검사하도록 라우팅합니다.",
            "2": "AWS Transit Gateway를 활용하여 여러 VPC를 연결하고 각 VPC에 AWS Network Firewall을 배포하여 트래픽 검사 및 보안 정책을 관리합니다.",
            "3": "각 VPC에 AWS Shield Advanced를 설정하여 DDoS 공격으로부터 자동으로 보호하고, 트래픽 검사를 위해 기본 AWS 보안 서비스를 사용합니다.",
            "4": "단일 VPC에 서드파티 가상 장비를 배포하고 VPC 피어링을 사용하여 트래픽을 통해 검사 및 정책 시행을 수행합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 활용하여 여러 VPC를 연결하고 각 VPC에 AWS Network Firewall을 배포하여 트래픽 검사 및 보안 정책을 관리합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 여러 VPC 간의 연결이 간소화되고, 각 VPC에 AWS Network Firewall을 배포하면 각 VPC의 필요에 맞춘 효과적인 트래픽 검사 및 보안 정책 시행이 가능하며 중앙 관리가 유지됩니다.",
        "Other Options": [
            "단일 VPC에 서드파티 가상 장비를 배포하면 단일 실패 지점이 발생하고 트래픽 흐름에서 병목 현상이 발생할 수 있어 여러 VPC에 걸쳐 고가용성과 확장성에 덜 효과적입니다.",
            "AWS Shield Advanced는 DDoS 공격으로부터 보호하지만, 포괄적인 트래픽 검사나 보안 정책 시행을 제공하지 않으므로 회사의 요구 사항을 충족하지 못합니다.",
            "중앙 집중식 보안 VPC를 생성하면 트래픽 관리가 복잡해지고 지연이 발생할 수 있으며, 모든 트래픽이 단일 지점을 통해 라우팅되어 성능 문제를 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "한 금융 서비스 회사가 AWS 환경에 Direct Connect 연결을 설정하고 있습니다. 이 아키텍처는 Direct Connect를 통해 리소스에 접근해야 하는 여러 VPC를 포함합니다. 팀은 각 VPC가 트래픽을 효율적으로 라우팅할 수 있도록 하고 가상 인터페이스를 활용하는 방법을 알고 있어야 합니다. 또한, Direct Connect 연결을 소유한 계정과 다른 계정에 호스팅된 가상 인터페이스를 연결해야 하는 요구 사항이 있습니다.",
        "Question": "회사가 각 VPC가 호스팅된 가상 인터페이스에 대한 요구 사항을 준수하면서 Direct Connect 연결을 활용할 수 있도록 하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "VPC를 Direct Connect를 통해 연결하기 위해 전송 게이트웨이를 활용합니다.",
            "2": "교차 계정 접근을 위해 공용 가상 인터페이스를 설정합니다.",
            "3": "Direct Connect 소유자 계정에 연결된 호스팅된 가상 인터페이스를 설정합니다.",
            "4": "각 VPC에 대해 개인 가상 인터페이스를 생성합니다."
        },
        "Correct Answer": "각 VPC에 대해 개인 가상 인터페이스를 생성합니다.",
        "Explanation": "각 VPC가 Direct Connect 연결을 활용할 수 있도록 하려면 회사는 각 VPC에 대해 개인 가상 인터페이스를 생성해야 합니다. 이 설정은 VPC와 온프레미스 네트워크 간의 트래픽을 Direct Connect를 통해 라우팅할 수 있는 개인 연결을 가능하게 합니다.",
        "Other Options": [
            "공용 가상 인터페이스는 공용 AWS 서비스에 사용되므로 VPC 간의 직접 통신에 적합하지 않으며, VPC를 직접 연결하는 요구 사항을 충족하지 않습니다.",
            "호스팅된 가상 인터페이스는 Direct Connect 연결을 소유한 계정에서 생성해야 하므로 이 시나리오에서 설명된 대로 교차 계정 접근에 직접 사용할 수 없습니다.",
            "전송 게이트웨이는 여러 VPC 간의 연결을 용이하게 할 수 있지만, 필요한 가상 인터페이스가 먼저 생성되지 않으면 Direct Connect 설정에 직접 연결되지 않습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "한 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며 리소스의 DNS 설정을 구성해야 합니다. 이 애플리케이션은 높은 가용성과 빠른 DNS 해석을 요구하며, DNS 관리를 위해 Amazon Route 53을 사용합니다. 회사는 DNS 구조에 통합해야 하는 여러 비 AWS 리소스도 보유하고 있습니다.",
        "Question": "다음 중 Amazon Route 53 DNS 레코드 및 기능에 대한 설명 중 TRUE인 것은 무엇입니까?",
        "Options": {
            "1": "Route 53은 모든 DNS 레코드가 Route 53 호스팅 영역 내에서 관리되어야 하며 외부 서비스에 대한 상태 검사를 지원하지 않습니다.",
            "2": "CNAME 레코드는 AWS 외부에 호스팅된 레코드를 포함하여 모든 DNS 레코드를 가리킬 수 있으며, 수신된 모든 쿼리에 대해 요금이 부과됩니다.",
            "3": "Route 53 내에서 다른 상태 검사를 모니터링할 수 있는 상태 검사를 관리하기 위해 재사용 가능한 위임 세트가 필요합니다.",
            "4": "Alias 레코드는 AWS 리소스에 대해서만 생성할 수 있으며 쿼리에 대한 요금이 부과되지 않아 AWS에 호스팅된 애플리케이션에 적합합니다."
        },
        "Correct Answer": "Alias 레코드는 AWS 리소스에 대해서만 생성할 수 있으며 쿼리에 대한 요금이 부과되지 않아 AWS에 호스팅된 애플리케이션에 적합합니다.",
        "Explanation": "Route 53의 Alias 레코드는 추가 쿼리 요금 없이 AWS 리소스를 가리킬 수 있습니다. 이는 AWS에 완전히 호스팅된 애플리케이션에 비용 효율적이며, CNAME 레코드는 외부 DNS 레코드를 가리킬 수 있지만 각 쿼리에 대해 요금이 부과됩니다.",
        "Other Options": [
            "CNAME 레코드는 모든 DNS 레코드를 가리킬 수 있지만 쿼리에 대해 요금이 부과됩니다. 따라서 이 설명은 부분적으로 맞지만 CNAME 쿼리와 관련된 비용에 대한 세부 정보가 부족합니다.",
            "이 설명은 잘못되었습니다. Route 53은 호스팅 영역 내에서 DNS 레코드를 관리할 수 있으며 외부 서비스에 대한 상태 검사도 수행할 수 있습니다. 모든 DNS 레코드를 Route 53 내에서만 관리하도록 제한하지 않습니다.",
            "재사용 가능한 위임 세트는 네임 서버 관리를 위해 사용되지만 상태 검사에 특별히 필요하지 않습니다. 상태 검사는 위임 세트와 독립적으로 구성할 수 있습니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 네트워크 아키텍트가 IP 주소 및 TCP 연결을 기반으로 트래픽을 라우팅해야 하는 애플리케이션을 위한 로드 밸런싱 아키텍처를 설계하고 있습니다. 아키텍트는 로드 밸런서가 수신 트래픽을 효율적으로 관리할 수 있도록 적절한 대상 그룹 구성을 선택해야 합니다.",
        "Question": "아키텍트가 TCP 트래픽과 직접 IP 주소 라우팅을 효과적으로 처리할 수 있도록 대상 그룹에 대해 어떤 구성 옵션을 선택해야 합니까?",
        "Options": {
            "1": "인스턴스 기반 라우팅을 사용하는 HTTP 대상 그룹",
            "2": "인스턴스 상태 검사를 사용하는 UDP 대상 그룹",
            "3": "GENEVE 프로토콜을 사용하는 인스턴스 대상 그룹",
            "4": "IP 주소 라우팅을 사용하는 TCP 대상 그룹"
        },
        "Correct Answer": "IP 주소 라우팅을 사용하는 TCP 대상 그룹",
        "Explanation": "IP 주소 라우팅을 사용하는 TCP 대상 그룹을 선택하면 로드 밸런서가 TCP 트래픽을 효율적으로 관리할 수 있으며 클라이언트의 IP 주소를 기반으로 라우팅할 수 있습니다. 이 구성은 성능과 보안을 위해 직접 IP 라우팅이 필요한 애플리케이션에 이상적입니다.",
        "Other Options": [
            "GENEVE 프로토콜을 사용하는 인스턴스 대상 그룹은 기본 TCP 트래픽 관리를 위한 것이 아니며, GENEVE는 주로 오버레이 네트워크 캡슐화에 사용되므로 TCP 기반 애플리케이션에 직접 적용되지 않을 수 있습니다.",
            "인스턴스 기반 라우팅을 사용하는 HTTP 대상 그룹은 레이어 7(HTTP) 트래픽 관리에 중점을 두며, 아키텍트의 요구 사항에 필요한 TCP 트래픽을 직접 지원하지 않습니다.",
            "인스턴스 상태 검사를 사용하는 UDP 대상 그룹은 TCP 트래픽 요구 사항을 지원하지 않으므로 TCP 연결에 특별히 의존하는 애플리케이션에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "네트워크 엔지니어가 효율적인 트래픽 처리와 최소한의 지연 시간을 요구하는 고성능 데이터 센터 네트워크를 설계하는 임무를 맡았습니다. 설계는 다양한 유형의 트래픽을 수용하면서 중복성과 확장성을 보장해야 합니다. 엔지니어는 물리적 연결을 최적화하기 위해 Layer 1과 Layer 2에서 특정 기술과 구성을 구현하는 것을 고려하고 있습니다.",
        "Question": "최적의 네트워크 성능을 달성하기 위해 엔지니어가 구현해야 할 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "CPU 부하를 줄이기 위한 TCP 오프로드",
            "2": "트래픽 세분화를 위한 VLAN 구성",
            "3": "더 큰 페이로드를 위한 점보 프레임",
            "4": "대역폭 증가를 위한 링크 집합 그룹 (LAG)",
            "5": "사설 주소 지정을 위한 네트워크 주소 변환 (NAT)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "트래픽 세분화를 위한 VLAN 구성",
            "대역폭 증가를 위한 링크 집합 그룹 (LAG)"
        ],
        "Explanation": "VLAN 구성을 구현하면 효율적인 트래픽 세분화가 가능해져 보안을 강화하고 불필요한 브로드캐스트 트래픽을 줄일 수 있습니다. 링크 집합 그룹 (LAG)은 여러 물리적 링크를 단일 논리 링크로 결합하여 대역폭과 중복성을 증가시켜 물리적 연결을 최적화합니다.",
        "Other Options": [
            "TCP 오프로드는 CPU 부하를 줄이는 데 도움이 되는 기능이지만 Layer 1 또는 Layer 2 연결성이나 성능을 직접적으로 향상시키지는 않습니다. 이는 Layer 4 이상과 더 관련이 있습니다.",
            "점보 프레임은 더 큰 패킷을 허용하여 처리량을 개선할 수 있지만, 이는 Layer 1 또는 Layer 2 솔루션이 아니며 전체 경로가 이를 지원해야 하므로 보장이 되지 않을 수 있습니다.",
            "네트워크 주소 변환 (NAT)은 Layer 3에서 작동하며 주로 IP 주소 변환에 사용되며, Layer 1 또는 Layer 2 물리적 연결을 향상시키는 데는 사용되지 않습니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "글로벌 기업이 AWS를 활용하여 여러 지역에 애플리케이션을 배포하고 있습니다. 네트워크 아키텍트는 WAN 링크 전반에 걸쳐 효율적인 트래픽 분배를 보장하면서 높은 가용성을 유지하기 위해 BGP 라우팅을 최적화하는 임무를 맡았습니다.",
        "Question": "로드 공유 및 능동/수동 트래픽 패턴을 위한 경로 선택에 영향을 줄 수 있는 BGP 속성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "Origin",
            "2": "AS 경로 길이",
            "3": "다중 출구 식별자 (MED)",
            "4": "로컬 선호도",
            "5": "다음 홉"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "로컬 선호도",
            "다중 출구 식별자 (MED)"
        ],
        "Explanation": "로컬 선호도는 아웃바운드 트래픽에 대해 한 출구 지점을 다른 지점보다 선호하는 데 사용됩니다. 이는 라우팅 결정을 영향을 미치는 잘 알려진 BGP 속성입니다. 다중 출구 식별자 (MED)는 이웃 AS에서 AS로의 선호하는 진입 지점을 제안하는 데 사용되어 로드 공유 및 능동/수동 구성에 도움을 줍니다.",
        "Other Options": [
            "AS 경로 길이는 서로 다른 자율 시스템의 여러 경로 간의 경로 선택에 주로 사용됩니다. 이는 동일한 AS 내에서 로드 공유 또는 능동/수동 구성에 대한 트래픽 패턴에 직접적인 영향을 미치지 않습니다.",
            "다음 홉은 패킷이 전송되어야 할 다음 라우터를 나타내지만, 트래픽 패턴에 따라 경로의 선호도에 영향을 미치지 않습니다.",
            "Origin은 경로가 어떻게 학습되었는지를 나타내지만 (IGP, EGP 또는 불완전) 트래픽 흐름이나 경로 간 선택에 영향을 미치는 수단을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "다국적 기업이 여러 AWS 계정에서 내부 서비스에 대한 DNS 해석이 필요한 새로운 애플리케이션을 배포하고 있습니다. 네트워크 아키텍트는 특정 내부 도메인에 대한 DNS 쿼리가 기본 AWS 계정의 지정된 Route 53 리졸버에 의해 해석되도록 해야 합니다. 솔루션은 확장 가능하고 관리하기 쉬워야 합니다.",
        "Question": "여러 계정에서 이 DNS 해석을 달성하기 위한 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "특정 도메인에 대한 쿼리를 기본 AWS 계정의 Route 53 리졸버로 전달하는 Route 53 리졸버 규칙을 생성하고 이를 다른 계정의 VPC와 연결합니다.",
            "2": "각 AWS 계정에 Amazon Route 53 프라이빗 호스티드 존을 설정하고 이를 기본 계정의 Route 53 리졸버로 DNS 쿼리를 전달하도록 구성합니다.",
            "3": "AWS Transit Gateway를 설정하여 VPC 간 DNS 트래픽을 라우팅하고 모든 DNS 쿼리에 대해 중앙 집중식 Route 53 호스티드 존을 사용합니다.",
            "4": "AWS Cloud Map을 활용하여 내부 서비스를 등록하고 중앙 집중식 리졸버 없이 모든 AWS 계정에서 DNS 해석을 관리합니다."
        },
        "Correct Answer": "특정 도메인에 대한 쿼리를 기본 AWS 계정의 Route 53 리졸버로 전달하는 Route 53 리졸버 규칙을 생성하고 이를 다른 계정의 VPC와 연결합니다.",
        "Explanation": "Route 53 리졸버 규칙을 생성하면 특정 도메인 쿼리를 기본 계정의 Route 53 리졸버로 전달할 수 있어 모든 계정에서 내부 서비스에 대해 올바른 리졸버가 사용되도록 보장합니다. 이 접근 방식은 DNS 관리를 중앙 집중화하면서 도메인별 해석에 대한 유연성을 허용하므로 확장 가능하고 관리하기 쉽습니다.",
        "Other Options": [
            "각 계정에 프라이빗 호스티드 존을 설정하면 관리 오버헤드와 잠재적인 불일치가 발생할 수 있으며, 변경 사항을 모든 계정에 복제해야 하므로 해석 프로세스가 복잡해질 수 있습니다.",
            "AWS Cloud Map을 사용하는 것은 서비스 등록을 단순화할 수 있지만 외부 도메인에 대한 DNS 해석을 직접적으로 해결하지 않으며, 이 시나리오에서 필요한 중앙 집중식 제어를 제공하지 않습니다.",
            "Transit Gateway를 설정하면 VPC 연결을 촉진할 수 있지만, 본질적으로 DNS 해석 기능을 제공하지 않으므로 특정 DNS 라우팅 요구 사항에 대한 효과적인 솔루션이 아닙니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "글로벌 전자상거래 회사가 AWS 서비스를 활용하여 온라인 플랫폼을 운영하고 있습니다. 이 회사는 다양한 지리적 지역에서 애플리케이션에 접근하는 사용자들로 인해 지연 문제를 겪고 있습니다. 그들은 사용자가 자신의 위치에 따라 가장 가까운 애플리케이션 엔드포인트로 라우팅되도록 트래픽 관리를 최적화하고 싶어하며, 각 엔드포인트의 부하도 고려하고자 합니다. 네트워크 엔지니어는 이 목표를 달성하기 위한 솔루션을 탐색하고 있습니다.",
        "Question": "지연 및 지리적 위치를 기반으로 트래픽을 관리하면서 애플리케이션 엔드포인트의 부하도 고려하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Direct Connect를 배포하여 사용자와 애플리케이션 엔드포인트 간에 전용 연결을 설정하여 일관된 저지연 트래픽 관리를 보장합니다.",
            "2": "AWS Global Accelerator를 사용하여 사용자 트래픽을 지리적 근접성과 실시간 성능 메트릭에 따라 최적의 엔드포인트로 라우팅하는 가속기를 생성합니다.",
            "3": "Amazon Route 53을 구현하여 지리적 위치 기반 라우팅 정책과 가중치 라우팅을 사용하여 지연 및 현재 부하에 따라 사용자들을 가장 가까운 애플리케이션 엔드포인트로 안내합니다.",
            "4": "사용자의 지리적 위치에 따라 요청을 처리하기 위해 경로 기반 라우팅을 갖춘 애플리케이션 로드 밸런서(ALB)를 설정합니다."
        },
        "Correct Answer": "AWS Global Accelerator를 사용하여 사용자 트래픽을 지리적 근접성과 실시간 성능 메트릭에 따라 최적의 엔드포인트로 라우팅하는 가속기를 생성합니다.",
        "Explanation": "AWS Global Accelerator는 지연, 지리적 위치 및 엔드포인트의 실시간 상태에 따라 트래픽을 최적의 엔드포인트로 라우팅할 수 있는 기능을 통해 애플리케이션의 성능을 향상시키기 위해 특별히 설계되었습니다. 이는 시나리오에서 요구되는 사항에 가장 효율적인 솔루션입니다.",
        "Other Options": [
            "Route 53을 지리적 위치 및 가중치 라우팅으로 구현하는 것은 유용하지만, 실시간 성능 메트릭에 따라 동적으로 조정되지 않기 때문에 변동하는 부하 및 지연 문제를 처리하는 데 덜 효과적입니다.",
            "경로 기반 라우팅을 갖춘 애플리케이션 로드 밸런서를 설정하는 것은 지리적 측면을 다루지 않거나 여러 엔드포인트 간의 지연을 효과적으로 최적화하지 않으며, 요청 경로에 따라 라우팅하는 데 더 중점을 둡니다.",
            "AWS Direct Connect를 배포하면 전용 연결을 제공하지만, 지리적 위치나 지연에 따라 트래픽을 본질적으로 관리하지 않습니다. 이는 신뢰할 수 있는 연결을 설정하는 데 더 적합하며, 동적으로 트래픽 라우팅을 최적화하는 데는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "네트워크 아키텍트는 여러 AWS 리소스 간의 연결성을 확인하는 임무를 맡고 있습니다. 아키텍트는 라우팅 구성이 올바른지, 필요한 보안 그룹 및 네트워크 ACL 규칙이 트래픽을 허용하고 있는지 확인해야 합니다. 아키텍트는 리소스 간의 경로에 문제가 없는지 확인하고자 합니다.",
        "Question": "아키텍트가 서로 다른 VPC의 리소스 간의 연결성을 테스트하고 검증하기 위해 어떤 AWS 도구를 사용해야 합니까?",
        "Options": {
            "1": "AWS Reachability Analyzer를 활용하여 네트워크 경로를 분석하고 리소스 간의 연결성을 확인합니다.",
            "2": "AWS Config를 활용하여 네트워크 구성 및 보안 설정의 준수를 보장합니다.",
            "3": "AWS CloudTrail을 사용하여 API 호출을 모니터링하고 연결성 문제를 식별합니다.",
            "4": "Amazon CloudWatch Logs를 구현하여 네트워크 트래픽 패턴을 추적하고 이상 징후를 감지합니다."
        },
        "Correct Answer": "AWS Reachability Analyzer를 활용하여 네트워크 경로를 분석하고 리소스 간의 연결성을 확인합니다.",
        "Explanation": "AWS Reachability Analyzer는 네트워크 내 리소스 간의 연결성을 평가하도록 특별히 설계되어, 트래픽 흐름을 방해할 수 있는 잠재적인 라우팅 문제 및 네트워크 구성을 식별할 수 있습니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출의 로깅 및 모니터링에 중점을 두고 있어 네트워크 연결성을 직접 테스트하는 데 적합하지 않습니다.",
            "Amazon CloudWatch Logs는 네트워크 트래픽을 모니터링하는 데 도움이 되지만, 아키텍트의 요구에 필수적인 직접적인 연결성 테스트를 제공하지 않습니다.",
            "AWS Config는 준수 및 구성 모니터링에 사용되지만, 리소스 간의 연결성을 테스트하지 않으므로 이 시나리오에서 도움을 줄 수 없습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "글로벌 전자상거래 회사가 여러 지역의 DNS 레코드를 관리하기 위해 AWS Route 53을 사용하고 있습니다. 이 회사는 다양한 지리적 위치에서 서비스를 이용하는 사용자들로 인해 지연 문제를 겪고 있습니다. 네트워크 엔지니어는 사용자를 가장 가까운 AWS 지역으로 안내하면서 해당 지역 내 여러 리소스 간의 부하를 균형 있게 분산시키는 트래픽 관리 솔루션을 구현해야 합니다. 또한, 이 솔루션이 비용 효율적이고 지연을 최소화하도록 보장하고자 합니다.",
        "Question": "네트워크 엔지니어가 이러한 요구 사항을 가장 잘 충족하기 위해 구현해야 할 Route 53 기능은 무엇입니까?",
        "Options": {
            "1": "주 지역에 장애가 발생할 경우 트래픽을 보조 지역으로 리디렉션하는 장애 조치 라우팅 정책.",
            "2": "사용자를 가장 낮은 지연이 있는 지역으로 보내는 지연 기반 라우팅 정책.",
            "3": "같은 AWS 지역 내 여러 리소스 간의 트래픽을 균형 있게 분산시키는 가중치 라우팅 정책.",
            "4": "사용자의 지리적 위치에 따라 가장 가까운 AWS 지역으로 사용자를 안내하는 지리적 위치 기반 라우팅 정책."
        },
        "Correct Answer": "사용자를 가장 낮은 지연이 있는 지역으로 보내는 지연 기반 라우팅 정책.",
        "Explanation": "지연 기반 라우팅 정책은 사용자에게 가장 낮은 지연을 제공하는 AWS 지역으로 트래픽을 라우팅하도록 설계되어 있으며, 이는 전자상거래 회사의 사용자들이 겪는 지연 문제를 직접적으로 해결합니다. 이 접근 방식은 사용자를 가장 가까운 응답성이 높은 리소스로 안내하여 성능을 향상시킵니다.",
        "Other Options": [
            "지리적 위치 기반 라우팅 정책은 사용자의 지리적 위치에 따라 트래픽을 안내하는 데 중점을 두고 있으며, 이는 해당 지역 내 응답 시간에 영향을 미칠 수 있는 다른 요인들이 있을 수 있기 때문에 반드시 가장 낮은 지연으로 이어지지는 않습니다.",
            "가중치 라우팅 정책은 할당된 가중치에 따라 트래픽을 분산시키는 기능을 제공하지만, 본질적으로 지연을 최적화하지 않으며 빠른 응답 시간을 필요로 하는 사용자에게는 최적의 경험을 제공하지 못할 수 있습니다.",
            "장애 조치 라우팅 정책은 주로 중복성을 위해 사용되며, 트래픽을 백업 리소스로 안내하는 데 사용되므로 정기적인 지연 관리나 같은 지역 내 리소스 간의 부하 균형을 다루지 않습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "다국적 기업이 다양한 지리적 지역의 사용자에게 콘텐츠를 제공하는 동안 지연 문제와 일관되지 않은 성능을 경험하고 있습니다. 이 회사는 Amazon Web Services (AWS)를 활용하여 콘텐츠를 호스팅하고 있으며, 비용을 최소화하면서 글로벌 콘텐츠 제공을 개선할 수 있는 솔루션을 찾고 있습니다.",
        "Question": "아래의 전략 조합 중 어떤 것이 인바운드 및 아웃바운드 트래픽의 글로벌 콘텐츠 분배를 효과적으로 향상시킬 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "콘텐츠가 저장된 각 글로벌 지역에 AWS Direct Connect 연결을 설정합니다.",
            "2": "Amazon Route 53을 사용하여 가장 가까운 지역 엔드포인트로의 지연 기반 라우팅을 위한 DNS를 관리합니다.",
            "3": "AWS Global Accelerator를 배포하여 가장 가까운 AWS 지역으로의 최적 경로에 따라 트래픽을 라우팅합니다.",
            "4": "Amazon CloudFront를 지역 엣지 캐시와 함께 구현하여 콘텐츠 제공을 최적화합니다.",
            "5": "다양한 지역에 여러 개의 Amazon S3 버킷을 생성하고 해당 버킷 간에 콘텐츠를 복제합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon CloudFront를 지역 엣지 캐시와 함께 구현하여 콘텐츠 제공을 최적화합니다.",
            "Amazon Route 53을 사용하여 가장 가까운 지역 엔드포인트로의 지연 기반 라우팅을 위한 DNS를 관리합니다."
        ],
        "Explanation": "Amazon CloudFront를 구현하면 엣지 위치에서 콘텐츠를 캐싱할 수 있어 글로벌 사용자에 대한 지연이 크게 줄어듭니다. 이를 Amazon Route 53과 결합하여 지연 기반 라우팅을 적용하면 사용자가 가장 가까운 성능이 좋은 엔드포인트로 안내되어 전반적인 경험이 개선됩니다.",
        "Other Options": [
            "AWS Global Accelerator를 배포하면 애플리케이션 가용성과 성능을 개선할 수 있지만, CloudFront만큼 모든 지리적 지역에서 콘텐츠 제공을 직접적으로 향상시키지는 못할 수 있습니다.",
            "AWS Direct Connect 연결을 설정하면 특정 네트워크의 대역폭이 증가하고 지연이 줄어들지만, 글로벌 콘텐츠 제공 솔루션이 아니며 다국적 접근 방식에는 비용이 많이 들 수 있습니다.",
            "여러 개의 Amazon S3 버킷을 생성하고 콘텐츠를 복제하면 중복성을 도울 수 있지만, 사용자 위치에 따라 콘텐츠 제공을 최적화하지 않으므로 지연을 줄이는 데 중요한 요소가 아닙니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 회사가 여러 AWS 계정을 운영하고 있으며, 서로 다른 계정의 VPC 간 트래픽을 중앙에서 관리할 수 있는 안전하고 확장 가능하며 효율적인 VPC 간 연결 솔루션을 구현해야 합니다.",
        "Question": "회사가 안전한 VPC 간 연결을 달성하면서 중앙 집중식 관리를 유지하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "여러 VPC와 온프레미스 네트워크를 연결하기 위한 AWS Transit Gateway",
            "2": "원격 네트워크에 대한 안전한 연결을 설정하기 위한 VPN Gateway",
            "3": "서로 다른 계정의 VPC 간 직접 연결을 위한 VPC Peering",
            "4": "온프레미스 데이터 센터에 대한 전용 연결을 위한 AWS Direct Connect"
        },
        "Correct Answer": "여러 VPC와 온프레미스 네트워크를 연결하기 위한 AWS Transit Gateway",
        "Explanation": "AWS Transit Gateway는 단일 게이트웨이를 통해 여러 VPC와 온프레미스 네트워크를 연결할 수 있어 관리가 간소화되고 모든 연결된 네트워크 간의 트래픽에 대한 효율적인 라우팅을 제공합니다. 이 서비스는 고도로 확장 가능한 VPC 간 연결을 위해 설계되었으며 중앙 집중식 트래픽 관리를 지원합니다.",
        "Other Options": [
            "VPC Peering은 두 VPC 간의 직접 연결로 제한되며, 서로 다른 계정의 여러 VPC에 대해 잘 확장되지 않아 중앙 집중식 관리 솔루션에 적합하지 않습니다.",
            "AWS Direct Connect는 주로 온프레미스 데이터 센터와 AWS 간의 전용 연결을 설정하는 데 사용되며, VPC 간 연결을 위한 것이 아니며 여러 VPC를 연결하는 요구 사항을 충족하지 않습니다.",
            "VPN Gateway는 원격 네트워크에 대한 안전한 연결을 설정하는 데 사용되지만, 여러 계정 간의 VPC 연결을 위한 AWS Transit Gateway가 제공하는 확장성이나 중앙 집중식 관리 이점을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "한 회사가 IPSec을 사용하여 온프레미스 네트워크와 AWS VPC 간에 가상 사설망(VPN) 연결을 설정했습니다. 네트워크 관리자는 VPN 터널이 계속 작동하고 있으며 문제를 지속적으로 모니터링해야 합니다. 또한 경로 광고 및 암호화 표준에 대한 제한 사항을 인지하고 있습니다.",
        "Question": "네트워크 관리자가 VPN 터널이 계속 작동하도록 하고 AWS VPN의 제한 사항을 관리하기 위해 어떤 모니터링 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "AWS Config를 사용하여 VPN 연결 설정의 준수를 확인하고 이탈에 대해 경고합니다.",
            "2": "터널 상태를 확인하기 위해 keep-alive 패킷을 전송할 수 있는 서드파티 VPN 모니터링 도구를 배포합니다.",
            "3": "AWS CloudWatch를 활용하여 VPN 터널 상태를 모니터링하고 변경 사항에 대해 경고하는 사용자 정의 메트릭을 설정합니다.",
            "4": "AWS Network Manager를 구성하여 온프레미스 네트워크와 AWS 간의 VPN 연결을 자동으로 관리하고 모니터링합니다."
        },
        "Correct Answer": "터널 상태를 확인하기 위해 keep-alive 패킷을 전송할 수 있는 서드파티 VPN 모니터링 도구를 배포합니다.",
        "Explanation": "서드파티 VPN 모니터링 도구는 keep-alive 패킷을 전송하여 VPN 터널의 가동 시간을 보장하도록 특별히 설계되어 있으며, 이를 통해 지속적인 모니터링과 연결 문제에 대한 경고를 제공하여 터널 가용성을 유지하는 데 중요합니다.",
        "Other Options": [
            "AWS CloudWatch는 다양한 메트릭을 모니터링할 수 있지만 IPSec 터널을 열어두거나 지속적인 가용성을 보장하지 않으며, 로그 및 경고에 더 중점을 두고 있습니다.",
            "AWS Network Manager는 글로벌 네트워크 관리에 중점을 두지만 터널 상태를 적극적으로 모니터링하는 데 필요한 특정 기능이 없을 수 있으며, 직접 모니터링보다는 더 넓은 관점을 제공합니다.",
            "AWS Config는 AWS 리소스 구성의 준수 확인 및 변경 추적에 유용하지만, 실시간 모니터링을 제공하거나 VPN 터널의 운영 상태를 보장하지 않습니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "한 회사가 여러 AWS 리전과 계정에 걸쳐 서비스를 확장하고 있습니다. 네트워크 아키텍처는 서로 안전하고 효율적으로 통신해야 하는 여러 VPC를 포함합니다. 설계는 낮은 대기 시간과 중복성을 보장하면서 직접적인 리전 간 통신을 지원해야 합니다.",
        "Question": "여러 AWS 계정, 리전 및 VPC 간의 효율적인 연결성과 높은 가용성을 보장하기 위해 네트워크 엔지니어가 구현해야 할 라우팅 전략은 무엇입니까?",
        "Options": {
            "1": "각 리전에서 중앙 집중식 AWS Transit Gateway를 구현하여 VPC 간 트래픽을 관리하고 전이 라우팅을 제공합니다.",
            "2": "모든 VPC 간에 VPC 피어링 연결을 설정하고 VPC 간 통신을 위한 라우트 테이블을 구성합니다.",
            "3": "각 VPC에 API Gateway를 배포하여 통신 요청을 처리하고 서비스 간 라우팅을 관리합니다.",
            "4": "AWS Direct Connect를 사용하여 각 VPC를 온프레미스 데이터 센터에 연결하여 모든 통신이 외부로 라우팅되도록 합니다."
        },
        "Correct Answer": "각 리전에서 중앙 집중식 AWS Transit Gateway를 구현하여 VPC 간 트래픽을 관리하고 전이 라우팅을 제공합니다.",
        "Explanation": "중앙 집중식 AWS Transit Gateway를 사용하면 여러 계정과 리전 간의 VPC 연결성을 효율적이고 확장 가능하게 관리할 수 있습니다. 복잡한 피어링 설정 없이도 모든 연결된 VPC가 서로 원활하게 통신할 수 있도록 하여 높은 가용성과 중복성을 지원하는 단일 관리 지점을 제공합니다.",
        "Other Options": [
            "여러 VPC 간의 VPC 피어링 연결을 설정하는 것은 번거로울 수 있으며, 관리 및 확장이 어려운 메쉬 네트워크로 이어질 수 있습니다. 이 접근 방식은 AWS Transit Gateway가 제공하는 중앙 집중식 제어가 부족합니다.",
            "AWS Direct Connect는 온프레미스 데이터 센터에 대한 전용 연결을 제공하지만, 여러 계정과 리전 내에서 효율적인 VPC 간 통신의 필요성을 해결하지 못합니다. 이는 이 시나리오에 매우 중요합니다.",
            "각 VPC에 API Gateway를 배포하는 것은 VPC 간 통신을 위한 효율적인 라우팅 전략이 아닙니다. API Gateway는 VPC 트래픽을 위한 라우팅 솔루션이 아니라 API 관리를 위해 설계되었습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 금융 기관이 다양한 내부 서비스에 대한 낮은 대기 시간의 접근이 필요하며 엄격한 보안 프로토콜을 유지해야 하는 새로운 애플리케이션을 배포하고 있습니다. 애플리케이션은 VPC에 호스팅되며, 기관은 서비스가 개인 연결을 통해서만 접근 가능하도록 보장하고자 합니다. 그들은 이러한 서비스에 대한 안전하고 확장 가능한 연결을 허용하는 솔루션이 필요하며, 공용 인터넷에 노출되지 않도록 해야 합니다.",
        "Question": "VPC와 기관의 온프레미스 데이터 센터에 호스팅된 맞춤 서비스 간의 개인 연결을 설정하기 위해 가장 적합한 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Direct Connect",
            "2": "AWS Site-to-Site VPN",
            "3": "AWS Transit Gateway",
            "4": "Amazon API Gateway"
        },
        "Correct Answer": "AWS Direct Connect",
        "Explanation": "AWS Direct Connect는 온프레미스 데이터 센터에서 AWS로의 전용 네트워크 연결을 제공하여 VPC 리소스에 대한 낮은 대기 시간과 높은 대역폭 접근을 용이하게 합니다. 이는 엄격한 보안 프로토콜을 유지하면서 개인 연결을 위한 최상의 선택입니다.",
        "Other Options": [
            "Amazon API Gateway는 주로 RESTful API를 생성하고 관리하는 데 사용되지만, 서비스에 대한 개인 접근을 위한 전용 연결을 제공하지 않으므로 이 요구 사항에 적합하지 않습니다.",
            "AWS Site-to-Site VPN은 공용 인터넷을 통해 안전한 연결을 설정하지만, AWS Direct Connect에 비해 낮은 대기 시간과 전용 대역폭의 필요를 충족하지 못할 수 있습니다.",
            "AWS Transit Gateway는 여러 VPC와 온프레미스 네트워크를 연결하는 데 주로 사용되지만, AWS Direct Connect와 같은 수준의 전용 연결을 제공하지 않으므로 이 시나리오에 덜 적합합니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 금융 기관의 보안 팀은 규제 기준 준수를 보장하기 위해 네트워크 트래픽을 모니터링하고 분석하는 임무를 맡고 있습니다. 그들은 특정 EC2 인스턴스에서 패킷을 캡처하고 분석하기 위해 VPC 트래픽 미러링을 구현하기로 결정했습니다. 팀은 인스턴스의 성능 영향을 최소화하면서 효과적으로 트래픽을 캡처할 수 있도록 해야 합니다. 또한, 미러링된 트래픽을 전용 분석 인스턴스로 복제하여 추가 조사를 수행할 방법을 찾고 있습니다.",
        "Question": "아래의 구성 조합 중에서 팀이 규제 요구 사항을 준수하면서 VPC 트래픽 미러링을 효과적으로 구현할 수 있도록 하는 것은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "TCP 및 UDP와 같은 특정 프로토콜만 캡처하도록 트래픽 미러 필터를 설정하여 수집되는 데이터 양을 줄입니다.",
            "2": "미러링된 패킷을 실시간으로 처리하기 위해 전용 EC2 인스턴스를 트래픽 미러 타겟으로 선택합니다.",
            "3": "미러링된 트래픽을 나중에 분석하기 위해 Amazon S3 버킷을 가리키는 트래픽 미러 타겟을 생성합니다.",
            "4": "트래픽 미러링 프로세스를 보완하기 위해 소스 EC2 인스턴스에서 패킷 캡처를 활성화합니다.",
            "5": "조각화를 피하기 위해 트래픽 미러 세션이 최대 패킷 크기를 1500바이트로 구성되도록 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "TCP 및 UDP와 같은 특정 프로토콜만 캡처하도록 트래픽 미러 필터를 설정하여 수집되는 데이터 양을 줄입니다.",
            "미러링된 패킷을 실시간으로 처리하기 위해 전용 EC2 인스턴스를 트래픽 미러 타겟으로 선택합니다."
        ],
        "Explanation": "트래픽 미러 필터를 설정함으로써 팀은 관련 프로토콜만 캡처하는 데 집중할 수 있어 캡처되는 데이터의 양을 최소화하고 성능에 도움이 됩니다. 전용 EC2 인스턴스를 트래픽 미러 타겟으로 선택하면 미러링된 패킷을 실시간으로 효율적으로 처리할 수 있어 적시 분석 및 규제 준수를 모니터링할 수 있습니다.",
        "Other Options": [
            "Amazon S3 버킷을 가리키는 트래픽 미러 타겟을 생성하는 것은 실시간 분석에 효과적이지 않으며, 패킷 처리 지연을 초래하고 즉각적인 모니터링 요구 사항과 일치하지 않습니다.",
            "최대 패킷 크기를 1500바이트로 구성하는 것은 트래픽 미러링 설정에 필요하지 않으며, 서비스는 더 큰 패킷 크기를 처리할 수 있으므로 이를 제한하면 관련 데이터 손실이 발생할 수 있습니다.",
            "소스 EC2 인스턴스에서 패킷 캡처를 활성화하는 것은 트래픽 미러링을 사용할 때 중복적이며, VPC 트래픽 미러링은 인스턴스에서 추가 패킷 캡처 설정 없이 트래픽을 캡처하도록 설계되었습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 회사가 Amazon Route 53에 호스팅된 도메인에 대한 종합적인 DNS 모니터링 및 로깅을 구현하고자 합니다. 목표는 보안 및 운영 통찰력을 위해 DNS 쿼리와 응답을 추적하는 것입니다. 이 솔루션은 모든 DNS 로그가 안전하게 저장되고 분석을 위해 접근할 수 있도록 해야 합니다.",
        "Question": "효과적인 DNS 모니터링 및 로깅을 달성하기 위해 어떤 구성을 적용해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "DNS 쿼리 패턴을 모니터링하기 위해 Route 53 쿼리 로그를 기반으로 CloudWatch 메트릭 필터를 생성합니다.",
            "2": "Route 53 설정의 준수를 모니터링하고 변경 사항을 기록하기 위해 AWS Config 규칙을 활성화합니다.",
            "3": "DNS 쿼리를 실시간으로 처리하기 위해 Amazon Route 53과 AWS Lambda를 통합합니다.",
            "4": "Route 53 API 호출을 기록하고 Amazon S3에 로그를 저장하기 위해 Amazon CloudTrail 트레일을 설정합니다.",
            "5": "Amazon Route 53 쿼리 로깅을 활성화하고 Amazon Kinesis Data Firehose 배달 스트림을 구성하여 Amazon S3에 로그를 저장합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon Route 53 쿼리 로깅을 활성화하고 Amazon Kinesis Data Firehose 배달 스트림을 구성하여 Amazon S3에 로그를 저장합니다.",
            "Amazon CloudTrail 트레일을 설정하여 Route 53 API 호출을 기록하고 Amazon S3에 로그를 저장합니다."
        ],
        "Explanation": "Amazon Route 53 쿼리 로깅을 활성화하면 호스팅된 영역에 대한 모든 DNS 쿼리를 캡처할 수 있으며, 이러한 로그를 Amazon Kinesis Data Firehose로 전송하면 실시간 처리 및 Amazon S3에 저장할 수 있습니다. CloudTrail 트레일을 설정하면 Route 53에 대한 API 호출을 추적할 수 있어 변경 사항 및 접근 패턴에 대한 추가 통찰력을 제공합니다.",
        "Other Options": [
            "Route 53 쿼리 로그에 대한 CloudWatch 메트릭 필터를 생성하는 것은 직접적으로 로깅을 활성화하지 않으며, 로그를 캡처하기보다는 특정 패턴을 모니터링하는 데 더 적합합니다.",
            "AWS Config 규칙을 활성화하는 것은 준수 모니터링에 유용하지만 DNS 쿼리 로깅이나 모니터링에 직접적으로 기여하지 않습니다.",
            "Amazon Route 53과 AWS Lambda를 통합하여 DNS 쿼리를 실시간으로 처리하는 것은 DNS 쿼리의 로깅이나 모니터링을 효과적으로 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "한 금융 서비스 회사가 온프레미스 데이터 센터를 AWS의 여러 VPC에 연결해야 하며, 이들 간의 원활한 통신을 보장해야 합니다. 회사는 보안에 대한 엄격한 요구 사항이 있으며, 서비스의 공용 인터넷 노출을 최소화하고자 합니다. 네트워크 아키텍트는 AWS에서 사용할 수 있는 최상의 연결 옵션을 고려하고 있습니다.",
        "Question": "회사의 요구 사항을 충족하기 위해 아키텍트가 고려해야 할 옵션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Direct Connect를 활용하여 단일 VPC에 전용 연결을 설정합니다.",
            "2": "같은 리전 내의 VPC 간 직접 연결을 위해 VPC 피어링을 활용합니다.",
            "3": "Transit Gateway를 구성하여 VPC 간 연결 및 온프레미스 접근을 간소화합니다.",
            "4": "AWS PrivateLink를 구현하여 서비스를 VPC에 안전하게 노출합니다.",
            "5": "AWS VPN 연결을 사용하여 VPC를 온프레미스 데이터 센터에 연결합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS PrivateLink를 구현하여 서비스를 VPC에 안전하게 노출합니다.",
            "Transit Gateway를 구성하여 VPC 간 연결 및 온프레미스 접근을 간소화합니다."
        ],
        "Explanation": "AWS PrivateLink는 서비스를 공용 인터넷에 노출하지 않고 한 VPC에서 다른 VPC로 안전하게 노출하는 방법을 제공합니다. Transit Gateway는 VPC 간 연결 관리를 간소화하고 온프레미스 네트워크를 통합하는 중앙 허브 역할을 하여 회사의 아키텍처에 이상적인 선택입니다.",
        "Other Options": [
            "VPC 피어링은 두 VPC 간의 직접 연결로 제한되며, 많은 수의 VPC나 온프레미스 데이터 센터에 연결하는 데 적합하지 않아 이 사용 사례에 덜 적합합니다.",
            "AWS VPN 연결은 VPC를 온프레미스 데이터 센터에 연결하는 데 사용할 수 있지만, 지연을 초래하며 여러 VPC 연결을 관리할 때 Transit Gateway만큼 효율적이지 않습니다.",
            "AWS Direct Connect는 전용 연결을 설정하는 데 좋은 옵션이지만 단일 VPC에 연결하는 데 제한되거나 Transit Gateway와 함께 여러 VPC에 사용할 수 있습니다. 그러나 많은 VPC를 관리하는 데 있어 Transit Gateway만큼의 유연성을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "조직의 보안 정책 준수를 보장하기 위해 다양한 AWS 서비스에 대한 로깅을 구현해야 합니다. VPC의 트래픽 흐름에 대한 상세 로그와 CloudFront 배포에서 제공된 요청에 대한 로그에 접근하고자 합니다. 이러한 요구 사항을 충족하기 위해 어떤 로깅 옵션을 활성화해야 합니까?",
        "Question": "VPC 트래픽과 CloudFront 요청 모두에 대한 상세 로그를 캡처하기 위해 어떤 로깅 옵션을 활성화해야 합니까?",
        "Options": {
            "1": "CloudWatch Logs 및 VPC Flow Logs를 활성화합니다.",
            "2": "Amazon S3 서버 액세스 로그 및 VPC Flow Logs를 활성화합니다.",
            "3": "AWS CloudTrail 및 ELB 액세스 로그를 활성화합니다.",
            "4": "VPC Flow Logs 및 CloudFront 액세스 로그를 활성화합니다."
        },
        "Correct Answer": "VPC Flow Logs 및 CloudFront 액세스 로그를 활성화합니다.",
        "Explanation": "VPC Flow Logs를 활성화하면 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 상세 정보를 캡처할 수 있으며, CloudFront 액세스 로그를 활성화하면 CloudFront 배포에 대한 모든 요청의 기록을 제공하여 두 서비스의 로깅 요구 사항을 충족합니다.",
        "Other Options": [
            "AWS CloudTrail은 계정의 API 호출을 기록하지만 네트워크 트래픽 세부정보나 CloudFront의 액세스 로그를 캡처하는 데 적합하지 않습니다. ELB 액세스 로그는 로드 밸런서에만 적용되며 VPC 트래픽을 포함하지 않습니다.",
            "Amazon S3 서버 액세스 로그는 S3 버킷에 대한 액세스 요청과 관련이 있으며 VPC 트래픽이나 CloudFront 요청에 대한 정보를 제공하지 않으므로 주어진 요구 사항에 적합하지 않습니다.",
            "CloudWatch Logs는 VPC 트래픽이나 CloudFront 요청에 대한 액세스 로그를 직접 제공하지 않습니다. 애플리케이션 또는 서비스 로그를 모니터링하고 기록하는 데 사용되지만 네트워크 트래픽 로그를 캡처하는 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "금융 서비스 회사는 산업 규정을 엄격히 준수해야 하며 AWS 환경 전반에 걸쳐 네트워크 활동을 모니터링할 필요가 있습니다. 이들은 비정상적인 네트워크 접근 패턴을 감지하고 적시에 대응할 수 있도록 자동 알람을 구현하고자 합니다. 솔루션 아키텍트는 이 목표를 달성하기 위해 Amazon CloudWatch를 구성하는 임무를 맡고 있습니다.",
        "Question": "솔루션 아키텍트가 VPC에서 비정상적인 네트워크 접근 패턴을 감지하기 위해 자동 알람을 설정하기 위해 어떤 CloudWatch 기능을 활용해야 합니까?",
        "Options": {
            "1": "CloudWatch Logs Insights",
            "2": "CloudWatch Alarms",
            "3": "CloudWatch Events",
            "4": "CloudWatch Metric Filters"
        },
        "Correct Answer": "CloudWatch Alarms",
        "Explanation": "CloudWatch Alarms는 메트릭 및 로그 이벤트를 모니터링하도록 특별히 설계되어, 비정상적인 활동이 감지될 때 알림이나 조치를 트리거하기 위한 임계값을 설정할 수 있습니다. 이는 네트워크 접근 패턴에 실시간으로 대응하는 데 필수적입니다.",
        "Other Options": [
            "CloudWatch Logs Insights는 주로 로그 데이터를 쿼리하고 분석하는 데 사용되지만, 메트릭이나 이벤트를 기반으로 직접 알람을 설정하지는 않습니다.",
            "CloudWatch Metric Filters는 로그에서 메트릭 데이터를 추출하는 데 사용되지만, 추출된 메트릭을 기반으로 알림을 트리거하기 위해 CloudWatch Alarms와 함께 사용해야 합니다.",
            "CloudWatch Events는 AWS 리소스 및 서비스의 변경에 응답할 수 있지만, 네트워크 활동 메트릭을 기반으로 알람을 설정하는 데 직접 사용되지는 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 회사가 AWS에 다계층 웹 애플리케이션을 배포할 계획입니다. 이 애플리케이션은 EC2 인스턴스에서 호스팅되는 프론트엔드 계층, RDS를 사용하는 백엔드 계층, ElastiCache를 사용하는 캐싱 계층으로 구성됩니다. 네트워크 아키텍트는 웹 애플리케이션이 안전하고 확장 가능하며 고가용성을 유지하도록 VPC를 설계해야 합니다. 아키텍트는 또한 프론트엔드 계층이 데이터베이스를 공용 인터넷에 노출하지 않고 백엔드 계층과 통신할 수 있도록 해야 합니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 VPC를 구성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "프론트엔드 계층을 위한 공용 서브넷과 백엔드 계층을 위한 사설 서브넷을 생성하고, 보안 그룹을 사용하여 통신을 허용합니다.",
            "2": "프론트엔드 계층을 위한 공용 서브넷과 백엔드 계층을 위한 사설 서브넷을 생성하고, VPC 엔드포인트를 통해 서로 통신할 수 있도록 합니다.",
            "3": "프론트엔드 계층을 위한 공용 서브넷과 백엔드 계층을 위한 공용 서브넷을 생성하여 서로 직접 통신할 수 있도록 합니다.",
            "4": "프론트엔드 계층을 위한 사설 서브넷과 백엔드 계층을 위한 사설 서브넷을 생성하고, NAT 게이트웨이를 사용하여 아웃바운드 트래픽을 처리합니다."
        },
        "Correct Answer": "프론트엔드 계층을 위한 공용 서브넷과 백엔드 계층을 위한 사설 서브넷을 생성하고, 보안 그룹을 사용하여 통신을 허용합니다.",
        "Explanation": "이 구성은 프론트엔드 계층이 인터넷을 통해 접근 가능하도록 하면서 백엔드 계층은 사설 서브넷에 안전하게 유지할 수 있습니다. 보안 그룹을 구성하여 프론트엔드와 백엔드 계층 간의 특정 트래픽을 허용함으로써 데이터베이스를 공용 인터넷에 노출하지 않고 안전한 통신 요구 사항을 충족합니다.",
        "Other Options": [
            "이 옵션은 VPC 엔드포인트를 사용하는 것을 잘못 제안하고 있으며, VPC 엔드포인트는 주로 AWS 서비스에 개인적으로 연결하는 데 사용됩니다. 프론트엔드와 백엔드 계층 간의 안전한 통신 필요성을 다루지 않습니다.",
            "이 옵션은 백엔드 계층에 필요한 보안을 제공하지 않으며, 공용 서브넷에 배치하면 인터넷에 노출되어 데이터베이스 보안 모범 사례에 위배됩니다.",
            "이 옵션은 두 계층을 모두 사설로 유지하지만, 사용자 상호작용을 위해 인터넷에서 프론트엔드 계층에 직접 접근할 수 없도록 합니다. 또한, 이 아키텍처에는 NAT 게이트웨이가 필요하지 않습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 회사는 AWS 환경의 보안 구성을 정기적으로 감사하여 네트워크 보안 정책을 준수해야 합니다. 이 회사는 보안 그룹 및 네트워크 접근 제어를 포함하여 AWS 리소스의 보안을 자동으로 평가하고 보고할 수 있는 솔루션을 구현하고자 합니다.",
        "Question": "네트워크 보안 구성을 감사하고 보안 모범 사례 준수에 대한 통찰력을 제공하기 위해 어떤 AWS 서비스를 활용할 수 있습니까?",
        "Options": {
            "1": "AWS Firewall Manager",
            "2": "AWS GuardDuty",
            "3": "AWS Config",
            "4": "AWS Trusted Advisor"
        },
        "Correct Answer": "AWS Config",
        "Explanation": "AWS Config는 AWS 리소스의 인벤토리를 제공하고 구성 변경을 추적하며 보안 정책 준수를 평가하도록 설계된 서비스입니다. 보안 그룹 구성 및 기타 리소스 설정의 감사를 가능하게 하여 이 요구 사항에 이상적입니다.",
        "Other Options": [
            "AWS Trusted Advisor는 AWS 계정에 대한 모범 사례 권장 사항을 제공하지만, 네트워크 보안 구성을 포괄적으로 감사하지는 않습니다.",
            "AWS Firewall Manager는 여러 계정에서 방화벽 규칙을 관리하는 데 주로 사용되며, 네트워크 보안 구성을 검토하기 위한 감사 도구로 사용되지 않습니다.",
            "AWS GuardDuty는 악의적인 활동 및 무단 행동을 모니터링하는 위협 탐지 서비스이지만, 네트워크 보안 구성을 감사하거나 분석하지는 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "한 금융 서비스 회사가 AWS에서 내부 서비스와 외부 클라이언트 모두에 대해 신뢰할 수 있고 안전한 이름 해석이 필요한 마이크로서비스 아키텍처를 배포하고 있습니다. 시스템 아키텍처에는 EC2 인스턴스, Lambda 함수 및 Amazon ECS에 의해 오케스트레이션되는 컨테이너화된 애플리케이션이 혼합되어 포함되어 있습니다. 이러한 구성 요소 간의 원활한 통신을 보장하기 위해 회사는 보안을 유지하고 지연 시간을 최소화하면서 효율적이고 확장 가능한 DNS 솔루션이 필요합니다.",
        "Question": "내부 및 외부 이름 해석을 위한 고가용성 DNS 솔루션을 구현하기 위해 사용할 수 있는 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "내부 이름 해석을 위한 개인 호스팅 영역으로 Amazon Route 53을 배포하고 건강 검사를 구성하여 트래픽을 건강한 리소스로 라우팅합니다.",
            "2": "외부 이름 해석을 위한 공용 호스팅 영역으로 Amazon Route 53을 구현하고 사용자 경험을 최적화하기 위해 지연 기반 라우팅 정책을 설정합니다.",
            "3": "Amazon Elastic Load Balancer (ELB)를 설정하여 EC2 인스턴스 간에 트래픽을 분산하고 서비스 통신을 위해 ELB DNS 이름을 사용합니다.",
            "4": "AWS App Mesh를 활용하여 서비스 검색을 관리하고 DNS 기반 라우팅을 위해 Envoy 프록시를 사용하여 서비스 간의 통신을 촉진합니다.",
            "5": "AWS Cloud Map을 활용하여 서비스 검색을 수행하고 서비스가 엔드포인트를 등록하고 동적 업데이트를 위한 자동 건강 검사를 활성화할 수 있도록 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "내부 이름 해석을 위한 개인 호스팅 영역으로 Amazon Route 53을 배포하고 건강 검사를 구성하여 트래픽을 건강한 리소스로 라우팅합니다.",
            "외부 이름 해석을 위한 공용 호스팅 영역으로 Amazon Route 53을 구현하고 사용자 경험을 최적화하기 위해 지연 기반 라우팅 정책을 설정합니다."
        ],
        "Explanation": "내부 이름 해석을 위한 개인 호스팅 영역으로 Amazon Route 53을 배포하면 마이크로서비스가 효과적으로 통신할 수 있는 확장 가능하고 고가용성 DNS 솔루션을 제공합니다. 건강 검사를 구성하면 트래픽이 건강한 리소스로만 전달되도록 보장합니다. 또한 외부 이름 해석을 위한 공용 호스팅 영역을 사용하고 지연 기반 라우팅을 통해 사용자 경험을 최적화하여 사용자를 지리적 위치에 따라 가장 가까운 엔드포인트로 안내합니다.",
        "Other Options": [
            "AWS App Mesh를 사용하는 것은 DNS 관리의 주요 솔루션이 아니며, 서비스 검색 및 트래픽 관리에 중점을 두지만 DNS 해석을 위해 Route 53의 필요성을 대체하지 않습니다.",
            "ELB를 설정하는 것은 DNS 해석에 충분하지 않으며, EC2 인스턴스 간의 트래픽 분산만 제공하고 내부 및 외부 서비스에 대한 포괄적인 이름 해석 솔루션을 제공하지 않습니다.",
            "AWS Cloud Map은 서비스 검색에 유용하지만 독립적인 DNS 솔루션이 아니며 내부 및 외부 이름 해석을 위한 Route 53이 제공하는 기능을 대체하지 않습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사가 EC2 인스턴스를 위해 여러 개의 Elastic IP 주소를 사용하고 있습니다. 비용을 최소화하기 위해 네트워크 관리자는 사용되지 않는 Elastic IP 주소에 대해 요금이 부과되지 않도록 해야 합니다. 관리자는 AWS Command Line Interface (CLI)에 익숙하며 이를 통해 효율적으로 작업을 수행할 수 있습니다.",
        "Question": "관리자가 사용되지 않는 Elastic IP 주소에 대한 요금을 피하기 위한 최선의 방법은 무엇입니까?",
        "Options": {
            "1": "실행 중인 인스턴스와 연결되지 않은 Elastic IP 주소를 해제합니다.",
            "2": "VPC의 각 인스턴스에 대해 새로운 Elastic IP 주소를 생성합니다.",
            "3": "Elastic IP 주소를 보조 IP 주소로 변경합니다.",
            "4": "현재 Elastic IP 주소를 사용 중인 모든 인스턴스를 중지합니다."
        },
        "Correct Answer": "실행 중인 인스턴스와 연결되지 않은 Elastic IP 주소를 해제합니다.",
        "Explanation": "Elastic IP 주소에 대한 비용이 발생하지 않도록 하려면 실행 중인 인스턴스와 연결되어 있거나 계정에서 해제되어야 합니다. 사용되지 않는 Elastic IP 주소를 해제하면 요금이 부과되지 않게 됩니다.",
        "Other Options": [
            "Elastic IP 주소를 보조 IP 주소로 변경하는 것은 불가능하며, 보조 IP 주소는 Elastic IP와 다르며 이를 대체할 수 없습니다.",
            "인스턴스를 중지하는 것은 Elastic IP 비용에 영향을 미치지 않으며, 해제되지 않는 한 요금이 계속 부과됩니다. 인스턴스를 중지하면 데이터 전송 요금만 방지할 수 있지만 연결된 Elastic IP에 대한 요금은 중지되지 않습니다.",
            "각 인스턴스에 대해 새로운 Elastic IP 주소를 생성하면 비용이 증가하며, AWS는 사용되지 않는 추가 Elastic IP에 대해 요금을 부과합니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 회사가 온프레미스 리소스와 AWS 리소스를 혼합한 하이브리드 아키텍처를 운영하고 있습니다. 그들은 온프레미스 DNS 쿼리가 AWS 리소스를 효율적으로 해결되도록 하고 싶어합니다. 회사는 이 통합을 촉진하기 위해 Route 53 Resolver 엔드포인트를 사용하는 것을 고려하고 있습니다. 네트워크 아키텍트는 온프레미스 리소스가 개인 호스팅 영역을 사용하여 AWS 리소스 이름을 해석할 수 있도록 하는 솔루션을 설계해야 합니다.",
        "Question": "온프레미스 리소스가 AWS 개인 호스팅 영역을 쿼리할 수 있도록 Route 53 Resolver를 설정하는 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "VPC에 하이브리드 VPN 연결을 배포하고 기존 온프레미스 DNS 서버를 사용하여 개인 호스팅 영역의 이름을 해석합니다.",
            "2": "온프레미스 DNS 서버에서 VPC로 모든 DNS 쿼리를 전달하는 Route 53 Resolver 규칙 연관을 구현합니다.",
            "3": "VPC에 인바운드 Route 53 Resolver 엔드포인트를 설정하고 온프레미스에서 모든 요청을 캡처하기 위해 DNS 쿼리 로깅을 활성화합니다.",
            "4": "VPC에 아웃바운드 Route 53 Resolver 엔드포인트를 생성하고 개인 호스팅 영역으로 트래픽을 라우팅하기 위해 전달 규칙을 구성합니다."
        },
        "Correct Answer": "VPC에 아웃바운드 Route 53 Resolver 엔드포인트를 생성하고 개인 호스팅 영역으로 트래픽을 라우팅하기 위해 전달 규칙을 구성합니다.",
        "Explanation": "아웃바운드 Route 53 Resolver 엔드포인트를 생성하면 온프레미스 DNS 쿼리를 AWS로 전달할 수 있습니다. 전달 규칙을 구성함으로써 엔드포인트는 AWS 개인 호스팅 영역에 대한 DNS 쿼리를 특정하게 안내하여 온프레미스 네트워크에서 AWS 리소스 이름을 원활하게 해석할 수 있도록 합니다.",
        "Other Options": [
            "인바운드 Route 53 Resolver 엔드포인트를 설정하는 것은 적합하지 않으며, 이는 AWS에서 온프레미스로 DNS 쿼리를 수신하는 데 사용되며 그 반대는 아닙니다.",
            "하이브리드 VPN 연결을 배포하는 것은 개인 호스팅 영역에 대한 DNS 쿼리를 직접적으로 촉진하지 않으며, DNS 전달 기능 없이 네트워크를 연결하는 것에 불과합니다.",
            "Route 53 Resolver 규칙 연관을 구현하는 것은 옵션으로 존재하지 않으며, 올바른 접근 방식은 아웃바운드 엔드포인트에서 직접 전달 규칙을 생성하는 것입니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "한 회사가 AWS 네트워킹 아키텍처 최적화 작업을 진행 중입니다. 이들은 Transit Gateway를 통해 연결된 여러 VPC를 보유하고 있으며, AWS Transit Gateway Network Manager를 사용하여 네트워크 토폴로지를 시각화하고 관리하고 있습니다. 네트워크 팀은 성능 향상 및 연결 문제 해결을 위해 VPC 간 및 온프레미스 데이터 센터 간의 네트워크 경로와 지연 시간을 명확히 이해하고자 합니다. 이들은 네트워크 토폴로지를 매핑하고 이해하기 위한 모범 사례를 구현해야 합니다.",
        "Question": "회사가 가장 효과적인 네트워크 토폴로지 매핑 및 모니터링을 제공하기 위해 어떤 조합의 작업을 수행해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "Amazon CloudWatch Alarms를 배포하여 네트워크 지연 시간을 모니터링하고 임계값 초과 시 알림을 트리거합니다.",
            "2": "Transit Gateway Network Manager를 활용하여 모든 VPC와 온프레미스 위치를 포함하는 글로벌 네트워크 맵을 생성합니다.",
            "3": "AWS Config 규칙을 구현하여 모든 VPC의 네트워크 구성 변경 및 준수를 모니터링합니다.",
            "4": "모든 VPC에 대해 VPC Flow Logs를 활성화하여 트래픽 흐름 패턴을 캡처하고 분석합니다.",
            "5": "API 호출에 대한 가시성을 향상시키기 위해 AWS CloudTrail을 Transit Gateway Network Manager와 통합합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Transit Gateway Network Manager를 활용하여 모든 VPC와 온프레미스 위치를 포함하는 글로벌 네트워크 맵을 생성합니다.",
            "모든 VPC에 대해 VPC Flow Logs를 활성화하여 트래픽 흐름 패턴을 캡처하고 분석합니다."
        ],
        "Explanation": "Transit Gateway Network Manager를 활용하면 VPC와 온프레미스 위치를 포함한 네트워크 토폴로지의 중앙 집중식 뷰를 제공하여 더 나은 관리 및 가시성을 촉진합니다. VPC Flow Logs를 활성화하면 트래픽 패턴에 대한 귀중한 통찰력을 제공하여 문제 해결 및 성능 최적화에 도움이 됩니다.",
        "Other Options": [
            "AWS CloudTrail을 Transit Gateway Network Manager와 통합하는 것은 API 호출 로깅에 주로 초점을 맞추고 있어 네트워크 경로 및 지연 시간을 이해하는 데 덜 관련성이 있습니다.",
            "Amazon CloudWatch Alarms를 배포하여 네트워크 지연 시간을 모니터링하는 것은 성능 모니터링에 도움이 될 수 있지만, 네트워크 토폴로지를 매핑하거나 이해하는 데 직접적으로 기여하지 않으며, 이는 주요 요구 사항입니다.",
            "AWS Config 규칙을 구현하면 네트워크 구성의 준수 및 변경 사항을 모니터링하는 데 도움이 될 수 있지만, 회사의 필요에 필수적인 네트워크 토폴로지의 직접적인 가시성이나 매핑을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사가 여러 지역에 걸쳐 여러 VPC를 운영하는 다중 계정 AWS 환경을 보유하고 있습니다. 이러한 환경 간의 적절한 연결 및 테스트를 보장하기 위해 네트워크 팀은 네트워크 리소스의 라우팅 및 도달 가능성을 검증해야 합니다. 목표는 수동 개입 없이 서로 다른 지역의 VPC 간 연결을 신속하고 정확하게 테스트할 수 있는 솔루션을 구현하는 것입니다.",
        "Question": "네트워크 팀이 서로 다른 지역의 VPC 간 연결 테스트를 자동화하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "Amazon Route 53 헬스 체크를 배포하여 VPC 엔드포인트의 상태를 모니터링하고 연결 문제에 대한 경고를 트리거합니다.",
            "2": "AWS Systems Manager Run Command를 구현하여 VPC 간의 연결을 테스트하고 상태를 보고하는 스크립트를 실행합니다.",
            "3": "AWS Transit Gateway를 활용하여 중앙 집중식 라우팅 솔루션을 만들고 VPC Flow Logs를 사용하여 연결을 모니터링합니다.",
            "4": "AWS Lambda 함수를 설정하여 주기적으로 VPC 엔드포인트에 핑을 보내고 결과를 Amazon CloudWatch에 기록합니다."
        },
        "Correct Answer": "AWS Lambda 함수를 설정하여 주기적으로 VPC 엔드포인트에 핑을 보내고 결과를 Amazon CloudWatch에 기록합니다.",
        "Explanation": "AWS Lambda 함수를 주기적으로 VPC 엔드포인트에 핑을 보내도록 예약할 수 있어 연결을 테스트하는 자동화되고 효율적인 방법을 제공합니다. 결과는 모니터링 및 경고를 위해 Amazon CloudWatch에 기록될 수 있어 지속적인 연결 검증을 위한 적합한 솔루션이 됩니다.",
        "Other Options": [
            "AWS Transit Gateway는 VPC 간 라우팅을 단순화할 수 있지만, 연결을 테스트하는 방법을 본질적으로 제공하지 않습니다. VPC Flow Logs는 트래픽을 캡처하지만 연결을 적극적으로 테스트하지 않습니다.",
            "Amazon Route 53 헬스 체크는 웹 애플리케이션 및 엔드포인트 모니터링을 위해 설계되었지만, VPC 간의 직접적인 연결 테스트에 특별히 맞춰져 있지 않습니다.",
            "AWS Systems Manager Run Command는 인스턴스에서 스크립트를 실행할 수 있지만 수동 설정이 필요하며 VPC 간의 연결에 대한 지속적인 자동 테스트를 제공하지 않습니다."
        ]
    }
]