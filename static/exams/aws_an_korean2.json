[
    {
        "Question Number": "1",
        "Situation": "조직이 애플리케이션 배포를 위해 여러 서브넷을 갖춘 새로운 VPC를 설계하고 있습니다. 네트워킹 팀은 잠재적인 충돌을 피하기 위해 각 서브넷의 예약된 IP 주소를 올바르게 이해해야 합니다.",
        "Question": "다음 중 VPC의 각 서브넷에서 예약되어 있어 인스턴스나 다른 리소스에 할당할 수 없는 IP 주소는 무엇입니까?",
        "Options": {
            "1": "네트워크 주소 .255, VPC 라우터 .3, DNS 예약 .1, 향후 사용을 위한 예약 .0, 브로드캐스트 주소 .1",
            "2": "네트워크 주소 .1, VPC 라우터 .0, DNS 예약 .3, 향후 사용을 위한 예약 .2, 브로드캐스트 주소 .254",
            "3": "네트워크 주소 .3, VPC 라우터 .2, DNS 예약 .1, 향후 사용을 위한 예약 .0, 브로드캐스트 주소 .0",
            "4": "네트워크 주소 .0, VPC 라우터 .1, DNS 예약 .2, 향후 사용을 위한 예약 .3, 브로드캐스트 주소 .255"
        },
        "Correct Answer": "네트워크 주소 .0, VPC 라우터 .1, DNS 예약 .2, 향후 사용을 위한 예약 .3, 브로드캐스트 주소 .255",
        "Explanation": "VPC에서는 각 서브넷의 처음 네 개의 IP 주소와 마지막 IP 주소가 예약됩니다. 구체적으로, .0으로 끝나는 IP 주소는 네트워크 주소, .1은 VPC 라우터에 예약되어 있으며, .2는 DNS에 예약되고, .3은 향후 사용을 위해 예약되며, .255는 브로드캐스트 주소입니다 (AWS VPC에서는 사용되지 않습니다).",
        "Other Options": [
            "이 옵션은 네트워크 주소를 .1로, VPC 라우터를 .0으로 잘못 할당하여 AWS 가이드라인에 맞지 않습니다.",
            "이 옵션은 .255를 네트워크 주소로 나열하고 다른 기능에 비예약 주소를 할당하여 예약 주소 규칙과 일치하지 않습니다.",
            "이 옵션은 .3을 네트워크 주소로 잘못 식별하고 다른 기능을 잘못 나열하여 표준 예약 주소 할당을 위반합니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "금융 서비스 회사가 민감한 데이터 처리를 위한 아키텍처를 설계하고 있습니다. 그들은 클라이언트와 서비스 간의 안전한 통신을 보장하면서 로드 밸런싱을 구현하는 방법을 평가하고 있습니다.",
        "Question": "네트워크 엔지니어가 로드 밸런서를 사용하여 전송 중인 데이터를 보호하기 위해 고려해야 할 방법은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "상호 TLS 인증 구현",
            "2": "향상된 성능을 위한 HTTP/2 사용",
            "3": "로드 밸런서에서 TLS 종료",
            "4": "백엔드 인스턴스로의 TLS 패스스루",
            "5": "데이터베이스 연결을 위한 프라이빗 링크 사용"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "로드 밸런서에서 TLS 종료",
            "백엔드 인스턴스로의 TLS 패스스루"
        ],
        "Explanation": "로드 밸런서에서 TLS 종료는 로드 밸런서 수준에서 트래픽을 복호화할 수 있게 하여 인증서 관리를 단순화하고 백엔드 서버의 지연 시간을 줄일 수 있습니다. TLS 패스스루는 백엔드 서버까지 암호화된 연결을 유지하여 민감한 데이터에 필수적인 종단 간 암호화를 보장합니다.",
        "Other Options": [
            "향상된 성능을 위한 HTTP/2 사용은 전송 중인 데이터를 본질적으로 보호하지 않습니다. HTTP/2는 다중화 및 헤더 압축을 통해 성능을 개선할 수 있지만, TLS 없이 암호화나 인증을 직접적으로 다루지 않습니다.",
            "데이터베이스 연결을 위한 프라이빗 링크 사용은 로드 밸런서가 처리하는 트래픽을 보호하는 것과는 관련이 없습니다. 데이터베이스 보안을 위한 좋은 관행이지만 로드 밸런싱 시나리오에는 적용되지 않습니다.",
            "상호 TLS 인증 구현은 클라이언트와 서버 모두 인증서를 제시해야 하므로 보안을 강화하지만, 로드 밸런서 암호화 처리에 대한 특정 방법이 아니므로 이 질문의 맥락에서는 덜 관련성이 있습니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "회사가 AWS 리소스를 관리하기 위해 코드로서의 인프라(IaC) 접근 방식을 채택하고 있습니다. DevOps 팀은 서브넷, 보안 그룹 및 인터넷 게이트웨이를 갖춘 새로운 VPC를 프로비저닝해야 합니다. 그들은 프로비저닝이 재현 가능하고 CI/CD 파이프라인에 통합될 수 있도록 하고 싶어합니다.",
        "Question": "이 IaC 솔루션을 효과적으로 구현하기 위해 팀이 사용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS CDK를 사용하여 선택한 프로그래밍 언어로 VPC 및 그 리소스를 정의하여 기존 소프트웨어 개발 워크플로우에 더 쉽게 통합할 수 있도록 합니다.",
            "2": "AWS CLI를 사용하여 VPC 및 그 리소스를 수동으로 생성하고 모든 구성이 향후 참조를 위해 문서화되도록 합니다.",
            "3": "AWS SDK와 사용자 정의 스크립트를 사용하여 VPC 및 그 리소스를 프로그래밍 방식으로 프로비저닝하여 코딩 과정에서 더 많은 유연성을 허용합니다.",
            "4": "AWS CloudFormation을 사용하여 JSON 또는 YAML 템플릿에서 VPC 및 관련 리소스를 정의하여 버전 관리 및 쉬운 업데이트를 가능하게 합니다."
        },
        "Correct Answer": "AWS CloudFormation을 사용하여 JSON 또는 YAML 템플릿에서 VPC 및 관련 리소스를 정의하여 버전 관리 및 쉬운 업데이트를 가능하게 합니다.",
        "Explanation": "AWS CloudFormation은 코드를 통해 인프라를 정의하고 프로비저닝하는 강력한 방법을 제공하여 프로비저닝 프로세스를 쉽게 복제하고 관리할 수 있도록 합니다. 또한 버전 관리를 지원하여 변경 사항을 추적하기 쉽게 만듭니다.",
        "Other Options": [
            "AWS CLI 방법은 수동 명령이 포함되어 불일치가 발생할 수 있으므로 IaC에 이상적이지 않으며 템플릿 기반 접근 방식만큼의 버전 관리를 제공하지 않습니다.",
            "AWS SDK를 사용하면 리소스를 프로그래밍 방식으로 관리할 수 있지만 복잡성을 도입하며 CloudFormation이나 CDK에 비해 코드로서의 인프라 유지 관리가 덜 직관적입니다.",
            "AWS CDK는 IaC에 훌륭한 도구이지만, 특히 여러 환경에서 일관성을 유지해야 하는 팀에게는 CloudFormation과 같은 순수 템플릿 기반 접근 방식을 선호하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "글로벌 전자상거래 회사는 네트워킹 인프라를 위해 AWS에 크게 의존하고 있습니다. 이들은 피크 트래픽 시간 동안 성능 문제를 겪고 있으며, AWS의 제한 및 쿼터가 네트워크 운영에 어떻게 영향을 미칠 수 있는지 이해할 필요가 있습니다. 특히 대역폭 및 경로 제한과 관련하여 Network Architect는 이러한 제약 내에서 네트워크 성능을 최적화하기 위한 최선의 접근 방식을 식별하는 임무를 맡고 있습니다.",
        "Question": "Network Architect가 AWS 네트워킹 제한 및 쿼터를 준수하면서 최적의 성능을 보장하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "여러 Amazon VPC를 다른 지역에 배포하고 지역 간 VPC 피어링을 설정하여 부하를 분산시키고 대역폭 제한을 보다 효과적으로 관리합니다.",
            "2": "AWS Support에 서비스 제한 증가 요청을 제출하여 허용된 VPC 경로의 최대 수를 늘려 여러 VPC 간의 보다 세분화된 트래픽 관리를 가능하게 합니다.",
            "3": "AWS Direct Connect를 구현하여 온프레미스 데이터 센터와 AWS 간에 전용 네트워크 연결을 설정하여 공용 인터넷의 제한을 우회하고 일관된 대역폭을 달성합니다.",
            "4": "Amazon CloudFront를 사용하여 엣지 위치에서 콘텐츠를 캐시하여 원본 서버의 부하를 줄이고 응답 시간을 개선하면서 AWS 서비스의 대역폭 제한 내에서 유지합니다."
        },
        "Correct Answer": "AWS Direct Connect를 구현하여 온프레미스 데이터 센터와 AWS 간에 전용 네트워크 연결을 설정하여 공용 인터넷의 제한을 우회하고 일관된 대역폭을 달성합니다.",
        "Explanation": "AWS Direct Connect를 구현하면 표준 인터넷 연결에 비해 더 높은 대역폭과 낮은 지연 시간을 제공하는 전용 연결을 제공합니다. 이는 높은 데이터 전송 요구 사항이 있는 애플리케이션에 특히 유리하여 공용 인터넷 경로의 대역폭 제한에 영향을 받지 않고 일관된 성능을 보장합니다.",
        "Other Options": [
            "Amazon CloudFront를 사용하는 것은 캐싱 및 콘텐츠 배달에 대한 좋은 전략이지만, 주로 웹 애플리케이션에 이익을 주며 모든 유형의 트래픽에 대한 대역폭 제한에 직접적인 영향을 미치지 않습니다. 비캐시 가능한 트래픽에 대한 기본 대역폭 문제를 해결하지 않습니다.",
            "VPC 경로에 대한 서비스 제한 증가 요청은 경로 제한 관리를 도울 수 있지만, 대역폭 문제를 직접적으로 해결하지는 않습니다. 또한, 경로를 늘리면 피크 시간 동안의 핵심 성능 문제를 해결하지 않고 더 복잡한 라우팅 관리로 이어질 수 있습니다.",
            "여러 Amazon VPC를 배포하고 지역 간 피어링을 사용하는 것은 교차 지역 트래픽으로 인해 추가적인 복잡성과 잠재적인 지연 문제를 초래할 수 있습니다. 특히 트래픽이 단일 지역에 집중된 경우 대역폭 제한을 효과적으로 해결하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 회사가 온프레미스 인프라를 AWS로 마이그레이션하고 있으며, 여러 지역에 걸쳐 있는 여러 VPC에 대한 중앙 집중식 DNS 솔루션을 구현하고자 합니다. DNS 솔루션은 내부 및 외부 해상도에 대해 낮은 지연 시간과 높은 가용성을 보장해야 합니다. 네트워크 엔지니어는 이 아키텍처를 지원하기 위해 Route 53 Resolver를 구성해야 합니다.",
        "Question": "이 시나리오에서 중앙 집중식 DNS 솔루션을 위해 Route 53 Resolver를 구성하는 가장 좋은 접근 방식은 무엇입니까?",
        "Options": {
            "1": "각 VPC에 수신 엔드포인트를 생성하여 DNS 쿼리를 기본 지역의 중앙 집중식 Route 53 Resolver로 전달합니다.",
            "2": "각 VPC에 Route 53 Resolver 규칙을 배포하여 DNS 쿼리를 기본 지역의 중앙 집중식 Route 53 Resolver로 전달합니다.",
            "3": "중앙 집중식 VPC에 아웃바운드 엔드포인트를 설정하고 각 VPC가 모든 DNS 쿼리를 이러한 엔드포인트로 라우팅하도록 구성합니다.",
            "4": "중앙 집중식 VPC에서 Route 53 Resolver 규칙을 구성하여 DNS 쿼리를 외부 DNS 서버로 직접 라우팅합니다."
        },
        "Correct Answer": "각 VPC에 수신 엔드포인트를 생성하여 DNS 쿼리를 기본 지역의 중앙 집중식 Route 53 Resolver로 전달합니다.",
        "Explanation": "각 VPC에 수신 엔드포인트를 생성하면 서로 다른 VPC에서 중앙 집중식 Route 53 Resolver로 DNS 쿼리를 전달할 수 있어 쿼리가 효율적으로 처리되면서 낮은 지연 시간과 높은 가용성을 유지할 수 있습니다.",
        "Other Options": [
            "중앙 집중식 VPC에 아웃바운드 엔드포인트를 설정하는 것은 잘못된 접근 방식입니다. 아웃바운드 엔드포인트는 외부 DNS 서비스로 쿼리를 전달하는 데 사용되며, 여러 VPC에서 쿼리를 수신하는 데 사용되지 않습니다.",
            "각 VPC에 Route 53 Resolver 규칙을 배포하면 추가 관리가 필요하며 DNS 해상도를 중앙 집중화하지 않습니다. 이는 아키텍처를 단순화하기보다는 복잡성을 초래합니다.",
            "중앙 집중식 VPC에서 Route 53 Resolver 규칙을 구성하면 쿼리를 외부 DNS 서버로만 라우팅하며, 여러 VPC에서 내부 DNS 해상도 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 회사는 서로 다른 팀이 독립적으로 리소스를 프로비저닝함에 따라 IP 범위가 겹치는 여러 Amazon VPC를 보유하고 있습니다. Network Architect는 IP 주소 충돌을 피하면서 이러한 VPC를 연결해야 합니다. 회사는 또한 온프레미스 데이터 센터에 대한 안전하고 개인적인 연결이 필요합니다.",
        "Question": "IP 중복 문제를 해결하고 개인 연결을 보장하기 위해 Network Architect가 구현해야 할 솔루션 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "VPC 간 트래픽을 라우팅하기 위해 Transit Gateway를 설정하고, 겹치는 CIDR 블록을 관리하기 위해 라우팅 테이블을 활용합니다.",
            "2": "AWS PrivateLink를 구현하여 액세스해야 하는 각 VPC 서비스에 대한 인터페이스 엔드포인트를 생성합니다.",
            "3": "NAT Gateway를 사용하여 아웃바운드 인터넷 액세스를 위한 겹치는 IP 주소를 변환합니다.",
            "4": "각 VPC에서 온프레미스 데이터 센터로 VPN 연결을 배포하여 내부 트래픽에 대한 고유한 IP 범위를 보장합니다.",
            "5": "모든 겹치는 VPC 간에 VPC 피어링 연결을 생성하여 직접 통신을 가능하게 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS PrivateLink를 구현하여 액세스해야 하는 각 VPC 서비스에 대한 인터페이스 엔드포인트를 생성합니다.",
            "VPC 간 트래픽을 라우팅하기 위해 Transit Gateway를 설정하고, 겹치는 CIDR 블록을 관리하기 위해 라우팅 테이블을 활용합니다."
        ],
        "Explanation": "AWS PrivateLink를 사용하면 VPC의 서비스에 대해 공용 인터넷에 노출되지 않고 개인적으로 액세스할 수 있어 IP 중복 문제를 관리할 수 있습니다. Transit Gateway를 설정하면 여러 VPC 간의 트래픽을 라우팅하면서 겹치는 CIDR 범위를 효과적으로 처리하기 위한 특정 라우팅 테이블 구성을 허용합니다.",
        "Other Options": [
            "NAT Gateway를 사용하는 것은 VPC 간의 겹치는 IP 주소를 관리하는 데 효과적이지 않습니다. NAT Gateway는 아웃바운드 인터넷 트래픽에 대한 IP 주소만 변환하며 VPC 간 통신 솔루션을 제공하지 않습니다.",
            "VPC 피어링은 겹치는 CIDR 블록을 지원하지 않으며, 피어링 연결이 제대로 작동하려면 고유한 IP 범위가 필요하므로 이 옵션은 시나리오에 적합하지 않습니다.",
            "VPN 연결을 설정하는 것은 중복 문제를 직접적으로 해결하지 않으며, 올바르게 작동하려면 고유한 IP 범위가 필요하고 IP 중복의 핵심 문제를 해결하지 않으면서 불필요한 복잡성을 추가할 수 있습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 회사가 여러 AWS 계정에서 보안 태세를 강화하기 위해 네트워크 감사 전략을 구현하고 있습니다. 이들은 AWS Firewall Manager, 보안 그룹 및 네트워크 ACL을 활용하여 보안 정책을 일관되게 관리하고 시행하고 있습니다. 보안 팀은 이러한 네트워크 구성에 대한 모든 변경 사항이 준수 및 거버넌스 목적을 위해 기록되고 모니터링되도록 해야 합니다.",
        "Question": "보안 팀이 이러한 AWS 서비스 전반에 걸쳐 포괄적인 네트워크 감사 전략을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Shield Advanced를 구현하여 DDoS 공격으로부터 보호하고 AWS IAM을 사용하여 접근 변경 사항을 기록합니다.",
            "2": "AWS CloudTrail을 활용하여 네트워크 구성과 관련된 API 호출을 모니터링하고 이벤트 알림을 구성합니다.",
            "3": "AWS Firewall Manager를 설정하여 보안 정책을 시행하고 AWS Systems Manager를 사용하여 상세한 변경 추적을 수행합니다.",
            "4": "각 계정의 보안 그룹 및 네트워크 ACL에 대해 AWS Config 규칙을 활성화하고 S3 버킷에 로그를 집계합니다."
        },
        "Correct Answer": "AWS CloudTrail을 활용하여 네트워크 구성과 관련된 API 호출을 모니터링하고 이벤트 알림을 구성합니다.",
        "Explanation": "AWS CloudTrail은 AWS 환경 내에서 이루어진 API 호출의 상세 기록을 제공하며, 보안 그룹 및 네트워크 ACL의 변경 사항을 포함합니다. 이를 통해 보안 팀은 구성을 효과적으로 모니터링하고 감사할 수 있으며, 준수 및 거버넌스를 보장합니다. 이벤트 알림을 구성하면 변경 사항에 신속하게 대응할 수 있는 능력이 더욱 향상됩니다.",
        "Other Options": [
            "AWS Config 규칙을 보안 그룹 및 네트워크 ACL에 활성화하면 일부 수준의 모니터링이 가능하지만, 이러한 서비스에 대해 이루어진 모든 API 호출을 포착하지 못해 감사 기능이 제한됩니다.",
            "AWS Firewall Manager를 설정하면 보안 정책을 시행하는 데 도움이 되지만, 자체적으로 포괄적인 로깅이나 변경 추적을 제공하지 않아 완전한 감사 전략에는 부족합니다.",
            "AWS Shield Advanced를 구현하는 것은 주로 DDoS 보호에 초점을 맞추고 있으며, 네트워크 구성 감사나 접근 변경 기록의 필요성을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "다국적 기업이 다양한 부서에서 사용하는 여러 AWS 계정 간의 네트워크 연결성을 강화하고자 합니다. 이 회사는 모든 계정 간에 자원을 안전하고 효율적으로 공유할 수 있도록 하기를 원하며, 여러 VPC 피어링 연결을 관리하는 복잡성을 피하고자 합니다.",
        "Question": "회사가 여러 AWS 계정 간의 원활한 네트워킹 및 자원 공유를 촉진하기 위해 어떤 AWS 서비스나 기능을 사용해야 합니까?",
        "Options": {
            "1": "각 계정에 대해 VPC 피어링 연결을 설정하여 VPC 간의 직접 통신 및 자원 공유를 허용합니다.",
            "2": "AWS PrivateLink를 활용하여 VPC 엔드포인트 간의 개인 연결을 생성하고 계정 간에 자원을 공유합니다.",
            "3": "AWS Transit Gateway를 구현하여 여러 VPC 간의 연결성을 관리하고 자원 공유를 촉진합니다.",
            "4": "AWS Direct Connect를 배포하여 온프레미스 네트워크에서 각 AWS 계정으로의 전용 네트워크 연결을 설정합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 여러 VPC 간의 연결성을 관리하고 자원 공유를 촉진합니다.",
        "Explanation": "AWS Transit Gateway는 서로 다른 AWS 계정 간의 여러 VPC를 연결하는 과정을 단순화하여 연결성과 자원 공유를 관리하는 중앙 허브 역할을 하며, 여러 피어링 연결의 복잡성을 제거합니다.",
        "Other Options": [
            "AWS PrivateLink는 VPC에 호스팅된 서비스에 대한 안전한 접근을 위해 설계되었지만, Transit Gateway처럼 여러 VPC를 계정 간에 연결하는 확장 가능한 솔루션을 제공하지 않습니다.",
            "각 계정에 대해 VPC 피어링 연결을 설정하면 연결의 복잡한 메쉬가 형성되어 계정과 VPC의 수가 증가함에 따라 관리하기 어려워져 Transit Gateway를 사용하는 것보다 비효율적입니다.",
            "AWS Direct Connect를 배포하는 것은 주로 온프레미스 데이터 센터와 AWS 간의 전용 연결을 설정하는 데 초점을 맞추고 있지만, 여러 AWS 계정 간의 클라우드 내 연결성과 자원 공유 요구를 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 네트워크 엔지니어가 다양한 트래픽 부하를 처리하는 웹 애플리케이션을 제공하는 Amazon VPC의 성능을 최적화하는 임무를 맡고 있습니다. 엔지니어는 패킷 크기를 분석하고 라우팅 효율성을 보장하고자 합니다.",
        "Question": "이 시나리오에서 네트워크 성능 메트릭 및 도달 가능성 제약에 관한 다음 진술 중 어떤 것이 사실입니까? (두 가지 선택)",
        "Options": {
            "1": "패킷 크기는 VPC에서 점보 프레임을 사용하여 MTU 한계를 초과하여 증가시킬 수 있습니다.",
            "2": "VPC에서의 라우트 전파는 네트워크 변경이 발생할 때 라우트 테이블을 자동으로 업데이트할 수 있습니다.",
            "3": "Amazon VPC의 최대 전송 단위(MTU)는 1500바이트이며, 패킷 크기를 분석할 때 고려해야 합니다.",
            "4": "Amazon CloudWatch를 활용하면 패킷 크기를 모니터링하고 잠재적인 병목 현상을 식별하는 데 도움이 됩니다.",
            "5": "패킷이 MTU를 초과하면 AWS에 의해 자동으로 분할되며 성능에 영향을 미치지 않습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon CloudWatch를 활용하면 패킷 크기를 모니터링하고 잠재적인 병목 현상을 식별하는 데 도움이 됩니다.",
            "Amazon VPC의 최대 전송 단위(MTU)는 1500바이트이며, 패킷 크기를 분석할 때 고려해야 합니다."
        ],
        "Explanation": "Amazon CloudWatch를 활용하면 패킷 크기를 포함한 네트워크 성능 메트릭을 모니터링하고 분석하는 데 필요한 도구를 제공합니다. 또한 MTU를 이해하는 것은 패킷이 분할 없이 전송될 수 있는 최대 크기를 정의하므로 전체 성능에 영향을 미칩니다.",
        "Other Options": [
            "이 옵션은 잘못된 것입니다. AWS는 MTU를 초과하는 패킷을 자동으로 분할하지 않으며, MTU보다 큰 패킷은 애플리케이션이 분할을 처리하지 않는 한 드롭됩니다.",
            "이 옵션은 잘못된 것입니다. 라우트 전파는 라우트 테이블을 자동으로 업데이트하지 않으며, 라우팅 환경의 변경을 반영하기 위해 특정 구성이 필요합니다.",
            "이 옵션은 잘못된 것입니다. 점보 프레임은 Amazon VPC에서 지원되지 않으며, 최대 MTU는 표준 VPC 설정 외부에서 특정 구성이 적용되지 않는 한 1500바이트로 유지됩니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 네트워크 아키텍처를 확장하고 있으며, 서로 다른 AWS 리전에 위치한 여러 Amazon VPC를 연결해야 합니다. 네트워크 엔지니어는 복잡성을 최소화하고 확장성을 극대화하면서 이를 달성하기 위한 최선의 접근 방식을 평가하고 있습니다.",
        "Question": "엔지니어가 리전 간 VPC를 효과적으로 연결하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "각 VPC에 대해 중앙 온프레미스 네트워크와 VPN 연결을 구성합니다.",
            "2": "트랜짓 게이트웨이를 사용하여 허브 앤 스포크 모델로 모든 VPC를 연결합니다.",
            "3": "각 VPC 쌍 간에 VPC 피어링 연결을 설정합니다.",
            "4": "각 VPC에 대해 AWS Direct Connect 연결을 배포합니다."
        },
        "Correct Answer": "트랜짓 게이트웨이를 사용하여 허브 앤 스포크 모델로 모든 VPC를 연결합니다.",
        "Explanation": "트랜짓 게이트웨이는 여러 VPC의 중앙 집중식 관리를 가능하게 하며, 특히 다중 리전 설정에서 허브 앤 스포크 모델을 사용하여 VPC 간의 연결을 단순화할 수 있습니다. 이 접근 방식은 여러 피어링 연결을 관리하는 복잡성을 줄여줍니다.",
        "Other Options": [
            "각 VPC 쌍 간에 VPC 피어링 연결을 설정하면 VPC 수가 증가함에 따라 연결 수가 많아져 확장성이 떨어지고 관리가 더 어려워질 수 있습니다.",
            "각 VPC에 대해 중앙 온프레미스 네트워크와 VPN 연결을 구성하는 것은 VPC 간 통신에 비효율적이며, 주로 온프레미스 네트워크를 AWS에 연결하기 위해 설계되었기 때문에 지연이 발생할 수 있습니다.",
            "각 VPC에 대해 AWS Direct Connect 연결을 배포하는 것은 리전 간 VPC를 연결하는 데 적합한 솔루션이 아니며, Direct Connect는 주로 온프레미스에서 AWS로의 전용 네트워크 연결을 설정하기 위해 의도되었습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 기업이 온프레미스 네트워크와 AWS VPC 간에 사이트 간 VPN을 구현하고 있습니다. 회사는 데이터가 전송 중에 암호화되고 피크 부하 시간 동안 높은 성능을 유지하는 솔루션이 필요합니다.",
        "Question": "다음 VPN 구성 중 사이트 간 연결의 보안 및 성능 가속 요구 사항을 가장 잘 충족하는 것은 무엇입니까?",
        "Options": {
            "1": "정적 라우팅 구성을 사용하여 AWS VPN 가속을 활성화합니다.",
            "2": "여러 VPN 첨부와 동적 라우팅을 갖춘 AWS 트랜짓 게이트웨이를 배포합니다.",
            "3": "AWS Client VPN을 사용하여 분할 터널을 활성화하여 VPN 연결을 설정합니다.",
            "4": "보안을 위해 VPN 장애 조치를 갖춘 Direct Connect 연결을 구성합니다."
        },
        "Correct Answer": "여러 VPN 첨부와 동적 라우팅을 갖춘 AWS 트랜짓 게이트웨이를 배포합니다.",
        "Explanation": "AWS 트랜짓 게이트웨이를 사용하면 여러 VPN 연결과 동적 라우팅이 가능하여 성능과 확장성을 모두 향상시킵니다. 이는 증가된 트래픽 부하를 더 잘 처리하고 여러 연결을 효율적으로 관리하면서 데이터가 전송 중에 암호화되도록 보장합니다.",
        "Other Options": [
            "정적 라우팅 구성을 사용하여 AWS VPN 가속을 활성화하면 성능이 향상될 수 있지만, 여러 연결에 필요한 유연성과 확장성을 제공하지 않으며 라우팅 옵션을 제한할 수 있습니다.",
            "분할 터널이 활성화된 AWS Client VPN은 사이트 간 연결보다는 원격 액세스 VPN에 더 적합하며, 기업 수준 솔루션에 필요한 높은 성능 요구 사항을 충족하지 못할 수 있습니다.",
            "VPN 장애 조치를 갖춘 Direct Connect 연결을 구성하면 보안이 강화되지만, 주로 전용 연결에 초점을 맞추고 있어 여러 VPN 연결 및 동적 라우팅 기능의 필요성을 해결하지 못합니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 다국적 기업이 AWS Organizations를 사용하여 여러 계정을 관리하고 있습니다. 각 계정은 자체 Amazon VPC를 가지고 있으며, 회사는 공유 온프레미스 데이터 센터에 대한 중앙 집중식 연결을 달성해야 합니다. 회사는 모든 VPC가 서로 통신할 수 있도록 하면서 보안과 격리를 유지하고자 합니다. 또한, AWS Resource Access Manager (AWS RAM)를 사용하여 특정 리소스를 계정 간에 공유할 계획입니다. 이 아키텍처를 구현하기 위한 가장 효과적인 솔루션은 무엇입니까?",
        "Question": "다음 옵션 중 보안과 격리를 보장하면서 여러 AWS 계정 간에 최상의 중앙 집중식 연결 및 리소스 공유를 제공하는 것은 무엇입니까?",
        "Options": {
            "1": "각 VPC에 AWS PrivateLink를 배포하고 AWS RAM을 사용하여 계정 간 PrivateLink 엔드포인트를 공유합니다.",
            "2": "AWS Organizations에서 다중 계정 트랜짓 게이트웨이를 생성하고 각 VPC를 트랜짓 게이트웨이에 연결하여 중앙 집중식 라우팅을 수행합니다.",
            "3": "온프레미스 데이터 센터에 AWS Direct Connect 연결을 구현하고 각 VPC를 Direct Connect 게이트웨이에 VPN 터널로 연결합니다.",
            "4": "계정 간 각 VPC 간에 VPC 피어링 연결을 설정하고 통신을 허용하도록 라우팅 테이블을 구성합니다."
        },
        "Correct Answer": "AWS Organizations에서 다중 계정 트랜짓 게이트웨이를 생성하고 각 VPC를 트랜짓 게이트웨이에 연결하여 중앙 집중식 라우팅을 수행합니다.",
        "Explanation": "다중 계정 트랜짓 게이트웨이를 사용하면 서로 다른 AWS 계정 간의 여러 VPC에 대한 중앙 집중식 라우팅 및 관리를 가능하게 합니다. 이는 네트워크 아키텍처를 단순화하고 VPC 간의 격리를 유지하면서 온프레미스 데이터 센터에 대한 원활한 연결을 제공합니다.",
        "Other Options": [
            "VPC 피어링 연결을 설정하면 경로의 수동 구성 및 관리가 필요하며, 계정과 VPC 수가 증가함에 따라 복잡해질 수 있습니다. 이 옵션은 중앙 집중식 관리 기능을 제공하지 않아 비효율적입니다.",
            "AWS Direct Connect와 VPN 터널을 구현하면 불필요한 복잡성이 추가되며 중앙 집중식 라우팅 솔루션을 제공하지 않습니다. 또한 트랜짓 게이트웨이를 사용하는 것에 비해 여러 계정 및 VPC와 잘 확장되지 않을 수 있습니다.",
            "AWS PrivateLink를 배포하는 것은 VPC에서 AWS 서비스를 안전하게 액세스하는 데 주로 사용되지만, VPC 간의 직접 통신을 촉진하거나 여러 계정에 필요한 중앙 집중식 라우팅을 제공하지 않습니다. 이 옵션은 요구 사항에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사가 온프레미스 데이터 센터와 AWS 간에 Direct Connect 링크를 설정할 계획입니다. 그들은 안전한 BGP 세션을 보장하는 설정이 필요하며, 광섬유 연결을 위한 적절한 하드웨어와 구성을 선택해야 합니다. 데이터 센터는 1 Gbps 이더넷 연결을 위해 1000BASE-LX를 사용하고, 10Gbps 연결을 위해 10GBASE-LR을 사용하며, 802.1Q를 통해 VLAN 태깅을 보장합니다. 네트워크 엔지니어는 추가 보안을 위해 BGP MD5 인증 구현도 고려하고 있습니다.",
        "Question": "네트워크 엔지니어가 Direct Connect 연결을 위한 안전하고 효율적인 라우팅 설정을 보장하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "10Gbps 연결에 대해서만 802.1Q를 선택하고 1Gbps에는 다른 VLAN 태깅을 사용합니다.",
            "2": "세션 관리 오버헤드를 피하기 위해 BGP 대신 정적 라우팅을 구현합니다.",
            "3": "BGP 세션을 보호하기 위해 BGP MD5 인증을 구성합니다.",
            "4": "속도 요구 사항에 관계없이 모든 연결에 대해 1000BASE-LX를 사용합니다."
        },
        "Correct Answer": "BGP 세션을 보호하기 위해 BGP MD5 인증을 구성합니다.",
        "Explanation": "BGP MD5 인증을 구성하는 것은 무단 접근으로부터 BGP 세션을 보호하고 라우트 업데이트가 합법적인 출처에서 오는지 확인하는 데 필수적입니다. 이는 라우트 하이재킹과 같은 잠재적인 공격을 방지합니다.",
        "Other Options": [
            "모든 연결에 대해 1000BASE-LX를 사용하는 것은 최적이 아닐 수 있습니다. 이는 1 Gbps 이더넷을 위해 특별히 설계되었으며, 10 Gbps의 경우 더 나은 성능과 호환성을 위해 10GBASE-LR을 사용해야 합니다.",
            "BGP 대신 정적 라우팅을 구현하면 BGP의 동적 특성과 자동 라우트 업데이트 및 로드 밸런싱과 같은 이점을 제거하게 되며, 이는 탄력적인 네트워크 설정에 필수적입니다.",
            "10Gbps 연결에 대해서만 802.1Q를 선택하는 것은 잘못된 것으로, VLAN 태깅은 1Gbps 및 10Gbps 연결 모두에 일관되게 적용되어야 하며, 이는 네트워크 전반에 걸쳐 적절한 세분화 및 트래픽 관리를 보장합니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "네트워크 아키텍트가 마이크로서비스 기반 애플리케이션을 지원하기 위해 고가용성 및 보안이 뛰어난 다중 VPC 아키텍처를 설계하는 임무를 맡았습니다. 애플리케이션 구성 요소는 공용 인터넷에 트래픽을 노출하지 않고 서로 다른 VPC 간에 통신해야 합니다. 아키텍트는 모든 VPC가 필요한 VPC 간 트래픽을 제외하고 서로 격리된 상태를 유지하면서 이 연결성을 구현하기 위해 AWS 서비스를 사용하는 것을 고려하고 있습니다.",
        "Question": "아키텍트가 필요한 네트워크 연결성과 보안을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "각 VPC 쌍 간에 VPC 피어링 연결을 설정합니다. 모든 VPC 간의 통신을 허용하도록 적절한 라우트 테이블이 업데이트되었는지 확인합니다.",
            "2": "각 VPC에 AWS PrivateLink 엔드포인트를 배포하고 VPC 간에 통신해야 하는 서비스에 대한 인터페이스 엔드포인트를 생성합니다. 보안 그룹을 사용하여 엔드포인트 간의 트래픽을 제어합니다.",
            "3": "전송 게이트웨이를 생성하고 모든 VPC를 여기에 연결합니다. VPC 간의 트래픽을 허용하도록 라우트 테이블을 구성하고 효율적인 라우팅을 위해 라우트 전파를 활성화합니다.",
            "4": "온프레미스 네트워크를 각 VPC에 연결하기 위해 Direct Connect 연결을 활용하고, VPC 간 통신을 위해 VPN 연결을 사용하며, 트래픽 모니터링을 위해 VPC 흐름 로그를 활성화합니다."
        },
        "Correct Answer": "전송 게이트웨이를 생성하고 모든 VPC를 여기에 연결합니다. VPC 간의 트래픽을 허용하도록 라우트 테이블을 구성하고 효율적인 라우팅을 위해 라우트 전파를 활성화합니다.",
        "Explanation": "전송 게이트웨이를 사용하는 것은 여러 VPC 간의 네트워크 연결성을 관리하는 가장 효율적인 방법입니다. 이는 라우트 및 트래픽 흐름의 중앙 집중식 관리를 가능하게 하여 아키텍처를 단순화하고 트래픽을 AWS 네트워크 내에 유지함으로써 보안을 향상시킵니다. 또한 많은 수의 VPC 연결을 지원하며 애플리케이션이 성장함에 따라 확장성을 제공합니다.",
        "Other Options": [
            "VPC 피어링은 두 VPC를 연결하는 데 적합하지만 VPC 수가 증가함에 따라 복잡해지고 관리하기 어려워질 수 있습니다. 각 VPC 피어링 연결은 수동으로 라우트 테이블 업데이트가 필요하며, 이는 잘못된 구성 및 관리 오버헤드 증가로 이어질 수 있습니다.",
            "AWS PrivateLink는 VPC 간 서비스에 대한 안전한 접근을 위해 설계되었지만, 일반적인 VPC 간 통신보다는 AWS 서비스나 제3자 서비스에 접근하는 데 더 적합합니다. 여러 VPC 간의 통신을 위한 필수 라우팅 기능을 제공하지 않습니다.",
            "Direct Connect는 주로 온프레미스 네트워크를 AWS에 연결하는 데 사용됩니다. VPN을 통해 VPC 간 통신을 촉진할 수 있지만, 여러 VPC에 대해 전송 게이트웨이를 사용하는 것과 비교할 때 가장 효율적이거나 확장 가능한 솔루션은 아닙니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 금융 서비스 회사가 Amazon VPC, Elastic Load Balancing 및 Amazon CloudFront를 포함한 다양한 AWS 서비스를 활용하여 인프라를 관리하고 있습니다. 규제 요구 사항을 준수하고 보안 태세를 강화하기 위해 회사는 이러한 서비스에 대한 로깅을 구현해야 합니다. 그들은 모니터링 및 감사 목적으로 상세한 로그를 캡처하고자 합니다. 솔루션은 비용 효율적이어야 하며 애플리케이션 성능에 영향을 미치지 않아야 합니다.",
        "Question": "회사의 요구 사항을 충족하기 위해 어떤 로깅 옵션을 활성화해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "EC2 인스턴스 간의 트래픽 정보를 캡처하기 위해 VPC 흐름 로그를 활성화합니다.",
            "2": "AWS 계정 내에서 이루어진 API 호출을 캡처하기 위해 CloudTrail 로깅을 활성화합니다.",
            "3": "로드 밸런서에 대한 요청을 기록하기 위해 ELB 액세스 로그를 구성합니다.",
            "4": "Amazon S3에 저장된 데이터에 대한 접근을 모니터링하기 위해 S3 버킷 로깅을 활성화합니다.",
            "5": "CloudFront 배포에 대한 요청을 추적하기 위해 CloudFront 액세스 로그를 활성화합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "EC2 인스턴스 간의 트래픽 정보를 캡처하기 위해 VPC 흐름 로그를 활성화합니다.",
            "CloudFront 배포에 대한 요청을 추적하기 위해 CloudFront 액세스 로그를 활성화합니다."
        ],
        "Explanation": "VPC 흐름 로그를 활성화하면 회사는 VPC 내의 네트워크 인터페이스 간에 오가는 IP 트래픽에 대한 정보를 캡처할 수 있으며, 이는 네트워크 트래픽 모니터링 및 규정 준수에 중요합니다. CloudFront 액세스 로그를 활성화하면 CloudFront 배포에 대한 요청의 상세한 기록을 제공하여 보안 분석 및 성능 모니터링에 도움이 됩니다.",
        "Other Options": [
            "ELB 액세스 로그를 구성하는 것은 유용하지만 VPC 또는 CloudFront 로깅 요구 사항과 직접적인 관련이 없습니다. 회사는 현재 서비스에 대한 로깅 옵션을 구체적으로 요청했으며, ELB 로그는 가치가 있지만 여기서 요구되는 옵션 중 하나는 아닙니다.",
            "CloudTrail 로깅을 활성화하는 것은 좋은 관행이지만, 이는 AWS 환경 내에서 이루어진 API 호출 및 변경 사항을 캡처하며, 문제의 서비스에 대한 트래픽 또는 접근 로그와는 관련이 없습니다. 이는 회사의 트래픽 모니터링 초점과 일치하지 않습니다.",
            "S3 버킷 로깅을 활성화하는 것은 상황에서 지정된 서비스와 관련이 없습니다. 회사는 VPC, ELB 및 CloudFront 로깅에만 관심이 있으므로 이 옵션은 그들의 로깅 전략과 관련이 없습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "조직이 AWS 내 EC2 인스턴스에서 호스팅되는 고처리량 애플리케이션의 네트워크 성능을 평가하고 있습니다. 이 애플리케이션은 낮은 지연 시간과 높은 대역폭을 보장하기 위해 최적의 네트워크 성능이 필요합니다. 조직은 성능을 극대화하기 위해 Enhanced Networking 기능을 활용하는 데 특히 관심이 있습니다. 그들은 EC2 인스턴스에 사용할 수 있는 다양한 네트워크 인터페이스의 기능을 이해하고자 합니다.",
        "Question": "다음 중 Enhanced Networking이 EC2 인스턴스에서 제공하는 네트워크 성능 기능을 정확하게 설명하는 문장은 무엇입니까?",
        "Options": {
            "1": "플레이스먼트 그룹 외부의 EC2에서 EC2로의 트래픽 최대 속도는 10 Gbps입니다.",
            "2": "Intel 82599 VF 기반 인터페이스는 플레이스먼트 그룹에서 사용할 때 최대 20 Gbps를 제공할 수 있습니다.",
            "3": "ENA를 사용하는 Enhanced Networking이 있는 EC2 인스턴스는 플레이스먼트 그룹 설정에서 최대 20 Gbps를 달성할 수 있습니다.",
            "4": "Elastic Network Adapter (ENA)는 모든 구성의 EC2 인스턴스에 대해 최대 10 Gbps를 지원합니다."
        },
        "Correct Answer": "ENA를 사용하는 Enhanced Networking이 있는 EC2 인스턴스는 플레이스먼트 그룹 설정에서 최대 20 Gbps를 달성할 수 있습니다.",
        "Explanation": "Enhanced Networking, 특히 Elastic Network Adapter (ENA)를 사용하면 EC2 인스턴스가 플레이스먼트 그룹 내에서 구성될 때 최대 20 Gbps의 네트워크 속도를 달성할 수 있어 고처리량과 낮은 지연 시간을 최적화합니다.",
        "Other Options": [
            "Elastic Network Adapter (ENA)는 모든 구성의 EC2 인스턴스에 대해 최대 10 Gbps를 지원합니다. 이는 ENA가 플레이스먼트 그룹에서 최대 20 Gbps를 지원할 수 있으므로 잘못된 정보입니다.",
            "Intel 82599 VF 기반 인터페이스는 플레이스먼트 그룹에서 사용할 때 최대 20 Gbps를 제공할 수 있습니다. 이 문장은 부정확하며, 해당 인터페이스는 플레이스먼트 그룹에서 최대 10 Gbps를 지원합니다.",
            "플레이스먼트 그룹 외부의 EC2에서 EC2로의 트래픽 최대 속도는 10 Gbps입니다. 이는 잘못된 정보로, 실제 최대 속도는 5 Gbps입니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "여러 AWS 리전 간 다양한 VPC 간의 안전하고 효율적인 통신을 보장하는 다중 계정 아키텍처를 AWS에서 설계하는 임무를 맡고 있습니다. 이 아키텍처는 동적 라우팅과 최적의 자원 활용도 가능해야 합니다.",
        "Question": "다양한 AWS 계정과 리전 간 여러 VPC를 연결하면서 낮은 지연 시간과 높은 가용성을 보장하는 최적의 라우팅 전략은 무엇입니까?",
        "Options": {
            "1": "각 계정의 VPC 간에 AWS Site-to-Site VPN을 배포합니다.",
            "2": "AWS Transit Gateway를 구현하고 리전 간 피어링 및 라우트 전파를 설정합니다.",
            "3": "다양한 리전의 모든 VPC 간에 VPC 피어링 연결을 설정합니다.",
            "4": "AWS Direct Connect를 사용하여 리전 간 연결을 위한 여러 가상 인터페이스를 설정합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하고 리전 간 피어링 및 라우트 전파를 설정합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 여러 VPC와 온프레미스 네트워크를 중앙 허브를 통해 연결하여 효율적인 라우팅을 촉진하고 리전 간 피어링을 가능하게 합니다. 이 설계는 복잡성을 줄이고 다양한 계정과 리전 간의 통신에서 낮은 지연 시간과 높은 가용성을 보장합니다.",
        "Other Options": [
            "VPC 피어링 연결은 두 VPC 간의 직접 연결이 필요하므로 제한적이며, 다양한 리전이나 계정 간에 여러 VPC를 연결할 때 잘 확장되지 않습니다.",
            "AWS Direct Connect는 AWS에 대한 전용 연결을 위해 주로 사용되며, 여러 VPC 간의 리전 간 연결을 위한 라우팅 전략이 아니므로 이 시나리오에 덜 적합합니다.",
            "AWS Site-to-Site VPN은 연결을 제공할 수 있지만 AWS Transit Gateway에 비해 더 높은 지연 시간과 관리 오버헤드를 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 회사가 온프레미스 인프라를 AWS 클라우드 환경으로 마이그레이션하고 있습니다. 네트워크 아키텍트는 새로운 클라우드 네트워크가 효율적이고 비용 효과적이며 잠재적 위험에 대한 복원력을 갖추도록 하면서 운영 오버헤드를 최소화해야 합니다. 이 솔루션은 안전한 연결을 제공하고 기존 온프레미스 리소스와 원활하게 통합되어야 합니다.",
        "Question": "네트워크 아키텍트가 안전하고 효율적이며 비용 효과적인 클라우드 네트워킹 솔루션을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "트래픽 관리를 위해 VPC 간에 Amazon VPC Peering 연결을 배포하고, 클라우드 리소스에 대한 DDoS 공격으로부터 보호하기 위해 AWS Shield를 구현합니다.",
            "2": "온프레미스에 대한 전용 연결을 위해 AWS Direct Connect를 구현하고, VPC와 온프레미스 간의 트래픽을 관리하기 위해 AWS Transit Gateway를 설정합니다.",
            "3": "온프레미스 리소스에 대한 안전한 연결을 위해 AWS Site-to-Site VPN 연결을 설정하고, 효율적인 DNS 관리를 위해 Amazon Route 53을 구현합니다.",
            "4": "온프레미스 네트워크에 대한 안전한 연결을 생성하기 위해 AWS VPN을 사용하고, 클라우드에서 호스팅되는 애플리케이션의 성능을 최적화하기 위해 AWS Global Accelerator를 활용합니다."
        },
        "Correct Answer": "온프레미스에 대한 전용 연결을 위해 AWS Direct Connect를 구현하고, VPC와 온프레미스 간의 트래픽을 관리하기 위해 AWS Transit Gateway를 설정합니다.",
        "Explanation": "AWS Direct Connect를 사용하면 전용 고속 연결을 제공하여 성능을 향상시키고 표준 인터넷 연결에 비해 데이터 전송 비용을 줄입니다. AWS Transit Gateway와 결합하면 여러 VPC 연결 및 온프레미스 리소스 관리를 단순화하여 네트워킹 아키텍처의 효율성과 위험 감소를 달성합니다.",
        "Other Options": [
            "AWS VPN은 안전한 옵션이지만, 특히 대량 데이터 전송의 경우 AWS Direct Connect와 동일한 수준의 성능과 비용 절감을 제공하지 않을 수 있습니다. AWS Global Accelerator는 애플리케이션 성능에 유익하지만 온프레미스 리소스에 대한 안전한 연결을 효과적으로 해결하지 않습니다.",
            "Amazon VPC Peering은 VPC를 연결하는 데 유용하지만 온프레미스 인프라에 대한 전용 연결을 제공하지 않습니다. AWS Shield는 DDoS 위협 완화에 도움이 될 수 있지만 네트워킹 설정의 효율성이나 전체 비용 관리에 직접 기여하지 않습니다.",
            "AWS Site-to-Site VPN은 안전한 연결을 위한 유효한 솔루션이지만, 대량 데이터 전송의 성능 및 비용 측면에서 AWS Direct Connect만큼 최적이 아닐 수 있습니다. Amazon Route 53은 훌륭한 DNS 관리를 제공하지만 네트워크의 안전한 연결 및 효율성을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "한 회사가 온프레미스 데이터 센터와 여러 개의 Amazon VPC를 갖춘 하이브리드 클라우드 환경을 운영하고 있습니다. 네트워크 팀은 온프레미스 네트워크와 VPC 간의 원활한 통신을 보장하면서 낮은 지연 시간과 높은 가용성을 유지하는 임무를 맡고 있습니다. 그들은 네트워크 구성의 변화에 적응할 수 있는 동적 라우팅을 허용하는 솔루션을 구현해야 합니다.",
        "Question": "네트워크 팀이 이 요구 사항을 달성하기 위해 어떤 AWS 서비스를 구현해야 합니까?",
        "Options": {
            "1": "VPC Peering",
            "2": "AWS Transit Gateway",
            "3": "AWS VPN CloudHub",
            "4": "AWS Direct Connect"
        },
        "Correct Answer": "AWS Transit Gateway",
        "Explanation": "AWS Transit Gateway는 여러 VPC와 온프레미스 네트워크 간의 동적 라우팅을 용이하게 하는 중앙 집중식 허브를 제공합니다. 이는 라우팅 및 연결 관리의 단순화를 가능하게 하여 높은 가용성과 낮은 지연 시간이 요구되는 하이브리드 클라우드 환경에 이상적입니다.",
        "Other Options": [
            "AWS Direct Connect는 AWS에 직접 연결할 수 있는 전용 네트워크 연결입니다. 강력한 연결을 제공할 수 있지만, 여러 VPC와 온프레미스 네트워크 간의 동적 라우팅을 AWS Transit Gateway만큼 효율적으로 관리하지는 않습니다.",
            "VPC Peering은 두 VPC 간의 직접 통신을 허용하지만, 여러 연결에 대해 잘 확장되지 않으며 하이브리드 클라우드 환경에 필요한 중앙 집중식 라우팅 기능이 부족합니다.",
            "AWS VPN CloudHub는 원격 사이트와 VPC 간의 안전한 통신을 허용하지만, 확장성에 제한이 있으며 AWS Transit Gateway와 같은 수준의 중앙 집중식 라우팅 및 관리를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 금융 서비스 회사가 애플리케이션 인프라를 AWS로 마이그레이션하고 있습니다. 회사는 AWS 리소스에서 발생하는 모든 아웃바운드 인터넷 트래픽이 규제 요구 사항을 준수하도록 모니터링되고 필터링되어야 합니다. 회사의 보안 팀은 안전한 아웃바운드 트래픽 흐름을 구현하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "보안 팀이 AWS에서 안전한 아웃바운드 트래픽 흐름을 보장하기 위해 어떤 서비스 조합을 구현해야 합니까? (두 개 선택)",
        "Options": {
            "1": "정의된 규칙에 따라 아웃바운드 트래픽을 필터링하기 위해 AWS Network Firewall을 배포합니다.",
            "2": "준수 목적을 위해 모든 아웃바운드 트래픽을 기록하기 위해 AWS Lambda를 사용합니다.",
            "3": "아웃바운드 인터넷 액세스를 허용하면서 인바운드 연결을 차단하기 위해 AWS NAT Gateway를 설정합니다.",
            "4": "인터넷으로의 아웃바운드 트래픽을 관리하기 위해 AWS Gateway Load Balancer를 구현합니다.",
            "5": "아웃바운드 트래픽을 제어하고 필터링하기 위해 Amazon EC2를 사용하여 프록시 서버를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "정의된 규칙에 따라 아웃바운드 트래픽을 필터링하기 위해 AWS Network Firewall을 배포합니다.",
            "아웃바운드 인터넷 액세스를 허용하면서 인바운드 연결을 차단하기 위해 AWS NAT Gateway를 설정합니다."
        ],
        "Explanation": "AWS Network Firewall을 사용하면 회사가 아웃바운드 트래픽을 필터링하기 위한 특정 규칙을 정의할 수 있어 규제 기준을 준수할 수 있습니다. 또한 AWS NAT Gateway는 프라이빗 서브넷의 리소스에 대해 안전한 아웃바운드 인터넷 액세스를 가능하게 하면서 원치 않는 인바운드 트래픽을 차단하여 보안을 유지하는 데 중요합니다.",
        "Other Options": [
            "AWS Lambda는 실시간 트래픽 필터링을 위해 특별히 설계되지 않았으며, 이벤트를 기록할 수 있지만 아웃바운드 트래픽 흐름을 직접 제어하지는 않습니다.",
            "AWS Gateway Load Balancer는 주로 서드파티 가상 장비를 배포하고 확장하는 데 사용되며, 본질적으로 아웃바운드 트래픽 필터링이나 준수를 관리하지 않습니다.",
            "프록시 서버는 아웃바운드 트래픽을 제어하고 필터링할 수 있지만, 네이티브 AWS 서비스에 비해 추가적인 관리 및 유지 관리 오버헤드가 필요합니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 조직은 AWS 리소스에서 발생하는 모든 네트워크 로그를 수집하고 준수 감사에 사용할 수 있도록 해야 합니다. 로그는 실시간으로 전달되어야 하며, 이상 징후를 분석해야 합니다. 이 조직은 이미 Amazon Kinesis를 스트림 처리에 사용하고 있지만 로그 수집을 위해 다른 서비스와 통합해야 합니다. 최소한의 운영 오버헤드로 이 요구 사항을 달성하기 위한 최선의 접근 방식은 무엇입니까?",
        "Question": "준수 목적을 위해 네트워크 로그를 실시간으로 수집하면서 이를 보장하기 위해 어떤 방법을 추천합니까?",
        "Options": {
            "1": "VPC Flow Logs를 구성하여 로그를 Amazon Kinesis Data Stream으로 직접 스트리밍합니다.",
            "2": "AWS Lambda 함수를 구현하여 Amazon CloudWatch에서 Amazon S3로 로그를 푸시하여 장기 저장합니다.",
            "3": "AWS Direct Connect를 사용하여 로그를 중앙 집중식 로깅 서버로 라우팅하여 분석합니다.",
            "4": "Amazon CloudWatch Logs를 설정하여 로그를 캡처한 다음 Amazon Kinesis Data Firehose 배달 스트림으로 스트리밍합니다."
        },
        "Correct Answer": "VPC Flow Logs를 구성하여 로그를 Amazon Kinesis Data Stream으로 직접 스트리밍합니다.",
        "Explanation": "VPC Flow Logs를 구성하여 로그를 Amazon Kinesis Data Stream으로 직접 스트리밍하면 실시간 로그 전달이 가능하고 즉각적인 처리 및 분석이 가능하여 최소한의 운영 오버헤드로 준수 요구 사항을 충족할 수 있습니다.",
        "Other Options": [
            "Amazon CloudWatch Logs를 설정하여 로그를 캡처한 다음 Amazon Kinesis Data Firehose로 스트리밍하면 추가 구성 요소가 도입되어 VPC Flow Logs에서 직접 스트리밍하는 것에 비해 운영 오버헤드가 증가할 수 있습니다.",
            "AWS Direct Connect를 사용하여 로그를 중앙 집중식 로깅 서버로 라우팅하면 로그 수집 및 분석을 위한 AWS 네이티브 서비스를 활용하지 않게 되어 아키텍처가 복잡해지고 지연 시간이 증가할 수 있습니다.",
            "Amazon CloudWatch에서 Amazon S3로 로그를 푸시하기 위해 AWS Lambda 함수를 구현하면 실시간 통찰력을 제공하지 못할 수 있으며, Lambda는 로그 처리 및 저장에 지연을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "글로벌 전자상거래 회사가 여러 지역에 배포된 애플리케이션의 DNS 관리를 위해 AWS Route 53을 사용하고 있습니다. 이들은 성능 향상과 지연 시간 감소를 위해 사용자가 가장 가까운 지역 엔드포인트로 라우팅되도록 보장하고자 합니다. 회사는 여러 개의 AWS 계정을 보유하고 있으며, 각 계정마다 Route 53에 자체 호스팅 존이 있습니다. 회사의 주요 요구 사항은 사용자 경험을 최적화하기 위해 지연 기반 라우팅을 사용하는 것입니다.",
        "Question": "회사가 Route 53을 사용하여 여러 AWS 계정에서 지연 기반 라우팅을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "하나의 계정에서 Amazon Route 53에 단일 공개 호스팅 존을 생성하고 모든 지역 엔드포인트를 지연 기반 레코드로 추가합니다.",
            "2": "각 AWS 계정에 별도의 공개 호스팅 존을 생성하고 Route 53 Resolver를 사용하여 계정 간 DNS 쿼리를 전달합니다.",
            "3": "하나의 AWS 계정에 중앙 집중식 공개 호스팅 존을 설정하고 각 계정의 호스팅 존에 지연 기반 라우팅으로 서브도메인을 위임합니다.",
            "4": "각 AWS 계정에 별도의 공개 호스팅 존을 생성하고 각 엔드포인트에 대한 상태 검사를 구성하여 가용성에 따라 트래픽을 라우팅합니다."
        },
        "Correct Answer": "하나의 계정에서 Amazon Route 53에 단일 공개 호스팅 존을 생성하고 모든 지역 엔드포인트를 지연 기반 레코드로 추가합니다.",
        "Explanation": "하나의 AWS 계정에 단일 공개 호스팅 존을 생성하여 지연 기반 라우팅을 구현하면 회사가 DNS 레코드를 효율적으로 관리하고 Route 53의 라우팅 정책을 효과적으로 활용할 수 있습니다. 이 설정은 관리 오버헤드를 최소화하고 모든 엔드포인트를 하나의 존 아래에 집계하여 라우팅 성능을 극대화합니다.",
        "Other Options": [
            "각 AWS 계정에 별도의 공개 호스팅 존을 생성하면 관리가 복잡해지고 지연 기반 라우팅 기능을 효과적으로 활용하지 못합니다. 이는 중앙 집중식 호스팅 존에서 가장 잘 활용됩니다.",
            "Route 53 Resolver를 사용하여 계정 간 DNS 쿼리를 전달하면 불필요한 복잡성이 추가되며 여러 엔드포인트 간의 지연 기반 라우팅의 이점을 제공하지 않습니다.",
            "중앙 집중식 공개 호스팅 존을 설정하고 서브도메인을 위임하는 것은 가능하지만 DNS 관리가 복잡해지고 Route 53의 기본 지연 기반 라우팅 기능을 최대한 활용하지 못합니다. 이는 단일 호스팅 존에서 가장 잘 구현됩니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "회사는 Amazon CloudFront를 사용하여 S3 버킷에서 정적 콘텐츠를 제공합니다. 아키텍처는 오직 CloudFront만이 S3 버킷에 직접 접근할 수 있도록 요구합니다. 또한, 회사는 콘텐츠에 대한 접근을 제어하고 해당 URL의 만료 날짜를 설정하기 위해 서명된 URL을 구현하고자 합니다. 아키텍처의 보안은 매우 중요하며, 승인된 요청만 처리되도록 하기 위해 원본 요청에 공유 비밀 사용자 정의 헤더를 사용해야 합니다.",
        "Question": "회사가 이러한 요구 사항을 충족하기 위해 구현해야 할 구성 조합은 무엇입니까?",
        "Options": {
            "1": "CloudFront 원본 액세스 ID를 생성하고, S3 버킷 정책을 업데이트하여 해당 ID만 접근할 수 있도록 하며, 만료 날짜가 있는 서명된 URL을 구성합니다.",
            "2": "S3 버킷을 공개 접근으로 설정하고, 원본 액세스 ID 없이 CloudFront 배포를 생성하며, 만료 없는 URL 서명을 사용합니다.",
            "3": "CloudFront 원본 액세스 ID를 생성하고, S3 버킷에 대한 공개 접근을 허용하며, 만료 날짜가 없는 서명된 URL을 구성합니다.",
            "4": "Lambda@Edge 함수를 사용하여 요청을 수정하고, CloudFront 원본 액세스 ID를 생성하며, S3 버킷 정책을 설정하여 모든 사용자에게 접근을 허용합니다."
        },
        "Correct Answer": "CloudFront 원본 액세스 ID를 생성하고, S3 버킷 정책을 업데이트하여 해당 ID만 접근할 수 있도록 하며, 만료 날짜가 있는 서명된 URL을 구성합니다.",
        "Explanation": "이 옵션은 CloudFront 원본 액세스 ID를 사용하여 S3 버킷에 대한 접근을 제한하여 오직 CloudFront만 접근할 수 있도록 올바르게 구현합니다. 만료 날짜가 있는 서명된 URL을 구성하면 콘텐츠에 대한 접근을 제어하여 보안 계층을 추가합니다.",
        "Other Options": [
            "이 옵션은 S3 버킷에 대한 공개 접근을 허용하므로 오직 CloudFront만 접근해야 한다는 요구 사항과 모순됩니다. 또한, 서명된 URL에 만료를 구현하지 않으면 콘텐츠가 무단 접근에 노출됩니다.",
            "이 옵션은 S3 버킷에 대한 공개 접근을 허용하므로 보안 위험이 있습니다. 또한, 서명된 URL에 만료 날짜가 없으면 제어된 접근 요구 사항을 충족하지 않습니다.",
            "이 옵션은 S3 버킷에 대한 공개 접근을 허용하므로 보안 모델을 저해합니다. 또한, 만료 없는 서명된 URL은 콘텐츠에 대한 제어된 접근 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "회사는 안전한 VPN 연결을 사용하여 온프레미스 데이터 센터를 AWS VPC에 연결할 계획입니다. 네트워크 아키텍트는 전송 중인 데이터에 대한 캡슐화 및 암호화를 제공하는 적절한 터널링 프로토콜을 선택해야 합니다. 회사는 널리 지원되고 공용 인터넷에서 잘 작동할 수 있는 솔루션을 요구하며, 온프레미스 측에 대한 정적 IP 주소가 필요하지 않습니다.",
        "Question": "이 요구 사항에 대해 아키텍트가 선택해야 할 터널링 프로토콜은 무엇입니까?",
        "Options": {
            "1": "Layer 2 Tunneling Protocol (L2TP)",
            "2": "Secure Socket Tunneling Protocol (SSTP)",
            "3": "Generic Routing Encapsulation (GRE)",
            "4": "IPsec"
        },
        "Correct Answer": "IPsec",
        "Explanation": "IPsec은 캡슐화 및 암호화를 모두 제공하여 공용 인터넷을 통해 전송되는 데이터의 보안을 보장하므로 이 시나리오에 가장 적합한 선택입니다. 사이트 간 VPN에 널리 지원되며, 온프레미스 측에 정적 IP 주소를 요구하지 않고도 작동할 수 있어 원격 위치를 안전하게 연결하는 데 이상적입니다.",
        "Other Options": [
            "Generic Routing Encapsulation (GRE)는 캡슐화를 제공하지만 자체적으로 암호화를 제공하지 않습니다. 따라서 공용 인터넷을 통한 데이터 전송 보안 요구 사항을 충족하지 않습니다.",
            "Layer 2 Tunneling Protocol (L2TP)은 자체적으로 암호화를 제공하지 않으며 일반적으로 보안을 위해 IPsec이 필요합니다. 그러나 L2TP는 IPsec보다 안전한 VPN 구현에 덜 일반적으로 사용됩니다.",
            "Secure Socket Tunneling Protocol (SSTP)은 주로 원격 액세스 VPN에 사용되며 서버 측에 정적 IP 주소가 필요합니다. 이는 특히 공용 인터넷을 통한 사이트 간 연결에 적합하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "네트워크 아키텍트가 HTTP 및 TCP 트래픽에 대한 로드 밸런싱이 필요한 애플리케이션을 설계하고 있습니다. 아키텍트는 AWS 서비스를 활용하여 높은 가용성과 내결함성을 보장하고자 합니다. 이러한 요구 사항을 충족하기 위해 아키텍트가 선택해야 할 로드 밸런싱 솔루션은 무엇입니까?",
        "Question": "AWS에서 HTTP 및 TCP 트래픽을 효율적으로 관리하고 높은 가용성과 내결함성을 보장하기 위해 사용해야 할 로드 밸런싱 서비스는 무엇입니까?",
        "Options": {
            "1": "Classic Load Balancer (CLB)",
            "2": "Network Load Balancer (NLB)",
            "3": "Gateway Load Balancer (GWLB)",
            "4": "Application Load Balancer (ALB)"
        },
        "Correct Answer": "Application Load Balancer (ALB)",
        "Explanation": "Application Load Balancer (ALB)는 Layer 7에서 HTTP 및 HTTPS 트래픽을 처리하도록 설계되어 있으며, 고급 라우팅 기능과 WebSocket 연결 지원을 제공합니다. 이는 높은 가용성과 내결함성이 필요한 애플리케이션에 이상적이며, 콘텐츠 기반 라우팅도 허용합니다.",
        "Other Options": [
            "Network Load Balancer (NLB)는 Layer 4에서 작동하며 TCP 트래픽 처리를 최적화하여 극한의 성능과 정적 IP 주소가 필요한 시나리오에 적합하지만, 콘텐츠 기반 라우팅과 같은 Layer 7 기능이 부족합니다.",
            "Gateway Load Balancer (GWLB)는 방화벽 및 침입 탐지 시스템과 같은 가상 장치를 배포하고 관리하기 위해 특별히 설계되었으며, 일반 애플리케이션 트래픽의 로드 밸런싱에는 적합하지 않습니다.",
            "Classic Load Balancer (CLB)는 Layer 4와 Layer 7 모두에서 작동하지만 Application Load Balancer의 고급 기능과 유연성이 부족하여 현대 애플리케이션에는 덜 적합합니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며 하이브리드 DNS 아키텍처를 구축해야 합니다. 이 아키텍처는 여러 계정을 지원해야 하며, 내부 리소스가 VPC 간에 해석 가능하도록 하면서 특정 리소스에 대한 공용 액세스를 허용해야 합니다. 회사는 DNS 관리를 위해 Amazon Route 53을 활용하고자 합니다. 내부 DNS 쿼리가 올바르게 라우팅되고 공용 DNS 항목과 충돌이 없도록 해야 합니다.",
        "Question": "하이브리드 DNS 아키텍처를 구현하면서 여러 계정 간의 효율적인 관리를 보장하기 위해 다음 솔루션 중 어떤 것이 가장 적합합니까?",
        "Options": {
            "1": "각 VPC에 DNS 서버를 배포하고 이를 온프레미스 DNS 서버를 포워더로 사용하도록 구성합니다.",
            "2": "각 VPC에 Amazon Route 53 Resolver를 설정하고 계정 간 DNS 쿼리를 라우팅하기 위한 포워딩 규칙을 생성합니다.",
            "3": "각 VPC에 Route 53 Resolver 아웃바운드 엔드포인트를 구현하고 이를 온프레미스 DNS 서버로 DNS 요청을 포워딩하도록 구성합니다.",
            "4": "하나의 계정에 중앙 집중식 Route 53 프라이빗 호스티드 존을 생성하고 AWS Resource Access Manager (RAM)를 사용하여 다른 계정과 공유합니다."
        },
        "Correct Answer": "하나의 계정에 중앙 집중식 Route 53 프라이빗 호스티드 존을 생성하고 AWS Resource Access Manager (RAM)를 사용하여 다른 계정과 공유합니다.",
        "Explanation": "중앙 집중식 Route 53 프라이빗 호스티드 존을 생성하면 여러 계정 간의 DNS 레코드 관리를 효율적으로 수행할 수 있습니다. AWS Resource Access Manager (RAM)를 사용하여 프라이빗 호스티드 존을 다른 계정과 공유함으로써 모든 내부 리소스가 일관되게 해석 가능하도록 하여 중복이나 충돌을 방지할 수 있습니다.",
        "Other Options": [
            "각 VPC에 Route 53 Resolver를 설정하면 관리 오버헤드와 복잡성이 증가하며, 각 VPC는 DNS 포워딩 규칙에 대한 개별 관리가 필요하므로 중앙 집중식 접근 방식보다 비효율적입니다.",
            "각 VPC에 Route 53 Resolver 아웃바운드 엔드포인트를 구현하면 여러 엔드포인트를 관리해야 하며, 온프레미스 서버와의 DNS 해석을 복잡하게 만들어 통합된 DNS 아키텍처를 유지하기 어렵게 만듭니다.",
            "각 VPC에 DNS 서버를 배포하면 여러 DNS 서버를 유지 관리하는 데 불필요한 복잡성과 오버헤드가 발생하며, DNS 해석을 위한 AWS 관리 서비스를 활용하지 못합니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "한 회사가 온프레미스 리소스와 AWS 서비스 간의 데이터 전송을 위한 안전한 통신 솔루션을 구현하고 있습니다. 회사는 모든 전송 데이터가 암호화되어 무단 액세스를 방지하고 산업 표준을 준수해야 합니다.",
        "Question": "온프레미스 네트워크와 AWS 리소스 간의 전송 데이터를 보호하기 위해 어떤 암호화 방법을 사용해야 합니까?",
        "Options": {
            "1": "클라이언트와 서버 간의 HTTP 트래픽을 암호화하기 위해 SSL/TLS를 사용합니다.",
            "2": "안전한 데이터 전송을 위해 L2TP와 함께 VPN 연결을 활용합니다.",
            "3": "데이터 전송을 위한 안전한 터널을 설정하기 위해 IPsec을 구현합니다.",
            "4": "애플리케이션 간의 데이터 전송을 보호하기 위해 SSH 터널을 배포합니다."
        },
        "Correct Answer": "데이터 전송을 위한 안전한 터널을 설정하기 위해 IPsec을 구현합니다.",
        "Explanation": "IPsec(Internet Protocol Security)은 IP 통신을 보호하기 위해 통신 세션에서 각 IP 패킷을 인증하고 암호화하는 널리 사용되는 암호화 방법입니다. 이는 온프레미스 네트워크와 AWS 간의 데이터 전송을 위한 안전한 터널을 설정하는 데 적합하며, 준수 및 데이터 무결성을 보장합니다.",
        "Other Options": [
            "SSL/TLS는 주로 웹 트래픽을 보호하는 데 사용되며 IPsec과 같은 모든 유형의 IP 트래픽을 암호화하도록 특별히 설계되지 않았습니다. HTTP 통신에는 효과적이지만 모든 프로토콜에 대한 전송 데이터 암호화의 전체 범위를 포함하지 않습니다.",
            "SSH 터널은 일반적으로 셸 액세스를 보호하거나 애플리케이션 트래픽을 터널링하는 데 사용되지만, 모든 데이터 유형이나 사이트 간 통신을 위한 전체 터널을 설정하는 데 적합하지 않아 이 사용 사례에는 덜 이상적입니다.",
            "L2TP(레이어 2 터널링 프로토콜)는 VPN을 위해 IPsec과 함께 사용되는 경우가 많습니다. 그러나 L2TP만으로는 암호화를 제공하지 않으므로 IPsec을 추가하지 않으면 안전한 데이터 전송 요구 사항을 충족하지 못합니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "회사가 공용 액세스를 위한 도메인 이름이 필요한 새로운 웹 애플리케이션을 설정할 계획입니다. 네트워크 아키텍트는 전 세계 사용자에게 높은 가용성과 성능을 보장하기 위해 도메인 등록 프로세스를 결정해야 합니다. 애플리케이션은 AWS에 호스팅되며 효과적으로 확장할 수 있어야 합니다.",
        "Question": "이 시나리오에서 도메인 등록 및 관리에 대한 최상의 솔루션을 제공하는 접근 방식은 무엇입니까?",
        "Options": {
            "1": "다른 클라우드 공급자와 도메인을 등록하고 그들의 인터페이스를 통해 DNS를 관리합니다.",
            "2": "AWS Route 53에 직접 도메인을 등록하고 동일한 서비스 내에서 DNS 레코드를 관리합니다.",
            "3": "온프레미스 DNS 서버를 사용하여 도메인을 등록한 후 AWS 리소스로 트래픽을 라우팅하도록 구성합니다.",
            "4": "타사 등록 기관을 통해 도메인을 등록하고 DNS 관리를 위해 Route 53을 사용합니다."
        },
        "Correct Answer": "AWS Route 53에 직접 도메인을 등록하고 동일한 서비스 내에서 DNS 레코드를 관리합니다.",
        "Explanation": "AWS Route 53에 직접 도메인을 등록하면 다른 AWS 서비스와의 원활한 통합이 가능하여 효율적인 DNS 관리, 자동 확장 및 AWS의 글로벌 인프라를 통한 높은 가용성을 제공합니다.",
        "Other Options": [
            "타사 등록 기관을 사용하는 것은 가능하지만, DNS 레코드를 관리할 때 두 곳에서 설정을 업데이트해야 하므로 추가적인 복잡성과 지연을 초래할 수 있습니다.",
            "온프레미스 DNS 서버를 사용하면 잠재적인 지연과 단일 실패 지점이 발생할 수 있어 AWS에 호스팅된 애플리케이션에 대한 전 세계 사용자의 접근에 부정적인 영향을 미칠 수 있습니다.",
            "다른 클라우드 공급자와 도메인을 등록하면 호환성 문제와 관리 복잡성이 발생할 수 있어 AWS Route 53을 사용하여 도메인 등록 및 DNS 관리를 하는 것보다 덜 이상적입니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "회사는 전 세계 웹 애플리케이션을 위한 효율적인 DNS 솔루션을 구현해야 하며, 높은 가용성과 낮은 지연을 보장해야 합니다. 애플리케이션은 여러 AWS 리전에서 호스팅되고 있습니다. 네트워킹 아키텍트는 보안과 성능을 향상시키는 DNS 설정을 구성해야 합니다.",
        "Question": "네트워킹 아키텍트가 데이터 무결성을 보장하고 DNS 스푸핑 공격으로부터 보호하기 위해 구현해야 할 DNS 구성은 무엇입니까?",
        "Options": {
            "1": "DNS 관리 프로세스를 단순화하기 위해 모든 하위 도메인이 주요 도메인을 가리키도록 CNAME 레코드를 구성합니다.",
            "2": "성능 향상을 위해 Route 53에서 서로 다른 리전의 애플리케이션 로드 밸런서를 가리키도록 별칭 레코드를 설정합니다.",
            "3": "DNSSEC를 활성화하여 클라이언트가 응답의 진위를 확인할 수 있도록 추가 보안 계층을 제공합니다.",
            "4": "DNS 레코드에 대해 낮은 TTL 값을 사용하여 클라이언트가 DNS 캐시를 자주 새로 고치도록 하여 데이터 정확성을 향상시킵니다."
        },
        "Correct Answer": "DNSSEC를 활성화하여 클라이언트가 응답의 진위를 확인할 수 있도록 추가 보안 계층을 제공합니다.",
        "Explanation": "DNSSEC(도메인 이름 시스템 보안 확장)를 활성화하면 DNS 응답이 진짜이고 변조되지 않았음을 보장하는 방법을 제공하여 DNS 스푸핑 공격으로부터 보호하고 데이터 무결성을 높입니다.",
        "Other Options": [
            "낮은 TTL 값을 사용하면 변경 사항이 빠르게 전파되도록 하여 데이터 정확성을 향상시킬 수 있지만, DNS 스푸핑과 관련된 보안 문제를 해결하지는 않습니다.",
            "CNAME 레코드는 DNS 관리를 단순화하지만 보안 기능을 제공하지 않습니다. 또한 스푸핑 공격에 대한 데이터 무결성을 개선하는 데 가장 좋은 선택이 아닙니다.",
            "별칭 레코드를 설정하면 트래픽을 효율적으로 라우팅하여 성능을 향상시킬 수 있지만, 공격을 방지하는 데 중요한 DNS 응답의 보안에는 기여하지 않습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "회사는 사용자 인증 및 권한 부여를 위해 온프레미스 Active Directory 설정을 사용하고 있습니다. 회사는 애플리케이션을 AWS로 마이그레이션하고 기존 Active Directory를 유지하면서 온프레미스와 AWS 환경 모두에 있는 리소스에 대한 원활한 이름 해상을 보장하고자 합니다.",
        "Question": "회사가 온프레미스 Active Directory와 AWS 리소스 간의 이름 해상을 구성하기 위해 사용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS VPN 연결",
            "2": "Amazon Route 53 Resolver",
            "3": "AWS Directory Service for Microsoft Active Directory",
            "4": "Amazon Route 53"
        },
        "Correct Answer": "Amazon Route 53 Resolver",
        "Explanation": "Amazon Route 53 Resolver는 온프레미스 DNS와 AWS 리소스의 통합을 가능하게 하여 두 환경 간의 원활한 이름 해상을 지원합니다. 이 서비스는 AWS에서 온프레미스 DNS 서버로 DNS 쿼리를 전달하고 그 반대의 경우도 가능하게 하여 하이브리드 네트워킹 시나리오에 적합합니다.",
        "Other Options": [
            "AWS Directory Service for Microsoft Active Directory는 주로 디렉토리 서비스에 사용되며 Active Directory에 연결할 수 있는 방법을 제공하지만 온프레미스와 AWS 간의 DNS 이름 해상도를 특별히 다루지는 않습니다.",
            "AWS VPN 연결은 온프레미스 네트워크와 AWS 간의 안전한 연결을 촉진하지만 DNS 해상도 기능을 제공하지 않습니다. 주로 네트워크 연결에 중점을 두고 있습니다.",
            "Amazon Route 53은 확장 가능한 도메인 이름 시스템 웹 서비스이지만 하이브리드 환경에 특별히 맞춰져 있지 않으며 온프레미스와 AWS 리소스 간의 DNS 쿼리 전달에 필요한 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 여러 지역에 걸쳐 AWS 인프라를 확장할 계획입니다. 현재 그들은 온프레미스 네트워크에서 192.168.1.0/24의 사설 IP 주소 범위를 사용하고 있으며, AWS VPC가 이 범위와 겹치지 않도록 하고자 합니다. 네트워크 설계자는 사용 가능한 서브넷 수를 극대화하면서 VPC CIDR 블록을 설계하는 임무를 맡고 있습니다.",
        "Question": "네트워크 설계자가 온프레미스 네트워크와 IP 주소 겹침을 피하기 위해 VPC에 사용할 CIDR 블록은 무엇입니까?",
        "Options": {
            "1": "10.1.0.0/16",
            "2": "172.16.0.0/12",
            "3": "10.0.0.0/16",
            "4": "192.168.0.0/24"
        },
        "Correct Answer": "10.1.0.0/16",
        "Explanation": "CIDR 블록 10.1.0.0/16은 온프레미스 네트워크인 192.168.1.0/24와 겹치지 않는 사설 IP 범위입니다. 이는 주소 공간의 명확한 분리를 허용하여 충돌을 피하고 향후 확장을 위한 사용 가능한 서브넷 공간을 극대화합니다.",
        "Other Options": [
            "CIDR 블록 10.0.0.0/16은 사설 IP 범위이지만, AWS 환경에서 유사한 범위를 사용하는 다른 조직과의 잠재적 충돌을 피하지 않습니다.",
            "CIDR 블록 192.168.0.0/24는 온프레미스 네트워크인 192.168.1.0/24와 겹쳐서 라우팅 충돌 및 연결 문제를 초래할 수 있습니다.",
            "CIDR 블록 172.16.0.0/12는 또한 사설 IP 범위이지만, 현재 필요에 비해 크기가 크고 다른 환경에서 사용되는 다른 사설 범위와 겹칠 수 있어 잠재적인 복잡성을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 회사가 여러 지역에 있는 여러 VPC 간의 연결성을 구축해야 하며, 다양한 애플리케이션을 위해 저지연, 높은 가용성, VPC 수가 증가함에 따라 확장할 수 있는 능력이 필요합니다. 네트워크 설계자는 이 솔루션을 위해 VPC 피어링, 전송 게이트웨이 및 프록시 패턴을 평가하고 있습니다.",
        "Question": "VPC 간의 네트워크 연결성을 최적화하기 위해 어떤 옵션을 선택해야 합니까? (두 개 선택)",
        "Options": {
            "1": "여러 VPC 간의 트래픽 중앙 라우팅 및 관리를 위해 전송 게이트웨이를 설정합니다.",
            "2": "각 개별 VPC에 대해 VPC 피어링을 설정하여 직접 연결을 생성합니다.",
            "3": "여러 VPC 및 온프레미스 네트워크 간의 통신을 용이하게 하기 위해 전송 게이트웨이를 구현합니다.",
            "4": "비교적 트래픽이 적은 VPC에 대해서만 VPC 피어링 연결을 배포하여 비용을 최소화합니다.",
            "5": "VPC 간의 통신을 위해 중앙 프록시 서버를 통해 트래픽을 라우팅하기 위해 프록시 패턴을 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "여러 VPC 및 온프레미스 네트워크 간의 통신을 용이하게 하기 위해 전송 게이트웨이를 구현합니다.",
            "여러 VPC 간의 트래픽 중앙 라우팅 및 관리를 위해 전송 게이트웨이를 설정합니다."
        ],
        "Explanation": "전송 게이트웨이를 사용하면 여러 VPC 및 온프레미스 네트워크 간의 연결성을 간소화하고 확장할 수 있습니다. 이는 대량의 트래픽을 효율적으로 처리할 수 있는 중앙 집중식 라우팅 메커니즘을 제공하여 네트워크 전반에 걸쳐 저지연 및 높은 가용성을 보장합니다.",
        "Other Options": [
            "VPC 피어링은 한 번에 두 개의 VPC만 연결할 수 있으며, VPC 수가 증가함에 따라 잘 확장되지 않으므로 회사의 요구 사항에 적합하지 않습니다.",
            "프록시 패턴을 사용하면 추가 지연과 단일 실패 지점을 초래하여 높은 가용성과 저지연 요구 사항에 이상적이지 않습니다.",
            "비교적 트래픽이 적은 VPC에 대해서만 VPC 피어링 연결을 배포하는 것은 확장성 요구를 해결하지 않으며, VPC 수가 증가함에 따라 관리 오버헤드가 증가할 수 있습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 금융 서비스 회사가 여러 AWS 지역 및 온프레미스 데이터 센터에서 네트워크 성능을 모니터링하고 최적화해야 합니다. 이 회사는 네트워크 지연, 처리량 및 패킷 손실에 대한 기준선을 설정하고 지속적인 성능 모니터링을 구현하고자 합니다. 솔루션은 성능 저하에 대한 경고를 제공하고 역사적 성능 데이터 분석을 허용해야 합니다.",
        "Question": "하이브리드 인프라 전반에 걸쳐 기준 네트워크 성능을 캡처하고 지속적인 모니터링을 제공하는 데 가장 적합한 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS 네트워크 성능 모니터링 도구와 Amazon VPC 트래픽 미러링을 결합하여 트래픽 패턴 및 성능 지표를 분석합니다.",
            "2": "AWS CloudWatch Synthetics를 배포하여 엔드포인트를 모니터링하고 지연 및 응답 시간을 측정하는 카나리 스크립트를 생성합니다.",
            "3": "Amazon CloudFront를 설정하고 로깅을 활성화하여 AWS에 호스팅된 애플리케이션의 요청 지표 및 응답 시간을 분석합니다.",
            "4": "온프레미스 데이터 센터와의 고속 연결을 위해 AWS Direct Connect를 구현하고 AWS X-Ray를 사용하여 네트워크 성능을 모니터링합니다."
        },
        "Correct Answer": "AWS 네트워크 성능 모니터링 도구와 Amazon VPC 트래픽 미러링을 결합하여 트래픽 패턴 및 성능 지표를 분석합니다.",
        "Explanation": "AWS 네트워크 성능 모니터링 도구와 Amazon VPC 트래픽 미러링을 결합하면 트래픽 데이터를 캡처하고 분석하여 네트워크 성능을 종합적으로 모니터링할 수 있습니다. 이 접근 방식은 기준선을 설정하고 지속적인 성능 모니터링에 필수적인 지연, 처리량 및 패킷 손실에 대한 통찰력을 제공합니다.",
        "Other Options": [
            "AWS CloudWatch Synthetics를 배포하면 주로 애플리케이션 엔드포인트에 초점을 맞추며, 여러 지역에 걸쳐 기준 성능 분석에 필요한 포괄적인 네트워크 수준 통찰력을 제공하지 않을 수 있습니다.",
            "AWS Direct Connect를 구현하면 연결성이 향상되지만, 하이브리드 인프라 전반에 걸쳐 지속적인 성능 모니터링 및 역사적 데이터 분석을 위한 필요한 도구를 제공하지 않습니다.",
            "Amazon CloudFront를 설정하면 주로 콘텐츠 전송 및 캐싱에 도움이 되며, 요청 지표를 제공하지만 포괄적인 기준 분석에 필요한 상세한 네트워크 성능 지표를 캡처하지 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 AWS를 사용하여 애플리케이션을 호스팅하고 있으며, 모든 네트워크 트래픽이 준수 및 보안 감사 목적으로 기록되도록 해야 합니다. 네트워크 엔지니어는 VPC Flow Logs를 활성화했지만, 지정된 S3 버킷에서 로그를 확인할 수 없습니다. 네트워크 엔지니어는 이 문제를 해결해야 합니다.",
        "Question": "S3 버킷에 VPC Flow Logs가 기록되지 않는 문제를 해결하기 위해 네트워크 엔지니어가 확인해야 할 사항은 무엇입니까?",
        "Options": {
            "1": "S3 버킷 정책이 VPC Flow Logs 서비스의 쓰기 액세스를 허용하는지 확인합니다.",
            "2": "로그 작성을 위해 올바른 IAM 역할이 VPC에 연결되어 있는지 확인합니다.",
            "3": "VPC에 아웃바운드 로그 작성을 위한 인터넷 게이트웨이가 연결되어 있는지 확인합니다.",
            "4": "VPC Flow Logs가 수락된 트래픽과 거부된 트래픽 모두를 기록하도록 구성되어 있는지 확인합니다."
        },
        "Correct Answer": "S3 버킷 정책이 VPC Flow Logs 서비스의 쓰기 액세스를 허용하는지 확인합니다.",
        "Explanation": "S3 버킷 정책은 VPC Flow Logs 서비스가 버킷에 로그를 기록할 수 있도록 명시적으로 허용해야 합니다. 정책이 필요한 권한을 부여하지 않으면, VPC Flow Logs가 활성화되어 있어도 로그가 기록되지 않습니다.",
        "Other Options": [
            "수락된 트래픽과 거부된 트래픽 모두를 기록하는 것은 더 많은 통찰력을 제공할 수 있지만, 로그가 S3 버킷에 기록되는지 여부에 직접적인 영향을 미치지 않습니다. 권한이 잘못된 경우 로그 생성이 중단되지 않습니다.",
            "올바른 IAM 역할이 VPC에 연결되어 있는 것은 중요하지만, S3 버킷 정책이 쓰기 액세스를 허용하지 않으면 IAM 역할의 구성과 관계없이 로그가 전달되지 않습니다.",
            "VPC Flow Logs가 작동하기 위해 인터넷 게이트웨이는 필요하지 않습니다. VPC Flow Logs는 인터넷 게이트웨이가 연결되어 있는지 여부와 관계없이 VPC 내의 트래픽에 대한 정보를 캡처합니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 동일한 AWS 계정 내의 여러 Amazon VPC에 애플리케이션을 배포했습니다. 이 애플리케이션 간의 내부 통신을 보장하면서 DNS 쿼리를 비공개로 유지하기 위해, 회사는 애플리케이션이 공용 인터넷에 노출되지 않고 도메인 이름을 해결할 수 있도록 하는 솔루션을 설정하고자 합니다. 네트워킹 팀은 이를 위해 Amazon Route 53 프라이빗 호스티드 존을 사용하기로 결정했습니다.",
        "Question": "동일한 AWS 계정 내의 여러 VPC 간의 통신을 촉진하기 위해 Route 53 프라이빗 호스티드 존을 구성하는 모범 사례는 무엇입니까?",
        "Options": {
            "1": "공용 호스티드 존을 구성하고 보안 그룹을 사용하여 DNS 레코드를 쿼리할 수 있는 대상을 제한합니다.",
            "2": "각 VPC에 대해 별도의 프라이빗 호스티드 존을 생성하고 VPC 피어링을 사용하여 연결합니다.",
            "3": "Route 53 Resolver 엔드포인트를 사용하여 프라이빗 호스티드 존의 DNS 쿼리를 VPC로 전달합니다.",
            "4": "하나의 프라이빗 호스티드 존을 생성하고 DNS 이름에 접근이 필요한 모든 VPC와 연결합니다."
        },
        "Correct Answer": "하나의 프라이빗 호스티드 존을 생성하고 DNS 이름에 접근이 필요한 모든 VPC와 연결합니다.",
        "Explanation": "하나의 프라이빗 호스티드 존을 사용하고 이를 여러 VPC와 연결하면, 해당 VPC의 모든 애플리케이션이 동일한 내부 도메인 이름을 해결할 수 있으며, 이러한 레코드를 공용에 노출하지 않습니다. 이 설정은 관리의 간소화와 행정적 오버헤드 감소를 가져옵니다.",
        "Other Options": [
            "각 VPC에 대해 별도의 프라이빗 호스티드 존을 생성하면 DNS 관리가 복잡해지고 VPC 간의 DNS 레코드 불일치가 발생할 수 있어 유지 관리 및 문제 해결이 더 어려워질 수 있습니다.",
            "Route 53 Resolver 엔드포인트를 사용하는 것은 프라이빗 호스티드 존을 사용하는 VPC 간의 내부 통신에는 필요하지 않으며, 이는 하이브리드 클라우드 시나리오나 온프레미스 네트워크를 AWS에 연결할 때 더 관련이 있습니다.",
            "공용 호스티드 존을 구성하는 것은 DNS 쿼리를 비공개로 유지해야 하는 요구 사항과 모순되며, 공용 호스티드 존은 DNS 레코드를 인터넷에 노출하므로 내부 애플리케이션 통신에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있으며 하이브리드 클라우드 환경을 구축해야 합니다. 그들은 온프레미스 네트워크를 AWS VPC에 연결하기 위해 제3자 공급업체의 SD-WAN 솔루션을 사용하는 것을 고려하고 있습니다. 네트워크 엔지니어는 이 연결을 효율적으로 구현해야 합니다.",
        "Question": "제3자 공급업체의 SD-WAN 솔루션으로 하이브리드 연결을 구성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Transit Gateway를 배포하여 온프레미스 네트워크를 Transit VIF를 통해 연결하고 SD-WAN 솔루션을 적절히 구성합니다.",
            "2": "온프레미스 네트워크와 AWS 간에 VPN 연결을 사용하고 SD-WAN 솔루션이 VPN 터널을 관리하도록 구성합니다.",
            "3": "온프레미스 네트워크에서 AWS로의 AWS Direct Connect 연결을 설정하고 SD-WAN 장치를 구성하여 트래픽을 라우팅합니다.",
            "4": "AWS Site-to-Site VPN을 구현하고 SD-WAN을 활용하여 VPN 연결을 통해 트래픽을 최적화합니다."
        },
        "Correct Answer": "온프레미스 네트워크에서 AWS로의 AWS Direct Connect 연결을 설정하고 SD-WAN 장치를 구성하여 트래픽을 라우팅합니다.",
        "Explanation": "AWS Direct Connect를 사용하면 전용 네트워크 연결을 제공하여 일반적인 VPN보다 더 신뢰할 수 있고 일관된 연결을 제공합니다. 이를 통해 SD-WAN 솔루션이 트래픽을 효과적으로 최적화하면서 낮은 대기 시간과 높은 대역폭을 유지할 수 있어 하이브리드 연결을 위한 가장 효율적인 방법이 됩니다.",
        "Other Options": [
            "VPN 연결을 사용하는 것은 Direct Connect에 비해 잠재적인 대기 시간 및 대역폭 제한으로 인해 하이브리드 연결에 덜 최적입니다. Direct Connect는 더 안정적이고 빠른 연결을 제공합니다.",
            "AWS Transit Gateway를 배포하는 것은 여러 VPC 및 온프레미스 연결을 관리하는 좋은 옵션이지만, SD-WAN 솔루션의 성능 향상을 위해 Direct Connect의 전용 특성을 활용하지 않습니다.",
            "AWS Site-to-Site VPN을 구현하면 연결을 제공할 수 있지만, 일반적으로 Direct Connect에 비해 대기 시간이 더 길고 처리량이 낮아 SD-WAN을 사용하는 하이브리드 클라우드 환경의 요구에 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "글로벌 전자상거래 회사가 하루 동안 트래픽의 변동을 경험하고 있습니다. 서비스의 최적 성능과 가용성을 보장하기 위해, 회사는 지리적 위치에 따라 트래픽을 관리하고 분배할 수 있는 DNS 솔루션을 구현해야 합니다. 이 솔루션은 또한 애플리케이션 엔드포인트에 대한 상태 점검을 허용하여 불건전한 리소스에서 트래픽을 우회할 수 있어야 합니다. 회사는 DNS 관리를 위해 Amazon Route 53을 사용하고 있으며, 다양한 지역의 사용자에게 지연 시간을 최소화하는 솔루션이 필요합니다.",
        "Question": "Amazon Route 53에서 어떤 DNS 구성이 회사의 트래픽 관리 및 가용성 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "Amazon Route 53에서 지연 기반 라우팅 정책을 구현하여 사용자의 지연 시간이 가장 낮은 지역으로 트래픽을 라우팅하고, 엔드포인트에 대한 상태 점검을 포함합니다.",
            "2": "Amazon Route 53에서 간단한 라우팅 정책을 사용하여 모든 트래픽을 단일 지역 엔드포인트로 라우팅하며, 상태 점검은 하지 않습니다.",
            "3": "Amazon Route 53에서 가중치 기반 라우팅 정책을 설정하여 사용자의 위치와 관계없이 여러 지역 엔드포인트에 트래픽을 고르게 분배합니다.",
            "4": "Amazon Route 53에서 지리적 위치에 따라 사용자를 가장 가까운 지역 엔드포인트로 안내하는 지리적 라우팅 정책을 생성합니다."
        },
        "Correct Answer": "Amazon Route 53에서 지연 기반 라우팅 정책을 구현하여 사용자의 지연 시간이 가장 낮은 지역으로 트래픽을 라우팅하고, 엔드포인트에 대한 상태 점검을 포함합니다.",
        "Explanation": "지연 기반 라우팅 정책은 회사가 사용자에게 가장 낮은 지연 시간을 제공하는 지역 엔드포인트로 안내할 수 있게 하여 최적의 성능을 보장합니다. 상태 점검은 불건전한 리소스로 트래픽이 전송되지 않도록 하여 가용성과 신뢰성을 향상시킵니다.",
        "Other Options": [
            "지리적 라우팅 정책을 생성하면 사용자의 지리적 위치에 따라 안내하지만, 지연 시간을 고려하지 않으므로 항상 최적의 성능을 보장하지는 않습니다.",
            "가중치 기반 라우팅 정책을 설정하면 엔드포인트 간에 트래픽을 고르게 분배하지만, 사용자의 위치나 리소스의 상태를 고려하지 않아 최적의 성능을 보장하지 않을 수 있습니다.",
            "간단한 라우팅 정책을 사용하면 모든 트래픽이 단일 엔드포인트로 전송되며, 지리적 라우팅이나 상태 점검을 통한 필요한 중복성이나 성능 최적화를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "전자상거래 회사가 AWS에서 여러 가용 영역에 애플리케이션을 배포하여 가용성과 내결함성을 향상시키려 하고 있습니다. 아키텍처 팀은 웹 애플리케이션의 높은 가용성과 보안을 보장하기 위해 다양한 유형의 로드 밸런서를 평가하고 있습니다.",
        "Question": "이 시나리오에서 로드 밸런서에 대한 다음 중 어떤 진술이 사실입니까? (두 개 선택)",
        "Options": {
            "1": "네트워크 로드 밸런서는 애플리케이션 계층에서 작동하도록 설계되었으며 SSL 연결을 종료할 수도 있습니다.",
            "2": "네트워크 로드 밸런서는 초저 지연 시간을 유지하면서 초당 수백만 개의 요청을 처리하도록 최적화되어 있습니다.",
            "3": "애플리케이션 로드 밸런서는 다양한 부하를 처리하기 위해 자동으로 확장할 수 있으며, 마이크로서비스 아키텍처에 적합합니다.",
            "4": "클래식 로드 밸런서는 여러 인스턴스 간에 기본 로드 밸런싱을 제공하며 TCP 계층에 따라 트래픽을 라우팅할 수 있습니다.",
            "5": "애플리케이션 로드 밸런서는 고급 요청 매개변수에 따라 트래픽을 라우팅하는 데 이상적이며 WebSocket 연결을 처리할 수 있습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "애플리케이션 로드 밸런서는 고급 요청 매개변수에 따라 트래픽을 라우팅하는 데 이상적이며 WebSocket 연결을 처리할 수 있습니다.",
            "네트워크 로드 밸런서는 초저 지연 시간을 유지하면서 초당 수백만 개의 요청을 처리하도록 최적화되어 있습니다."
        ],
        "Explanation": "애플리케이션 로드 밸런서는 애플리케이션 계층(계층 7)에서 작동하며, 경로 기반 라우팅 및 호스트 기반 라우팅을 포함한 복잡한 규칙에 따라 트래픽을 라우팅할 수 있으며 WebSocket 연결을 지원합니다. 네트워크 로드 밸런서는 전송 계층(계층 4)에서 작동하며, 최소한의 지연으로 대량의 트래픽을 처리하도록 설계되어 있어 높은 성능이 요구되는 애플리케이션에 적합합니다.",
        "Other Options": [
            "네트워크 로드 밸런서는 전송 계층(계층 4)에서 작동하며, 애플리케이션 계층에서 작동하지 않으며 SSL 연결을 종료하지 않습니다. 이 진술은 부정확합니다.",
            "클래식 로드 밸런서는 전송 계층과 애플리케이션 계층 모두에서 작동하며 기본 로드 밸런싱 기능을 제공합니다. TCP에 따라 라우팅하지만 HTTP 및 HTTPS 트래픽도 지원하므로 이 진술은 오해의 소지가 있습니다.",
            "애플리케이션 로드 밸런서는 자동으로 확장할 수 있지만, 마이크로서비스 아키텍처에 특히 적합합니다. 그러나 이 진술은 네트워크 로드 밸런서의 확장 특성에 대한 구체성이 부족합니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "회사가 SAML을 사용하여 클라우드 애플리케이션에 대한 단일 로그인(SSO) 솔루션을 구현하고 있습니다. IT 보안 팀은 SSO 솔루션이 온프레미스 Active Directory(AD)와 원활하게 통합되어 사용자 인증 및 권한 부여를 효과적으로 관리할 수 있도록 하는 책임을 지고 있습니다.",
        "Question": "회사가 사용자가 SSO를 통해 AWS 리소스에 접근할 때 Active Directory에 대해 인증할 수 있도록 보장하기 위해 가장 잘 할 수 있는 구성은 무엇입니까?",
        "Options": {
            "1": "AD를 위한 사용자 정의 인증 서비스를 실행할 EC2 인스턴스를 설정합니다.",
            "2": "AWS Lambda 함수를 사용하여 AD 자격 증명에 대해 사용자를 직접 인증합니다.",
            "3": "SAML 없이 사용자 인증을 관리하기 위해 AWS IAM 역할을 활성화합니다.",
            "4": "AD 통합을 지원하는 ID 공급자와 SAML 연합을 구성합니다."
        },
        "Correct Answer": "AD 통합을 지원하는 ID 공급자와 SAML 연합을 구성합니다.",
        "Explanation": "AD 통합을 지원하는 ID 공급자와 SAML 연합을 구성하면 사용자가 기존 자격 증명을 사용하여 인증할 수 있습니다. 이 설정은 SAML 프로토콜을 활용하여 ID 공급자와 AWS 간의 신뢰 관계를 설정하여 AWS 리소스에 대한 안전하고 원활한 접근을 보장합니다.",
        "Other Options": [
            "AWS Lambda 함수를 사용하여 AD 자격 증명에 대해 사용자를 직접 인증하는 것은 부정확합니다. AWS Lambda는 Active Directory에 대한 직접 인증을 위해 설계되지 않았습니다. 대신, 더 넓은 아키텍처의 일부로 사용될 수 있지만 SSO를 위한 독립형 솔루션으로는 적합하지 않습니다.",
            "AD를 위한 사용자 정의 인증 서비스를 실행할 EC2 인스턴스를 설정하는 것은 불필요한 복잡성과 잠재적인 보안 위험을 초래하므로 부정확합니다. 기존 ID 공급자 기능을 활용하는 것이 사용자 정의 인증 코드를 유지하는 것보다 더 안전하고 관리하기 쉬운 접근 방식입니다.",
            "SAML 없이 사용자 인증을 관리하기 위해 AWS IAM 역할을 활성화하는 것은 부정확합니다. IAM 역할만으로는 인증 기능을 제공하지 않으며, 역할을 가정하기 전에 사용자 신원을 검증하기 위해 SAML과 같은 인증 방법이 필요합니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "조직이 Elastic Network Interfaces (ENIs)를 활용하여 네트워크 연결성을 관리할 여러 Amazon EC2 인스턴스를 배포하고 있습니다. 팀은 IP 주소 할당 및 서브넷 관리와 관련된 ENIs의 제한 사항과 모범 사례에 대해 우려하고 있습니다.",
        "Question": "조직의 배포 전략에 대해 Elastic Network Interfaces (ENIs)에 대한 다음 진술 중 어떤 것이 정확합니까?",
        "Options": {
            "1": "동일 서브넷 내에서 동일 인스턴스에 두 개의 ENI를 연결하는 것은 중복성을 위한 권장 관행입니다.",
            "2": "각 ENI는 VPC에 연결된 IPv4 CIDR 블록이 있는 경우에만 여러 IPv4 주소와 연결될 수 있습니다.",
            "3": "소스 계정이 필요한 권한을 가지고 있는 한, 교차 계정 ENI는 제한 없이 생성할 수 있습니다.",
            "4": "ENI는 서브넷 간에 이동할 수 있지만 가용 영역 간에는 이동할 수 없습니다."
        },
        "Correct Answer": "ENI는 서브넷 간에 이동할 수 있지만 가용 영역 간에는 이동할 수 없습니다.",
        "Explanation": "이 진술은 ENI가 동일 VPC 내의 서브넷 간에 이동할 수 있지만 가용 영역 간에는 이동할 수 없다는 점에서 정확합니다. 이는 AWS의 네트워크 아키텍처에서 중요한 고려 사항입니다.",
        "Other Options": [
            "이 옵션은 각 ENI가 여러 IPv4 주소를 가질 수 있지만, 제한은 인스턴스 유형에 따라 주소 수에 적용되며 단순히 IPv4 CIDR 블록의 존재에 의한 것이 아니기 때문에 잘못되었습니다.",
            "이 옵션은 교차 계정 ENI가 AWS의 화이트리스트 등록을 요구하며 제한 없이 생성되지 않기 때문에 잘못되었습니다. 이는 특정 승인 프로세스의 적용을 받습니다.",
            "이 옵션은 동일 서브넷 내에서 동일 인스턴스에 두 개의 ENI를 연결하는 것이 네트워킹 문제를 일으킬 수 있으며 권장되지 않는 관행이기 때문에 잘못되었습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "회사가 Amazon EKS에서 마이크로서비스 아키텍처를 배포하고 있습니다. 그들은 글로벌 트래픽 관리, 향상된 보안 및 서비스와의 원활한 통합이 필요합니다. 회사는 애플리케이션 성능을 최적화하고 높은 가용성을 보장하며 애플리케이션에 대한 안전한 액세스를 제공하는 것을 목표로 하고 있습니다.",
        "Question": "회사가 마이크로서비스의 최적 성능과 보안을 달성하기 위해 구현해야 할 서비스 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "DNS 기반 트래픽 라우팅 및 장애 조치를 위해 Route 53을 활용합니다.",
            "2": "일반 웹 공격으로부터 보호하기 위해 AWS WAF를 구현합니다.",
            "3": "정적 콘텐츠 배달을 위해 Amazon S3를 사용하여 마이크로서비스의 부하를 줄입니다.",
            "4": "성능과 가용성을 개선하기 위해 AWS Global Accelerator를 통합합니다.",
            "5": "다른 지역의 EKS 클러스터를 연결하기 위해 VPC Peering을 활성화합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "성능과 가용성을 개선하기 위해 AWS Global Accelerator를 통합합니다.",
            "일반 웹 공격으로부터 보호하기 위해 AWS WAF를 구현합니다."
        ],
        "Explanation": "AWS Global Accelerator를 통합하면 최적의 엔드포인트로 트래픽을 동적으로 라우팅하여 애플리케이션의 가용성과 성능을 향상시키고, AWS WAF를 구현하면 마이크로서비스를 위협할 수 있는 일반 웹 공격으로부터 보호하는 보안 계층을 추가합니다.",
        "Other Options": [
            "정적 콘텐츠 배달을 위해 Amazon S3를 사용하는 것은 마이크로서비스 아키텍처의 성능이나 보안을 직접적으로 향상시키지 않으며, 오히려 콘텐츠 저장 및 배달 문제를 해결합니다. 이는 명시된 요구 사항에 대한 직접적인 해결책이 아닙니다.",
            "DNS 기반 트래픽 라우팅을 위해 Route 53을 활용하는 것은 트래픽을 유도하는 데 유용하지만, Global Accelerator와 AWS WAF의 조합만큼 성능 최적화 및 보안을 제공하지 않습니다.",
            "VPC Peering을 활성화하면 EKS 클러스터를 연결하지만, 글로벌 트래픽 관리를 위한 성능이나 보안을 본질적으로 향상시키지 않으며, 단순히 VPC 내에서 리소스 간의 통신을 허용합니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "회사가 AWS 리소스를 모니터링하기 위해 Amazon CloudWatch를 사용하고 있습니다. 네트워크 엔지니어는 모든 중요한 메트릭이 단일 대시보드에서 보이도록 해야 하며, 특정 임계값이 초과될 때 팀에 알림을 설정하고 싶어합니다. 팀은 또한 더 나은 의사 결정을 위해 역사적 데이터를 분석해야 합니다. 이를 달성하기 위한 가장 효과적인 방법은 무엇입니까?",
        "Question": "네트워크 엔지니어가 중요한 메트릭에 대한 가시성을 제공하고 모니터링을 위한 알림을 설정하기 위해 구성해야 할 것은 무엇입니까?",
        "Options": {
            "1": "메트릭을 수집하고 CloudWatch로 전송하는 EC2에 사용자 정의 애플리케이션을 배포합니다.",
            "2": "네트워크 트래픽을 모니터링하기 위해 VPC 흐름 로그를 활성화하고 로그 패턴에 따라 경고를 구성합니다.",
            "3": "구성 변경을 추적하고 준수 위반에 대한 알림을 설정하기 위해 AWS Config를 사용합니다.",
            "4": "메트릭을 시각화하고 특정 임계값에 따라 알림을 설정하기 위해 CloudWatch 대시보드를 생성합니다."
        },
        "Correct Answer": "메트릭을 시각화하고 특정 임계값에 따라 알림을 설정하기 위해 CloudWatch 대시보드를 생성합니다.",
        "Explanation": "CloudWatch 대시보드를 생성하면 네트워크 엔지니어가 중요한 메트릭을 한 곳에서 시각화할 수 있으며, 알림을 설정하면 임계값이 초과될 때 팀에 통보되어 효과적인 모니터링과 가시성을 제공합니다.",
        "Other Options": [
            "AWS Config를 사용하는 것은 리소스 성능 메트릭보다는 구성 준수에 중점을 두기 때문에 실시간 메트릭 모니터링을 위한 최선의 접근 방식이 아닙니다.",
            "EC2에 사용자 정의 애플리케이션을 배포하는 것은 메트릭 모니터링을 위한 내장 CloudWatch 기능을 사용하는 것에 비해 불필요한 복잡성과 관리 오버헤드를 추가합니다.",
            "VPC 흐름 로그를 활성화하는 것은 네트워크 트래픽 모니터링에 유용하지만 리소스 메트릭에 대한 가시성을 제공하지 않거나 성능 임계값에 따라 알림을 설정할 수 없습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 회사는 여러 부서에 대해 여러 개의 AWS 계정을 운영하고 있으며, 이러한 계정 간에 특정 리소스를 공유하고자 하면서도 엄격한 보안 및 접근 제어를 유지하고자 합니다. 네트워크 설계자는 보안을 저해하지 않으면서 리소스 공유를 가능하게 하는 솔루션을 설계하는 임무를 맡고 있습니다.",
        "Question": "여러 AWS 계정 간에 안전한 리소스 공유를 가능하게 하는 가장 적절한 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Organizations 및 서비스 제어 정책(SCP)을 활용하여 리소스를 공유합니다.",
            "2": "모든 계정 간에 VPC 피어링 연결을 설정하여 리소스를 공유합니다.",
            "3": "AWS Transit Gateway를 구현하여 계정 간 VPC를 연결합니다.",
            "4": "AWS Resource Access Manager(RAM)를 사용하여 계정 간에 리소스를 공유합니다."
        },
        "Correct Answer": "AWS Resource Access Manager(RAM)를 사용하여 계정 간에 리소스를 공유합니다.",
        "Explanation": "AWS Resource Access Manager(RAM)는 여러 계정 간에 AWS 리소스를 안전하고 효율적으로 공유하기 위해 특별히 설계되었습니다. 복잡한 네트워크 구성 없이 서브넷 및 트랜짓 게이트웨이와 같은 리소스를 다른 AWS 계정과 공유할 수 있으며, 접근이 효과적으로 제어되고 관리됩니다.",
        "Other Options": [
            "AWS Transit Gateway는 여러 VPC를 연결할 수 있지만, 본질적으로 리소스 공유 기능을 제공하지 않으며 간단한 리소스 공유 요구에 불필요한 복잡성을 초래할 수 있습니다.",
            "VPC 피어링은 VPC 간의 직접 연결에 사용할 수 있지만, 여러 피어링 연결을 관리하는 것은 복잡해질 수 있으며 많은 계정 간에 리소스를 공유하는 간단한 방법을 제공하지 않습니다.",
            "AWS Organizations 및 서비스 제어 정책(SCP)은 주로 계정 간 권한 및 거버넌스를 관리하는 데 사용되지만, 직접적인 리소스 공유를 촉진하지 않으며, 이는 AWS RAM이 더 잘 처리합니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사는 하이브리드 클라우드 아키텍처를 가지고 있으며, 온프레미스 네트워크가 Amazon VPC의 리소스와 통신해야 합니다. 이 회사는 온프레미스 데이터 센터와 AWS 간의 저지연 및 안전한 연결이 필요합니다. 네트워크 엔지니어는 두 환경 간의 원활한 라우팅을 보장하는 솔루션을 구축하는 임무를 맡고 있습니다.",
        "Question": "네트워크 엔지니어가 이러한 요구 사항을 충족하기 위해 구현해야 할 솔루션은 무엇입니까?",
        "Options": {
            "1": "EC2 인스턴스에서 OpenVPN을 사용하여 가상 사설망(VPN)을 구현합니다.",
            "2": "VPC와 온프레미스 네트워크 간의 라우팅을 관리하기 위해 AWS Transit Gateway를 배포합니다.",
            "3": "AWS Direct Connect 연결을 설정하고 개인 가상 인터페이스를 사용합니다.",
            "4": "정적 라우팅을 사용하여 AWS Site-to-Site VPN으로 VPN 연결을 설정합니다."
        },
        "Correct Answer": "AWS Direct Connect 연결을 설정하고 개인 가상 인터페이스를 사용합니다.",
        "Explanation": "AWS Direct Connect는 저지연 및 높은 대역폭을 제공하는 전용 연결을 제공하여 하이브리드 환경에 이상적입니다. 개인 가상 인터페이스를 사용하면 공용 인터넷을 통과하지 않고 온프레미스 네트워크와 AWS VPC 간의 안전하고 효율적인 통신을 보장합니다.",
        "Other Options": [
            "AWS Site-to-Site VPN을 사용하여 정적 라우팅으로 VPN 연결을 설정하면 지연이 증가할 수 있으며, 특히 대량 데이터 전송을 위해 애플리케이션에 필요한 성능 수준을 제공하지 못할 수 있습니다.",
            "AWS Transit Gateway를 배포하는 것은 여러 VPC와 온프레미스 연결을 관리하는 유효한 옵션이지만, Direct Connect만큼 저지연 연결의 필요를 직접적으로 해결하지는 않습니다.",
            "EC2 인스턴스에서 OpenVPN을 사용하여 가상 사설망(VPN)을 구현하는 것은 더 복잡하며, 특히 높은 처리량 요구 사항에 대해 AWS Direct Connect와 동일한 수준의 성능, 신뢰성 및 보안을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 회사는 글로벌 운영을 지원하기 위해 서로 다른 지역에 여러 개의 VPC를 배포했습니다. 이러한 VPC 간의 효율적인 네트워크 통신을 보장하고 연결 문제를 해결하기 위해 네트워크 팀은 VPC 도달 가능성 분석기를 구현하기로 결정했습니다. 도달 가능성 분석기를 구성한 후, 그들은 us-west-1 지역의 VPC와 VPN을 통해 연결된 온프레미스 데이터 센터 간의 경로를 확인하고자 합니다. 그들은 잠재적인 도달 가능성 문제를 식별하기 위해 도구를 효과적으로 사용하는 방법을 잘 모릅니다.",
        "Question": "이 시나리오에서 VPC 도달 가능성 분석기를 사용하는 주요 이점은 무엇입니까?",
        "Options": {
            "1": "네트워크 경로의 시각적 표현을 제공하고 잠재적인 잘못된 구성을 식별합니다.",
            "2": "여러 VPC 간의 자동 장애 조치를 가능하게 합니다.",
            "3": "VPC 간의 VPN 연결 설정을 단순화합니다.",
            "4": "VPC에 필요한 라우트 테이블을 자동으로 구성합니다."
        },
        "Correct Answer": "네트워크 경로의 시각적 표현을 제공하고 잠재적인 잘못된 구성을 식별합니다.",
        "Explanation": "VPC 도달 가능성 분석기는 네트워크 리소스 간의 경로를 분석하고 시각화하도록 설계되어, 네트워크 엔지니어가 잘못 구성된 경로 또는 보안 그룹 규칙과 같은 문제를 발견하고 해결할 수 있도록 합니다. 이 기능은 팀이 연결성을 보장하고 잠재적인 문제를 효과적으로 해결하는 능력을 향상시킵니다.",
        "Other Options": [
            "VPC 도달 가능성 분석기는 라우트 테이블을 자동으로 구성하지 않으며, 기존 구성을 분석할 뿐입니다.",
            "이 도구는 VPC 간의 자동 장애 조치를 수행하지 않으며, 중복성을 관리하기보다는 연결성을 분석하는 데 중점을 둡니다.",
            "VPC 도달 가능성 분석기는 연결성을 이해하는 데 도움을 주지만, VPN 연결 설정을 단순화하지 않으며, 이는 수동으로 구성해야 합니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "회사가 인프라를 확장하고 있으며, 애플리케이션 간의 원활한 통신을 위해 서로 다른 지역에 있는 여러 Amazon VPC를 연결해야 합니다. 각 VPC는 고유한 CIDR 블록을 가지고 있으며, 트래픽이 AWS의 개인 네트워크 내에 유지되도록 하기 위한 특정 준수 요구 사항이 있습니다. 회사는 높은 가용성과 확장성을 유지하면서 운영 오버헤드를 최소화하고자 합니다.",
        "Question": "준수 요구 사항을 충족하면서 여러 VPC를 연결하는 가장 효율적이고 확장 가능한 방법은 무엇입니까?",
        "Options": {
            "1": "각 VPC 간에 VPN 연결을 설정하여 메쉬 네트워크를 형성합니다.",
            "2": "AWS PrivateLink를 활용하여 VPC 간의 서비스를 연결합니다.",
            "3": "AWS Transit Gateway를 사용하여 모든 VPC를 연결하고 라우팅을 중앙에서 관리합니다.",
            "4": "모든 VPC 간에 VPC Peering을 구현하고 라우트 테이블을 적절히 구성합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 사용하여 모든 VPC를 연결하고 라우팅을 중앙에서 관리합니다.",
        "Explanation": "AWS Transit Gateway는 트래픽을 라우팅하기 위한 중앙 허브를 활성화하여 여러 VPC를 연결하는 과정을 간소화합니다. 많은 수의 VPC를 지원하며, 수천 개의 동시 연결을 처리하면서 준수를 유지하고 운영 복잡성을 줄일 수 있습니다.",
        "Other Options": [
            "VPC Peering은 VPC의 수가 증가함에 따라 여러 피어링 연결과 각 VPC 쌍에 대한 라우팅 구성을 업데이트해야 하므로 복잡해지고 관리하기 어려워질 수 있습니다.",
            "각 VPC 간에 VPN 연결을 설정하여 메쉬 네트워크를 형성하는 것은 불필요한 오버헤드와 복잡성을 초래하며, 각 VPC가 여러 VPN 터널을 관리해야 하므로 성능 문제를 일으킬 수 있습니다.",
            "AWS PrivateLink는 VPC 간의 서비스를 안전하게 연결하기 위해 주로 설계되었으며, 여러 VPC를 연결하는 데 적합하지 않습니다. 대규모로 VPC 간의 트래픽을 라우팅하는 데 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "회사가 웹 애플리케이션을 AWS로 마이그레이션하고 있으며, 도메인 이름이 새로운 리소스에 올바르게 해석되도록 해야 합니다. Amazon Route 53에서 DNS 레코드를 구성하고 있습니다. 팀은 사용자가 친숙한 도메인 이름을 사용하여 애플리케이션에 접근할 수 있도록 레코드를 설정해야 합니다.",
        "Question": "애플리케이션 엔드포인트의 올바른 해석을 보장하기 위해 구성해야 할 유효한 DNS 레코드는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "각 애플리케이션 엔드포인트에 대해 해당 Elastic Load Balancer DNS 이름을 가리키는 CNAME 레코드를 생성합니다.",
            "2": "각 애플리케이션 엔드포인트에 대해 추가 정보를 제공하는 TXT 레코드를 생성합니다.",
            "3": "각 애플리케이션 엔드포인트에 대해 해당 IP 주소를 가리키는 A 레코드를 생성합니다.",
            "4": "각 애플리케이션 엔드포인트에 대해 해당 IPv6 주소를 가리키는 AAAA 레코드를 생성합니다.",
            "5": "각 애플리케이션 엔드포인트에 대해 이메일 라우팅을 처리하는 MX 레코드를 생성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "각 애플리케이션 엔드포인트에 대해 해당 IP 주소를 가리키는 A 레코드를 생성합니다.",
            "각 애플리케이션 엔드포인트에 대해 해당 Elastic Load Balancer DNS 이름을 가리키는 CNAME 레코드를 생성합니다."
        ],
        "Explanation": "A 레코드는 도메인 이름을 IPv4 주소에 매핑하는 데 사용되어 사용자가 IP 주소를 통해 애플리케이션에 직접 접근할 수 있도록 합니다. CNAME 레코드는 도메인 이름을 다른 도메인 이름, 예를 들어 Elastic Load Balancer로 가리키는 데 필수적이며, 애플리케이션 트래픽의 부하 분산 및 관리를 개선합니다.",
        "Other Options": [
            "MX 레코드는 메일 교환 라우팅에 사용되며, 웹 트래픽의 애플리케이션 엔드포인트 해석에는 적용되지 않습니다.",
            "TXT 레코드는 도메인 소유권 확인 또는 이메일을 위한 SPF 레코드와 같은 다양한 목적으로 텍스트 정보를 제공하지만, 애플리케이션 엔드포인트 해석에는 사용되지 않습니다.",
            "AAAA 레코드는 도메인 이름을 IPv6 주소에 매핑하며, IPv6 연결에 필요할 수 있지만 IPv4 주소 지정이나 부하 분산을 위한 완전한 솔루션을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "회사가 다양한 서비스에 대해 여러 도메인 이름을 등록할 계획입니다. 인프라 팀은 AWS 서비스를 사용하여 도메인 등록을 효과적으로 관리하고 기존 VPC 설정과 통합되도록 해야 합니다.",
        "Question": "인프라 팀이 도메인 등록을 효과적으로 생성하고 관리하기 위해 취해야 할 단계의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Elastic Beanstalk를 활용하여 모든 서비스의 도메인 등록을 자동으로 처리합니다.",
            "2": "Amazon CloudFront를 구성하여 도메인 등록을 관리하고 기존 VPC를 가리킵니다.",
            "3": "Amazon Route 53을 사용하여 도메인을 등록하고 내부 서비스에 대한 개인 호스팅 영역을 설정합니다.",
            "4": "AWS Lambda 함수를 설정하여 Route 53을 통해 도메인 등록 갱신을 자동화합니다.",
            "5": "각 도메인에 대해 Amazon S3 버킷을 생성하고 이를 사용하여 DNS 레코드를 호스팅합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon Route 53을 사용하여 도메인을 등록하고 내부 서비스에 대한 개인 호스팅 영역을 설정합니다.",
            "AWS Lambda 함수를 설정하여 Route 53을 통해 도메인 등록 갱신을 자동화합니다."
        ],
        "Explanation": "Amazon Route 53을 사용하면 팀이 도메인을 등록하고 DNS 구성을 효율적으로 관리할 수 있습니다. 개인 호스팅 영역을 설정하는 것은 내부 서비스를 관리하는 데 필수적입니다. 또한 AWS Lambda 함수를 사용하여 도메인 등록 갱신을 자동화하면 수동 개입 없이 도메인이 활성 상태를 유지할 수 있어 서비스 가용성을 유지하는 데 중요합니다.",
        "Other Options": [
            "Amazon CloudFront는 주로 콘텐츠 전송 네트워크(CDN)이며 도메인 등록을 관리하지 않습니다. 배포에는 도움이 되지만 DNS 관리에는 도움이 되지 않습니다.",
            "AWS Elastic Beanstalk는 애플리케이션 배포를 위한 플랫폼 서비스(PaaS)이지 도메인 등록 관리를 위한 것이 아닙니다.",
            "각 도메인에 대해 Amazon S3 버킷을 생성하는 것은 DNS 레코드를 관리하는 표준 관행이 아닙니다. S3는 DNS 관리에 적합하지 않으며 도메인 등록에 필요한 기능이 부족합니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "글로벌 전자상거래 회사가 운영을 확장하고 있으며, 공용 웹 애플리케이션을 위한 DNS를 구성해야 합니다. 팀은 Amazon Route 53을 사용하여 도메인을 관리하고 다양한 지리적 지역의 사용자에게 높은 가용성과 낮은 대기 시간을 보장하고자 합니다.",
        "Question": "팀이 공용 도메인 이름을 관리하고 인터넷을 통해 접근 가능하도록 하려면 Amazon Route 53에서 어떤 유형의 호스팅 존을 생성해야 합니까?",
        "Options": {
            "1": "Private Hosted Zone",
            "2": "Resource Record Set",
            "3": "Route 53 Resolver",
            "4": "Public Hosted Zone"
        },
        "Correct Answer": "Public Hosted Zone",
        "Explanation": "Amazon Route 53의 Public Hosted Zone은 인터넷에서 트래픽을 라우팅하도록 특별히 설계되었으며, 공용 도메인 이름을 관리하는 데 필요합니다. 이 유형의 호스팅 존은 회사가 외부 트래픽을 웹 애플리케이션으로 효과적으로 라우팅할 수 있도록 합니다.",
        "Other Options": [
            "Private Hosted Zone은 VPC 내에서 내부 DNS 해석에 사용되며, 인터넷을 통해 트래픽을 라우팅하지 않으므로 공용 애플리케이션에는 적합하지 않습니다.",
            "Route 53 Resolver는 하이브리드 클라우드 DNS 관리를 위한 서비스이며, 호스팅 존 유형이 아닙니다. 온프레미스 네트워크와 AWS VPC 간의 DNS 해석을 용이하게 합니다.",
            "Resource Record Set은 공용 및 사설 호스팅 존의 구성 요소이지만, DNS를 관리하기 위한 독립적인 엔티티는 아닙니다. DNS 쿼리가 어떻게 응답되는지를 정의하지만, 호스팅 존 자체로 기능하지는 않습니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 회사가 애플리케이션 워크로드를 AWS로 마이그레이션하고 있으며, 비용 효율적이고 효율적인 네트워킹 아키텍처를 설계하려고 합니다. 이들은 솔루션이 위험을 최소화하면서 최적의 성능을 유지하도록 해야 합니다. 팀은 온프레미스 데이터 센터를 AWS에 연결하기 위한 다양한 네트워킹 옵션을 고려하고 있습니다.",
        "Question": "다음 중 회사의 애플리케이션 워크로드를 클라우드에서 효율적으로 달성하고, 위험을 제거하며, 가능한 최저 비용을 유지하는 데 가장 적합한 네트워킹 솔루션은 무엇입니까?",
        "Options": {
            "1": "각 부서에 대해 여러 AWS Client VPN 연결을 설정하여 AWS 리소스에 대한 안전한 접근을 제공하고, 가용성과 분리를 보장합니다.",
            "2": "AWS Transit Gateway를 구현하여 네트워크 아키텍처를 단순화하고 여러 VPC를 상호 연결하며, 중복성을 위해 VPN 연결을 유지합니다.",
            "3": "온프레미스 데이터 센터를 AWS에 안전하게 연결하기 위해 AWS Site-to-Site VPN 연결을 설정하고, 백업으로 AWS Direct Connect를 사용합니다.",
            "4": "AWS에 대한 전용 연결을 위해 AWS Direct Connect만을 활용하여 최고의 성능과 신뢰성을 보장합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 네트워크 아키텍처를 단순화하고 여러 VPC를 상호 연결하며, 중복성을 위해 VPN 연결을 유지합니다.",
        "Explanation": "AWS Transit Gateway를 구현하면 여러 VPC와 온프레미스 네트워크가 단일 게이트웨이를 통해 연결되므로 네트워크 아키텍처가 간소화됩니다. 이는 복잡성을 줄이고 효율성을 높이며 필요한 연결 수를 최소화하여 비용 절감을 제공합니다. 또한, 중복성을 위해 VPN 연결을 유지하면 높은 가용성과 보안을 보장하여 위험을 효과적으로 완화합니다.",
        "Other Options": [
            "AWS Site-to-Site VPN 연결을 설정하고 Direct Connect를 백업으로 사용하는 것은 비용과 복잡성을 불필요하게 증가시킬 수 있으며, VPN이 Direct Connect만큼의 성능을 제공하지 않을 수 있습니다.",
            "AWS Direct Connect만을 활용하는 것은 높은 성능을 제공할 수 있지만, 하이브리드 접근의 비용 효율성을 활용하지 않거나 중복성을 포함하지 않아 위험이 증가합니다.",
            "각 부서에 대해 여러 AWS Client VPN 연결을 설정하면 전체 네트워크에서 상호 연결성과 효율성의 필요성을 해결하지 못하고 관리 오버헤드와 비용이 증가할 수 있습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "네트워크 엔지니어가 VPC의 EC2 인스턴스에 연결된 Elastic Network Interface (ENI)의 최대 전송 단위(MTU) 크기를 결정해야 합니다. 엔지니어는 인스턴스의 셸에 접근할 수 있으며 이 정보를 신속하게 검색하고자 합니다.",
        "Question": "엔지니어가 EC2 인스턴스의 eth0 인터페이스에서 MTU 크기를 찾기 위해 어떤 명령을 실행해야 합니까?",
        "Options": {
            "1": "netstat -i | grep mtu",
            "2": "ifconfig eth0 | grep mtu",
            "3": "ip addr show eth0 | grep mtu",
            "4": "ip link show eth0 | grep mtu"
        },
        "Correct Answer": "ip link show eth0 | grep mtu",
        "Explanation": "'ip link show eth0 | grep mtu' 명령은 링크 계층 정보를 자세히 보여주고 mtu 값을 필터링하여 eth0 인터페이스의 MTU 크기를 정확하게 검색하므로 올바른 선택입니다.",
        "Other Options": [
            "'ifconfig eth0 | grep mtu' 명령은 'ifconfig'가 'ip link'처럼 MTU를 직접 제공하지 않기 때문에 잘못된 것입니다. 또한 모든 환경에서 사용 가능하지 않을 수 있습니다.",
            "'ip addr show eth0 | grep mtu' 명령은 IP 주소 세부 정보를 보여주지만 MTU 크기에 명시적으로 초점을 맞추지 않기 때문에 잘못된 것입니다. 이 목적에는 'ip link' 명령이 더 적합합니다.",
            "'netstat -i | grep mtu' 명령은 네트워크 통계를 제공하지만 'ip link'처럼 개별 인터페이스의 MTU 크기를 구체적으로 보여주지 않기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "다국적 기업이 여러 AWS 계정 간의 VPC 간 연결을 요구하고 있습니다. 이들은 이 연결이 확장 가능하고 동적인 워크로드를 지원할 수 있으며 지연 시간을 최소화할 수 있도록 보장하고자 합니다. 네트워크 엔지니어는 어떤 솔루션을 구현해야 합니까?",
        "Question": "회사의 여러 AWS 계정에 대해 확장성과 낮은 지연 시간을 보장하면서 VPC 간 연결을 활성화하는 가장 효율적인 방법은 무엇입니까?",
        "Options": {
            "1": "온프레미스 데이터 센터와 각 AWS 계정 간에 Direct Connect 연결을 설정하여 VPC 연결을 활성화합니다.",
            "2": "서로 다른 계정의 각 VPC 간에 VPC 피어링 연결을 설정하고 라우팅 테이블을 수동으로 관리합니다.",
            "3": "AWS Transit Gateway를 구현하여 서로 다른 계정의 VPC를 연결하고 중앙 집중식 관리 및 확장성을 허용합니다.",
            "4": "각 VPC와 온프레미스 네트워크 간에 VPN 연결을 사용하여 VPC 간 통신을 촉진합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 서로 다른 계정의 VPC를 연결하고 중앙 집중식 관리 및 확장성을 허용합니다.",
        "Explanation": "AWS Transit Gateway는 VPC와 온프레미스 네트워크를 상호 연결하기 위한 허브-스포크 모델을 제공하여 여러 계정 간의 효율적인 데이터 전송과 트래픽 관리가 용이합니다. 이는 증가하는 워크로드에 잘 확장되며 다른 방법에 비해 지연 시간을 줄입니다.",
        "Other Options": [
            "VPC 피어링 연결을 설정하면 VPC의 수가 증가함에 따라 복잡한 연결 메쉬가 필요하게 되어 관리가 번거롭고 비효율적입니다.",
            "VPN 연결을 사용하면 각 VPC가 자체 VPN 연결을 필요로 하므로 추가적인 지연 시간과 복잡성이 발생하며, 이는 확장성에 적합하지 않습니다.",
            "Direct Connect 설정은 주로 온프레미스 네트워크를 AWS에 연결하기 위한 것이며, VPC 연결을 촉진할 수 있지만 여러 계정의 VPC에 대해 잘 확장되지 않습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "조직이 애플리케이션을 AWS로 마이그레이션하고 있으며 DNS 통신의 보안에 대해 우려하고 있습니다. 이들은 애플리케이션에서 발생하는 모든 DNS 쿼리가 암호화되어 도청 및 중간자 공격을 방지할 수 있도록 보장하고자 합니다. 조직은 AWS 서비스를 사용하여 VPC 환경 내에서 안전한 DNS 통신을 구현할 옵션을 탐색하고 있습니다.",
        "Question": "조직이 AWS 환경에서 안전한 DNS 통신을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS PrivateLink를 사용하여 VPC 내에서 공용 DNS 서버에 안전하게 접근합니다.",
            "2": "Route 53에서 관리되는 모든 도메인 이름에 대해 DNSSEC를 설정하여 DNS 응답의 진위를 보장합니다.",
            "3": "Route 53 Resolver DNS 방화벽 규칙을 구현하여 DNS 트래픽을 필터링하고 모니터링합니다.",
            "4": "모든 DNS 쿼리에 대해 DNS over HTTPS (DoH)를 사용하도록 Route 53 Resolver를 구성합니다."
        },
        "Correct Answer": "모든 DNS 쿼리에 대해 DNS over HTTPS (DoH)를 사용하도록 Route 53 Resolver를 구성합니다.",
        "Explanation": "DNS over HTTPS (DoH)를 사용하면 DNS 쿼리가 암호화되어 도청을 방지하고 DNS 트래픽의 프라이버시를 보장합니다. 이는 AWS 환경에서 DNS 통신을 보호하는 가장 효과적인 방법입니다.",
        "Other Options": [
            "DNSSEC를 설정하면 DNS 응답의 진위를 보장하지만 DNS 쿼리 자체는 암호화되지 않아 가로채기에 취약합니다.",
            "AWS PrivateLink를 사용하여 공용 DNS 서버에 접근하는 것은 DNS 통신을 보호하기 위한 표준 접근 방식이 아니며, DNS 쿼리에 대한 암호화를 제공하지 않습니다.",
            "Route 53 Resolver DNS 방화벽 규칙을 구현하는 것은 DNS 트래픽을 필터링하고 모니터링하는 데 유용하지만, 암호화를 통해 DNS 쿼리를 본질적으로 보호하지는 않습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "다국적 기업이 여러 VPC와 온프레미스 네트워크를 연결하기 위해 AWS Transit Gateway를 활용하고 있습니다. 네트워크 아키텍트는 전체 네트워크 아키텍처에 대한 향상된 가시성과 관리를 제공하는 임무를 맡고 있습니다. 아키텍트는 더 나은 모니터링과 통찰력을 위해 AWS Transit Gateway Network Manager의 사용을 고려하고 있습니다.",
        "Question": "네트워크 아키텍트가 향상된 가시성을 위해 AWS Transit Gateway Network Manager를 효과적으로 사용하기 위해 어떤 조합의 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "트랜짓 게이트웨이에 연결된 모든 VPC에서 흐름 로그를 활성화하여 트래픽을 모니터링합니다.",
            "2": "AWS Transit Gateway Network Manager를 구성하여 VPC에 모니터링 에이전트를 자동으로 배포합니다.",
            "3": "네트워크 변경 사항을 감사하기 위해 AWS CloudTrail과 AWS Transit Gateway Network Manager를 통합합니다.",
            "4": "네트워크 리소스를 세분화하고 시각화하기 위해 모든 Transit Gateway 첨부에 태그를 설정합니다.",
            "5": "AWS Transit Gateway Network Manager를 사용하여 Transit Gateway에 연결된 모든 네트워크의 글로벌 뷰를 생성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Transit Gateway Network Manager를 사용하여 Transit Gateway에 연결된 모든 네트워크의 글로벌 뷰를 생성합니다.",
            "모든 Transit Gateway 첨부에 태그를 설정하여 네트워크 리소스를 세분화하고 시각화합니다."
        ],
        "Explanation": "AWS Transit Gateway Network Manager를 사용하면 아키텍트가 모든 네트워크의 포괄적인 글로벌 뷰를 생성하여 아키텍처 전반에 걸쳐 가시성을 향상시킬 수 있습니다. 또한, Transit Gateway 첨부에 태그를 지정하면 리소스 관리와 더 나은 시각화가 가능하여 다양한 네트워크 구성 요소를 조직하고 모니터링하기가 더 쉬워집니다.",
        "Other Options": [
            "흐름 로그를 활성화하면 트래픽에 대한 가시성을 제공하지만 AWS Transit Gateway Network Manager의 특정 기능을 활용하지는 않습니다.",
            "AWS CloudTrail과 통합하는 것은 감사에 유용하지만 AWS Transit Gateway Network Manager가 제공하는 가시성 및 관리 측면을 직접적으로 향상시키지는 않습니다.",
            "AWS Transit Gateway Network Manager는 모니터링 에이전트를 자동으로 배포하는 것을 지원하지 않으며, 가시성은 기존 기능과 다른 AWS 서비스와의 통합을 통해 제공됩니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "금융 서비스 회사는 엄격한 규제 프레임워크 내에서 운영되며, AWS 환경에서 보안 사고 보고 및 경고 프로세스를 자동화할 필요가 있습니다. 이들은 의심스러운 활동을 감지할 뿐만 아니라 실시간 알림 및 준수 보고를 제공하는 솔루션을 원합니다.",
        "Question": "회사가 보안 사고 보고 및 경고를 효과적으로 자동화하기 위해 어떤 AWS 서비스 조합을 구현해야 합니까?",
        "Options": {
            "1": "AWS CloudTrail 및 Amazon CloudWatch Events",
            "2": "AWS Config 및 Amazon SNS",
            "3": "AWS Shield 및 AWS WAF",
            "4": "Amazon GuardDuty 및 AWS Lambda"
        },
        "Correct Answer": "Amazon GuardDuty 및 AWS Lambda",
        "Explanation": "Amazon GuardDuty는 악의적인 활동 및 무단 행동에 대한 지능형 위협 감지 및 지속적인 모니터링을 제공하며, AWS Lambda는 이러한 발견에 대한 응답 및 보고를 자동화하기 위해 미리 정의된 작업을 실행할 수 있습니다. 이 조합은 실시간으로 사고 보고 및 경고 요구 사항을 효과적으로 충족하며, 보안 프로토콜 준수를 보장합니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 API 호출 및 사용자 활동을 기록하는 데 사용되며, Amazon CloudWatch Events는 이벤트를 모니터링할 수 있지만 고급 위협 감지 또는 실시간 사고 보고 기능을 본질적으로 제공하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성을 모니터링하고 알림을 트리거할 수 있지만, GuardDuty처럼 보안 사고에 특별히 초점을 맞추지 않으며, Amazon SNS는 사고 감지보다는 알림 전송에 더 적합합니다.",
            "AWS Shield는 DDoS 보호를 제공하고 AWS WAF는 웹 애플리케이션 방화벽이지만, 두 서비스 모두 보안 사고 감지 또는 자동 보고를 위해 설계되지 않아 회사의 요구 사항에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "글로벌 전자상거래 회사가 서비스를 AWS로 마이그레이션하고 있으며, 다양한 애플리케이션 요구 사항을 효과적으로 지원하는 DNS 솔루션을 구현해야 합니다. 이 회사는 검증 및 보안 목적으로 메타데이터를 통합하면서 IPv4 및 IPv6 트래픽을 모두 처리할 수 있는 능력이 필요합니다. 네트워크 아키텍트는 이러한 요구 사항을 충족하기 위해 적절한 DNS 레코드 유형을 선택하는 임무를 맡고 있습니다.",
        "Question": "네트워크 아키텍트는 IPv4 및 IPv6 트래픽 요구 사항과 검증 메타데이터 추가를 충족하기 위해 어떤 DNS 레코드 유형을 사용해야 합니까?",
        "Options": {
            "1": "IPv4 주소에 대해 A 레코드를 사용하고, IPv6 주소에 대해 AAAA 레코드를 사용하며, 검증 메타데이터에 대해 TXT 레코드를 사용합니다.",
            "2": "별칭을 위해 CNAME 레코드를 사용하고, 역 조회를 위해 PTR 레코드를 사용하며, 서비스 검색을 위해 SRV 레코드를 사용합니다.",
            "3": "IPv4 주소에 대해 오직 A 레코드만 사용하고, 별칭을 위해 CNAME 레코드를 사용하며, IPv6 주소에 대해 AAAA 레코드만 사용합니다.",
            "4": "메일 교환을 위해 MX 레코드를 사용하고, 서비스 검색을 위해 SRV 레코드를 사용하며, 역 조회를 위해 PTR 레코드를 사용합니다."
        },
        "Correct Answer": "IPv4 주소에 대해 A 레코드를 사용하고, IPv6 주소에 대해 AAAA 레코드를 사용하며, 검증 메타데이터에 대해 TXT 레코드를 사용합니다.",
        "Explanation": "A 레코드는 도메인 이름을 IPv4 주소에 매핑하고, AAAA 레코드는 IPv6 주소에 매핑합니다. TXT 레코드는 검증 메타데이터를 저장하는 데 이상적이며, 이 조합은 회사의 요구 사항에 효과적입니다.",
        "Other Options": [
            "CNAME 레코드는 도메인의 루트 수준에서 사용할 수 없으며, PTR 레코드는 주로 역 DNS 조회에 사용되므로 IPv4 및 IPv6 트래픽을 직접 처리하는 요구 사항을 충족하지 않습니다.",
            "MX 레코드는 메일 교환 목적으로만 사용되며 웹 서비스의 트래픽을 처리하지 않습니다. SRV 레코드는 서비스 검색에 사용되지만 IP 주소 매핑 요구 사항을 해결하지 않습니다.",
            "오직 A 레코드만 사용하면 솔루션이 IPv4로 제한되며, CNAME 레코드는 직접 IP 주소 매핑을 지원할 수 없으므로 IPv6 트래픽 요구 사항을 충족하지 못합니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "금융 서비스 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며, 온프레미스 데이터 센터와 Amazon VPC 간의 연결성을 보장하기 위해 강력한 네트워크 모니터링 솔루션이 필요합니다. 이 회사는 배포 전략의 일환으로 네트워크 경로를 검증하고 실시간으로 잠재적인 문제를 식별해야 합니다.",
        "Question": "회사가 연결성을 테스트하고 네트워크 경로를 검증하는 데 도움이 되는 도구 및 서비스의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Route Analyzer를 사용하여 라우팅 경로를 시각화하고 연결 문제를 해결합니다.",
            "2": "AWS Direct Connect를 구현하여 AWS 환경에 전용 네트워크 연결을 제공합니다.",
            "3": "AWS CloudTrail을 활용하여 네트워크 트래픽을 모니터링하고 연결 문제를 분석합니다.",
            "4": "AWS Reachability Analyzer를 활용하여 네트워크 경로를 평가하고 잘못된 구성을 식별합니다.",
            "5": "VPC Flow Logs를 사용하여 VPC 내의 트래픽 흐름 정보를 캡처하고 분석합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Reachability Analyzer를 활용하여 네트워크 경로를 평가하고 잘못된 구성을 식별합니다.",
            "AWS Route Analyzer를 사용하여 라우팅 경로를 시각화하고 연결 문제를 해결합니다."
        ],
        "Explanation": "AWS Reachability Analyzer는 AWS와 온프레미스 리소스 간의 연결성을 테스트하고 분석하기 위해 특별히 설계된 도구입니다. 이는 성공적인 연결을 방해할 수 있는 잘못된 구성을 식별하는 데 도움이 됩니다. AWS Route Analyzer는 라우팅 경로의 시각화를 제공하여 연결 문제를 해결하고 네트워크 트래픽의 올바른 흐름을 보장하는 데 필수적입니다.",
        "Other Options": [
            "AWS Direct Connect는 전용 네트워크 연결을 설정하는 서비스이지만 연결 경로를 테스트하거나 분석하지 않으므로 연결성을 테스트하는 요구 사항을 충족하지 않습니다.",
            "AWS CloudTrail은 주로 API 호출을 기록하는 데 사용되며 네트워크 경로 테스트 기능을 제공하지 않으므로 이 시나리오에서 필요한 연결성 검증에 적합하지 않습니다.",
            "VPC Flow Logs는 트래픽 흐름 모니터링에 유용하지만 리소스 간의 연결성을 적극적으로 테스트하거나 라우팅 경로를 시각화하지 않으므로 실시간 연결성 테스트 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "네트워크 엔지니어는 AWS 환경에서 네트워크 구성 변경이 기존 연결성을 방해하지 않도록 보장하는 임무를 맡고 있습니다. 팀은 구성 변경이 적용된 후 연결 의도를 자동으로 검증할 수 있는 서비스를 사용하는 것을 고려하고 있습니다.",
        "Question": "네트워크 구성 변경 후 연결 의도를 자동으로 검증하기 위해 엔지니어가 어떤 AWS 서비스를 활용해야 합니까?",
        "Options": {
            "1": "AWS Config",
            "2": "Amazon VPC Flow Logs",
            "3": "AWS Network Firewall",
            "4": "AWS Reachability Analyzer"
        },
        "Correct Answer": "AWS Reachability Analyzer",
        "Explanation": "AWS Reachability Analyzer는 네트워크 구성을 분석하고 변경 후 발생할 수 있는 연결 문제를 식별하여 AWS 환경 내 두 엔드포인트 간의 연결성을 검증하도록 특별히 설계되었습니다. 이는 변경 사항이 연결성을 의도치 않게 방해하지 않도록 보장하는 데 도움을 줍니다.",
        "Other Options": [
            "AWS Network Firewall은 주로 트래픽 필터링을 통한 네트워크 보안을 제공하는 데 중점을 두며, 구성 변경 후 연결 검증을 제공하지 않습니다.",
            "Amazon VPC Flow Logs는 네트워크 인터페이스 간의 IP 트래픽에 대한 정보를 캡처하지만, 구성 변경 후 연결 의도를 실시간으로 검증하는 데 사용되지 않습니다.",
            "AWS Config는 AWS 리소스 인벤토리 및 구성 이력을 제공하는 서비스이지만, 변경 후 리소스 간의 연결성을 자동으로 검증하지는 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 회사는 S3 버킷에서 정적 콘텐츠를 제공하기 위해 Amazon CloudFront를 콘텐츠 전송 네트워크(CDN)로 사용하고 있습니다. 회사는 CloudFront 배포에 대한 모든 접근이 로그로 기록되어 추가 분석 및 감사에 사용될 수 있도록 보장하고자 합니다. 네트워크 아키텍트는 CloudFront 배포의 성능에 영향을 주지 않으면서 모든 접근 로그를 캡처하는 솔루션을 구현해야 합니다.",
        "Question": "네트워크 아키텍트가 CloudFront 배포에 대한 접근 요청을 기록하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "AWS Config 규칙을 구성하여 CloudFront 배포를 모니터링하고 S3 버킷에 변경 사항을 기록합니다.",
            "2": "CloudFront 배포에서 표준 로깅을 활성화하고 로그 저장을 위한 S3 버킷을 지정합니다.",
            "3": "AWS CloudTrail을 사용하여 CloudFront 배포에 대한 API 호출을 캡처하고 로그를 S3 버킷으로 라우팅합니다.",
            "4": "Lambda@Edge 함수를 설정하여 접근 요청을 기록하고 이를 CloudWatch 로그 그룹으로 전송합니다."
        },
        "Correct Answer": "CloudFront 배포에서 표준 로깅을 활성화하고 로그 저장을 위한 S3 버킷을 지정합니다.",
        "Explanation": "CloudFront 배포에서 표준 로깅을 활성화하면 모든 접근 요청을 S3 버킷에 자동으로 기록할 수 있습니다. 이는 AWS에서 CloudFront 접근을 기록하기 위해 제공하는 기본 방법으로, 추가 구성이나 성능에 대한 영향을 주지 않으면서 포괄적이고 효율적인 로깅을 보장합니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출을 캡처하지만 CloudFront 배포에 대한 개별 접근 요청을 기록하지 않습니다. 이는 접근 로그 요구 사항을 충족하지 않습니다.",
            "로그 기록을 위한 Lambda@Edge 함수를 사용하는 것은 지연과 복잡성을 초래할 수 있습니다. 요청을 기록할 수 있지만, 기본 로깅 옵션에 비해 표준 접근 로그 기록을 위한 최적의 솔루션은 아닙니다.",
            "AWS Config 규칙은 모니터링 및 준수를 위해 사용되며, 접근 요청을 기록하는 데 사용되지 않습니다. 이는 CloudFront 배포에 대한 트래픽 로그 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 회사는 여러 AWS 리전에서 애플리케이션을 배포하고 있으며, 인프라를 코드로(IaC) 사용하여 네트워크 리소스가 자동으로 프로비저닝되고 최적화되도록 보장하고자 합니다. 팀은 리소스 관리를 위해 AWS CloudFormation을 사용하고 있습니다. 그들은 애플리케이션 부하와 트래픽 패턴의 변화에 따라 VPC 구성 및 보안 그룹 규칙을 동적으로 최적화해야 합니다.",
        "Question": "네트워크 엔지니어가 IaC를 사용하여 클라우드 네트워크 리소스의 최적화를 자동화하기 위해 어떤 접근 방식을 구현해야 합니까?",
        "Options": {
            "1": "메트릭에 따라 VPC 리소스를 조정하기 위한 Auto Scaling 정책을 포함하는 CloudFormation 템플릿을 생성합니다.",
            "2": "AWS Config를 활용하여 네트워크 리소스 구성을 모니터링하고 비준수 설정을 자동으로 수정합니다.",
            "3": "CloudWatch Events에 의해 트리거된 AWS Lambda 함수를 배포하여 트래픽 패턴에 따라 보안 그룹을 수정합니다.",
            "4": "AWS Systems Manager Parameter Store를 구현하여 수동 조정을 위한 VPC 구성 매개변수를 관리합니다."
        },
        "Correct Answer": "메트릭에 따라 VPC 리소스를 조정하기 위한 Auto Scaling 정책을 포함하는 CloudFormation 템플릿을 생성합니다.",
        "Explanation": "Auto Scaling 정책이 포함된 CloudFormation 템플릿을 사용하면 조직이 VPC 리소스를 동적으로 조정할 수 있어, 네트워크가 실시간 메트릭에 따라 최적화되도록 하여 최적화 프로세스를 효과적으로 자동화할 수 있습니다.",
        "Other Options": [
            "AWS Config는 주로 준수 모니터링에 사용되며, 부하나 트래픽에 따라 리소스를 직접 최적화하지 않습니다. 이는 구성이 정의된 규칙을 준수하도록 보장합니다.",
            "AWS Lambda를 사용하여 보안 그룹을 수정하는 것은 유효한 접근 방식이지만, 모든 네트워크 리소스를 자동으로 최적화하는 포괄적인 솔루션을 포함하지 않으며, 정의된 IaC 전략 없이 일관되지 않은 상태를 초래할 수 있습니다.",
            "AWS Systems Manager Parameter Store는 구성 데이터를 관리하기 위한 것이며, 네트워크 리소스를 동적으로 최적화하는 자동화를 제공하지 않습니다. 이는 수동 개입이 필요하여 자동화 요구 사항과 모순됩니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "네트워크 엔지니어가 가상 사설 클라우드(VPC) 내의 잠재적인 연결 문제를 식별하기 위해 네트워크 성능 메트릭을 분석하는 임무를 맡았습니다. 그들은 특히 VPC 흐름 로그와 Amazon CloudWatch 로그를 사용하여 트래픽을 모니터링하고 패턴을 분석하고 있습니다.",
        "Question": "성능에 영향을 미치는 특정 EC2 인스턴스로의 수신 트래픽의 갑작스러운 증가를 효과적으로 진단하기 위해 엔지니어가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "EC2 인스턴스에서 세부 모니터링을 활성화하여 더 세분화된 메트릭을 캡처합니다.",
            "2": "EC2 인스턴스와 관련된 보안 그룹 규칙을 분석하여 잘못된 구성이 있는지 확인합니다.",
            "3": "EC2 인스턴스의 VPC 흐름 로그를 검토하여 수신 트래픽의 출발지 IP 주소를 식별합니다.",
            "4": "Amazon CloudWatch를 사용하여 EC2 인스턴스의 CPU 사용률을 기반으로 경고를 생성합니다."
        },
        "Correct Answer": "EC2 인스턴스의 VPC 흐름 로그를 검토하여 수신 트래픽의 출발지 IP 주소를 식별합니다.",
        "Explanation": "VPC 흐름 로그를 검토하면 트래픽 패턴에 대한 귀중한 통찰력을 제공하며, 출발지 IP 주소와 트래픽 양을 포함하여 EC2 인스턴스의 성능에 영향을 미치는 수신 트래픽의 갑작스러운 증가를 진단하는 데 중요합니다.",
        "Other Options": [
            "Amazon CloudWatch를 사용하여 CPU 사용률을 기반으로 경고를 생성하는 것은 성능 문제에 대한 일부 지표를 제공할 수 있지만, 수신 트래픽의 갑작스러운 증가 원인을 직접적으로 식별하는 데 도움이 되지 않습니다.",
            "EC2 인스턴스에서 세부 모니터링을 활성화하면 더 세분화된 메트릭을 캡처하지만, 이미 증가가 발생했기 때문에 현재 문제를 진단하는 데 도움이 되지 않습니다.",
            "보안 그룹 규칙을 분석하는 것은 접근 제어를 이해하는 데 중요하지만, 성능에 영향을 미치는 실제 트래픽 흐름과 패턴에 대한 즉각적인 통찰력을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사가 AWS에 호스팅된 웹 애플리케이션에 대해 빈번한 분산 서비스 거부(DDoS) 공격을 경험하고 있습니다. 이 회사는 DNS 인프라의 복원력을 강화하고 다양한 지리적 위치에서 애플리케이션에 접근하는 사용자에 대한 응답 시간을 개선할 솔루션을 찾고 있습니다. 또한 회사는 DNS 설정이 견고하고 높은 트래픽을 효율적으로 처리할 수 있도록 하고 싶어합니다.",
        "Question": "회사가 DDoS 공격을 효과적으로 완화하고 DNS 성능을 개선하기 위해 구현해야 할 솔루션은 무엇입니까?",
        "Options": {
            "1": "Route 53에서 셔플 샤딩을 활성화하여 호스팅된 영역을 여러 인스턴스에 분산시켜 DDoS 공격의 영향을 줄이고 모든 네임 서버가 호스팅된 영역의 도메인 이름과 일치하도록 합니다.",
            "2": "Route 53에서 재사용 가능한 위임 세트를 활용하여 DNS 레코드를 중앙에서 관리하고 호스팅된 영역에 대한 권한을 여러 DNS 서버에 위임하여 해상도 시간을 개선합니다.",
            "3": "Route 53에서 여러 AWS 리전에 걸쳐 여러 표준 호스팅된 영역을 생성하여 DDoS 공격 중 트래픽 급증을 처리하며, 각 호스팅된 영역이 고유한 네임 서버 세트를 갖도록 합니다.",
            "4": "Amazon Route 53을 Anycast 스트라이핑과 함께 구현하여 여러 인스턴스가 동일한 IP 주소에 응답할 수 있도록 하여 사용자가 가장 가까운 인스턴스로 라우팅되도록 하고 다양한 엔드포인트에 트래픽을 분산시킵니다."
        },
        "Correct Answer": "Amazon Route 53을 Anycast 스트라이핑과 함께 구현하여 여러 인스턴스가 동일한 IP 주소에 응답할 수 있도록 하여 사용자가 가장 가까운 인스턴스로 라우팅되도록 하고 다양한 엔드포인트에 트래픽을 분산시킵니다.",
        "Explanation": "Amazon Route 53을 Anycast 스트라이핑과 함께 구현하면 DDoS 공격에 대한 효과적인 솔루션을 제공하여 트래픽을 가장 가까운 인스턴스로 라우팅하고 부하를 분산시켜 성능을 향상시킵니다. 이 설정은 DNS 인프라의 복원력도 증가시킵니다.",
        "Other Options": [
            "여러 표준 호스팅된 영역을 생성하는 것은 DDoS 공격 처리 능력을 본질적으로 개선하지 않으며, 각 영역은 별도의 네임 서버를 갖고 분산 트래픽 처리를 통해 이점을 얻지 못합니다.",
            "재사용 가능한 위임 세트를 활용하는 것은 콘솔을 통해 가능하지 않으며 DDoS 완화 또는 DNS 해상도 성능 개선을 위한 직접적인 솔루션을 제공하지 않습니다.",
            "셔플 샤딩을 활성화하면 호스팅된 영역을 분산하는 데 도움이 될 수 있지만, DDoS 공격의 라우팅 효율성이나 직접적인 완화에 대해서는 Anycast 스트라이핑만큼 효과적으로 다루지 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 회사가 AWS에서 여러 애플리케이션을 운영하고 있으며, 서비스 간 데이터 전송과 관련된 간헐적인 지연 문제와 증가된 비용을 경험하고 있습니다. 네트워크 엔지니어는 성능, 신뢰성 및 비용 효율성을 개선하기 위해 AWS 네트워크를 최적화하는 임무를 맡았습니다.",
        "Question": "네트워크 엔지니어가 AWS 네트워크를 최적화하기 위해 취해야 할 조치의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Direct Connect를 사용하여 온프레미스와 AWS 간의 전용 네트워크 연결을 설정합니다.",
            "2": "VPC 피어링을 활성화하여 추가 비용 없이 VPC 간 트래픽을 관리합니다.",
            "3": "AWS Global Accelerator를 활용하여 글로벌 애플리케이션의 트래픽 라우팅을 최적화합니다.",
            "4": "중요한 애플리케이션 엔드포인트에 대해 Amazon Route 53 지연 기반 라우팅을 구성합니다.",
            "5": "정적 자산을 위한 콘텐츠 전송 네트워크로 Amazon CloudFront를 구현합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "정적 자산을 위한 콘텐츠 전송 네트워크로 Amazon CloudFront를 구현합니다.",
            "AWS Global Accelerator를 활용하여 글로벌 애플리케이션의 트래픽 라우팅을 최적화합니다."
        ],
        "Explanation": "Amazon CloudFront를 구현하면 정적 자산을 엣지 위치에 캐시하여 사용자에 대한 지연을 줄이고 원본에서의 데이터 전송 비용을 감소시킵니다. AWS Global Accelerator를 활용하면 트래픽을 AWS 글로벌 네트워크를 통해 라우팅하여 글로벌 애플리케이션의 성능을 개선하고 가용성을 높이며 지연을 줄입니다.",
        "Other Options": [
            "AWS Direct Connect를 사용하는 것은 하이브리드 클라우드 설정에 유익하지만 모든 애플리케이션의 지연이나 비용 문제를 직접적으로 해결하지 않으므로 이 시나리오에 최적이 아닙니다.",
            "Amazon Route 53 지연 기반 라우팅을 구성하는 것은 성능에 도움이 될 수 있지만, 비용에 직접적인 영향을 미치거나 신뢰성을 보장하지는 않습니다.",
            "VPC 피어링을 활성화하면 VPC 간 트래픽을 관리하는 데 도움이 될 수 있지만, 전체 네트워크 성능을 최적화하거나 데이터 전송과 관련된 비용을 줄이는 데 반드시 도움이 되지는 않습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "금융 서비스 회사가 AWS에서 고가용성 웹 애플리케이션을 운영하고 있습니다. 이 애플리케이션은 보안과 내결함성을 보장하면서 다양한 수준의 트래픽을 처리해야 합니다. 네트워크 아키텍트는 이러한 요구 사항을 충족하기 위해 적절한 로드 밸런싱 솔루션을 선택하는 임무를 맡고 있습니다.",
        "Question": "웹 애플리케이션의 고가용성과 보안을 보장하면서 들어오는 애플리케이션 트래픽을 분산하는 데 가장 적합한 로드 밸런싱 옵션은 무엇입니까?",
        "Options": {
            "1": "TCP 트래픽을 처리하기 위해 네트워크 로드 밸런서를 구현하고 액세스 제어를 위한 보안 그룹을 구성합니다.",
            "2": "HTTP/HTTPS 트래픽을 라우팅하기 위해 애플리케이션 로드 밸런서를 사용하고 보안을 위해 웹 애플리케이션 방화벽(WAF)을 활성화합니다.",
            "3": "가상 어플라이언스를 관리하고 IP 주소에 따라 트래픽을 유도하기 위해 게이트웨이 로드 밸런서를 선택합니다.",
            "4": "추가 보안 기능 없이 인스턴스 간에 트래픽을 분산하기 위해 클래식 로드 밸런서를 배포합니다."
        },
        "Correct Answer": "HTTP/HTTPS 트래픽을 라우팅하기 위해 애플리케이션 로드 밸런서를 사용하고 보안을 위해 웹 애플리케이션 방화벽(WAF)을 활성화합니다.",
        "Explanation": "애플리케이션 로드 밸런서(ALB)는 HTTP 및 HTTPS 트래픽을 처리하도록 특별히 설계되어 웹 애플리케이션에 이상적입니다. 고급 라우팅 기능을 포함하고 있으며 AWS WAF와 통합하여 일반적인 웹 공격에 대한 강력한 보안을 제공합니다. 또한 스티키 세션 및 SSL 종료와 같은 기능을 지원하여 고가용성과 사용자 경험을 보장합니다.",
        "Other Options": [
            "네트워크 로드 밸런서(NLB)는 TCP 트래픽에 최적화되어 있으며 초당 수백만 개의 요청을 처리할 수 있지만, 고급 HTTP 기능이 부족하고 AWS WAF와 통합되지 않아 포괄적인 보안이 필요한 웹 애플리케이션에는 적합하지 않습니다.",
            "게이트웨이 로드 밸런서는 주로 방화벽 및 침입 탐지 시스템과 같은 가상 어플라이언스를 배포하고 관리하기 위한 것입니다. 웹 애플리케이션에 직접 트래픽을 분산하기 위해 설계되지 않았으며 필요한 고급 라우팅 및 보안 기능이 부족합니다.",
            "클래식 로드 밸런서는 경로 기반 라우팅이나 WAF와의 통합과 같은 애플리케이션 로드 밸런서에서 제공하는 고급 기능을 제공하지 않으며, 일반적으로 레거시 옵션으로 간주되어 현대 웹 애플리케이션의 보안 요구 사항을 충족하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사가 AWS 인프라의 보안을 강화하고 네트워크 문제를 해결하기 위해 DNS 로깅 및 모니터링 솔루션을 구현하고 있습니다. 이 솔루션은 트래픽 패턴을 분석하고 이상을 감지하기 위해 DNS 쿼리 및 응답을 캡처해야 합니다.",
        "Question": "회사가 VPC에서 DNS 쿼리를 로깅하고 모니터링하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "커스텀 DNS 로깅 솔루션을 실행하기 위해 EC2 인스턴스를 설정합니다.",
            "2": "DNS 쿼리 트래픽을 캡처하기 위해 VPC 흐름 로그를 활성화합니다.",
            "3": "모든 DNS 요청을 로깅하기 위해 AWS CloudTrail을 구현합니다.",
            "4": "DNS 쿼리를 로깅하기 위해 Amazon Route 53 Resolver 쿼리 로깅을 사용합니다."
        },
        "Correct Answer": "DNS 쿼리를 로깅하기 위해 Amazon Route 53 Resolver 쿼리 로깅을 사용합니다.",
        "Explanation": "Amazon Route 53 Resolver 쿼리 로깅을 사용하는 것은 VPC에서 DNS 쿼리를 로깅하는 가장 효과적인 방법입니다. Route 53 Resolver가 수신한 DNS 쿼리에 대한 자세한 로깅을 제공하며, DNS 트래픽 패턴 및 잠재적인 보안 문제를 쉽게 분석할 수 있습니다.",
        "Other Options": [
            "VPC 흐름 로그를 활성화하면 네트워크 트래픽을 캡처하지만, DNS 쿼리 및 응답을 구체적으로 로깅하지 않으므로 자세한 DNS 모니터링에는 덜 효과적입니다.",
            "AWS CloudTrail은 AWS 서비스 내에서 API 호출 및 작업을 로깅하는 데 사용되지만, DNS 쿼리 트래픽을 로깅하지 않으므로 DNS 로깅 요구 사항을 충족하지 않습니다.",
            "커스텀 DNS 로깅을 위한 EC2 인스턴스를 설정하는 것은 리소스를 많이 소모하고 복잡할 수 있으며, Route 53 Resolver 쿼리 로깅이 제공하는 포괄적이고 통합된 로깅 기능을 제공하지 않을 수 있습니다."
        ]
    }
]