[
    {
        "Question Number": "1",
        "Situation": "한 회사가 AWS에 호스팅된 다양한 애플리케이션을 포함하는 네트워크 아키텍처의 보안을 평가하고 있습니다. 보안 팀은 TCP와 UDP의 차이점과 애플리케이션에 적합한 포트 및 프로토콜 사용에 대해 이해하는 데 특히 관심이 있습니다. 그들은 애플리케이션이 효율적일 뿐만 아니라 무단 접근으로부터 안전하길 원합니다.",
        "Question": "네트워크 보안 및 애플리케이션 성능의 맥락에서 TCP와 UDP 간의 주요 차이점을 가장 잘 설명하는 진술은 무엇입니까?",
        "Options": {
            "1": "UDP는 연결 지향적이며 보장된 전송이 필요한 애플리케이션에 적합하고, TCP는 비연결 지향적이며 지연에 민감한 애플리케이션에 가장 적합합니다.",
            "2": "TCP는 전송 계층에서 데이터 무결성을 보장하고, UDP는 애플리케이션 계층에서 작동하여 빠른 전송이 필요한 애플리케이션에 최소한의 오버헤드를 제공합니다.",
            "3": "TCP는 연결 지향적이며 신뢰할 수 있는 데이터 전송을 보장하고, UDP는 비연결 지향적이며 전송을 보장하지 않으므로 비디오 스트리밍과 같은 애플리케이션에 적합합니다.",
            "4": "TCP와 UDP는 모두 연결 지향 프로토콜이지만, TCP는 연결을 설정하기 위해 3-way 핸드셰이크를 사용하고, UDP는 핸드셰이크 메커니즘이 필요하지 않습니다."
        },
        "Correct Answer": "TCP는 연결 지향적이며 신뢰할 수 있는 데이터 전송을 보장하고, UDP는 비연결 지향적이며 전송을 보장하지 않으므로 비디오 스트리밍과 같은 애플리케이션에 적합합니다.",
        "Explanation": "TCP(전송 제어 프로토콜)는 오류 검사를 통해 신뢰할 수 있는 통신을 보장하고 데이터 전송을 보장하도록 설계되어 일관된 데이터 무결성이 필요한 애플리케이션에 이상적입니다. 반면, UDP(사용자 데이터그램 프로토콜)는 더 가벼워서 연결을 설정하거나 전송을 보장하지 않음으로써 더 빠른 속도를 제공하며, 이는 신뢰성보다 속도가 우선시되는 비디오 스트리밍과 같은 애플리케이션에 유리합니다.",
        "Other Options": [
            "UDP는 연결 지향적이지 않으며, 비연결 지향적이므로 더 빠른 전송이 가능하지만 데이터 전송을 보장하지 않으므로 이 진술은 잘못되었습니다.",
            "이 진술은 두 프로토콜을 잘못 설명합니다; TCP는 연결 지향적이며 3-way 핸드셰이크를 사용하고, UDP는 연결을 설정하지 않으므로 이 옵션은 잘못되었습니다.",
            "UDP는 TCP와 마찬가지로 전송 계층에서 작동하며, 두 프로토콜은 동일한 계층에 있으므로 이 진술은 이들 프로토콜의 기능을 잘못 설명합니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "데이터 엔지니어링 팀은 특정 접근 제어가 필요한 민감한 데이터 파일을 저장하기 위해 Amazon S3를 활용하고 있습니다. 그들은 세밀한 특성으로 인해 개별 객체에 대한 권한을 관리하기 위해 S3 객체 접근 제어 목록(ACL)을 사용하는 것을 고려하고 있습니다. 그러나 팀은 IAM 사용자 정책 및 버킷 정책과 함께 ACL을 사용할 때의 함의에 대해 알고 있습니다. 그들은 접근 제어 전략이 강력하고 AWS 모범 사례를 준수하는지 확인하고 싶어합니다.",
        "Question": "S3 객체 접근 제어 목록(ACL)과 IAM 정책 및 버킷 정책 간의 상호 작용에 관한 다음 진술 중 올바른 것은 무엇입니까?",
        "Options": {
            "1": "S3 ACL은 IAM 사용자 정책이 S3 리소스에 대한 접근을 명시적으로 거부하더라도 객체에 대한 접근을 허용할 수 있습니다.",
            "2": "S3 ACL은 버킷 정책보다 S3 객체에 대한 접근을 관리하는 권장 방법입니다.",
            "3": "S3 ACL은 IAM 정책보다 우선하며, IAM 정책에 의해 거부되더라도 사용자에게 객체에 대한 접근을 허용합니다.",
            "4": "S3 ACL은 버킷 수준에서만 적용할 수 있으며, 버킷 내의 개별 객체에는 적용할 수 없습니다."
        },
        "Correct Answer": "S3 ACL은 IAM 사용자 정책이 S3 리소스에 대한 접근을 명시적으로 거부하더라도 객체에 대한 접근을 허용할 수 있습니다.",
        "Explanation": "S3 ACL은 IAM 사용자 정책에 명시적인 DENY가 있더라도 객체에 대한 접근을 허용할 수 있습니다. 이는 공개 접근 설정이나 다른 ACL을 통해 접근이 허용될 수 있기 때문에, 사용자가 IAM 정책 제한을 우회하여 객체에 대한 공개 URL을 통해 직접 접근할 수 있는 상황을 만들 수 있습니다.",
        "Other Options": [
            "S3 ACL은 IAM 정책보다 우선하지 않으며, IAM 정책이 먼저 평가되고 명시적인 DENY는 공개 접근 설정에 의해 재정의되지 않는 한 접근을 차단합니다.",
            "S3 ACL은 개별 객체에 적용할 수 있으며, 버킷 수준뿐만 아니라 객체 수준에서 특정 권한을 허용합니다.",
            "S3 ACL은 S3 객체에 대한 접근을 관리하는 권장 방법이 아니며, AWS는 더 나은 제어 및 관리를 위해 IAM 정책 및 버킷 정책을 사용할 것을 권장합니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 금융 서비스 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며, Amazon EC2 인스턴스에 대한 안전한 접근을 보장해야 합니다. 보안 엔지니어는 키 쌍을 사용하여 Linux 인스턴스에 대한 SSH 접근과 Windows 인스턴스에 대한 RDP 접근을 관리하는 임무를 맡고 있습니다. 이 시나리오에서 보안성을 높이기 위해 엔지니어가 구현해야 할 전략은 무엇입니까?",
        "Question": "보안 엔지니어가 보안 모범 사례를 준수하면서 접근을 효과적으로 관리하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "모든 인스턴스에 대해 단일 키 쌍을 사용하고 팀의 여러 사용자와 개인 키를 공유합니다.",
            "2": "각 인스턴스에 대해 고유한 키 쌍을 생성하고, 개인 키를 권한이 있는 사용자에게 안전하게 배포합니다.",
            "3": "각 인스턴스에 대해 새로운 키 쌍을 생성하고, 개인 키를 암호화되지 않은 S3 버킷에 저장합니다.",
            "4": "모든 인스턴스에 단일 키 쌍을 가져오고, 개인 키를 EC2 인스턴스의 메타데이터에 저장합니다."
        },
        "Correct Answer": "각 인스턴스에 대해 고유한 키 쌍을 생성하고, 개인 키를 권한이 있는 사용자에게 안전하게 배포합니다.",
        "Explanation": "각 인스턴스에 대해 고유한 키 쌍을 사용하면 더 나은 접근 제어 및 감사가 가능합니다. 개인 키가 유출되면 영향을 받는 인스턴스만 위험에 처하게 되며, 키 쌍을 교체하여 접근을 쉽게 취소할 수 있습니다.",
        "Other Options": [
            "암호화되지 않은 S3 버킷에 개인 키를 저장하는 것은 민감한 데이터를 잠재적인 무단 접근에 노출시킵니다. 이 관행은 보안 모범 사례를 위반하며 키 유출 위험을 증가시킵니다.",
            "모든 인스턴스에 대해 단일 키 쌍을 사용하는 것은 상당한 보안 위험을 초래합니다. 키가 유출되면 해당 키를 사용하는 모든 인스턴스가 취약해지며, 접근을 추적하고 권한을 관리하기 어려워집니다.",
            "EC2 인스턴스의 메타데이터에 개인 키를 저장하는 것은 안전하지 않으며, 메타데이터는 인스턴스에서 실행 중인 모든 프로세스가 접근할 수 있습니다. 이 방법은 접근 관리 및 키 취소를 위한 강력한 메커니즘을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 금융 서비스 회사가 AWS CloudFormation을 사용하여 인프라를 배포하고 있습니다. 준수 및 보안 기준을 유지하기 위해, 이 회사는 CloudFormation 템플릿이 강화되고, 원하는 상태에서의 구성 드리프트가 효과적으로 감지되고 관리되도록 하는 것을 목표로 하고 있습니다.",
        "Question": "CloudFormation 템플릿이 안전하고 드리프트 감지가 효과적으로 구현되도록 보장하기 위해 보안 엔지니어가 어떤 접근 방식을 추천해야 합니까?",
        "Options": {
            "1": "배포 후 CloudFormation 템플릿의 무결성을 수동으로 확인하기 위해 사용자 지정 스크립트를 구현합니다.",
            "2": "드리프트 감지 없이 S3 버킷에 저장된 미리 정의된 템플릿만 사용하도록 AWS CloudFormation을 제한합니다.",
            "3": "AWS Lambda 함수를 활성화하여 CloudFormation 스택에서 감지된 드리프트를 자동으로 수정합니다.",
            "4": "AWS Config를 활용하여 CloudFormation 스택 리소스를 모니터링하고 모든 스택에 대해 드리프트 감지를 활성화합니다."
        },
        "Correct Answer": "AWS Config를 활용하여 CloudFormation 스택 리소스를 모니터링하고 모든 스택에 대해 드리프트 감지를 활성화합니다.",
        "Explanation": "AWS Config를 사용하여 CloudFormation 스택 리소스를 모니터링하면 자동화된 준수 검사 및 드리프트 감지가 가능하여 리소스에 대한 변경 사항이 추적되고 필요에 따라 수정될 수 있습니다. 이는 보안 거버넌스 및 코드로서의 인프라에 대한 모범 사례와 일치합니다.",
        "Other Options": [
            "사용자 지정 스크립트는 오류가 발생할 수 있고 노동 집약적이며, AWS Config가 제공하는 자동화 및 실시간 모니터링 기능이 부족합니다. 이 접근 방식은 지속적인 준수를 보장하지 않습니다.",
            "드리프트 감지 없이 미리 정의된 템플릿으로 AWS CloudFormation을 제한하면 유연성이 제한되고 지속적인 모니터링 및 준수의 필요성을 해결하지 못하므로 효과적인 솔루션이 아닙니다.",
            "AWS Lambda를 수정에 사용할 수 있지만, 포괄적인 드리프트 감지 메커니즘 없이 Lambda 함수에만 의존하는 것은 준수 및 보안 기준의 사전 모니터링을 보장하지 않습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 금융 서비스 회사가 고객 데이터를 저장하기 위해 Amazon S3를 사용하고 있으며, 저장 비용을 최적화하고 규제 준수를 보장하기 위해 자동화된 데이터 라이프사이클 관리 전략을 구현하고자 합니다. 이 회사는 데이터의 연령 및 사용 패턴에 따라 서로 다른 저장 클래스 간에 데이터를 전환하고 특정 보존 기간 후에 데이터를 삭제하는 것을 원하고 있습니다.",
        "Question": "Amazon S3 객체의 라이프사이클 관리를 자동화하여 저장 클래스 간에 전환하고 지정된 보존 기간 후에 삭제하는 데 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon S3 라이프사이클 정책",
            "2": "AWS CloudTrail",
            "3": "AWS Backup",
            "4": "AWS Config"
        },
        "Correct Answer": "Amazon S3 라이프사이클 정책",
        "Explanation": "Amazon S3 라이프사이클 정책을 사용하면 객체를 자동으로 서로 다른 저장 클래스로 전환하거나 지정된 기간 후에 삭제하는 규칙을 정의할 수 있습니다. 이는 비용 관리 및 데이터 보존 정책 준수를 효과적으로 수행하는 데 필수적입니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 AWS 계정의 API 활동을 기록하고 모니터링하는 데 사용되며, S3 객체에 대한 라이프사이클 관리 기능을 제공하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성을 평가, 감사 및 평가할 수 있는 서비스이지만, S3 객체의 라이프사이클을 직접 관리하지는 않습니다.",
            "AWS Backup은 AWS 서비스에 대한 중앙 집중식 백업 서비스이지만, 저장 클래스 전환이나 연령에 따른 삭제를 위한 S3 객체의 라이프사이클 관리를 자동화하지 않습니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 회사의 보안 팀이 AWS 환경 내에서 의심스러운 활동을 감지했습니다. 그들은 운영에 미치는 영향을 최소화하면서 이 사건에 효율적으로 대응하기 위해 모범 사례를 따라야 합니다. 팀은 사건 대응 프로세스에서 활용할 다양한 AWS 서비스와 모범 사례를 고려하고 있습니다.",
        "Question": "사건 대응 노력을 촉진하기 위해 팀이 중앙 집중식 로깅 및 모니터링에 주로 사용해야 하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Config",
            "2": "Amazon GuardDuty",
            "3": "AWS CloudTrail",
            "4": "AWS Systems Manager"
        },
        "Correct Answer": "AWS CloudTrail",
        "Explanation": "AWS CloudTrail은 API 호출 및 AWS 계정의 변경 사항에 대한 포괄적인 로깅을 제공하도록 설계되어 있어 사용자 활동을 추적하고 잠재적인 보안 사건을 식별하는 데 필수적입니다. 이는 팀이 로그를 검토하고 사건으로 이어진 사건의 순서를 이해할 수 있도록 함으로써 사건 대응의 주요 도구 역할을 합니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성 변경을 모니터링하는 데 주로 사용되며, CloudTrail만큼 상세한 API 호출 로깅을 제공하지 않습니다.",
            "Amazon GuardDuty는 악의적인 활동 및 무단 행동을 모니터링하는 위협 탐지 서비스이지만, AWS 환경 내에서 수행된 모든 작업을 추적하기 위한 중앙 집중식 로깅 솔루션으로는 기능하지 않습니다.",
            "AWS Systems Manager는 AWS 리소스 전반에 걸쳐 운영 작업을 관리하고 자동화하는 데 도움을 주지만, 사건 대응 목적을 위한 로깅 및 모니터링에 중점을 두고 있지 않습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "회사가 특정 사용자가 유효한 IAM 역할을 가지고 있음에도 불구하고 리소스에 접근할 수 없는 권한 문제를 겪고 있습니다. 보안 팀은 이러한 권한 실패의 근본 원인을 파악해야 합니다. 그들은 AWS 도구를 활용하여 문제를 효과적으로 해결할 계획입니다.",
        "Question": "사용자의 역할과 관련된 권한을 이해하고 접근 거부 문제를 해결하기 위해 IAM 정책을 시뮬레이션하는 데 사용할 수 있는 AWS 도구는 무엇입니까?",
        "Options": {
            "1": "AWS CloudFormation",
            "2": "AWS Shield",
            "3": "IAM Policy Simulator",
            "4": "AWS Config"
        },
        "Correct Answer": "IAM Policy Simulator",
        "Explanation": "IAM Policy Simulator는 사용자가 특정 사용자 또는 역할에 대해 어떤 권한이 부여되거나 거부되는지를 테스트할 수 있도록 해줍니다. 이는 접근이 실패하는 이유를 이해하는 데 도움이 되며, 권한 문제를 효과적으로 해결하는 데 기여합니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스 구성 및 준수를 시간에 따라 추적하는 데 주로 사용되며, IAM 정책을 시뮬레이션하거나 접근 문제를 해결하는 데 사용되지 않습니다.",
            "AWS Shield는 애플리케이션을 공격으로부터 보호하는 관리형 DDoS 보호 서비스이지만, IAM 권한 문제를 해결하는 기능을 제공하지 않습니다.",
            "AWS CloudFormation은 인프라를 코드로 관리하고 AWS 리소스를 생성하는 서비스이지만, IAM 권한을 시뮬레이션하거나 접근 거부를 해결하는 도구를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "금융 서비스 회사는 보안 및 준수 목적을 위해 AWS 리소스에 대한 모든 API 호출이 기록되도록 해야 합니다. 현재 AWS Identity and Access Management (IAM)를 사용하여 권한을 관리하고 있으며, API 호출에 대한 자세한 정보를 캡처하는 로깅 솔루션을 구현하고자 합니다. 회사는 또한 무단 접근 시도를 검토할 수 있도록 로그를 확인할 수 있기를 원합니다.",
        "Question": "AWS 리소스에 대한 API 호출을 자동으로 기록하기 위해 보안 엔지니어가 활성화해야 하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon CloudWatch Logs",
            "2": "VPC Flow Logs",
            "3": "AWS Config",
            "4": "AWS CloudTrail"
        },
        "Correct Answer": "AWS CloudTrail",
        "Explanation": "AWS CloudTrail은 AWS 서비스에 대한 모든 API 호출을 기록하도록 설계된 서비스입니다. 이는 사용자, 역할 또는 AWS 서비스에 의해 수행된 모든 작업의 자세한 기록을 제공하며, 이는 준수 및 보안 모니터링에 필수적입니다.",
        "Other Options": [
            "Amazon CloudWatch Logs는 주로 애플리케이션 로그 및 메트릭을 기록하고 모니터링하는 데 사용되지만, CloudTrail처럼 AWS 서비스에 대한 API 호출을 캡처하지 않습니다.",
            "VPC Flow Logs는 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처하지만, AWS 서비스에 대한 API 호출을 기록하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성 변경 및 준수를 추적하는 데 사용되지만, 해당 리소스에 대한 API 호출을 기록하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "조직은 보안을 강화하고 민감한 데이터에 대한 무단 접근 위험을 줄이기 위해 AWS에서 리소스 격리 메커니즘을 구현하고 있습니다. 보안 팀은 리소스가 기능과 민감성에 따라 효과적으로 격리되도록 해야 합니다.",
        "Question": "AWS에서 효과적인 리소스 격리를 달성하는 데 도움이 되는 옵션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "Amazon VPC 엔드포인트를 구현하여 리소스를 공용 인터넷에 노출하지 않고 AWS 서비스에 안전하게 연결합니다.",
            "2": "신뢰할 수 있는 IP 주소에서만 트래픽을 허용하기 위해 Amazon EC2 보안 그룹을 사용합니다.",
            "3": "AWS Lambda 함수를 여러 서브넷에 배포하여 준수 요구 사항에 따라 작업을 분리합니다.",
            "4": "리소스 접근 제어를 위해 AWS Identity and Access Management (IAM) 역할을 활용합니다.",
            "5": "서비스 제어 정책으로 AWS Organizations를 구성하여 구성원 계정에서 서비스 사용을 제한합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon VPC 엔드포인트를 구현하여 리소스를 공용 인터넷에 노출하지 않고 AWS 서비스에 안전하게 연결합니다.",
            "서비스 제어 정책으로 AWS Organizations를 구성하여 구성원 계정에서 서비스 사용을 제한합니다."
        ],
        "Explanation": "Amazon VPC 엔드포인트를 구현하면 AWS 서비스에 대한 안전하고 개인적인 연결이 가능해져 리소스가 공용 인터넷을 통과할 필요가 없어 보안이 강화됩니다. 서비스 제어 정책(SCP)으로 AWS Organizations를 구성하면 거버넌스를 시행하고 구성원 계정에서 특정 서비스나 작업에 대한 접근을 제한하여 추가적인 격리 및 제어 계층을 제공합니다.",
        "Other Options": [
            "IAM 역할을 활용하는 것은 접근 관리에 중요하지만, 본질적으로 리소스 격리를 제공하지 않으며 주로 사용자 및 서비스에 대한 권한을 관리합니다.",
            "AWS Lambda 함수를 여러 서브넷에 배포하는 것은 작업 분리에 도움이 될 수 있지만, AWS 계정이나 서비스 전반에 걸쳐 리소스 격리를 직접적으로 해결하지는 않습니다.",
            "Amazon EC2 보안 그룹을 사용하여 트래픽을 제한하는 것은 인스턴스 수준에서 접근 제어를 위한 좋은 관행이지만, 서로 다른 리소스나 계정 간의 격리를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 AWS를 사용하여 웹 애플리케이션을 호스팅하고 있으며, 보안 팀은 잠재적인 DDoS 공격에 대해 우려하고 있습니다. 그들은 이러한 사건 동안 위험을 완화하고 서비스 가용성을 보장하기 위한 강력한 전략이 필요합니다.",
        "Question": "보안 팀이 AWS에서 호스팅되는 웹 애플리케이션에 대한 DDoS 공격을 효과적으로 완화하기 위해 우선적으로 고려해야 할 접근 방식은 무엇입니까?",
        "Options": {
            "1": "보안 그룹에만 의존하여 들어오는 트래픽을 필터링하고, 다른 DDoS 완화 조치 없이 접근 패턴을 추적하기 위해 상세 로깅을 활성화합니다.",
            "2": "알려진 IP 주소에서만 접근을 허용하고 모든 리소스에 대한 공개 접근을 비활성화하여 웹 애플리케이션에 대한 모든 들어오는 트래픽을 제한합니다.",
            "3": "AWS Shield Advanced를 구현하여 향상된 DDoS 보호를 제공하고 공격 중에 리소스를 자동으로 증가시키기 위해 스케일링 정책을 구성합니다.",
            "4": "모든 웹 애플리케이션 트래픽에 대해 단일 진입점을 사용하고 AWS WAF를 구성하여 특정 속도 제한을 초과하는 모든 요청을 차단합니다."
        },
        "Correct Answer": "AWS Shield Advanced를 구현하여 향상된 DDoS 보호를 제공하고 공격 중에 리소스를 자동으로 증가시키기 위해 스케일링 정책을 구성합니다.",
        "Explanation": "AWS Shield Advanced를 구현하면 정교한 DDoS 공격에 대한 강력한 보호를 제공하며, 스케일링 정책을 구성하면 리소스가 동적으로 조정되어 트래픽 급증을 흡수하고 가용성을 유지할 수 있습니다.",
        "Other Options": [
            "알려진 IP 주소로 들어오는 트래픽을 제한하면 합법적인 사용자의 접근이 제한될 수 있으며, 여러 출처가 관련된 DDoS 공격에 대한 포괄적인 해결책이 아닙니다.",
            "단일 진입점을 사용하면 병목 현상이 발생할 수 있으며, 확장 가능한 솔루션을 제공하지 않습니다. 속도 제한에만 기반하여 요청을 차단하면 합법적인 트래픽이 의도치 않게 차단될 수 있습니다.",
            "보안 그룹에만 의존하는 것은 포괄적인 DDoS 보호의 필요성을 무시합니다. 로깅이 중요하지만, 공격을 적극적으로 완화하거나 트래픽 급증을 처리하지 않습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 회사가 AWS Firewall Manager를 사용하여 AWS 조직 내 여러 계정에 걸쳐 보안 정책을 시행하고 있습니다. 보안 팀은 특정 유형의 트래픽을 차단하기 위한 규칙을 정의했으며, 이러한 규칙이 전체 조직 내에서 일관되게 적용되기를 원합니다. 그러나 일부 계정이 Firewall Manager에서 설정한 정책을 준수하지 않는 것을 발견했습니다.",
        "Question": "계정 간 정책 시행의 불일치의 가장 가능성이 높은 이유는 무엇입니까?",
        "Options": {
            "1": "Firewall Manager 정책이 모든 조직 단위에 적용되지 않았습니다.",
            "2": "계정이 동일한 AWS 조직의 일부가 아닙니다.",
            "3": "Firewall Manager에 필요한 IAM 역할이 해당 계정에 없습니다.",
            "4": "계정이 서로 다른 AWS 리전을 사용하고 있어 정책 적용이 방해받고 있습니다."
        },
        "Correct Answer": "Firewall Manager 정책이 모든 조직 단위에 적용되지 않았습니다.",
        "Explanation": "Firewall Manager 정책이 조직 내에서 효과적이려면 모든 관련 조직 단위에 명시적으로 적용되어야 합니다. 일부 계정이 적용된 조직 단위의 일부가 아닌 경우 정책 시행을 받지 못합니다.",
        "Other Options": [
            "계정이 동일한 AWS 조직의 일부라면 정책 시행을 방해하지 않으며, 문제는 정책의 적용에 있습니다.",
            "AWS Firewall Manager 정책은 여러 리전에서 적용될 수 있으므로 서로 다른 리전을 사용하는 것이 정책 시행에 영향을 미치지 않습니다.",
            "IAM 역할은 Firewall Manager에 필요하지만, 문제는 역할의 존재가 아니라 정책의 적용과 관련이 있습니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 조직이 AWS에서 다계층 애플리케이션 아키텍처를 구현하고 있으며, 여러 EC2 인스턴스 앞에 Elastic Load Balancer (ELB)를 두고 있습니다. 보안 팀은 관련 텔레메트리 소스를 모니터링하여 잠재적인 위협을 감지하고 대응할 수 있도록 하기를 원합니다.",
        "Question": "보안 팀이 애플리케이션 레이어를 대상으로 하는 트래픽 패턴과 잠재적인 공격에 대한 통찰력을 얻기 위해 우선적으로 모니터링해야 할 텔레메트리 소스는 무엇입니까?",
        "Options": {
            "1": "트래픽 미러링",
            "2": "Elastic Load Balancer 접근 로그",
            "3": "CloudTrail 로그",
            "4": "VPC 흐름 로그"
        },
        "Correct Answer": "Elastic Load Balancer 접근 로그",
        "Explanation": "Elastic Load Balancer 접근 로그는 로드 밸런서에 전송된 요청에 대한 상세 정보를 제공하며, 여기에는 출발지 IP, 요청 경로 및 응답 상태가 포함됩니다. 이 데이터는 애플리케이션 레이어 트래픽 패턴을 분석하고 애플리케이션 자체를 대상으로 하는 이상 징후나 잠재적 공격을 식별하는 데 중요합니다.",
        "Other Options": [
            "VPC 흐름 로그는 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처합니다. 유용하지만 ELB가 관리하는 애플리케이션 레이어 트래픽에 대한 상세한 통찰력을 제공하지는 않습니다.",
            "CloudTrail 로그는 AWS 계정에서 이루어진 API 호출을 기록하며, 감사 및 거버넌스에 유용하지만 애플리케이션 레이어나 위협과 관련된 네트워크 트래픽 패턴에 초점을 맞추지 않습니다.",
            "트래픽 미러링은 네트워크 트래픽을 분석하기 위해 전송 중인 패킷을 캡처할 수 있습니다. 그러나 추가 설정이 필요하며 ELB 접근 로그만큼 특정 애플리케이션 요청에 대한 세부 정보를 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사가 AWS에서 대외용 웹사이트를 구축하고 있으며, 사용자 데이터의 보안을 보장하면서 성능과 가용성을 최적화해야 합니다.",
        "Question": "AWS에 호스팅된 대외용 웹사이트의 프론트 엔드를 보호하기 위한 가장 효과적인 전략은 무엇입니까?",
        "Options": {
            "1": "악성 웹 트래픽을 필터링하기 위해 AWS WAF를 활용하고 콘텐츠 전송을 위해 Amazon CloudFront를 구현합니다.",
            "2": "웹사이트에 접근하는 사용자에 대해 AWS IAM 역할을 구성하고 Amazon RDS에 저장된 데이터를 암호화합니다.",
            "3": "DDoS 공격으로부터 보호하기 위해 AWS Shield Advanced를 배포하고 정적 콘텐츠 저장을 위해 Amazon S3를 사용합니다.",
            "4": "리소스 구성을 모니터링하기 위해 AWS Config를 구현하고 API 호출 로깅을 위해 AWS CloudTrail을 사용합니다."
        },
        "Correct Answer": "악성 웹 트래픽을 필터링하기 위해 AWS WAF를 활용하고 콘텐츠 전송을 위해 Amazon CloudFront를 구현합니다.",
        "Explanation": "이 옵션은 일반적인 웹 공격으로부터 보호하기 위해 AWS WAF를 사용하고, 콘텐츠를 안전하고 효율적으로 전달하기 위해 Amazon CloudFront를 결합하여 웹사이트를 위협으로부터 보호하면서 성능과 가용성을 향상시킵니다.",
        "Other Options": [
            "AWS Shield Advanced를 배포하는 것은 DDoS 보호에 유익하지만, 정적 콘텐츠에 대해 Amazon S3만 사용하는 것은 WAF와 같은 추가 조치 없이 대외용 웹사이트에 대한 충분한 보안을 제공하지 않습니다.",
            "사용자 접근을 위한 AWS IAM 역할을 구성하고 RDS의 데이터를 암호화하는 것은 백엔드 보안에 중요하지만, 대외용 웹사이트의 프론트 엔드를 보호하는 특정 요구 사항을 해결하지 않습니다.",
            "AWS Config와 CloudTrail을 구현하는 것은 준수 및 감사에 중점을 두고 있으며, 이는 중요하지만 대외용 웹사이트의 프론트 엔드 보안을 직접적으로 강화하지 않습니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 금융 서비스 회사가 AWS에 저장된 민감한 고객 데이터에 대한 암호화를 구현하고 있습니다. 그들은 규제 요구 사항을 준수하기 위해 암호화 키를 효과적으로 관리하는 데 특히 집중하고 있습니다. 이 회사는 AWS Key Management Service (KMS)를 활용할 계획이며, 모범 사례에 맞는 키 회전 전략을 구현하고자 합니다. 그들은 사용할 키의 유형에 따라 다양한 키 관리 및 회전 옵션을 고려하고 있습니다.",
        "Question": "AWS KMS를 사용할 때 고객 관리 키에 대한 키 회전 옵션을 정확하게 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "가져온 키 자료가 있는 고객 관리 키는 AWS 관리 키와 유사하게 자동 회전을 허용합니다.",
            "2": "AWS 관리 키는 5년마다 자동으로 회전되며, 이전 백업 키 자료는 보존되지 않습니다.",
            "3": "고객 관리 키는 매년 자동 회전을 지원하지만, 이 기능은 기본적으로 비활성화되어 있습니다.",
            "4": "가져온 키 자료가 있는 고객 관리 키에 대해 수동 회전만 가능합니다."
        },
        "Correct Answer": "고객 관리 키는 매년 자동 회전을 지원하지만, 이 기능은 기본적으로 비활성화되어 있습니다.",
        "Explanation": "AWS KMS의 고객 관리 키는 매년 자동 회전을 위해 구성할 수 있지만, 이 기능은 기본적으로 비활성화되어 있습니다. 이는 조직이 수동으로 활성화하여 정기적인 키 회전을 보장할 수 있음을 의미하며, 이는 보안 및 준수를 위한 모범 사례입니다.",
        "Other Options": [
            "AWS 관리 키는 5년마다 자동으로 회전되지 않으며, 대신 3년마다 자동으로 회전되고 이전 백업 키 자료는 보존됩니다.",
            "가져온 키 자료가 있는 고객 관리 키는 자동 회전을 전혀 지원하지 않으며, 모든 회전은 수동으로 수행해야 합니다.",
            "가져온 키 자료가 있는 고객 관리 키에 대해 수동 회전이 유일한 옵션인 것은 사실이지만, 이 진술은 표준 고객 관리 키의 회전 기능을 다루고 있지 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 조직이 민감한 데이터가 적절하게 식별되고 보호되도록 데이터 분류 전략을 구현하고 있습니다. 그들은 Amazon S3에 저장된 데이터의 분류를 자동화하기 위해 AWS 서비스를 사용하고자 합니다. 이 조직은 '기밀', '내부', '공공'과 같은 미리 정의된 레이블을 기반으로 데이터를 분류해야 합니다.",
        "Question": "조직이 지정된 레이블을 기반으로 S3 객체의 데이터 분류 프로세스를 자동화하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Config",
            "2": "AWS Shield",
            "3": "Amazon Inspector",
            "4": "AWS Macie"
        },
        "Correct Answer": "AWS Macie",
        "Explanation": "AWS Macie는 Amazon S3에 저장된 민감한 데이터를 자동으로 발견하고 분류하며 보호하도록 설계되었습니다. 이는 기계 학습 및 패턴 매칭을 사용하여 조직의 분류 요구 사항에 따라 데이터를 식별하고 레이블을 지정하므로 이 시나리오에 가장 적합한 선택입니다.",
        "Other Options": [
            "AWS Config는 주로 리소스 준수 및 거버넌스를 위해 사용되며, 데이터 분류를 위한 것이 아닙니다. 이는 리소스 구성 및 변경 사항을 추적하지만 S3 버킷 내의 데이터를 분류하지 않습니다.",
            "Amazon Inspector는 AWS에 배포된 애플리케이션의 취약점을 식별하기 위해 설계된 보안 평가 서비스입니다. 이는 데이터 분류 또는 S3 객체의 레이블 지정 기능을 제공하지 않습니다.",
            "AWS Shield는 분산 서비스 거부 공격으로부터 애플리케이션을 보호하는 관리형 DDoS 보호 서비스입니다. 이는 S3 내의 데이터 분류 또는 관리와 관련이 없습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "한 회사가 사용자가 Facebook 또는 Google과 같은 소셜 미디어 계정을 사용하여 로그인할 수 있는 모바일 쇼핑 애플리케이션을 개발하고 있습니다. 그들은 사용자 인증 및 AWS 리소스에 대한 접근을 관리하는 안전한 방법을 구현하고자 합니다. 개발 팀은 이 목적을 위해 Amazon Cognito를 사용하는 것을 고려하고 있습니다.",
        "Question": "모바일 쇼핑 애플리케이션에서 소셜 아이덴티티 제공자를 통해 사용자 접근을 가능하게 하기 위해 Amazon Cognito를 사용하는 PRIMARY 이점은 무엇입니까?",
        "Options": {
            "1": "Cognito는 사용자가 앱에 대한 새 계정과 비밀번호를 생성하도록 요구합니다.",
            "2": "Cognito는 AWS 아이덴티티 제공자를 통한 인증만 지원합니다.",
            "3": "Cognito는 여러 장치 간에 사용자 데이터를 원활하게 동기화하는 방법을 제공합니다.",
            "4": "Cognito는 앱이 장치에 AWS 자격 증명을 저장하여 직접 접근할 수 있도록 허용합니다."
        },
        "Correct Answer": "Cognito는 여러 장치 간에 사용자 데이터를 원활하게 동기화하는 방법을 제공합니다.",
        "Explanation": "Amazon Cognito는 아이덴티티 브로커 역할을 하여 사용자가 소셜 아이덴티티 제공자를 통해 인증할 수 있도록 하며, 동시에 장치 간에 사용자 데이터를 동기화하여 모바일 쇼핑 앱의 사용자 경험을 향상시킵니다.",
        "Other Options": [
            "장치에 AWS 자격 증명을 저장하는 것은 보안 위험을 초래하며 권장되지 않습니다. Cognito는 대신 임시 STS 토큰을 제공하여 이 필요성을 없앱니다.",
            "사용자 데이터를 동기화하는 것은 주요 이점이지만, 소셜 로그인을 위해 Cognito를 사용하는 PRIMARY 이유는 아닙니다. 오히려 소셜 아이덴티티 제공자와의 통합이 그 이유입니다.",
            "Cognito는 Facebook 및 Google과 같은 소셜 아이덴티티 제공자를 포함한 다양한 아이덴티티 제공자를 실제로 지원하므로 이 옵션은 잘못되었습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "한 회사가 Amazon S3 버킷과 DynamoDB 테이블에 접근이 필요한 새로운 애플리케이션을 배포하고 있습니다. 애플리케이션은 VPC에 호스팅되며, 보안 팀은 이러한 서비스에 대한 모든 트래픽이 AWS 네트워크 내에 유지되도록 하여 보안을 강화하고자 합니다. 그들은 이 목표를 달성하기 위해 다양한 이그레스 옵션을 고려하고 있습니다.",
        "Question": "보안 팀이 Amazon S3 및 DynamoDB에 대한 모든 트래픽이 AWS 네트워크 내에 유지되고 공용 IP 주소가 필요하지 않도록 하기 위해 어떤 이그레스 옵션을 구현해야 합니까?",
        "Options": {
            "1": "외부 VPC와 VPC 피어링 연결을 설정합니다.",
            "2": "VPC에서 S3 및 DynamoDB에 대한 게이트웨이 엔드포인트를 생성합니다.",
            "3": "VPC에 인터넷 게이트웨이를 연결하고 서비스에 대한 NAT를 구성합니다.",
            "4": "VPC에서 S3 및 DynamoDB에 대한 인터페이스 엔드포인트를 설정합니다."
        },
        "Correct Answer": "VPC에서 S3 및 DynamoDB에 대한 게이트웨이 엔드포인트를 생성합니다.",
        "Explanation": "S3 및 DynamoDB에 대한 게이트웨이 엔드포인트를 사용하면 이러한 서비스에 대한 트래픽이 공용 IP 주소 없이 AWS 네트워크 내에 유지됩니다. 이 설정은 모든 통신이 내부에서 처리되도록 하여 보안을 강화합니다.",
        "Other Options": [
            "S3 및 DynamoDB에 대한 인터페이스 엔드포인트를 설정하는 것은 불필요합니다. 이러한 서비스는 게이트웨이 엔드포인트를 지원하며, 이를 사용하는 것이 트래픽을 내부에 유지하는 데 더 효율적입니다.",
            "인터넷 게이트웨이를 연결하고 NAT를 구성하면 서비스를 인터넷에 노출시켜 AWS 네트워크 내에 트래픽을 유지해야 한다는 요구 사항과 모순됩니다.",
            "외부 VPC와 VPC 피어링 연결을 설정하는 것은 S3 및 DynamoDB의 트래픽을 내부에 유지하는 것과 직접적으로 관련이 없으며 통신을 복잡하게 만들 수 있습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 회사가 AWS로 전환하고 있으며, 온프레미스 데이터 센터와 VPC 간의 안전한 연결을 설정해야 합니다. 그들은 연결이 신뢰할 수 있고 높은 대역폭을 처리할 수 있으며, 전송 중인 데이터에 대한 암호화를 제공하기를 원합니다. 이 목적을 위해 AWS Direct Connect와 VPN 게이트웨이를 사용하는 것을 고려하고 있습니다.",
        "Question": "온프레미스 데이터 센터와 AWS VPC 간에 가장 안전하고 신뢰할 수 있는 연결을 제공하는 아키텍처는 무엇입니까?",
        "Options": {
            "1": "Direct Connect 없이 온프레미스 서버에 직접 사이트 간 VPN을 배포합니다.",
            "2": "공용 인터넷을 통해 VPN 연결을 기본 연결로 설정합니다.",
            "3": "중복성과 암호화를 위해 AWS Direct Connect와 VPN 백업을 사용합니다.",
            "4": "추가 암호화 조치 없이 Direct Connect 연결만 구현합니다."
        },
        "Correct Answer": "중복성과 암호화를 위해 AWS Direct Connect와 VPN 백업을 사용합니다.",
        "Explanation": "AWS Direct Connect를 사용하면 표준 인터넷 연결에 비해 더 신뢰할 수 있고 높은 대역폭을 처리할 수 있는 전용 연결을 제공합니다. VPN을 백업으로 추가하면 전송 중 데이터가 암호화되고 Direct Connect 링크가 다운될 경우 중복성을 제공하여 전반적인 보안과 신뢰성을 향상시킵니다.",
        "Other Options": [
            "공용 인터넷을 통해 VPN 연결을 설정하는 것은 Direct Connect의 신뢰성과 대역폭 이점을 결여하며, 암호화를 제공할 수 있지만 Direct Connect와 VPN 조합에 비해 가장 안전한 솔루션이 아닙니다.",
            "Direct Connect 연결만 구현하면 전송 중 데이터에 대한 암호화를 제공하지 않아 민감한 데이터가 위험에 노출될 수 있습니다. VPN이 없으면 연결에 추가 보안 계층이 부족합니다.",
            "Direct Connect 없이 온프레미스 서버에 직접 사이트 간 VPN을 배포하는 것은 전용 연결의 이점을 활용하지 않으며, 높은 대역폭 애플리케이션에 적합하지 않은 높은 지연 시간과 낮은 처리량을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "클라우드 보안 엔지니어는 여러 AWS 계정에서 보안 액세스 제어 및 규정 준수를 보장하는 AWS 조직 구조를 설계하는 임무를 맡고 있습니다. 엔지니어는 특정 계정이 특정 작업만 수행할 수 있도록 하면서 권한을 효과적으로 관리하기 위해 서비스 제어 정책(SCP)을 구현해야 합니다. 또한 엔지니어는 조직 전반에 걸쳐 로깅 및 보안 모범 사례가 적용되도록 해야 합니다.",
        "Question": "조직이 권한에 대한 엄격한 통제를 유지하면서 구성원 계정에 필요한 액세스를 허용하기 위해 보안 엔지니어가 취해야 할 접근 방식은 무엇입니까?",
        "Options": {
            "1": "서비스 제어 정책을 사용하여 기본적으로 모든 작업에 대한 액세스를 명시적으로 거부한 다음, 특정 계정의 필요에 따라 허용 문을 첨부합니다.",
            "2": "모든 작업을 허용하는 루트 수준의 서비스 제어 정책을 구현하고 각 조직 단위에서 민감한 서비스에 대한 액세스를 제한하기 위해 특정 거부 문을 첨부합니다.",
            "3": "루트 수준에서 특정 작업만 허용하는 서비스 제어 정책을 적용하고 AWS Identity and Access Management(IAM) 역할을 사용하여 구성원 계정에 추가 권한을 부여합니다.",
            "4": "각 부서에 대한 조직 단위를 만들고 전체 액세스를 허용하는 빈 서비스 제어 정책을 적용한 다음, 필요에 따라 계정 수준에서 권한을 사용자 정의합니다."
        },
        "Correct Answer": "서비스 제어 정책을 사용하여 기본적으로 모든 작업에 대한 액세스를 명시적으로 거부한 다음, 특정 계정의 필요에 따라 허용 문을 첨부합니다.",
        "Explanation": "서비스 제어 정책을 사용하여 루트 수준에서 기본적으로 액세스를 명시적으로 거부하면 보안의 기준선이 설정되어 명시적으로 허용되지 않는 한 어떤 작업도 허용되지 않습니다. 이 접근 방식은 무단 액세스의 위험을 최소화하고 특정 계정에 필요한 권한만 부여되도록 보장합니다.",
        "Other Options": [
            "모든 작업을 허용하는 루트 수준의 서비스 제어 정책을 구현하면 모든 계정이 제한 없이 액세스할 수 있어 SCP의 목적을 훼손하는 중대한 보안 위험을 초래합니다.",
            "빈 서비스 제어 정책으로 조직 단위를 생성하면 어떤 제한도 적용되지 않아 모든 계정에 대한 전체 액세스가 허용되고 규정 준수 문제로 이어질 수 있습니다.",
            "루트 수준에서 특정 작업만 허용하는 서비스 제어 정책을 적용하면 다른 작업이 우연히 남아 있을 수 있어 보안을 저해하므로 권한을 효과적으로 관리하지 못합니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "조직은 여러 AWS 리소스를 운영하고 있으며 잠재적인 위협을 감지하기 위해 보안 모니터링을 구현해야 합니다. 보안 팀은 의심스러운 활동이 감지될 때 경고를 생성할 특정 메트릭과 임계값을 정의하고자 합니다. 예를 들어, API 호출 증가나 무단 액세스 시도가 있습니다.",
        "Question": "보안 팀이 AWS 환경에서 경고를 위한 메트릭과 임계값을 효과적으로 설정하기 위해 취해야 할 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Config를 구현하여 구성 변경을 모니터링하고 미리 정의된 규정 준수 규칙 세트 외부에서 발생하는 모든 변경 사항에 대한 알림을 설정합니다.",
            "2": "AWS CloudWatch Logs를 설정하여 로그 데이터를 캡처하고 매주 로그를 수동으로 검토하여 추가 조사가 필요한 이상 징후를 확인합니다.",
            "3": "AWS GuardDuty를 구성하여 로그 파일을 자동으로 분석하고 알려진 악성 활동과 관련된 발견 사항에 따라 경고를 생성합니다.",
            "4": "AWS CloudTrail을 활용하여 모든 API 호출을 기록하고 정의된 임계값을 초과하는 특정 API 호출 비율에 따라 Amazon CloudWatch 경고를 설정합니다."
        },
        "Correct Answer": "AWS CloudTrail을 활용하여 모든 API 호출을 기록하고 정의된 임계값을 초과하는 특정 API 호출 비율에 따라 Amazon CloudWatch 경고를 설정합니다.",
        "Explanation": "AWS CloudTrail을 활용하면 조직은 AWS 환경 내에서 이루어진 모든 API 호출을 기록하여 수행된 작업의 완전한 감사 추적을 제공합니다. 이를 Amazon CloudWatch 경고와 통합함으로써 보안 팀은 특정 메트릭(예: API 호출 수)을 정의하고 의심스러운 활동이 발생할 때 경고를 트리거할 임계값을 설정할 수 있어 잠재적인 위협에 대한 신속한 대응이 가능합니다.",
        "Other Options": [
            "AWS Config를 구현하는 것은 주로 리소스 구성 및 규정 준수를 모니터링하는 데 중점을 두므로 API 호출 행동을 모니터링하는 데 덜 효과적입니다.",
            "AWS GuardDuty를 구성하는 것은 위협 감지에 유용하지만 API 호출 비율에 따라 특정 메트릭과 임계값을 설정하기 위해 주로 설계된 것은 아닙니다. 이는 로그를 분석하고 알려진 위협과 관련된 발견 사항에 따라 경고를 생성합니다.",
            "AWS CloudWatch Logs를 설정하여 로그 데이터를 캡처하고 매주 로그를 수동으로 검토하는 것은 비효율적이고 반응적입니다. 이 접근 방식은 실시간 경고를 제공하지 않으며 잠재적인 보안 사고에 대한 대응이 지연될 수 있습니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "금융 서비스 회사의 준수 담당자는 AWS 환경 전반에 걸쳐 모든 보안 이벤트가 효과적으로 기록되고 모니터링되도록 해야 합니다. 담당자는 이러한 로그를 캡처할 뿐만 아니라 보안 감사에 대한 의미 있는 통찰력을 제공하는 솔루션을 구현하는 것을 목표로 하고 있습니다. 담당자는 이를 위한 자동화 도구 설정의 최선의 접근 방식을 고려하고 있습니다.",
        "Question": "이 시나리오에서 보안 이벤트의 정기 감사를 수행하기 위해 자동화 도구와 스크립트를 설정하는 데 가장 효과적인 전략은 무엇입니까?",
        "Options": {
            "1": "AWS Config를 사용하여 리소스의 구성 변경을 모니터링하고 준수 위반 사항에 대해 준수 담당자에게 알리기 위해 Amazon SNS를 설정합니다.",
            "2": "AWS GuardDuty를 설정하여 악의적인 활동을 지속적으로 모니터링하고 발견 사항을 AWS Security Hub와 통합하여 보안 감사에 대한 맞춤형 통찰력을 생성합니다.",
            "3": "AWS CloudTrail 로그를 주기적으로 쿼리하고 보안 사건을 분석하며 미리 정의된 임계값에 따라 준수 담당자에게 경고를 보내는 AWS Lambda 함수를 배포합니다.",
            "4": "AWS CloudTrail을 구성하여 모든 계정 활동을 기록하고 이를 Amazon CloudWatch와 통합하여 보안 관련 이벤트의 실시간 모니터링 및 경고를 설정합니다."
        },
        "Correct Answer": "AWS CloudTrail을 구성하여 모든 계정 활동을 기록하고 이를 Amazon CloudWatch와 통합하여 보안 관련 이벤트의 실시간 모니터링 및 경고를 설정합니다.",
        "Explanation": "AWS CloudTrail을 구성하여 모든 계정 활동을 기록하면 AWS 환경 내에서의 API 호출 및 사용자 행동에 대한 포괄적인 뷰를 제공합니다. 이를 Amazon CloudWatch와 통합하면 실시간 모니터링 및 경고가 가능해져 보안 이벤트 감사에 효과적인 솔루션이 됩니다.",
        "Other Options": [
            "AWS Config를 사용하는 것은 주로 리소스 구성 준수에 중점을 두고 있어 보안 이벤트 기록보다는 보안 감사 수행에 주요 관심사입니다.",
            "주기적인 로그 분석을 위한 AWS Lambda 함수를 배포하는 것은 유용할 수 있지만 실시간 모니터링 기능을 제공하지 못할 수 있으며 보안 사건에 대한 대응에 지연을 초래할 수 있습니다.",
            "AWS GuardDuty는 위협 감지에 효과적이지만 AWS CloudTrail과 같은 계정 활동의 완전한 감사 추적을 제공하지 않으며, 이를 단독으로 사용하는 것은 모든 필요한 보안 이벤트를 포괄하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "한 회사가 AWS 계정에 대한 다단계 인증(MFA) 솔루션을 구현하고 있습니다. 보안 팀은 MFA 설정이 AWS 모범 사례를 준수하는지 확인하고 사용자가 두 번째 인증 요소를 잃어버렸을 때 복구할 수 있도록 해야 합니다.",
        "Question": "AWS IAM에서 MFA에 대한 다음 설명 중 어떤 것이 사실입니까?",
        "Options": {
            "1": "U2F 인증을 사용하여 STS를 통해 임시 자격 증명을 얻을 수 있습니다.",
            "2": "루트 사용자는 이메일 및 전화번호의 소유권을 확인하여 잃어버린 두 번째 인증 요소를 복구할 수 있습니다.",
            "3": "연합 사용자는 MFA를 위해 하드웨어 TOTP 장치를 사용해야 합니다.",
            "4": "사용자는 계정에 대해 SMS 기반 MFA만 사용할 수 있습니다."
        },
        "Correct Answer": "루트 사용자는 이메일 및 전화번호의 소유권을 확인하여 잃어버린 두 번째 인증 요소를 복구할 수 있습니다.",
        "Explanation": "올바른 설명은 AWS 루트 사용자가 관련 이메일 및 전화번호를 확인하여 잃어버린 MFA 장치를 복구할 수 있는 방법이 있음을 강조하며, 이는 AWS 보안 프로토콜과 일치합니다.",
        "Other Options": [
            "이것은 잘못된 것입니다. AWS는 더 이상 MFA에 대해 SMS를 지원하지 않으며, U2F 및 TOTP와 같은 대체 방법이 제공됩니다.",
            "이것은 잘못된 것입니다. U2F는 STS를 통해 임시 자격 증명을 얻는 데 사용할 수 없으며, STS는 가상 또는 하드웨어 TOTP와만 작동합니다.",
            "이것은 잘못된 것입니다. 연합 사용자는 하드웨어 TOTP 장치를 사용할 필요가 없으며, AWS에서 지원하는 다른 형태의 MFA를 사용할 수 있습니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "보안 팀이 AWS 환경에 대한 일련의 비정상적인 API 요청을 조사하고 있습니다. 그들은 손상된 IAM 사용자 계정이 무단 접근의 원인일 수 있다고 의심하고 있습니다. 효과적인 근본 원인 분석을 수행하기 위해 이 요청의 출처와 수행된 작업을 식별해야 합니다.",
        "Question": "AWS에서 무단 API 요청의 근본 원인 분석을 수행하는 데 가장 효과적인 기술은 무엇입니까?",
        "Options": {
            "1": "Amazon GuardDuty를 활용하여 네트워크 트래픽을 분석하고 손상된 계정과 관련된 잠재적 위협을 식별합니다.",
            "2": "신원 연합 설정을 평가하여 외부 인증 메커니즘이 안전한지 확인합니다.",
            "3": "AWS Config를 확인하여 사용자 계정과 관련된 IAM 정책의 준수 위반을 확인합니다.",
            "4": "AWS CloudTrail 로그를 검토하여 API 호출을 추적하고 사용자 및 출처 IP 주소를 식별합니다."
        },
        "Correct Answer": "AWS CloudTrail 로그를 검토하여 API 호출을 추적하고 사용자 및 출처 IP 주소를 식별합니다.",
        "Explanation": "AWS CloudTrail 로그를 검토하면 API 호출을 상세히 추적할 수 있어 손상된 계정이 수행한 특정 작업을 파악하는 데 도움이 됩니다. 이는 효과적인 근본 원인 분석에 중요하며, 발생한 사건에 대한 직접적인 증거를 제공합니다.",
        "Other Options": [
            "Amazon GuardDuty를 활용하는 것은 실시간 위협 탐지에 유용하지만 근본 원인 분석에 필요한 과거 API 호출의 구체적인 세부 정보를 제공하지 않습니다.",
            "AWS Config를 확인하는 것은 준수 모니터링에 중요하지만 API 호출 기록을 직접 추적하거나 무단 접근의 즉각적인 원인을 식별하지 않습니다.",
            "신원 연합 설정을 평가하는 것은 보안에 중요하지만 손상된 계정이 수행한 특정 API 요청이나 작업에 대한 즉각적인 통찰력을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "한 금융 서비스 회사가 S3 버킷에 대한 자동화된 데이터 수명 주기 관리 프로세스를 구현하고 있습니다. 그들은 민감한 데이터가 특정 기간 동안만 보존되고 이후에 자동으로 저비용 스토리지로 전환되거나 삭제되어 규제 요구 사항을 준수하도록 하기를 원합니다.",
        "Question": "데이터가 효율적이고 안전하게 관리되도록 보장하기 위해 이 시나리오에 가장 적합한 수명 주기 구성 옵션은 무엇입니까?",
        "Options": {
            "1": "30일 후에 객체를 S3 Glacier로 전환하고 90일 후에 삭제하는 수명 주기 정책을 설정합니다.",
            "2": "다른 스토리지 클래스로의 전환 없이 30일 후에 객체를 삭제하는 수명 주기 구성을 설정합니다.",
            "3": "30일 후에 객체를 S3 Intelligent-Tiering으로 전환하고 365일 후에 삭제하는 수명 주기 정책을 구현합니다.",
            "4": "30일 후에 객체를 S3 Standard-IA로 이동하고 무기한 보존하는 수명 주기 규칙을 생성합니다."
        },
        "Correct Answer": "30일 후에 객체를 S3 Glacier로 전환하고 90일 후에 삭제하는 수명 주기 정책을 설정합니다.",
        "Explanation": "이 옵션은 민감한 데이터를 30일 후에 저비용 스토리지 클래스(S3 Glacier)로 전환하여 효율적으로 관리하며, 이는 자주 접근하지 않는 데이터에 적합하고, 90일 후에 데이터를 삭제하여 데이터 보존 및 삭제에 대한 규제 요구 사항을 준수합니다.",
        "Other Options": [
            "이 옵션은 특정 기간 후에 민감한 데이터를 삭제해야 한다는 요구 사항을 준수하지 않으며, S3 Standard-IA로 전환된 후 객체를 무기한 보존합니다.",
            "이 옵션은 객체를 S3 Intelligent-Tiering으로 전환하지만, 365일의 보존 기간은 민감한 데이터에 너무 길며, 규제 요구 사항을 준수하기 위해 더 빨리 삭제해야 합니다.",
            "이 옵션은 30일 후에 객체를 삭제하지만 저비용 스토리지로의 전환을 포함하지 않아 특정 기간 동안 보존해야 하는 데이터에 대해 비용 효율적이지 않습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "금융 서비스 회사가 민감한 고객 정보에 대한 데이터 보호 전략을 구현하고 있습니다. 보안 팀은 전송 및 저장 중 데이터 무결성을 보장하기 위한 기술을 평가하고 있습니다.",
        "Question": "팀이 데이터 보호를 강화하기 위해 구현해야 할 무결성 검사 기술은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AES 암호화 표준",
            "2": "SHA-256 해시 알고리즘",
            "3": "디지털 서명",
            "4": "HMAC (해시 기반 메시지 인증 코드)",
            "5": "TLS (전송 계층 보안)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "SHA-256 해시 알고리즘",
            "디지털 서명"
        ],
        "Explanation": "SHA-256은 주어진 입력 데이터에 대해 고유한 고정 크기 해시 값을 제공하는 널리 사용되는 암호화 해시 알고리즘으로, 데이터 변경 사항을 검증할 수 있게 하여 데이터 무결성을 보장합니다. 디지털 서명은 해시 알고리즘과 비대칭 암호화를 활용하여 메시지나 문서의 진위와 무결성을 검증하며, 데이터 보호에 필수적입니다.",
        "Other Options": [
            "AES 암호화 표준은 주로 데이터 기밀성을 위해 사용되며, 무결성 검사에 특별히 사용되지 않습니다.",
            "HMAC (해시 기반 메시지 인증 코드)는 무결성과 진위를 보장하는 방법이지만, 질문은 인증보다는 무결성 검사 기술에 중점을 두고 있습니다.",
            "TLS (전송 계층 보안)는 통신 채널을 보호하지만, 데이터가 정지 상태일 때 무결성 검사 기술로서 특별히 작용하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "조직은 AWS 환경에서 사용되지 않거나 저활용된 리소스를 식별하여 비용을 최적화하고 보안 태세를 개선하고자 합니다. 이 작업을 효율적으로 관리하기 위해 AWS 서비스를 활용하고자 합니다.",
        "Question": "조직이 사용되지 않는 리소스를 효과적으로 식별하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Cost Explorer를 활용하여 지출 패턴을 분석하고 저활용 리소스를 파악합니다.",
            "2": "AWS Config를 구현하여 리소스 구성 및 준수를 지속적으로 모니터링합니다.",
            "3": "AWS Trusted Advisor를 사용하여 제거할 수 있는 사용되지 않거나 유휴 리소스에 대한 권장 사항을 받습니다.",
            "4": "AWS CloudTrail을 배포하여 API 호출을 추적하고 최근에 접근하지 않은 리소스를 식별합니다."
        },
        "Correct Answer": "AWS Trusted Advisor를 사용하여 제거할 수 있는 사용되지 않거나 유휴 리소스에 대한 권장 사항을 받습니다.",
        "Explanation": "AWS Trusted Advisor는 유휴 EC2 인스턴스, 연결되지 않은 EBS 볼륨 및 저활용 RDS 인스턴스와 같은 사용되지 않는 리소스를 식별하는 것을 포함하여 AWS 계정에 대한 모범 사례에 대한 통찰력과 권장 사항을 제공합니다. 이는 리소스 사용 최적화 및 비용 절감에 효과적인 도구입니다.",
        "Other Options": [
            "AWS Cost Explorer는 주로 지출 패턴 분석에 중점을 두고 있으며, 사용되지 않는 리소스를 직접 식별하지 않습니다. 비용 추세를 이해하는 데 도움을 줄 수 있지만, 유휴 리소스를 구체적으로 파악하기 위해 설계되지 않았습니다.",
            "AWS Config는 리소스 구성 및 준수를 모니터링하는 데 유용하지만, 사용되지 않거나 유휴 리소스를 직접 식별하지 않습니다. 이는 리소스 활용보다는 구성 변경 및 정책 준수를 추적합니다.",
            "AWS CloudTrail은 API 호출을 기록하고 어떤 리소스가 접근되지 않았는지 보여줄 수 있지만, 유휴 또는 사용되지 않는 리소스를 식별하기 위한 직접적인 메커니즘을 제공하지 않습니다. 이는 리소스 관리보다는 보안 및 감사에 더 중점을 두고 있습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "보안 엔지니어가 AWS에 호스팅된 애플리케이션을 위한 로깅 솔루션을 구현하는 임무를 맡고 있습니다. 이 애플리케이션은 대량의 로그를 생성하며, 엔지니어는 이러한 로그가 안전하게 저장되고 분석을 위해 쉽게 접근 가능하며 변조를 방지하기 위해 불변이어야 함을 보장해야 합니다. 엔지니어는 이러한 요구 사항을 충족하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "다음 중 엔지니어의 로깅 및 모니터링 요구 사항을 충족하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "버전 관리가 활성화된 Amazon S3",
            "2": "구성 이력이 있는 AWS Config",
            "3": "CloudWatch에 로그 출력을 하는 AWS Lambda",
            "4": "로그 보존 정책이 있는 Amazon CloudWatch Logs",
            "5": "이벤트 이력이 있는 AWS CloudTrail"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "로그 보존 정책이 있는 Amazon CloudWatch Logs",
            "버전 관리가 활성화된 Amazon S3"
        ],
        "Explanation": "Amazon CloudWatch Logs는 실시간 모니터링 및 로그 보존 정책을 제공하여 사용자가 로그 데이터를 효과적으로 관리할 수 있게 하며, 버전 관리가 활성화된 Amazon S3는 로그가 불변으로 저장되도록 하여 변조를 방지하고 이전 버전을 쉽게 검색할 수 있도록 합니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출 및 사용자 활동 추적에 중점을 두고 있으며, 애플리케이션 로그에 대한 포괄적인 로깅 솔루션으로 작용하지 않습니다.",
            "AWS Config는 시간에 따른 구성 변경 추적을 위해 설계되었으며, 애플리케이션 로그를 직접 처리하는 데 적합하지 않습니다.",
            "AWS Lambda는 컴퓨팅 서비스이며 CloudWatch에 로그를 출력할 수 있지만, 자체적으로 전용 로깅 또는 모니터링 서비스로 작용하지 않습니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "한 회사가 AWS 인프라를 평가하여 리소스가 적절하게 보호되고 필요한 대로 접근할 수 있는지 확인하고 있습니다. 보안 엔지니어는 VPC 구성 요소의 접근 가능성을 분석하고 잠재적인 보안 취약점을 평가하고자 합니다. 엔지니어는 이 작업을 위해 AWS 도구를 사용하는 것을 고려하고 있습니다.",
        "Question": "보안 엔지니어가 VPC 내 리소스의 접근 가능성을 분석하고 잘못된 구성이나 취약점을 식별하기 위해 어떤 도구를 사용해야 합니까?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 API 호출 및 AWS 리소스의 변경 사항을 추적합니다.",
            "2": "Amazon CloudWatch를 사용하여 네트워크 트래픽 모니터링을 위한 메트릭 및 로그를 수집합니다.",
            "3": "VPC Reachability Analyzer를 사용하여 접근 가능 경로를 시각화하고 잘못된 구성을 식별합니다.",
            "4": "AWS Config를 사용하여 리소스 구성의 변경 사항을 모니터링하고 준수를 평가합니다."
        },
        "Correct Answer": "VPC Reachability Analyzer를 사용하여 접근 가능 경로를 시각화하고 잘못된 구성을 식별합니다.",
        "Explanation": "VPC Reachability Analyzer는 VPC 내 리소스의 접근 가능성을 분석하기 위해 특별히 설계되었습니다. 이는 리소스 간의 연결성을 시각화하고 접근을 차단할 수 있는 잘못된 구성을 식별하는 데 도움을 줍니다. 따라서 이 작업에 가장 적합한 도구입니다.",
        "Other Options": [
            "AWS Config는 직접적인 접근 가능성 분석보다는 구성 변경 및 준수를 추적하는 데 중점을 둡니다.",
            "Amazon CloudWatch는 주로 메트릭 및 로그 모니터링에 사용되며 VPC 내 접근 가능성에 대한 직접적인 분석을 제공하지 않습니다.",
            "AWS CloudTrail은 API 호출 및 AWS 리소스의 변경 사항을 기록하는 데 중점을 두며, VPC 내 리소스의 접근 가능성을 분석하는 데 직접적으로 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 회사가 AWS Key Management Service (KMS)를 사용하여 Amazon S3에 저장된 민감한 데이터의 암호화 키를 관리하고 있습니다. 보안 팀은 키에 대한 접근을 제어하기 위해 고객 마스터 키(CMK)에 대한 키 정책을 구현했습니다. 보안 감사의 일환으로 팀은 특정 IAM 사용자 및 역할만이 키를 관리하고 암호화 작업을 수행할 수 있도록 키 정책이 적절하게 설정되었는지 확인해야 합니다.",
        "Question": "다음 중 어떤 키 정책 구성이 특정 IAM 사용자 및 역할만이 KMS 키를 관리하고 암호화 작업을 수행할 수 있도록 하면서 AWS 모범 사례를 준수할 수 있습니까?",
        "Options": {
            "1": "특정 IAM 사용자에게 kms:CreateGrant 및 kms:ListAliases 권한을 허용하고, 모든 사용자에 대해 모든 다른 작업을 거부하는 키 정책을 설정합니다.",
            "2": "특정 IAM 사용자 및 역할에 대해 kms:* 작업을 허용하고, 계정의 모든 다른 주체에 대한 접근을 명시적으로 거부하는 키 정책을 구현합니다.",
            "3": "계정의 모든 IAM 사용자에게 kms:Encrypt 및 kms:Decrypt 권한을 부여하고 IAM 역할이 키를 관리할 수 있도록 하는 키 정책을 정의합니다.",
            "4": "AWS 계정의 루트 사용자 및 특정 IAM 역할에 대해 kms:* 작업을 허용하는 키 정책을 생성하여 다른 주체의 접근을 허용하지 않도록 합니다."
        },
        "Correct Answer": "특정 IAM 사용자 및 역할에 대해 kms:* 작업을 허용하고, 계정의 모든 다른 주체에 대한 접근을 명시적으로 거부하는 키 정책을 구현합니다.",
        "Explanation": "이 옵션은 지정된 IAM 사용자 및 역할이 KMS 키를 관리하고 암호화 작업을 수행할 수 있도록 올바르게 허용하면서 모든 다른 주체에 대한 접근을 제한합니다. 이는 최소 권한 원칙을 준수하며 키 관리에 대한 AWS 모범 사례를 따릅니다.",
        "Other Options": [
            "이 옵션은 루트 사용자 및 특정 IAM 역할에 권한을 부여하지만, 모든 다른 주체에 대한 접근을 제한하지 않기 때문에 이상적이지 않습니다. 모범 사례는 가능한 한 권한을 제한하는 것입니다.",
            "이 옵션은 모든 IAM 사용자에게 권한을 부여하여 특정 사용자 및 역할에 대한 접근 제한 요구 사항과 모순됩니다. 이는 민감한 데이터의 의도치 않은 노출로 이어질 수 있습니다.",
            "이 옵션은 제한된 권한만 부여하고 모든 다른 작업을 거부하므로, 지정된 사용자에 대한 kms:Encrypt 및 kms:Decrypt와 같은 필요한 권한을 제한하여 키 관리에 충분하지 않습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 금융 서비스 회사가 AWS Service Catalog를 활용하여 준수 및 거버넌스를 위한 승인된 AWS 서비스 포트폴리오를 관리하고 있습니다. 그들은 엔지니어링 팀이 정의된 제품만 배포할 수 있도록 하고 모든 구성이 보안 모범 사례를 준수하도록 하기를 원합니다. 보안 팀은 승인된 포트폴리오 내에서 서비스 사용에 대한 엄격한 통제를 구현하는 임무를 맡고 있습니다.",
        "Question": "보안 팀이 AWS 서비스 사용에 대한 거버넌스를 효과적으로 시행하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "승인된 AWS Service Catalog 포트폴리오의 일부가 아닌 리소스를 자동으로 삭제하는 AWS Lambda 함수를 구현합니다.",
            "2": "포트폴리오의 각 제품에 대해 특정 구성 및 제한을 시행하기 위해 AWS Service Catalog 제약 조건을 활성화합니다.",
            "3": "승인된 포트폴리오 외부의 AWS 서비스에 대한 계정 수준 접근을 제한하기 위해 AWS Organizations 정책을 설정합니다.",
            "4": "AWS Config를 사용하여 보안 모범 사례에 맞는 특정 구성 템플릿과 리소스의 준수를 모니터링합니다.",
            "5": "승인된 제품만 포함된 AWS Service Catalog에서 포트폴리오를 생성하고 이러한 제품에 대한 접근을 제한하는 IAM 정책을 정의합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "승인된 제품만 포함된 AWS Service Catalog에서 포트폴리오를 생성하고 이러한 제품에 대한 접근을 제한하는 IAM 정책을 정의합니다.",
            "포트폴리오의 각 제품에 대해 특정 구성 및 제한을 시행하기 위해 AWS Service Catalog 제약 조건을 활성화합니다."
        ],
        "Explanation": "승인된 제품만 포함된 AWS Service Catalog에서 포트폴리오를 생성하면 엔지니어링 팀이 준수 및 보안을 위해 검토된 서비스에만 접근할 수 있도록 보장합니다. IAM 정책을 정의하면 이러한 승인된 제품에 대한 접근을 제한하여 권한 수준에서 거버넌스를 시행합니다. 또한 제약 조건을 활성화하면 특정 구성 및 제한을 시행할 수 있어 배포가 보안 모범 사례에 맞도록 보장합니다.",
        "Other Options": [
            "AWS Config를 사용하여 준수를 모니터링하는 것은 좋은 관행이지만 리소스 배포에 대한 제한을 직접적으로 시행하지 않습니다. 모니터링만으로는 승인되지 않은 서비스의 사용을 방지할 수 없습니다.",
            "비승인 리소스를 삭제하는 AWS Lambda 함수를 구현하는 것은 반응적인 조치를 제공할 수 있지만, 이러한 리소스의 초기 배포를 방지하지는 않습니다. 이 접근 방식은 서비스에 의도치 않은 중단을 초래할 수 있습니다.",
            "AWS Organizations 정책을 설정하는 것은 계정 수준 접근을 제한하는 데 도움이 될 수 있지만, AWS Service Catalog를 통해 사용할 수 있는 서비스 포트폴리오를 직접적으로 관리하지는 않습니다. 초점은 계정 수준 정책보다 서비스 카탈로그 관리에 두어야 합니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 AWS Application Load Balancer (ALB)를 사용하여 들어오는 HTTPS 트래픽을 관리하고 있습니다. 보안 팀은 ALB가 특정 암호화 프로토콜만 지원해야 하며 모든 들어오는 요청은 인증을 받아야 한다고 요구했습니다. 팀은 또한 감사 목적으로 모든 접근 요청을 기록할 수 있도록 하고 싶어합니다. 이러한 요구 사항을 충족하는 구성의 조합은 무엇입니까? (두 가지 선택)",
        "Question": "어떤 솔루션 조합이 이러한 보안 요구 사항을 충족합니까? (두 가지 선택)",
        "Options": {
            "1": "ALB에서 암호화 스위트를 제한하는 보안 정책을 지정합니다.",
            "2": "사용자 인증을 위해 ALB와 Amazon Cognito를 통합합니다.",
            "3": "TLS 종료를 위해 ALB에서 자체 서명된 인증서를 사용하도록 구성합니다.",
            "4": "ALB에 대한 접근 로그를 S3 버킷에 기록하도록 활성화합니다.",
            "5": "접근을 단순화하기 위해 ALB에서 인증을 비활성화합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "ALB에서 암호화 스위트를 제한하는 보안 정책을 지정합니다.",
            "사용자 인증을 위해 ALB와 Amazon Cognito를 통합합니다."
        ],
        "Explanation": "ALB에서 보안 정책을 지정하면 지원되는 암호화 스위트를 제한할 수 있어, 강력한 암호화 방법만 사용되도록 보장하여 보안을 강화합니다. ALB와 Amazon Cognito를 통합하면 사용자 인증을 위한 강력한 방법을 제공하여, 권한이 있는 사용자만 애플리케이션에 접근할 수 있도록 합니다.",
        "Other Options": [
            "이 옵션은 S3 버킷에 대한 접근 로그를 활성화하는 것이 모니터링을 위한 좋은 관행이지만, 암호화 프로토콜을 제한하거나 사용자를 인증하는 요구 사항을 직접적으로 해결하지 않기 때문에 잘못된 것입니다.",
            "ALB에서 인증을 비활성화하는 것은 들어오는 요청을 인증해야 한다는 요구 사항에 반하며, 이는 보안을 유지하는 데 필수적입니다.",
            "자체 서명된 인증서를 사용하는 것은 신뢰할 수 있는 인증 기관에서 발급한 인증서와 동일한 수준의 신뢰를 제공하지 않기 때문에 프로덕션 환경에서는 권장되지 않으며, 보안 취약점으로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 회사가 AWS에 호스팅된 애플리케이션을 위한 중앙 집중식 로깅 솔루션을 구현하고 있습니다. 보안 엔지니어는 다양한 AWS 서비스에서 모든 로그가 모니터링 시스템으로 수집되어 분석 및 준수를 위해 사용될 수 있도록 해야 합니다. 엔지니어는 로그의 출처를 식별하고 최적의 보안 모니터링을 위해 효과적으로 수집하는 방법을 찾아야 합니다.",
        "Question": "다음 접근 방식 중 중앙 집중식 로깅 솔루션으로 여러 AWS 서비스에서 포괄적인 로그 수집을 보장하는 데 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail을 구성하여 API 호출을 캡처하고 로그를 Amazon S3에 저장 및 분석하도록 보냅니다.",
            "2": "Amazon Elasticsearch Service 도메인을 설정하여 다양한 AWS 서비스에서 로그를 직접 수집하여 검색 및 시각화합니다.",
            "3": "Amazon CloudWatch Logs를 사용하여 EC2 인스턴스, Lambda 함수 및 VPC 흐름 로그의 로그를 실시간으로 집계합니다.",
            "4": "AWS Config를 구현하여 구성 변경을 추적하고 로그를 Amazon Kinesis Data Firehose로 보내 추가 처리를 합니다."
        },
        "Correct Answer": "Amazon CloudWatch Logs를 사용하여 EC2 인스턴스, Lambda 함수 및 VPC 흐름 로그의 로그를 실시간으로 집계합니다.",
        "Explanation": "Amazon CloudWatch Logs를 사용하면 EC2, Lambda 및 VPC 흐름 로그와 같은 여러 AWS 서비스의 로그를 실시간으로 집계할 수 있어 모니터링 및 분석을 위한 포괄적인 솔루션이 됩니다. 이 접근 방식은 즉각적인 통찰력을 제공하고 경고 메커니즘을 지원하여 보안 모니터링 기능을 향상시킵니다.",
        "Other Options": [
            "AWS CloudTrail을 구성하여 API 호출을 캡처하는 것은 좋지만, 모든 서비스의 로그를 제공하지 않으며 주로 API 활동에 초점을 맞추고 있어 전체 로그 수집에 대해 덜 포괄적입니다.",
            "AWS Config를 구현하는 것은 리소스 구성의 변경을 추적하는 데 중점을 두고 있으며, 다양한 서비스에서 로그 수집을 위한 요구 사항을 충족하지 않습니다.",
            "Amazon Elasticsearch Service를 설정하여 직접 수집하는 것은 가능하지만 추가 구성 및 관리가 필요하며, 모든 AWS 서비스의 로그를 CloudWatch Logs만큼 효율적으로 집계하지 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "Amazon DynamoDB를 데이터 저장 및 검색을 위해 활용하는 웹 애플리케이션이 있습니다. 사용자가 자신의 데이터만 접근할 수 있도록 세분화된 접근 제어를 구현하고 있습니다. 사용자 인증을 위해 AWS Cognito를 구성하고 DynamoDB 테이블에 대한 접근을 허용하는 역할을 할당했습니다. 그러나 일부 사용자가 접근 권한이 없는 데이터를 볼 수 있는 것을 발견했습니다. 무단 접근을 방지하기 위해 접근 제어가 올바르게 구성되었는지 확인해야 합니다.",
        "Question": "사용자가 자신의 사용자 ID와 일치하는 항목만 검색할 수 있도록 DynamoDB 접근을 제한하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "각 사용자에 대해 별도의 DynamoDB 테이블을 생성하여 데이터 격리를 보장합니다.",
            "2": "IAM 정책에서 dynamodb:LeadingKeys 조건 키를 사용하여 사용자의 ID와 일치하는 항목에만 접근을 허용합니다.",
            "3": "IAM 정책을 사용하여 사용자의 Cognito ID에 따라 테이블에 대한 접근을 제한합니다.",
            "4": "DynamoDB 테이블에 대한 접근을 사용자 역할에 따라 제한하기 위해 리소스 기반 정책을 구현합니다."
        },
        "Correct Answer": "IAM 정책에서 dynamodb:LeadingKeys 조건 키를 사용하여 사용자의 ID와 일치하는 항목에만 접근을 허용합니다.",
        "Explanation": "IAM 정책에서 dynamodb:LeadingKeys 조건 키를 사용하면 세분화된 접근 제어가 가능하여 사용자가 자신의 ID와 일치하는 항목에만 접근할 수 있도록 지정할 수 있습니다. 이는 데이터 프라이버시와 보안을 보장하는 가장 효과적이고 확장 가능한 접근 방식입니다.",
        "Other Options": [
            "사용자의 Cognito ID에 따라 접근을 제한하기 위해 IAM 정책을 사용하는 것은 좋은 관행이지만, 테이블 내 특정 항목에 대한 접근을 제한하는 데 필요한 세분화된 제어 수준을 제공하지 않습니다.",
            "리소스 기반 정책은 DynamoDB에 적용할 수 없으며, 접근 제어는 IAM 역할 및 정책을 통해 관리해야 합니다.",
            "각 사용자에 대해 별도의 DynamoDB 테이블을 생성하는 것은 실용적이지 않으며 확장성이 없습니다. 이는 데이터 관리의 복잡성을 증가시키고 DynamoDB의 효율적인 데이터 검색 기능을 활용하지 못하게 합니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 서로 다른 AWS 계정에 배포된 여러 마이크로서비스에서 DynamoDB 테이블에 접근해야 하는 애플리케이션을 개발하고 있습니다. 보안 팀은 적절한 마이크로서비스만이 테이블에 접근할 수 있도록 하면서 공개적으로 노출되지 않도록 해야 합니다.",
        "Question": "보안 팀이 DynamoDB 테이블에 대한 접근을 제한하면서 안전한 계정 간 통신을 보장하기 위해 어떤 접근 방식을 구현해야 합니까?",
        "Options": {
            "1": "모든 마이크로서비스의 접근을 간소화하기 위해 DynamoDB 테이블에 대한 공개 엔드포인트를 생성합니다.",
            "2": "계정 간 직접 접근을 허용하기 위해 VPC Peering을 구현합니다.",
            "3": "IAM 역할을 사용하여 계정 간 접근을 설정하고 DynamoDB 테이블에 리소스 정책을 첨부합니다.",
            "4": "DynamoDB 테이블에 대한 접근 제어를 처리하기 위해 AWS Lambda 인증자를 사용합니다."
        },
        "Correct Answer": "IAM 역할을 사용하여 계정 간 접근을 설정하고 DynamoDB 테이블에 리소스 정책을 첨부합니다.",
        "Explanation": "IAM 역할을 사용하여 계정 간 접근을 설정하고 DynamoDB 테이블에 리소스 정책을 첨부하면 세밀한 접근 제어가 가능하여 지정된 마이크로서비스만 테이블에 접근할 수 있도록 보장하며, 보안을 유지하고 공개 노출을 피할 수 있습니다.",
        "Other Options": [
            "DynamoDB 테이블에 대한 공개 엔드포인트를 생성하면 인터넷에 노출되어 보안 위험이 증가하고 마이크로서비스에 필요한 접근 제어를 제공하지 않습니다.",
            "VPC Peering을 구현하면 계정 간 직접 접근이 가능하지만, DynamoDB 테이블에 필요한 접근 제어 메커니즘을 본질적으로 제공하지 않아 보안이 덜하고 관리가 복잡해질 수 있습니다.",
            "AWS Lambda 인증자를 사용하는 것은 주로 API Gateway에 적합한 방법이며, DynamoDB 테이블에 대한 리소스 접근 제어에 직접 적용되지 않으므로 이 맥락에서는 부적합한 옵션입니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "DevOps 팀이 배포 프로세스를 자동화하기 위해 AWS CodePipeline을 구성하고 있습니다. 그들은 파이프라인이 GitHub 리포지토리의 푸시 이벤트에 의해 트리거될 수 있도록 하고, CloudWatch Events를 통해 파이프라인 상태 변경에 대한 알림을 받기를 원합니다. 또한, 파이프라인의 각 단계에 대해 리소스 수준에서 필요한 권한이 설정되어야 합니다.",
        "Question": "보안 모범 사례를 준수하면서 이러한 요구 사항을 충족하는 구성은 무엇입니까?",
        "Options": {
            "1": "AWS CloudFormation을 사용하여 파이프라인을 배포하고 상태 변경에 대한 알림을 Amazon SNS로 푸시하도록 구성하여 보안을 위해 OAuth를 피합니다.",
            "2": "GitHub에 웹훅을 설정하여 파이프라인을 트리거하지만, CloudWatch Events 대신 Lambda 함수를 사용하여 파이프라인 상태를 폴링하여 상태 변경을 모니터링합니다.",
            "3": "GitHub에서 OAuth 토큰을 사용하여 파이프라인을 직접 트리거하고, 각 단계에 대해 리소스 수준의 권한을 적용하면서 CloudWatch Events를 설정하여 상태 변경을 모니터링합니다.",
            "4": "GitHub에 변경이 있을 때마다 AWS Management Console에서 수동으로 파이프라인을 시작하고, 파이프라인 작업에 대한 권한을 관리하기 위해 IAM 역할을 사용합니다."
        },
        "Correct Answer": "GitHub에서 OAuth 토큰을 사용하여 파이프라인을 직접 트리거하고, 각 단계에 대해 리소스 수준의 권한을 적용하면서 CloudWatch Events를 설정하여 상태 변경을 모니터링합니다.",
        "Explanation": "이 옵션은 GitHub를 OAuth를 통해 파이프라인 트리거와 통합하고, CloudWatch Events를 사용하여 파이프라인의 상태 변경을 모니터링하며, 각 단계에서 리소스 수준의 권한을 강조하여 보안 모범 사례에 부합합니다.",
        "Other Options": [
            "이 옵션은 AWS Management Console에서 수동으로 파이프라인을 시작하는 것이 비효율적이며 자동 트리거 메커니즘을 통합하지 않기 때문에 CodePipeline을 CI/CD 워크플로우에 사용하는 목적에 어긋납니다.",
            "웹훅을 설정하는 것은 유효한 접근 방식이지만, Lambda 함수를 사용하여 파이프라인 상태를 폴링하는 것은 CloudWatch Events를 사용하는 것보다 효율성이 떨어지며, CloudWatch Events는 수동 개입 없이 실시간 알림을 제공할 수 있습니다.",
            "CloudFormation을 통해 배포하는 것은 좋은 관행이지만, GitHub 통합을 위해 OAuth를 피하는 것은 파이프라인의 자동화 기능을 제한합니다. 또한, Amazon SNS를 사용하는 것은 상태 변경 알림 요구 사항을 직접 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "AWS에 배포된 맞춤형 애플리케이션이 Amazon CloudWatch에 사용 통계를 보고하지 않고 있습니다. 이 애플리케이션은 메트릭을 생성하기 위해 일련의 로그 파일에 의존하고 있지만, 메트릭이 예상대로 CloudWatch에 나타나지 않습니다. 애플리케이션은 EC2 인스턴스에서 실행되고 있으며, 인스턴스에는 로그를 CloudWatch에 전송할 수 있는 필요한 IAM 역할이 첨부되어 있습니다. 관리자는 메트릭 보고를 복원하기 위해 애플리케이션의 구성을 진단해야 합니다.",
        "Question": "애플리케이션의 구성을 분석하고 수정하기 위해 취할 수 있는 유효한 조치는 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "EC2 인스턴스에 CloudWatch 에이전트가 설치되고 구성되어 있는지 확인합니다.",
            "2": "EC2 인스턴스에 충분한 CPU 및 메모리 리소스가 할당되어 있는지 확인합니다.",
            "3": "로그 파일이 예상 디렉토리에 생성되고 있는지 확인합니다.",
            "4": "인스턴스에 첨부된 IAM 역할이 CloudWatch에 대한 올바른 권한을 가지고 있는지 확인합니다.",
            "5": "EC2 인스턴스를 재시작하여 네트워크 연결을 새로 고칩니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "로그 파일이 예상 디렉토리에 생성되고 있는지 확인합니다.",
            "EC2 인스턴스에 CloudWatch 에이전트가 설치되고 구성되어 있는지 확인합니다."
        ],
        "Explanation": "로그 파일이 예상 디렉토리에 생성되고 있는지 확인하는 것은 중요합니다. 로그가 없으면 메트릭을 보고할 수 없기 때문입니다. CloudWatch 에이전트가 설치되고 제대로 구성되어 있는지 확인하는 것도 필수적입니다. 이 에이전트는 로그와 메트릭을 CloudWatch에 전송하는 역할을 합니다. 이러한 구성이 올바르지 않으면 애플리케이션이 통계를 보고하지 않습니다.",
        "Other Options": [
            "EC2 인스턴스에 충분한 CPU 및 메모리 리소스가 할당되어 있는지 확인하는 것은 로그 및 메트릭 보고 문제와 직접적인 관련이 없습니다. 리소스 제약은 애플리케이션 성능에 영향을 줄 수 있지만, 로그를 생성하거나 보고하는 능력에 반드시 영향을 미치지는 않습니다.",
            "인스턴스에 첨부된 IAM 역할이 CloudWatch에 대한 올바른 권한을 가지고 있는지 확인하는 것은 중요하지만, 역할이 이미 첨부되어 있다고 명시되어 있으므로 이 옵션은 로그 생성의 즉각적인 구성 문제를 해결하지 않습니다.",
            "EC2 인스턴스를 재시작하여 네트워크 연결을 새로 고치는 것은 누락된 메트릭 문제를 해결하는 데 불필요합니다. 이 작업은 로그 파일이나 CloudWatch 에이전트와 관련된 구성 설정을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "한 회사가 SSL 인증서를 사용하여 웹 애플리케이션을 보호해야 합니다. 그들은 Route 53에 도메인을 등록했으며 AWS Certificate Manager (ACM)를 사용하여 SSL 인증서를 효율적으로 관리하고자 합니다. 팀은 SSL 인증서 요청을 위한 도메인 검증의 최선의 방법을 고려하고 있습니다.",
        "Question": "팀이 AWS Certificate Manager에서 SSL 인증서를 요청할 때 도메인을 검증하기 위해 사용할 수 있는 방법은 무엇입니까?",
        "Options": {
            "1": "Route 53을 통해 검증을 위한 DNS 설정에 CNAME 레코드를 추가합니다.",
            "2": "도메인 소유권을 검증하기 위해 제3자 서비스를 사용합니다.",
            "3": "검증을 위해 TXT 레코드를 포함하도록 DNS 설정을 수정합니다.",
            "4": "검증을 위해 도메인과 연결된 주소로 전송된 이메일에 응답합니다."
        },
        "Correct Answer": "검증을 위해 도메인과 연결된 주소로 전송된 이메일에 응답합니다.",
        "Explanation": "이메일 검증은 AWS Certificate Manager에서 제공하는 유효한 방법으로, 도메인 소유자가 도메인 하의 인식된 이메일 주소로 전송된 이메일에 응답해야 합니다. 이 방법은 간단하며 DNS 레코드 변경이 필요 없어 많은 사용자에게 적합합니다.",
        "Other Options": [
            "DNS 설정을 수정하여 TXT 레코드를 포함하는 것은 도메인 검증을 위한 유효한 방법이지만, 이는 ACM의 SSL 인증서 요청과 관련된 질문에서 설명된 특정 방법이 아닙니다.",
            "CNAME 레코드를 추가하는 것은 실제로 DNS 검증에 사용되는 방법이지만, 질문은 사용 가능한 검증 방법을 구체적으로 묻고 있으며, 제공된 정답은 이메일 검증에 중점을 두고 있습니다.",
            "도메인 검증을 위해 제3자 서비스를 사용하는 것은 AWS Certificate Manager에서 지원하는 방법이 아닙니다. ACM은 도메인 소유권을 확인하기 위해 DNS 또는 이메일 검증 방법 중 하나를 요구합니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 조직이 AWS Identity and Access Management (IAM)를 사용하여 AWS 리소스에 대한 액세스를 제어하고 있습니다. 최근 사용자들이 IAM 정책에 정의된 필요한 권한이 있음에도 불구하고 특정 S3 버킷을 사용하려고 할 때 액세스 거부 오류를 보고하기 시작했습니다. 보안 엔지니어는 이러한 권한 문제를 식별하고 해결하는 임무를 맡고 있습니다.",
        "Question": "보안 엔지니어가 사용자들이 보고한 액세스 거부 오류를 효과적으로 진단하고 해결하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "사용자에게 연결된 IAM 정책을 확인하여 필요한 권한이 포함되어 있는지 확인합니다.",
            "2": "AWS CloudTrail 로그를 검토하여 액세스 거부 이벤트가 실패에 대한 더 많은 맥락을 제공하는지 확인합니다.",
            "3": "사용자가 S3 버킷에 접근할 때 올바른 AWS 리전을 사용하고 있는지 검증합니다.",
            "4": "IAM 역할에 대한 액세스를 허용하는지 확인하기 위해 S3 버킷 정책을 검토합니다."
        },
        "Correct Answer": "AWS CloudTrail 로그를 검토하여 액세스 거부 이벤트가 실패에 대한 더 많은 맥락을 제공하는지 확인합니다.",
        "Explanation": "AWS CloudTrail 로그를 검토하는 것은 필수적입니다. 이 로그는 거부된 AWS API 호출에 대한 자세한 정보를 제공하므로, 엔지니어가 액세스 거부 오류의 원인을 이해하는 데 도움이 됩니다. 예를 들어 요청이 IAM 정책이나 S3 버킷 정책에 의해 차단되었는지 여부를 알 수 있습니다.",
        "Other Options": [
            "S3 버킷 정책을 검토하는 것은 중요하지만, 액세스가 거부되는 이유에 대한 확실한 통찰력을 제공하지 않을 수 있습니다. 문제는 충돌하는 IAM 정책에서 비롯될 수도 있습니다.",
            "사용자에게 연결된 IAM 정책을 확인하는 것은 좋은 방법이지만, 정책이 올바르고 권한이 부여된 경우에도 액세스 거부의 맥락을 이해하지 않으면 해결되지 않을 수 있습니다.",
            "사용자의 AWS 리전을 검증하는 것은 권한 오류와 직접적인 관련이 없습니다. 액세스 거부 문제는 일반적으로 IAM 또는 S3 버킷 정책과 관련이 있으며, 리전 구성과는 관련이 없습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "보안 팀은 AWS 리소스 활용도를 모니터링하여 규정 준수를 보장하고 잠재적인 보안 이상 징후를 식별하는 책임이 있습니다. 그들은 리소스 사용의 비정상적인 패턴을 자동으로 감지하고 팀에 경고하는 솔루션을 구현하고자 합니다.",
        "Question": "팀이 리소스 활용도 추세에 기반한 자동화된 이상 감지를 달성하기 위해 어떤 AWS 서비스를 활용해야 합니까?",
        "Options": {
            "1": "AWS Config를 사용하여 구성 변경 및 리소스 준수를 모니터링합니다.",
            "2": "Amazon GuardDuty를 사용하여 계정 활동을 분석하고 위협을 감지합니다.",
            "3": "지표에 대해 이상 감지 기능이 활성화된 Amazon CloudWatch를 사용합니다.",
            "4": "AWS CloudTrail을 사용하여 API 호출을 기록하고 사용자 활동을 추적합니다."
        },
        "Correct Answer": "지표에 대해 이상 감지 기능이 활성화된 Amazon CloudWatch를 사용합니다.",
        "Explanation": "Amazon CloudWatch는 시간에 따라 지표를 분석하고 예상 패턴에서의 편차를 식별할 수 있는 내장된 이상 감지 기능을 제공합니다. 이는 비정상적인 리소스 활용도 추세를 자동으로 감지하는 데 필수적입니다.",
        "Other Options": [
            "AWS Config는 구성 변경을 추적하고 준수를 보장하는 데 중점을 두지만, 리소스 활용도 추세에 대한 이상 감지를 제공하지 않습니다.",
            "Amazon GuardDuty는 위협 감지를 위해 설계되었으며 악의적인 활동에 대한 통찰력을 제공하지만, 리소스 활용도 이상에 특별히 초점을 맞추고 있지 않습니다.",
            "AWS CloudTrail은 계정에서 이루어진 API 호출을 기록하며, 감사에 유용하지만 리소스 사용 패턴에 대한 자동화된 이상 감지를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "한 금융 서비스 회사가 AWS Identity and Access Management (IAM)를 구현하여 사용자가 직무 수행에 필요한 권한만 가지도록 하고 있습니다. 이 회사는 AWS 계정 전반에 걸쳐 최소 권한 원칙을 적용해야 합니다.",
        "Question": "최소 권한 원칙을 효과적으로 적용하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "정기적으로 IAM 정책을 검토하고 조정하여 사용자에게 부여된 불필요한 권한을 제거합니다.",
            "2": "각 애플리케이션에 대해 정의된 권한을 가진 IAM 역할을 사용하고 이를 사용자에게 직무 요구 사항에 따라 할당합니다.",
            "3": "모든 AWS 리소스를 관리하기 위해 관리 권한을 가진 단일 IAM 사용자를 생성합니다.",
            "4": "사용자가 특정 작업을 수행하는 데 필요한 권한만 부여하는 IAM 정책을 구현합니다.",
            "5": "사용자가 모든 리소스에 접근할 수 있도록 최대 권한 원칙에 따라 IAM 권한을 할당합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "각 애플리케이션에 대해 정의된 권한을 가진 IAM 역할을 사용하고 이를 사용자에게 직무 요구 사항에 따라 할당합니다.",
            "사용자가 특정 작업을 수행하는 데 필요한 권한만 부여하는 IAM 정책을 구현합니다."
        ],
        "Explanation": "정의된 권한을 가진 IAM 역할을 사용하면 명확한 직무 분리가 가능하며, 사용자가 애플리케이션에 필요한 리소스에만 접근할 수 있도록 보장합니다. 또한, 특정 작업에 맞춘 IAM 정책을 구현하면 사용자 권한을 최소한으로 제한하여 최소 권한 원칙을 강화합니다.",
        "Other Options": [
            "관리 권한을 가진 단일 IAM 사용자를 생성하는 것은 최소 권한 원칙을 위반하며, 이는 단일 사용자에게 과도한 접근 권한을 부여하여 보안 위험을 초래할 수 있습니다.",
            "최대 권한 원칙에 따라 IAM 권한을 할당하는 것은 최소 권한 원칙을 저해하며, 이는 사용자에게 필요 이상으로 넓은 접근 권한을 제공하여 공격 표면을 증가시킵니다.",
            "IAM 정책을 정기적으로 검토하는 것은 좋은 관행이지만, 그것만으로는 최소 권한을 적용하지 않습니다. 접근을 제한하는 특정 역할과 정책을 구현하지 않으면 사용자가 여전히 과도한 권한을 가질 수 있습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "한 회사가 Amazon S3에 호스팅된 프론트 엔드, Amazon EC2에 있는 백엔드, Amazon RDS에 있는 데이터베이스로 구성된 웹 애플리케이션을 AWS에 배포하고 있습니다. 보안 엔지니어는 애플리케이션 아키텍처가 일반적인 취약성에 대해 안전하도록 하면서 성능과 확장성을 유지해야 합니다.",
        "Question": "이 계층화된 웹 애플리케이션 아키텍처에 대한 인프라 보안을 구현하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "RDS 데이터베이스에 대한 접근을 제한하기 위해 네트워크 접근 제어 목록(NACL)을 사용합니다.",
            "2": "EC2 인스턴스에 대해 S3 및 RDS에 안전하게 접근할 수 있도록 IAM 역할을 생성합니다.",
            "3": "정적 자산을 캐시하기 위해 Amazon CloudFront를 콘텐츠 전송 네트워크로 활용합니다.",
            "4": "애플리케이션 앞에 웹 애플리케이션 방화벽(WAF)을 배포하여 악성 트래픽을 필터링합니다."
        },
        "Correct Answer": "애플리케이션 앞에 웹 애플리케이션 방화벽(WAF)을 배포하여 악성 트래픽을 필터링합니다.",
        "Explanation": "애플리케이션 앞에 웹 애플리케이션 방화벽(WAF)을 배포하면 HTTP 요청을 필터링하고 모니터링하여 SQL 인젝션 및 크로스 사이트 스크립팅과 같은 일반적인 웹 기반 공격으로부터 보호하는 강력한 보안 계층을 제공합니다. 이는 애플리케이션의 무결성과 보안을 유지하는 데 필수적입니다.",
        "Other Options": [
            "네트워크 접근 제어 목록(NACL)을 사용하는 것은 서브넷 수준에서 접근을 제한하는 데 도움이 될 수 있지만, WAF가 구체적으로 다루는 취약성에 대한 애플리케이션 계층 보호를 제공하지 않습니다.",
            "Amazon CloudFront를 활용하는 것은 성능과 확장성에 유익하지만, 애플리케이션 취약성에 대한 인프라 보안 문제를 직접적으로 해결하지 않습니다.",
            "EC2 인스턴스에 대한 IAM 역할을 생성하는 것은 권한 관리를 통해 보안을 강화하지만, 외부 위협으로부터 애플리케이션을 보호하지 않으므로 WAF에 비해 전체 아키텍처 보안에서 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "보안 팀은 사용자 접근 관리와 관련된 모든 AWS 계정 활동이 준수 및 감사 목적으로 기록되도록 해야 합니다. 그들은 조사에 필요한 세부 정보를 포함하여 이러한 로그를 효과적으로 캡처하고 저장하기 위해 AWS 서비스를 활용하고자 합니다.",
        "Question": "사용자 신원, 접근 시간 및 AWS 리소스에서 수행된 작업에 대한 정보를 포함하는 포괄적인 로그를 제공하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS IAM, 사용자 접근 및 AWS 리소스에 대한 권한을 관리합니다.",
            "2": "Amazon CloudWatch, 애플리케이션 성능 및 운영 건강 지표를 추적합니다.",
            "3": "AWS Config, AWS 리소스의 구성 변경 및 준수 상태를 기록합니다.",
            "4": "AWS CloudTrail, AWS 계정에서 수행된 모든 API 호출을 기록하며, 사용자 신원 및 수행된 작업을 상세히 설명합니다."
        },
        "Correct Answer": "AWS CloudTrail, AWS 계정에서 수행된 모든 API 호출을 기록하며, 사용자 신원 및 수행된 작업을 상세히 설명합니다.",
        "Explanation": "AWS CloudTrail은 AWS 계정 내에서 수행된 모든 API 호출에 대한 자세한 로그를 제공하며, 호출한 사용자의 신원, 호출 시간, 출처 IP 주소 및 영향을 받은 리소스를 포함합니다. 이는 사용자 접근 관리 활동을 기록하는 데 이상적인 서비스입니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성 변경 및 준수 상태를 추적하는 데 중점을 두며, 사용자 접근과 관련된 API 호출을 기록하지 않습니다.",
            "Amazon CloudWatch는 주로 애플리케이션 성능과 관련된 메트릭을 모니터링하고 기록하는 데 사용되며, API 호출 활동을 기록하지 않습니다.",
            "AWS IAM은 사용자 권한 및 AWS 리소스에 대한 접근을 관리하지만, 사용자가 수행한 작업에 대한 로그 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 스타트업이 AWS에 새로운 웹 애플리케이션을 배포하고 있으며, 보안 모범 사례를 준수하면서 공격 표면을 최소화하고자 합니다. 팀은 AWS 환경을 보호하기 위한 다양한 전략을 고려하고 있습니다.",
        "Question": "팀이 AWS 리소스의 공격 표면을 효과적으로 줄이기 위해 구현해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "Amazon Inspector를 사용하여 애플리케이션의 취약점을 스캔하고, DDoS 보호를 위해 AWS Shield를 활성화하며, S3 버킷 정책을 구성하여 공개 액세스를 허용합니다.",
            "2": "악성 웹 트래픽을 필터링하기 위해 AWS WAF를 배포하고, 최소 권한 규칙을 가진 보안 그룹을 구현하며, 불필요한 권한에 대해 IAM 역할을 정기적으로 검토합니다.",
            "3": "API 호출을 로깅하기 위해 AWS CloudTrail을 활용하고, 민감한 데이터를 식별하기 위해 Amazon Macie를 구현하며, 구성 준수를 평가하기 위해 AWS Config를 설정합니다.",
            "4": "다양한 지리적 위치에 리소스를 분산시키기 위해 다중 지역 아키텍처를 설정하고, DNS 라우팅을 위해 Route 53을 사용하며, 콘텐츠 전송을 위해 CloudFront를 구현합니다."
        },
        "Correct Answer": "악성 웹 트래픽을 필터링하기 위해 AWS WAF를 배포하고, 최소 권한 규칙을 가진 보안 그룹을 구현하며, 불필요한 권한에 대해 IAM 역할을 정기적으로 검토합니다.",
        "Explanation": "이 접근 방식은 악성 트래픽을 필터링하고, 엄격한 접근 제어를 시행하며, 각 리소스에 필요한 권한만 부여하여 잠재적인 위협을 효과적으로 완화함으로써 공격 표면을 줄이는 데 직접적으로 대응합니다.",
        "Other Options": [
            "Amazon Inspector와 AWS Shield를 사용하는 것은 보안을 강화할 수 있지만, S3 버킷 정책에 공개 액세스를 허용하는 것은 공격 표면을 줄이는 목표와 모순되며 리소스를 잠재적인 위협에 노출시킵니다.",
            "다중 지역 아키텍처와 CloudFront는 가용성과 성능을 향상시킬 수 있지만, 공격 표면을 직접적으로 완화하지는 않습니다. 이러한 전략은 보안보다는 중복성과 전달에 더 중점을 둡니다.",
            "API 호출을 로깅하고 민감한 데이터를 식별하는 것은 모니터링 및 준수에 중요하지만, 공격 표면을 적극적으로 줄이지는 않습니다. 이러한 조치는 노출을 최소화하는 데 있어 반응적이지, 능동적이지 않습니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사가 AWS Key Management Service (KMS)를 구현하여 애플리케이션의 암호화 키를 관리하고 보호하고 있습니다. 보안 팀은 고객 관리 키(CMK)에 대한 접근을 제어하기 위해 적절한 IAM 정책과 권한 구성 설정이 필요합니다. 그들은 특정 AWS 서비스가 키를 사용할 수 있도록 허용하면서 무단 직접 API 호출을 방지하고자 합니다. 또한, 그들은 권한 토큰과 키 관리 모범 사례의 의미를 이해해야 합니다.",
        "Question": "보안 팀이 CMK를 사용할 수 있는 권한이 있는 AWS 서비스만 허용하고 직접 API 접근을 방지하기 위해 채택해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "특정 AWS 서비스에 대한 접근을 제한하기 위해 kms:ViaService 조건 키를 포함하는 리소스 기반 정책을 CMK에 첨부합니다.",
            "2": "모든 AWS 서비스에 대한 접근을 기본적으로 거부하고 각 서비스에 대해 명시적으로 허용해야 하는 고객 관리 키 정책을 구현합니다.",
            "3": "CMK에 접근이 필요한 각 AWS 서비스에 대한 권한을 생성하여 제한 없이 키를 사용할 수 있도록 허용합니다.",
            "4": "CMK에 대한 모든 작업을 허용하고 사용자 신원에 따라 접근을 제한하는 IAM 정책을 사용합니다."
        },
        "Correct Answer": "특정 AWS 서비스에 대한 접근을 제한하기 위해 kms:ViaService 조건 키를 포함하는 리소스 기반 정책을 CMK에 첨부합니다.",
        "Explanation": "kms:ViaService 조건 키가 포함된 리소스 기반 정책을 사용하면 어떤 AWS 서비스가 CMK를 사용할 수 있는지에 대한 세밀한 제어가 가능하여 무단 소스의 직접 API 접근을 효과적으로 방지합니다. 이는 KMS 키를 보호하면서 합법적인 서비스에 필요한 접근을 보장하는 모범 사례입니다.",
        "Other Options": [
            "CMK에 대한 모든 작업을 허용하고 사용자 신원에 따라 접근을 제한하는 IAM 정책을 사용하는 것은 무단 서비스 접근을 효과적으로 방지하지 못하며 잠재적인 보안 위험을 초래할 수 있습니다.",
            "CMK에 접근이 필요한 각 AWS 서비스에 대한 권한을 생성하여 제한 없이 키를 사용할 수 있도록 허용하는 것은 어떤 제어도 시행하지 않으며 키를 의도하지 않은 사용에 노출시킬 수 있습니다.",
            "모든 AWS 서비스에 대한 접근을 기본적으로 거부하고 각 서비스에 대해 명시적으로 허용해야 하는 고객 관리 키 정책을 구현하는 것은 운영 복잡성을 초래하고 여러 서비스 간의 접근 관리에 어려움을 겪을 수 있습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 금융 서비스 회사는 Amazon S3에 저장된 민감한 고객 데이터가 무단 사용자에 의해 수정되거나 삭제되지 않도록 데이터 보호 메커니즘을 구현해야 합니다. 이 회사는 규제 기준을 준수하면서 이러한 요구 사항을 시행하기 위해 다양한 AWS 서비스를 고려하고 있습니다.",
        "Question": "Amazon S3에서 민감한 데이터의 무결성을 보호하고 수정을 방지하기 위한 가장 효과적인 솔루션은 무엇입니까?",
        "Options": {
            "1": "S3 버킷에 대한 접근을 제한하고 특정 IAM 역할만 수정을 수행할 수 있도록 하는 KMS 키 정책을 설정합니다.",
            "2": "S3 버킷에서 준수 모드로 S3 객체 잠금을 활성화하고 객체 삭제 또는 수정을 방지하기 위해 보존 기간을 설정합니다.",
            "3": "AWS Backup을 사용하여 S3 버킷 데이터의 정기적인 백업을 생성하고, 우발적인 수정 시 복원을 허용합니다.",
            "4": "S3 버킷에서 객체의 여러 버전을 유지하기 위해 S3 버전 관리를 구현하여 이전 상태로 복구할 수 있도록 합니다."
        },
        "Correct Answer": "S3 버킷에서 준수 모드로 S3 객체 잠금을 활성화하고 객체 삭제 또는 수정을 방지하기 위해 보존 기간을 설정합니다.",
        "Explanation": "준수 모드에서 S3 객체 잠금을 활성화하는 것은 가장 효과적인 솔루션으로, 객체가 잠금 상태가 되면 지정된 보존 기간이 만료될 때까지 삭제되거나 수정될 수 없으므로 데이터 무결성을 유지하고 규제 기준을 준수합니다.",
        "Other Options": [
            "S3 버전 관리를 구현하면 객체의 이전 버전을 복구할 수 있지만, 현재 버전의 수정이나 삭제를 방지하지 않으므로 데이터 무결성을 완전히 보호하지는 않습니다.",
            "AWS Backup을 사용하는 것은 백업을 생성하는 데 도움이 되지만, S3 버킷 내 데이터에 대한 직접적인 수정을 방지하지 않으므로 데이터 무결성을 보호하는 요구 사항을 충족하지 않습니다.",
            "KMS 키 정책을 설정하면 S3 버킷에 대한 접근을 제한할 수 있지만, 객체 자체에 대한 수정을 본질적으로 방지하지 않으므로 데이터 무결성을 보호하는 특정 요구 사항을 충족하기에 불충분합니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "개발 팀이 AWS에서 민감한 데이터베이스 자격 증명에 접근이 필요한 새로운 애플리케이션을 배포하고 있습니다. 그들은 애플리케이션 코드에 하드코딩하지 않고 이러한 비밀을 컴퓨트 인스턴스에 안전하게 전달할 수 있는 솔루션이 필요합니다. 이 솔루션은 자격 증명의 손쉬운 회전도 허용해야 합니다.",
        "Question": "이 시나리오에서 비밀을 컴퓨트 워크로드에 관리하고 전달하는 가장 안전한 방법을 제공하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Systems Manager Parameter Store를 사용하여 데이터베이스 자격 증명을 저장하고 AWS CLI를 사용하여 안전하게 검색합니다.",
            "2": "데이터베이스 자격 증명을 애플리케이션 코드에 직접 삽입하고 IAM 역할을 사용하여 접근 제어를 합니다.",
            "3": "AWS Secrets Manager를 사용하여 데이터베이스 자격 증명을 저장하고 AWS SDK를 사용하여 런타임에 검색합니다.",
            "4": "제한된 접근 권한이 있는 S3 버킷에 데이터베이스 자격 증명을 저장하고 애플리케이션 시작 시 읽습니다."
        },
        "Correct Answer": "AWS Secrets Manager를 사용하여 데이터베이스 자격 증명을 저장하고 AWS SDK를 사용하여 런타임에 검색합니다.",
        "Explanation": "AWS Secrets Manager는 데이터베이스 자격 증명과 같은 민감한 정보를 관리하기 위해 특별히 설계되었습니다. 비밀의 안전한 저장, 검색 및 자동 회전을 위한 내장 기능을 제공하여 민감한 데이터가 하드코딩되거나 노출되지 않도록 보장합니다.",
        "Other Options": [
            "제한된 접근 권한이 있는 S3 버킷에 데이터베이스 자격 증명을 저장하는 것은 안전하지 않습니다. S3 버킷은 잘못 구성될 수 있어 민감한 정보가 무단 접근에 노출될 수 있습니다.",
            "자격 증명을 애플리케이션 코드에 직접 삽입하는 것은 보안 관행으로 좋지 않습니다. 이는 비밀이 코드 유출을 통해 노출될 위험이 있으며, 안전하게 회전할 수 있는 쉬운 방법을 제공하지 않습니다.",
            "AWS Systems Manager Parameter Store는 민감한 정보를 저장할 수 있지만, 자동 회전 및 통합 접근 정책과 같은 Secrets Manager의 일부 고급 기능이 부족하여 데이터베이스 자격 증명을 관리하는 데 덜 적합합니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "금융 기관이 규제 요구 사항 준수를 보장하기 위해 AWS에서 포괄적인 보안 모니터링 솔루션을 구현하고 있습니다. 보안 팀은 다양한 AWS 서비스에서 보안 경고 및 결과를 중앙 집중화하여 보안 태세에 대한 통합된 뷰를 얻고자 합니다. 이 목표를 달성하기 위해 AWS Security Hub와 다른 서비스를 사용하는 것을 고려하고 있습니다.",
        "Question": "보안 팀이 중앙 집중식 보안 모니터링을 위해 AWS Security Hub를 효과적으로 설정하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "AWS Security Hub를 활성화하고 Amazon CloudWatch와 통합하여 로깅합니다. 모든 AWS 계정이 단일 Security Hub에 연결되어 있는지 확인합니다.",
            "2": "AWS Security Hub를 활성화하고 AWS Config를 설정하여 리소스 변경 사항을 추적합니다. AWS Systems Manager를 사용하여 준수 검사를 수행합니다.",
            "3": "AWS Security Hub를 활성화하고 AWS IAM Access Analyzer를 사용하여 접근 구성을 모니터링합니다. 결과를 검토를 위한 중앙 집중식 대시보드에 연결합니다.",
            "4": "AWS Security Hub를 활성화하고 Amazon GuardDuty, Amazon Inspector 및 Amazon Macie와 같은 AWS 서비스에서 결과를 수신하도록 구성합니다. 데이터 소스가 제대로 연결되어 있는지 확인합니다."
        },
        "Correct Answer": "AWS Security Hub를 활성화하고 Amazon GuardDuty, Amazon Inspector 및 Amazon Macie와 같은 AWS 서비스에서 결과를 수신하도록 구성합니다. 데이터 소스가 제대로 연결되어 있는지 확인합니다.",
        "Explanation": "이 접근 방식은 AWS Security Hub가 여러 AWS 보안 서비스의 결과를 집계하여 보안 태세에 대한 포괄적인 뷰를 제공하도록 보장합니다. 이를 통해 보안 팀은 위협에 효과적으로 대응하고 준수 요구 사항을 충족할 수 있습니다.",
        "Other Options": [
            "AWS Security Hub를 Amazon CloudWatch와 통합하여 로깅하는 것은 일부 통찰력을 제공할 수 있지만, 다양한 AWS 서비스의 보안 결과를 중앙 집중화하지 않으므로 포괄적인 보안 모니터링 솔루션에 필수적이지 않습니다.",
            "AWS IAM Access Analyzer를 사용하는 것은 접근 구성을 모니터링하는 데 유용하지만, 다른 서비스의 보안 결과를 중앙 집중식으로 제공하기 위해 AWS Security Hub와 직접 통합되지 않습니다.",
            "AWS Config를 사용하여 리소스 변경 사항을 추적하고 AWS Systems Manager를 사용하여 준수 검사를 수행하는 것은 거버넌스에 중요하지만, AWS Security Hub가 보안 서비스와 통합하여 제공하는 중앙 집중식 보안 모니터링 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "네트워크 관리자가 Amazon EC2 인스턴스에서 실행 중인 애플리케이션의 성능 문제를 해결하고 있습니다. 트래픽 패턴에 대한 통찰력을 얻고 잠재적인 병목 현상을 식별하기 위해 관리자는 분석을 위해 트래픽 샘플을 캡처하기로 결정했습니다.",
        "Question": "다음 방법 중 EC2 인스턴스에서 트래픽 샘플을 안전하게 캡처하고 분석하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "EC2 인스턴스에 SSH로 접속하기 위해 배스천 호스트를 구성하고 tcpdump를 사용하여 수동으로 트래픽을 캡처합니다.",
            "2": "관련 EC2 인스턴스에서 AWS Traffic Mirroring을 구현하여 트래픽을 캡처하고 분석합니다.",
            "3": "트래픽을 캡처하고 중앙 집중식 로깅 서비스로 전송하기 위해 외부 네트워크 장비를 배포합니다.",
            "4": "VPC Flow Logs를 사용하여 EC2 인스턴스 간의 IP 트래픽에 대한 정보를 기록합니다."
        },
        "Correct Answer": "관련 EC2 인스턴스에서 AWS Traffic Mirroring을 구현하여 트래픽을 캡처하고 분석합니다.",
        "Explanation": "AWS Traffic Mirroring을 사용하면 EC2 인스턴스에서 네트워크 트래픽을 실시간으로 캡처하고 검사할 수 있어 성능 문제를 해결하는 데 필요한 자세한 통찰력을 제공하면서 보안 모범 사례를 유지할 수 있습니다.",
        "Other Options": [
            "VPC Flow Logs는 트래픽에 대한 제한된 가시성을 제공하지만 패킷 수준 데이터를 캡처하지 않으므로 Traffic Mirroring에 비해 깊이 있는 분석에는 덜 효과적입니다.",
            "배스천 호스트와 tcpdump를 사용하는 것은 수동 개입이 필요하고 확장성이 좋지 않아 여러 인스턴스에서 트래픽을 캡처하는 데 비효율적입니다.",
            "외부 네트워크 장비를 배포하면 추가적인 복잡성, 잠재적인 지연 및 보안 위험이 발생하며, AWS Traffic Mirroring이 제공되는 경우에는 필요하지 않습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "한 회사가 Amazon S3에 민감한 고객 데이터를 저장하고 있으며, 모든 데이터가 강력한 암호화 알고리즘을 사용하여 저장 중에 암호화되도록 보장하고자 합니다. 보안 팀은 규정 준수 요구 사항을 충족하기 위해 필요한 설정을 구성하는 책임이 있습니다.",
        "Question": "보안 팀이 Amazon S3에 저장된 모든 데이터가 저장 중에 암호화되도록 보장하기 위해 가장 가능성이 높은 옵션은 무엇입니까?",
        "Options": {
            "1": "버킷 버전 관리를 활성화하고 수명 주기 정책을 설정합니다.",
            "2": "Amazon S3 관리 키(SSE-S3)를 사용하여 서버 측 암호화를 구성합니다.",
            "3": "Amazon S3 이벤트 알림을 사용하여 Lambda 함수를 트리거합니다.",
            "4": "액세스 제어를 위해 AWS Identity and Access Management(IAM) 정책을 구현합니다."
        },
        "Correct Answer": "Amazon S3 관리 키(SSE-S3)를 사용하여 서버 측 암호화를 구성합니다.",
        "Explanation": "Amazon S3 관리 키(SSE-S3)를 사용하여 서버 측 암호화를 구성하면 S3 버킷에 저장된 모든 객체가 강력한 암호화 알고리즘을 사용하여 자동으로 저장 중에 암호화됩니다. 이는 민감한 정보에 대한 데이터 보호 요구 사항을 충족하기 위한 직접적인 접근 방식입니다.",
        "Other Options": [
            "버킷 버전 관리를 활성화하고 수명 주기 정책을 설정하는 것은 저장 중인 데이터에 대한 암호화를 본질적으로 제공하지 않습니다. 이러한 기능은 객체 버전 및 수명 주기 관리를 관리하지만 암호화를 통해 데이터를 보호하지는 않습니다.",
            "액세스 제어를 위해 AWS Identity and Access Management(IAM) 정책을 구현하는 것은 권한 관리를 중심으로 하며 저장 중인 데이터에 대한 암호화를 제공하지 않습니다. 액세스 제어는 중요하지만 저장된 데이터의 암호화 문제를 다루지는 않습니다.",
            "Amazon S3 이벤트 알림을 사용하여 Lambda 함수를 트리거하는 것은 이벤트 기반 아키텍처와 관련이 있으며 저장 중인 데이터의 암호화와는 관련이 없습니다. 이 접근 방식은 데이터를 보호하기보다는 자동화 및 처리에 더 중점을 둡니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 금융 서비스 회사가 웹 애플리케이션을 위한 콘텐츠 전송 네트워크로 Amazon CloudFront를 사용하고 있습니다. 엣지 서비스의 보안 태세를 강화하기 위해 보안 아키텍트는 CloudFront를 통과하는 모든 요청에 대한 로깅, 모니터링 및 경고를 구현하고자 합니다. 회사는 실시간으로 잠재적인 공격을 탐지할 수 있어야 합니다.",
        "Question": "이 시나리오에서 어떤 조합의 옵션을 구현해야 합니까? (두 개 선택)",
        "Options": {
            "1": "AWS Lambda 함수를 구성하여 CloudFront 로그를 실시간으로 분석하여 의심스러운 활동을 탐지합니다.",
            "2": "CloudFront 배포에 대해 AWS CloudTrail 로깅을 활성화하여 API 호출 및 변경 사항을 추적합니다.",
            "3": "AWS Shield Advanced를 활성화하여 분산 서비스 거부(DDoS) 공격으로부터 보호합니다.",
            "4": "Amazon CloudWatch를 CloudFront와 통합하여 높은 요청 비율 또는 5xx 오류에 대한 메트릭 및 경고를 생성합니다.",
            "5": "AWS Config 규칙을 사용하여 CloudFront 배포의 구성을 준수 여부를 모니터링합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon CloudWatch를 CloudFront와 통합하여 높은 요청 비율 또는 5xx 오류에 대한 메트릭 및 경고를 생성합니다.",
            "AWS Shield Advanced를 활성화하여 분산 서비스 거부(DDoS) 공격으로부터 보호합니다."
        ],
        "Explanation": "Amazon CloudWatch를 CloudFront와 통합하면 트래픽의 비정상적인 급증이나 오류를 탐지하는 데 도움이 되는 메트릭 및 경고를 생성할 수 있습니다. 이는 잠재적인 공격을 나타냅니다. AWS Shield Advanced를 활성화하면 DDoS 공격에 대한 보호가 강화되어 애플리케이션이 이러한 공격 중에도 가용성을 유지할 수 있습니다.",
        "Other Options": [
            "CloudFront에 대한 AWS CloudTrail 로깅을 활성화하는 것은 API 호출을 감사하는 데 유용하지만 트래픽 패턴이나 잠재적 공격에 대한 실시간 모니터링이나 메트릭을 제공하지 않습니다.",
            "AWS Config 규칙을 사용하는 것은 구성 기준 준수를 보장하는 데 유익하지만 실시간 트래픽을 직접 모니터링하거나 공격을 탐지하지는 않습니다.",
            "AWS Lambda 함수를 구성하여 CloudFront 로그를 실시간으로 분석하는 것은 좋은 관행이지만 복잡성을 추가하며 CloudWatch 메트릭을 사용하는 것에 비해 즉각적인 탐지를 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "한 회사가 AWS에서 새로운 웹 애플리케이션을 배포하고 있으며, 이 애플리케이션은 높은 가용성과 일반적인 위협에 대한 보안을 필요로 합니다. 이 애플리케이션은 인터넷을 통해 접근되며 다양한 수준의 트래픽을 처리해야 합니다. 보안 아키텍트는 최적의 보호 및 성능을 위해 엣지 보안 서비스와 로드 밸런싱을 결합한 다층 보안 접근 방식을 구현하는 임무를 맡고 있습니다.",
        "Question": "어떤 솔루션이 DDoS 공격 및 웹 익스플로잇과 같은 위협에 대해 웹 애플리케이션에 가장 효과적인 다층 방어를 제공합니까?",
        "Options": {
            "1": "Amazon CloudFront를 콘텐츠 전송 네트워크(CDN)로 활용하고 AWS WAF를 구현하여 로드 밸런서에 도달하기 전에 들어오는 트래픽을 필터링합니다.",
            "2": "애플리케이션을 EC2 인스턴스에 직접 배포하고 보안 그룹을 구성하여 특정 IP 주소에만 접근을 제한합니다.",
            "3": "AWS Global Accelerator를 사용하여 애플리케이션으로 트래픽을 라우팅하고 추가 보안 조치 없이 Amazon Route 53을 DNS 관리에 구현합니다.",
            "4": "Elastic Load Balancer(ELB)를 설정하여 EC2 인스턴스에 트래픽을 분산하고 표준 보안 그룹 설정에 의존하여 보호합니다."
        },
        "Correct Answer": "Amazon CloudFront를 콘텐츠 전송 네트워크(CDN)로 활용하고 AWS WAF를 구현하여 로드 밸런서에 도달하기 전에 들어오는 트래픽을 필터링합니다.",
        "Explanation": "Amazon CloudFront와 AWS WAF를 함께 활용하면 애플리케이션 계층에 도달하기 전에 악성 요청을 필터링하고 차단하여 DDoS 공격 및 웹 익스플로잇을 효과적으로 완화하는 강력한 보안 계층을 제공합니다. 이러한 다층 방어 접근 방식은 보안과 성능을 향상시킵니다.",
        "Other Options": [
            "애플리케이션을 EC2 인스턴스에 직접 배포하고 보안 그룹을 통해 접근을 제한하는 것은 웹 위협이나 DDoS 공격에 대한 충분한 보호를 제공하지 않으며, CloudFront 및 WAF와 같은 엣지 서비스가 제공하는 능동적인 방어가 부족합니다.",
            "AWS Global Accelerator 및 Route 53을 추가 보안 조치 없이 사용하는 것은 웹 애플리케이션 방화벽이나 DDoS 보호를 제공하지 않으며, 애플리케이션을 일반적인 위협에 취약하게 만듭니다.",
            "Elastic Load Balancer와 표준 보안 그룹 설정에만 의존하는 것은 잠재적인 애플리케이션 계층 공격이나 DDoS 위협을 해결하지 않으며, 고급 필터링이나 CDN 기능을 포함하지 않습니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "시스템 관리자는 고객 관리 키 쌍을 사용하여 새로 프로비저닝된 EC2 인스턴스에 대한 안전한 SSH 액세스를 구성하는 임무를 맡고 있습니다. 관리자는 Mac 사용자이며 AWS 모범 사례를 준수하면서 키 쌍이 올바르게 가져와졌는지 확인해야 합니다.",
        "Question": "관리자가 EC2 인스턴스에 대한 SSH 액세스를 위해 키 쌍을 성공적으로 가져오기 위한 올바른 단계 순서는 무엇입니까?",
        "Options": {
            "1": "openssl로 개인 키를 생성하고, 권한을 변경한 후, 공개 키를 생성하고, 그 다음 공개 키를 EC2에 가져옵니다.",
            "2": "openssl을 사용하여 개인 키를 생성하고, 공개 키를 생성한 후, 개인 키의 권한을 변경하고, 공개 키를 EC2에 가져옵니다.",
            "3": "openssl로 개인 키를 생성하고, 공개 키를 EC2에 가져온 후, 개인 키의 권한을 변경하고, 그 다음 공개 키를 생성합니다.",
            "4": "openssl을 사용하여 공개 키를 생성하고, 공개 키를 EC2에 가져온 후, 개인 키를 생성하고 권한을 변경합니다."
        },
        "Correct Answer": "openssl을 사용하여 개인 키를 생성하고, 공개 키를 생성한 후, 개인 키의 권한을 변경하고, 공개 키를 EC2에 가져옵니다.",
        "Explanation": "올바른 단계는 먼저 개인 키를 생성한 다음, 그로부터 공개 키를 생성하고, 보안을 위해 개인 키의 권한을 조정한 후, 마지막으로 SSH 액세스를 활성화하기 위해 공개 키를 EC2에 가져오는 것입니다.",
        "Other Options": [
            "이 옵션은 공개 키를 생성하기 전에 권한을 변경하여 단계의 순서를 잘못 정렬하고 있으며, 이는 요구되는 프로세스와 일치하지 않습니다.",
            "이 옵션은 개인 키가 생성된 후에만 수행해야 하는 공개 키 생성을 잘못 시작합니다.",
            "이 옵션은 개인 키의 권한을 변경하기 전에 공개 키를 가져오고 있어 보안 위험을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "조직은 Amazon EC2 인스턴스에 대해 여러 보안 그룹을 구성했습니다. 보안 팀은 여러 보안 그룹이 특정 포트에 대한 무제한 수신 액세스를 허용하고 있어 전체 보안 태세에 위험을 초래하고 있음을 발견했습니다. 팀은 보안을 강화하기 위해 불필요한 네트워크 액세스를 식별하고 제거하고자 합니다.",
        "Question": "이 시나리오에서 보안 팀이 불필요한 네트워크 액세스를 해결하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "AWS WAF를 구현하여 수신 트래픽을 필터링하고 알 수 없는 출처의 모든 요청을 차단합니다.",
            "2": "EC2 인스턴스와 연결된 모든 보안 그룹을 삭제하여 네트워크 액세스를 방지합니다.",
            "3": "모든 보안 그룹 규칙을 검토하고 신뢰할 수 있는 IP 주소와 필요한 포트에만 액세스를 제한하도록 수정합니다.",
            "4": "모든 네트워크 인터페이스에 대한 DDoS 공격에 대한 향상된 보호를 제공하기 위해 AWS Shield Advanced를 활성화합니다."
        },
        "Correct Answer": "모든 보안 그룹 규칙을 검토하고 신뢰할 수 있는 IP 주소와 필요한 포트에만 액세스를 제한하도록 수정합니다.",
        "Explanation": "이 조치는 기존 보안 그룹의 규칙을 검토하고 불필요한 네트워크 액세스를 식별하고 제한할 필요성을 직접적으로 해결합니다. 이는 보안과 운영 유연성의 균형을 맞춥니다.",
        "Other Options": [
            "이 옵션은 모든 보안 그룹을 삭제하면 EC2 인스턴스에 대한 네트워크 액세스가 전혀 없어져 합법적인 서비스 운영에 방해가 될 수 있으므로 실행 가능하지 않습니다.",
            "AWS Shield Advanced는 DDoS 공격에 대한 보호를 제공하지만 불필요한 네트워크 액세스 문제를 구체적으로 해결하지 않으며 보안 그룹 규칙을 수정하지 않습니다.",
            "AWS WAF를 구현하면 수신 트래픽 필터링에 도움이 될 수 있지만, 지나치게 허용적인 보안 그룹 규칙의 핵심 문제를 해결하지 않으며 잘못된 구성으로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "보안 분석가는 특정 IAM 사용자 계정과 관련된 비정상적인 활동을 감지하여 잠재적인 자격 증명 손상을 나타냅니다. 분석가는 손상된 자격 증명을 무효화하고 안전하게 회전시켜 추가적인 무단 액세스를 방지하기 위한 전략을 구현해야 합니다.",
        "Question": "이 시나리오에서 자격 증명 무효화 및 회전을 효과적으로 관리하기 위해 분석가는 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "AWS Secrets Manager를 사용하여 IAM 사용자 자격 증명을 회전시키고 새로운 자격 증명으로 관련 애플리케이션을 자동으로 업데이트합니다.",
            "2": "IAM 사용자를 수동으로 삭제하고 동일한 권한을 가진 새 사용자를 생성한 후, 모든 애플리케이션을 새로운 액세스 키로 업데이트합니다.",
            "3": "IAM 사용자를 비활성화하고 새로운 액세스 키를 생성한 후, AWS Systems Manager Parameter Store를 사용하여 새로운 액세스 키를 회전시킵니다.",
            "4": "IAM 사용자 비밀번호를 변경하고 추가 공격에 대한 보안을 강화하기 위해 다단계 인증(MFA)을 활성화합니다."
        },
        "Correct Answer": "AWS Secrets Manager를 사용하여 IAM 사용자 자격 증명을 회전시키고 새로운 자격 증명으로 관련 애플리케이션을 자동으로 업데이트합니다.",
        "Explanation": "AWS Secrets Manager를 사용하면 자격 증명의 자동 회전이 가능하며, 이러한 자격 증명에 의존하는 모든 애플리케이션을 원활하게 업데이트할 수 있습니다. 이는 다운타임을 최소화하고 손상 이후 무단 액세스의 위험을 줄입니다.",
        "Other Options": [
            "IAM 사용자를 수동으로 삭제하는 것은 자격 증명 손상을 처리하는 효율적인 방법이 아니며, 상당한 오버헤드를 수반하고 애플리케이션 다운타임을 초래할 수 있습니다. 동일한 권한을 가진 새 사용자를 생성하는 것은 자격 증명 무효화의 즉각적인 문제를 해결하지 않습니다.",
            "IAM 사용자를 비활성화하는 것만으로는 기존 액세스 키를 무효화하지 않으며, 이는 명시적으로 삭제될 때까지 여전히 사용될 수 있습니다. 자동 회전 프로세스 없이 새로운 액세스 키를 생성하는 것은 환경을 효과적으로 보호하지 않습니다.",
            "비밀번호를 변경하고 MFA를 활성화하는 것은 보안을 개선하지만, 액세스 키의 무효화 및 회전을 해결하지 않습니다. 이 옵션은 액세스 키와 관련된 손상의 위험을 완전히 완화하지 않습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며, 공유 책임 모델의 일환으로 보안 책임을 이해할 필요가 있습니다. 그들은 AWS의 보안 조치를 효과적으로 활용하면서 자신의 의무를 이행하고 있는지 확인하고자 합니다.",
        "Question": "공유 책임 모델의 맥락에서 AWS 서비스를 사용할 때 고객이 주로 책임지는 사항은 무엇입니까?",
        "Options": {
            "1": "고객 개입 없이 규정 준수 요구 사항을 충족하도록 AWS 관리 서비스를 구성하는 것.",
            "2": "AWS에서 실행되는 애플리케이션의 보안을 관리하는 것, 보안 패치 및 업데이트 적용을 포함하여.",
            "3": "AWS 데이터 센터가 물리적으로 안전하고 무단 접근으로부터 보호되도록 하는 것.",
            "4": "AWS 서비스에서 사용되는 기본 하드웨어 및 소프트웨어의 보안을 유지하는 것."
        },
        "Correct Answer": "AWS에서 실행되는 애플리케이션의 보안을 관리하는 것, 보안 패치 및 업데이트 적용을 포함하여.",
        "Explanation": "고객은 AWS 환경 내에서 자신의 애플리케이션과 데이터의 보안에 책임이 있으며, 여기에는 애플리케이션 및 구성에 대한 보안 패치와 업데이트 관리가 포함됩니다.",
        "Other Options": [
            "이 옵션은 AWS 데이터 센터의 물리적 보안은 AWS의 책임이므로 고객의 책임이 아니라는 점에서 잘못되었습니다.",
            "이 옵션은 AWS 관리 서비스가 AWS에 의해 구성되고 관리되지만 고객은 여전히 자신의 애플리케이션이 보안 및 규정 준수 요구 사항을 충족하도록 해야 하므로 잘못되었습니다.",
            "이 옵션은 AWS 서비스에서 사용되는 기본 하드웨어 및 소프트웨어의 유지 관리는 전적으로 AWS의 책임이므로 잘못되었습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "한 조직이 민감한 데이터를 보호하기 위해 AWS KMS를 사용하여 새로운 암호화 전략을 구현하고 있습니다. 보안 팀은 고객 관리 키(CMK)를 활용하여 암호화 키에 대한 완전한 제어를 유지하는 데 특히 관심이 있습니다. 그들은 다양한 유형의 CMK를 사용할 때의 의미와 이를 효과적으로 관리하는 프로세스를 이해하고자 합니다.",
        "Question": "AWS KMS에서 고객 관리 키(CMK)에 대한 다음 설명 중 어떤 것이 TRUE입니까?",
        "Options": {
            "1": "고객 관리 키는 내보내고 다른 AWS 계정과 공유하여 교차 계정 접근을 허용할 수 있습니다.",
            "2": "고객 관리 키는 고객에게 완전한 제어를 제공하며, 비활성화 및 삭제 예약 기능을 포함합니다.",
            "3": "고객 관리 키는 AWS에 의해 자동으로 관리되며 고객의 개입이 필요하지 않습니다.",
            "4": "고객 관리 키는 생성 즉시 대기 기간 없이 삭제할 수 있습니다."
        },
        "Correct Answer": "고객 관리 키는 고객에게 완전한 제어를 제공하며, 비활성화 및 삭제 예약 기능을 포함합니다.",
        "Explanation": "고객 관리 키(CMK)는 고객에게 완전한 제어를 제공하여 키 수명 주기 작업을 관리할 수 있게 하며, 비활성화 및 삭제 예약을 포함합니다. 이러한 키는 고객이 키 관리 프로세스에 대해 더 높은 수준의 제어를 유지하고자 할 때 사용됩니다.",
        "Other Options": [
            "고객 관리 키는 내보낼 수 없으며, 생성한 AWS 계정 내에서만 사용되도록 설계되어 고객의 제어 하에 키가 유지됩니다.",
            "고객 관리 키는 즉시 삭제할 수 없으며, 먼저 비활성화해야 하고 삭제가 이루어지기 전에 7일에서 30일의 대기 기간이 필요합니다.",
            "고객 관리 키는 AWS에 의해 자동으로 관리되지 않으며, 고객이 키의 수명 주기와 보안에 대한 책임을 집니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "한 팀이 민감한 데이터를 포함하는 S3 버킷을 관리하고 있습니다. 그들은 모든 객체 버전, 삭제된 버전을 포함하여, 사용 가능하도록 버전 관리를 구성했습니다. 또한 데이터 보존 및 삭제 관리를 위해 객체 잠금 및 수명 주기 정책을 사용하는 것을 고려하고 있습니다. 팀은 특정 객체가 지정된 날짜까지 삭제되거나 덮어쓰여지지 않도록 보장하면서, 오래된 객체 버전의 안전한 삭제 프로세스를 구현하고자 합니다.",
        "Question": "팀이 객체 버전을 보호하고 데이터 수명 주기를 관리하기 위해 구현해야 할 기능 조합은 무엇입니까?",
        "Options": {
            "1": "MFA 삭제가 활성화된 S3 버전 관리를 사용하고, 오래된 버전을 S3 Glacier로 전환하는 수명 주기 정책을 생성합니다.",
            "2": "암호화를 위해 SSE-KMS를 구성하고 버전 관리를 활성화합니다; 수명 주기 정책은 추가 구성 없이 만료된 버전을 삭제합니다.",
            "3": "준수 모드에서 S3 객체 잠금을 활성화하고, 설정된 기간 후에 오래된 버전을 삭제하도록 수명 주기 정책을 구성합니다.",
            "4": "법적 보유와 함께 거버넌스 모드에서 S3 객체 잠금을 활성화하고, 수명 주기 정책을 사용하여 오래된 버전을 자동으로 만료시킵니다."
        },
        "Correct Answer": "준수 모드에서 S3 객체 잠금을 활성화하고, 설정된 기간 후에 오래된 버전을 삭제하도록 수명 주기 정책을 구성합니다.",
        "Explanation": "준수 모드에서 S3 객체 잠금을 활성화하면 지정된 보존 기간이 만료될 때까지 객체 버전을 삭제하거나 덮어쓸 수 없습니다. 이를 수명 주기 정책과 결합하면 팀은 정의된 기간 후에 오래된 버전을 자동으로 삭제할 수 있어 보호 및 관리 요구 사항을 모두 충족합니다.",
        "Other Options": [
            "MFA 삭제가 활성화된 S3 버전 관리를 사용하는 것은 삭제에 대한 추가 보안 계층을 추가하지만, 덮어쓰기를 방지하지는 않습니다. 또한, 오래된 버전을 S3 Glacier로 전환하는 것은 특정 날짜까지 해당 버전을 보존해야 한다는 요구 사항을 충족하지 않습니다.",
            "거버넌스 모드에서 법적 보유와 함께 S3 객체 잠금을 활성화하면 특정 유연성을 제공하지만, s3:BypassGovernanceMode 권한이 있는 사용자가 삭제하는 것을 방지하지는 않습니다. 오래된 버전을 만료시키는 수명 주기 정책은 특정 날짜까지 보호해야 한다는 요구 사항과 일치하지 않습니다.",
            "SSE-KMS를 구성하여 암호화를 보장하면 데이터가 암호화되지만, 버전 보호나 수명 주기 관리를 제공하지 않습니다. 만료된 버전을 삭제하기 위해서는 수명 주기 정책이 필요하지만, 객체 잠금이 없으면 조기 삭제나 덮어쓰기에 대한 보장이 없습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "한 회사가 AWS 컨테이너를 사용하여 레거시 애플리케이션을 마이크로서비스 아키텍처로 마이그레이션하고 있습니다. 개발 팀은 서버리스 배포를 위해 Amazon Elastic Container Service (ECS)와 Fargate를 활용하기로 결정했습니다. 그들은 컨테이너가 다른 AWS 서비스와 안전하게 통신할 수 있도록 하면서 최선의 보안 관행을 준수해야 합니다.",
        "Question": "개발 팀이 애플리케이션 코드에 자격 증명을 하드코딩하지 않고 AWS 리소스에 안전하게 접근할 수 있도록 컨테이너를 허용하는 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "IAM 역할을 사용하여 코드에 자격 증명을 포함하지 않고 컨테이너에 필요한 권한을 부여합니다.",
            "2": "AWS 리소스에 접근할 수 있는 권한을 가진 IAM 사용자를 생성하고 자격 증명을 컨테이너의 환경 변수에 할당합니다.",
            "3": "AWS 액세스 키와 비밀 키를 컨테이너 내의 구성 파일에 저장하여 AWS 리소스에 접근합니다.",
            "4": "AWS Secrets Manager를 사용하여 자격 증명을 저장하고 필요할 때 애플리케이션 코드에서 이를 검색합니다."
        },
        "Correct Answer": "IAM 역할을 사용하여 코드에 자격 증명을 포함하지 않고 컨테이너에 필요한 권한을 부여합니다.",
        "Explanation": "IAM 역할을 사용하면 ECS 컨테이너가 자격 증명을 명시적으로 관리할 필요 없이 AWS 리소스에 안전하게 접근할 수 있습니다. 이 접근 방식은 AWS가 자동으로 회전하고 관리하는 임시 보안 자격 증명을 활용하여 AWS 보안 최선의 관행을 준수합니다.",
        "Other Options": [
            "AWS 액세스 키와 비밀 키를 구성 파일에 저장하는 것은 보안 위험이 있으며, 이는 민감한 정보를 노출하고 컨테이너가 손상될 경우 무단 접근으로 이어질 수 있습니다.",
            "IAM 사용자를 생성하고 자격 증명을 환경 변수로 할당하는 것은 장기 자격 증명을 관리해야 하므로 권장되지 않으며, 이는 노출 위험을 증가시키고 보안 최선의 관행에 반합니다.",
            "AWS Secrets Manager를 활용하는 것은 민감한 정보를 관리하는 좋은 방법이지만, 접근 자격 증명을 관리해야 하는 필요성을 없애지 않으며, IAM 역할을 사용하는 것과 동일한 수준의 보안을 제공하지 않으면서 추가적인 복잡성을 초래할 수 있습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "보안 팀은 AWS 환경을 위한 중앙 집중식 로깅 솔루션을 구현하여 모니터링 능력을 향상시키고자 합니다. 그들은 사용자 활동과 시스템 변경 사항을 효과적으로 추적하기 위해 로그에 충분한 세부 정보가 포함되어야 합니다. 그들은 시스템을 압도하지 않으면서 적절한 양의 정보를 캡처하기 위해 다양한 로깅 수준과 상세 설정을 고려하고 있습니다.",
        "Question": "보안 팀이 과도한 로그 양 없이 사용자 활동 및 시스템 변경 사항을 효과적으로 추적하기 위해 구현해야 할 로깅 구성은 무엇입니까?",
        "Options": {
            "1": "비핵심 AWS 서비스에 대해 낮은 상세도로 경고 수준 로깅을 활성화합니다.",
            "2": "모든 AWS 서비스에 대해 표준 상세도로 정보 수준 로깅을 활성화합니다.",
            "3": "모든 AWS 서비스에 대해 높은 상세도로 디버그 수준 로깅을 활성화합니다.",
            "4": "핵심 AWS 서비스에 대해 중간 상세도로 오류 수준 로깅을 활성화합니다."
        },
        "Correct Answer": "핵심 AWS 서비스에 대해 중간 상세도로 오류 수준 로깅을 활성화합니다.",
        "Explanation": "중간 상세도의 오류 수준 로깅은 중요한 이벤트를 캡처하고 로그 양을 최소화하는 균형을 이룹니다. 이 접근 방식은 보안 팀이 과도한 데이터에 압도되지 않고 중요한 문제를 모니터링할 수 있도록 하여 보안 사고를 식별하고 대응하기 쉽게 만듭니다.",
        "Other Options": [
            "높은 상세도의 디버그 수준 로깅은 압도적인 양의 로그 데이터를 생성하여 관련 정보를 식별하기 어렵게 만들며, 이는 효과적인 모니터링에 적합하지 않습니다.",
            "표준 상세도의 정보 수준 로깅은 중요한 보안 사고를 효과적으로 캡처하지 못할 수 있으며, 해결해야 할 중요한 오류 메시지를 간과할 수 있습니다.",
            "낮은 상세도의 경고 수준 로깅은 사용자 활동 및 시스템 변경 사항을 효과적으로 모니터링하기에 불충분하며, 즉각적인 주의가 필요한 중요한 이벤트를 놓칠 수 있습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "금융 기관의 보안 팀은 AWS 리소스에 대한 무단 접근 시도를 자동으로 감지하고 수정할 수 있도록 해야 합니다. 그들은 이러한 사건을 감지할 때 수정 작업을 트리거하는 솔루션을 만들기 위해 AWS 서비스를 활용하고자 합니다.",
        "Question": "보안 팀이 AWS 환경에서 무단 접근 시도의 수정을 자동화하기 위해 구현해야 할 접근 방식은 무엇입니까?",
        "Options": {
            "1": "웹 트래픽을 필터링하기 위해 AWS WAF를 배포하고 AWS Step Functions를 호출하여 수정 워크플로를 조정합니다.",
            "2": "AWS CloudTrail을 구성하여 API 호출을 기록하고 Amazon EventBridge를 사용하여 수정 작업을 위해 AWS Lambda를 트리거합니다.",
            "3": "AWS Config를 설정하여 리소스 구성을 모니터링하고 AWS Systems Manager 런북을 사용하여 무단 변경 사항을 자동으로 되돌립니다.",
            "4": "DDoS 공격으로부터 보호하기 위해 AWS Shield를 활성화하고 AWS Security Hub를 사용하여 중앙 집중식 보안 발견 및 경고를 관리합니다."
        },
        "Correct Answer": "AWS CloudTrail을 구성하여 API 호출을 기록하고 Amazon EventBridge를 사용하여 수정 작업을 위해 AWS Lambda를 트리거합니다.",
        "Explanation": "이 접근 방식은 API 호출을 기록하기 위해 AWS CloudTrail과 무단 접근 시도의 특정 패턴에 응답하기 위해 Amazon EventBridge를 효과적으로 결합하여 AWS Lambda가 정의된 수정 작업을 자동으로 실행하도록 트리거합니다.",
        "Other Options": [
            "AWS Config는 구성을 모니터링하고 준수를 강제할 수 있지만, 무단 접근 시도를 실시간으로 감지하기 위해 주로 설계되지 않았습니다. 이 옵션은 즉각적인 수정을 위한 필요를 직접적으로 해결하지 않습니다.",
            "AWS Shield는 DDoS 보호에 중점을 두고 있으며, AWS Security Hub는 보안 발견에 대한 중앙 집중식 뷰를 제공하지만 수정 작업을 자동화하지 않습니다. 이 옵션은 무단 접근에 대한 자동 응답 요구를 충족하지 않습니다.",
            "AWS WAF는 웹 트래픽 필터링에 유용하지만 복잡한 수정 워크플로를 조정하는 메커니즘을 본질적으로 제공하지 않습니다. 이 옵션은 사건 대응 자동화 요구를 직접적으로 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "다국적 기업이 다양한 지역에 걸쳐 AWS 리소스를 연결하기 위한 안전한 네트워킹 전략을 설계하고 있습니다. 이 아키텍처는 데이터 보호 규정을 준수하면서 리소스에 대한 안전한 접근을 보장하기 위해 개인 및 공용 가상 인터페이스(VIF)를 사용하는 Direct Connect를 포함합니다.",
        "Question": "회사가 개인 및 공용 VIF를 사용하여 온프레미스 데이터 센터와 여러 지역의 AWS 리소스 간에 안전한 데이터 전송을 보장하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "모든 트래픽에 대해 공용 VIF를 사용하여 다양한 지역의 AWS 리소스에 접근하여 데이터가 전송 중에 암호화되도록 합니다.",
            "2": "교차 지역 트래픽을 위한 개인 VIF를 생성하고 공용 AWS 서비스에 접근하기 위한 공용 VIF를 생성하여 민감한 데이터가 오직 개인 VIF를 통해서만 흐르도록 합니다.",
            "3": "각 지역의 AWS 리소스에 연결하기 위해 개인 VIF를 설정하고 AWS 공용 서비스에 접근하기 위해서만 공용 VIF를 사용합니다.",
            "4": "AWS Transit Gateway를 설정하여 지역 간 연결성을 관리하고 모든 데이터 전송에 대해 공용 VIF만 사용합니다."
        },
        "Correct Answer": "교차 지역 트래픽을 위한 개인 VIF를 생성하고 공용 AWS 서비스에 접근하기 위한 공용 VIF를 생성하여 민감한 데이터가 오직 개인 VIF를 통해서만 흐르도록 합니다.",
        "Explanation": "교차 지역 트래픽에 개인 VIF를 사용하면 민감한 데이터가 AWS의 개인 네트워크 인프라를 통해 안전하게 전송되며, 공용 VIF는 민감한 데이터에 노출되지 않고 공용 AWS 서비스에 접근하는 데 사용될 수 있습니다. 이 설정은 데이터 보호 및 규정 준수에 대한 모범 사례와 일치합니다.",
        "Other Options": [
            "각 지역의 AWS 리소스에 연결하기 위해 개인 VIF를 설정하고 AWS 공용 서비스에 접근하기 위해서만 공용 VIF를 사용하는 것은 민감한 데이터가 안전하게 유지된다는 것을 충분히 보장하지 않으며, 민감한 데이터의 적절한 분리를 명시하지 않습니다.",
            "다양한 지역의 AWS 리소스에 대한 모든 트래픽에 공용 VIF를 사용하는 것은 민감한 데이터를 공용 인터넷에 노출시켜 보안이 저하되며 데이터 보호 원칙을 위반합니다.",
            "AWS Transit Gateway를 설정하여 지역 간 연결성을 관리하고 모든 데이터 전송에 대해 공용 VIF만 사용하는 것은 민감한 데이터에 필요한 보안을 제공하지 않으며, 공용 VIF는 개인적이고 안전한 통신을 위해 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "회사가 Amazon EC2 인스턴스에서 비정상적인 활동을 감지하여 잠재적인 침해를 나타내고 있습니다. 보안 관리자는 인스턴스를 격리하고 환경에 대한 추가 손상을 방지하기 위해 신속하게 대응해야 합니다.",
        "Question": "보안 관리자가 침해된 EC2 인스턴스를 효과적으로 격리하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "EC2 인스턴스의 인스턴스 유형을 사용 중이지 않은 다른 유형으로 변경합니다.",
            "2": "EC2 인스턴스에서 네트워크 인터페이스를 분리하여 VPC와의 연결을 차단합니다.",
            "3": "침해된 인스턴스의 서브넷에 대한 모든 트래픽을 거부하는 네트워크 접근 제어 목록(NACL) 규칙을 추가합니다.",
            "4": "EC2 인스턴스를 중지하여 추가 접근 및 데이터 유출을 방지합니다.",
            "5": "EC2 인스턴스와 연결된 보안 그룹을 수정하여 모든 인바운드 및 아웃바운드 규칙을 제거합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "EC2 인스턴스를 중지하여 추가 접근 및 데이터 유출을 방지합니다.",
            "침해된 인스턴스의 서브넷에 대한 모든 트래픽을 거부하는 네트워크 접근 제어 목록(NACL) 규칙을 추가합니다."
        ],
        "Explanation": "EC2 인스턴스를 즉시 중지하면 인스턴스에서 실행 중인 모든 프로세스가 중단되어 잠재적인 데이터 유출이나 추가 침해를 방지합니다. 서브넷에 대한 모든 트래픽을 거부하는 NACL 규칙을 추가하면 추가적인 격리 계층을 제공하여 침해된 인스턴스와 VPC의 다른 리소스 간의 통신이 발생하지 않도록 합니다.",
        "Other Options": [
            "모든 규칙을 제거하기 위해 보안 그룹을 수정하는 것은 인스턴스를 격리할 수 있지만, 기존 연결이 있거나 인스턴스가 여전히 리소스에 접근할 수 있는 다른 수단이 있는 경우 효과적이지 않을 수 있습니다. 인스턴스를 중지하는 것이 더 확실한 조치입니다.",
            "네트워크 인터페이스를 분리하면 네트워크 통신을 차단할 수 있지만, 인스턴스는 여전히 침해당할 수 있으며 프로세스가 실행 중일 수 있습니다. 인스턴스를 중지하는 것이 모든 잠재적인 활동을 중단하는 더 포괄적인 솔루션입니다.",
            "인스턴스 유형을 변경하는 것은 격리를 제공하지 않으며 혼란을 초래할 수 있습니다. 이 조치는 침해를 효과적으로 통제할 즉각적인 필요를 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "AWS 환경에 대한 보안 평가를 수행하고 있으며, AWS Well-Architected Tool을 활용하여 보안 태세를 평가하기로 결정했습니다. 관리 및 보안 거버넌스 전략의 일환으로 아키텍처에 존재할 수 있는 보안 격차를 식별하고자 합니다.",
        "Question": "AWS Well-Architected Tool의 다음 기능 중 AWS 환경의 보안 격차를 식별하는 데 가장 유용한 것은 무엇입니까?",
        "Options": {
            "1": "실시간 위협 모니터링을 위한 대시보드를 제공합니다.",
            "2": "AWS 보안 제어를 기반으로 한 모범 사례를 제공합니다.",
            "3": "외부 표준에 기반한 보안 준수 보고서를 생성합니다.",
            "4": "보안 취약점의 수정 작업을 자동화합니다."
        },
        "Correct Answer": "AWS 보안 제어를 기반으로 한 모범 사례를 제공합니다.",
        "Explanation": "AWS Well-Architected Tool은 AWS의 모범 사례를 기반으로 통찰력을 제공하여 사용자가 아키텍처의 잠재적인 보안 격차를 식별하는 데 도움을 줍니다. 이 기능은 보안 태세를 평가하고 AWS의 보안 제어에 맞춘 개선 사항을 권장하도록 특별히 설계되었습니다.",
        "Other Options": [
            "AWS Well-Architected Tool은 수정 작업을 자동화하지 않으며, 주로 권장 사항을 제공하는 진단 도구입니다.",
            "이 도구는 준수 노력에 도움이 될 수 있는 통찰력을 제공할 수 있지만, 기본적으로 외부 표준에 기반한 공식적인 준수 보고서를 생성하지 않습니다.",
            "AWS Well-Architected Tool은 실시간 위협 모니터링을 제공하지 않으며, 모범 사례를 기반으로 아키텍처를 평가하고 개선하는 데 중점을 두고 있습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "보안 엔지니어는 EC2 인스턴스 집합에 대한 안전한 원격 액세스를 허용하기 위해 AWS Systems Manager Session Manager를 구성하는 임무를 맡았습니다. 엔지니어는 모든 세션이 기록되고 수신 포트가 노출되지 않도록 하기를 원합니다. 엔지니어는 이미 필요한 권한이 있는 EC2 인스턴스용 IAM 역할을 생성하고 이 역할을 사용하여 인스턴스를 시작했습니다. 엔지니어가 Session Manager를 통한 안전한 액세스를 위한 설정을 완료하기 위해 다음에 무엇을 해야 합니까?",
        "Question": "Session Manager 세션의 로깅을 구성하기 위해 보안 엔지니어가 취해야 할 다음 단계는 무엇입니까?",
        "Options": {
            "1": "사용자 프라이버시를 유지하기 위해 세션에 대한 모든 로깅을 비활성화합니다.",
            "2": "CloudWatch 로그 그룹을 생성하고 Session Manager가 이 로그 그룹을 세션 로깅에 사용하도록 구성합니다.",
            "3": "EC2 인스턴스에 대한 SSH 액세스를 활성화하고 SSH 데몬을 통해 로깅을 구성합니다.",
            "4": "Bastion 호스트를 설정하여 EC2 인스턴스에 대한 모든 수신 연결을 기록합니다."
        },
        "Correct Answer": "CloudWatch 로그 그룹을 생성하고 Session Manager가 이 로그 그룹을 세션 로깅에 사용하도록 구성합니다.",
        "Explanation": "CloudWatch 로그 그룹을 생성하고 Session Manager가 이를 활용하도록 구성하는 것은 세션 활동을 기록하는 데 필수적이며, 이러한 세션 동안 수행된 작업의 준수 및 감사 가능성을 보장합니다.",
        "Other Options": [
            "SSH 액세스를 활성화하는 것은 SSH와 관련된 보안 위험을 없애기 위해 설계된 Session Manager의 목적에 반합니다.",
            "Bastion 호스트를 설정하는 것은 추가 인프라 없이 안전한 액세스를 제공하도록 설계된 Session Manager의 원칙에 반합니다.",
            "모든 로깅을 비활성화하면 조직이 세션 활동을 추적할 수 없게 되어 보안 및 준수 요구 사항을 저해합니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "금융 서비스 회사는 민감한 데이터를 안전하게 저장해야 하는 EC2 인스턴스에서 애플리케이션을 배포하고 있습니다. 팀은 데이터 보호에 대해 저장 중 및 전송 중 모두 우려하고 있습니다. 그들은 Amazon Elastic Block Store (EBS)와 Amazon Elastic File System (EFS)을 저장소로 사용하는 것을 고려하고 있지만, 암호화 및 액세스 제어에 대한 준수 기준을 충족해야 합니다.",
        "Question": "팀이 EBS와 EFS를 사용하면서 데이터가 저장 중 및 전송 중에 암호화되도록 보장하기 위해 무엇을 구현해야 합니까?",
        "Options": {
            "1": "기본 설정으로 EFS를 사용하고 AWS Shield에 의존하여 보안을 유지하며, CloudWatch를 사용하여 애플리케이션에 대한 트래픽을 모니터링합니다.",
            "2": "암호화되지 않은 스냅샷으로 EBS 볼륨을 구성하고 애플리케이션을 실행하는 EC2 인스턴스에 대한 액세스를 제어하기 위해 보안 그룹을 사용합니다.",
            "3": "모든 볼륨에 대해 EBS 암호화를 활성화하고 EC2 인스턴스가 EFS 액세스를 위해 TLS를 통한 NFS를 사용하도록 구성하며, 액세스 관리를 위해 IAM 역할을 사용합니다.",
            "4": "데이터 저장을 위해 Amazon S3를 사용하고, 암호화를 위한 버킷 정책을 활성화하며, CloudTrail을 사용하여 준수 모니터링을 위한 액세스 로그를 추적합니다."
        },
        "Correct Answer": "모든 볼륨에 대해 EBS 암호화를 활성화하고 EC2 인스턴스가 EFS 액세스를 위해 TLS를 통한 NFS를 사용하도록 구성하며, 액세스 관리를 위해 IAM 역할을 사용합니다.",
        "Explanation": "이 옵션은 EBS 암호화를 활성화하고 EFS에 대해 TLS를 통한 NFS를 활용하여 저장 중 및 전송 중 암호화의 필요성을 올바르게 해결합니다. 또한 AWS에서 액세스 관리를 위해 IAM 역할을 사용하는 것의 중요성을 언급합니다.",
        "Other Options": [
            "이 옵션은 EBS 및 EFS 대신 Amazon S3를 사용하라고 잘못 제안하며, 이는 블록 및 파일 저장소 사용 요구 사항을 충족하지 않습니다. 또한 암호화를 위한 버킷 정책은 유용하지만 EBS 또는 EFS에는 적용되지 않습니다.",
            "이 옵션은 암호화되지 않은 스냅샷으로 EBS 볼륨을 구성하라고 잘못 제안하며, 이는 저장 중 데이터 보호를 보장하지 않습니다. 보안 그룹만 사용하는 것은 암호화나 준수를 제공하지 않습니다.",
            "이 옵션은 EBS 또는 EFS에 대한 암호화를 언급하지 않고 기본 설정 및 AWS Shield에만 의존하여 민감한 데이터에 대한 암호화 요구 사항을 해결하지 않습니다."
        ]
    }
]