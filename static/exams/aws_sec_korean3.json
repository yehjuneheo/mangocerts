[
    {
        "Question Number": "1",
        "Situation": "한 금융 서비스 회사가 AWS CloudTrail과 Amazon CloudWatch를 사용하여 AWS 리소스에 대한 접근을 기록하고 모니터링하고 있습니다. 최근 보안 사고 이후, 보안 팀은 향후 사고를 신속하게 식별하고 대응할 수 있도록 향상된 로깅 관행의 필요성을 확인했습니다. 그들은 상세한 로그를 캡처할 뿐만 아니라 효과적인 실시간 모니터링 및 경고를 가능하게 하는 솔루션을 구현하고자 합니다.",
        "Question": "다음 솔루션 중 회사의 AWS 리소스에 대한 가장 포괄적인 로깅 및 모니터링 기능을 제공하는 것은 무엇입니까?",
        "Options": {
            "1": "Amazon Inspector를 구현하여 리소스의 보안 상태를 분석하고 상세 보고서를 생성합니다.",
            "2": "AWS Lambda 함수를 사용하여 다양한 소스의 로그를 집계하고 S3 버킷에 저장하여 나중에 분석합니다.",
            "3": "AWS Config를 활용하여 리소스 구성 변경 사항을 추적하고 SNS 주제를 설정하여 알림을 보냅니다.",
            "4": "AWS CloudTrail을 활성화하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합하여 실시간 경고를 설정합니다."
        },
        "Correct Answer": "AWS CloudTrail을 활성화하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합하여 실시간 경고를 설정합니다.",
        "Explanation": "AWS CloudTrail을 활성화하여 모든 API 호출을 기록하고 Amazon CloudWatch와 통합하면 AWS 리소스에서 수행된 모든 작업에 대한 포괄적인 가시성을 제공합니다. 이 설정은 실시간 모니터링 및 경고를 가능하게 하여 보안 사고를 신속하게 식별하고 대응하는 데 필수적입니다.",
        "Other Options": [
            "AWS Config를 활용하여 리소스 구성 변경 사항을 추적하는 것은 도움이 되지만, API 호출 로그를 캡처하지 않기 때문에 실시간 사고 대응의 효과가 제한됩니다.",
            "Amazon Inspector를 구현하는 것은 리소스의 보안 상태를 평가하는 데 중점을 두며, 접근 및 수행된 작업에 대한 포괄적인 로깅이나 실시간 경고를 제공하지 않습니다.",
            "AWS Lambda 함수를 사용하여 로그를 집계하고 S3 버킷에 저장하는 것은 나중에 분석하는 데 유용하지만, 실시간 모니터링이나 경고 기능을 제공하지 않아 즉각적인 사고 대응에는 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 회사가 웹 애플리케이션을 다양한 위협과 공격으로부터 보호하기 위해 AWS WAF를 구현하고 있습니다. 보안 팀은 WAF가 요구 사항을 충족하도록 올바르게 구성되었는지 확인해야 합니다.",
        "Question": "보안 팀이 AWS WAF를 효과적으로 활용하기 위해 설정해야 할 구성 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "웹 ACL을 생성하고 이를 애플리케이션 로드 밸런서와 연결하여 들어오는 트래픽을 검사합니다.",
            "2": "규칙에서 조건을 설정하여 SQL 인젝션 공격을 위한 HTTP 헤더 및 URI 문자열을 검사합니다.",
            "3": "비율 기반 규칙을 구현하여 5분 동안 100개 이상의 요청을 하는 IP 주소를 자동으로 차단합니다.",
            "4": "웹 ACL을 Amazon S3 버킷과 연결하여 정적 콘텐츠에 대한 DDoS 보호를 제공합니다.",
            "5": "웹 ACL을 AWS Marketplace의 관리 규칙만 사용하도록 구성하고 사용자 정의 규칙은 사용하지 않습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "웹 ACL을 생성하고 이를 애플리케이션 로드 밸런서와 연결하여 들어오는 트래픽을 검사합니다.",
            "규칙에서 조건을 설정하여 SQL 인젝션 공격을 위한 HTTP 헤더 및 URI 문자열을 검사합니다."
        ],
        "Explanation": "웹 ACL을 생성하고 이를 애플리케이션 로드 밸런서와 연결하면 AWS WAF가 들어오는 웹 트래픽을 효과적으로 검사하고 필터링할 수 있습니다. 또한, HTTP 헤더 및 URI 문자열을 검사하기 위한 조건을 설정하면 SQL 인젝션 공격을 식별하고 완화하는 데 도움이 되어 애플리케이션의 전반적인 보안 상태를 강화합니다.",
        "Other Options": [
            "비율 기반 규칙을 구현하는 것은 좋은 관행이지만, 이 옵션은 정적 요청 수에 따라 차단하는 것만 명시하고 있어 일반 규칙에 대한 조건을 지정하는 중요성을 강조하지 않아 효과적인 WAF 활용에 덜 포괄적입니다.",
            "AWS Marketplace의 관리 규칙만 사용하고 사용자 정의 규칙을 사용하지 않는 것은 관리 규칙으로 다루지 않는 특정 위협에 대응하기 위한 유연성과 적응성을 제한합니다.",
            "웹 ACL을 Amazon S3 버킷과 연결하는 것은 AWS WAF의 유효한 사용 사례가 아닙니다. WAF는 웹 애플리케이션과 API를 보호하도록 설계되었으며, S3에 호스팅된 정적 콘텐츠를 보호하기 위한 것이 아닙니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 금융 서비스 회사가 AWS 환경에서 새로운 웹 애플리케이션을 배포하고 있습니다. 그들은 애플리케이션이 DDoS 공격으로부터 보호되면서 높은 가용성과 성능을 유지하도록 해야 합니다. 보안 엔지니어는 이러한 유형의 공격을 흡수하고 완화할 수 있는 솔루션을 찾고 있으며, 지연을 최소화해야 합니다.",
        "Question": "어떤 솔루션이 DDoS 공격에 대한 최상의 보호를 제공하면서 애플리케이션 성능을 보장합니까?",
        "Options": {
            "1": "AWS Shield Advanced를 구성하여 애플리케이션을 보호하고 Amazon CloudFront와 통합하여 콘텐츠를 전달합니다.",
            "2": "AWS Config를 사용하여 애플리케이션의 변경 사항을 모니터링하고 잠재적인 DDoS 공격에 대해 팀에 알립니다.",
            "3": "Elastic Load Balancing을 사용하면서 알려진 IP 주소를 제외한 모든 트래픽을 차단하는 AWS WAF 규칙을 활성화합니다.",
            "4": "애플리케이션 앞에 서드파티 DDoS 보호 장비를 배포하여 트래픽을 검사하고 필터링합니다."
        },
        "Correct Answer": "AWS Shield Advanced를 구성하여 애플리케이션을 보호하고 Amazon CloudFront와 통합하여 콘텐츠를 전달합니다.",
        "Explanation": "AWS Shield Advanced는 향상된 DDoS 보호를 제공하며 Amazon CloudFront와 원활하게 작동하도록 설계되어 합법적인 트래픽을 효과적으로 라우팅하면서 DDoS 시도를 완화합니다. 이 조합은 지연을 최소화하면서 보호와 성능을 모두 보장합니다.",
        "Other Options": [
            "서드파티 DDoS 보호 장비를 배포하면 애플리케이션에 복잡성과 지연을 추가할 수 있습니다. 또한, AWS Shield Advanced와 같은 수준의 통합을 제공하지 않을 수 있습니다.",
            "알려진 IP 주소를 제외한 모든 트래픽을 차단하는 AWS WAF 규칙을 활성화하면 합법적인 사용자가 차단될 수 있으며 애플리케이션 가용성이 감소할 수 있습니다. 이 접근 방식은 동적 트래픽 패턴에 대해 확장 가능하지 않습니다.",
            "AWS Config를 사용하여 애플리케이션의 변경 사항을 모니터링하는 것은 능동적인 DDoS 보호를 제공하지 않습니다. 이는 실시간 공격 완화보다는 준수 및 리소스 관리에 더 중점을 두고 있습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "보안 분석가는 AWS 계정 내 API 활동을 모니터링하는 임무를 맡고 있습니다. 분석가는 보안 감사 및 규정 준수를 위해 모든 AWS 서비스에 대한 API 호출이 기록되도록 해야 합니다. 성능에 영향을 주지 않거나 추가 인프라를 요구하지 않고 API 상호작용에 대한 자세한 정보를 캡처할 수 있는 서비스를 활용하고자 합니다.",
        "Question": "분석가는 API 호출을 효과적으로 기록하고 규정 준수를 보장하기 위해 어떤 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS CloudTrail을 사용하여 AWS 서비스에 대한 모든 API 호출을 캡처하고 기록합니다.",
            "2": "AWS CloudWatch를 사용하여 시스템 성능 및 리소스 활용도를 모니터링합니다.",
            "3": "AWS GuardDuty를 사용하여 악의적인 활동을 감지하고 보안 경고를 제공합니다.",
            "4": "AWS Config를 사용하여 리소스 구성 및 변경 사항을 모니터링합니다."
        },
        "Correct Answer": "AWS CloudTrail을 사용하여 AWS 서비스에 대한 모든 API 호출을 캡처하고 기록합니다.",
        "Explanation": "AWS CloudTrail은 AWS 서비스에 대한 모든 API 호출을 기록하도록 특별히 설계되어 있으며, 누가 호출했는지, 언제, 어디서 호출했는지에 대한 자세한 정보를 제공하여 보안 감사 및 규정 준수에 필수적입니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성 변경 및 규정 준수를 추적하지만 API 호출을 기록하지 않으므로 이 특정 요구 사항에는 적합하지 않습니다.",
            "AWS GuardDuty는 악의적인 활동을 모니터링하는 위협 탐지 서비스이지만 API 호출 기록을 제공하지 않으므로 분석가의 주요 요구 사항에 부합하지 않습니다.",
            "AWS CloudWatch는 주로 AWS 리소스와 관련된 성능 메트릭 및 로그를 모니터링하는 데 사용되지만, 보안 감사에 필요한 API 호출 세부 정보를 기록하지 않습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 회사는 수년 동안 AWS를 사용해 왔으며, 몇몇 관리자가 관리하는 단일 AWS 계정을 보유하고 있습니다. AWS 계정의 루트 사용자 자격 증명이 여전히 사용되고 있으며, 회사는 이 관행과 관련된 보안 위험에 대해 우려하고 있습니다. 보안 팀은 루트 사용자 계정을 보호하기 위한 모범 사례를 구현해야 합니다.",
        "Question": "보안 팀이 AWS 계정 루트 사용자 자격 증명의 보안을 강화하기 위해 취해야 할 가장 효과적인 조치는 무엇입니까?",
        "Options": {
            "1": "관리 권한이 있는 새로운 IAM 사용자를 생성하고 루트 계정을 삭제합니다.",
            "2": "루트 계정에 다단계 인증(MFA)을 활성화합니다.",
            "3": "루트 계정을 청구 목적으로만 사용합니다.",
            "4": "루트 계정 비밀번호를 30일마다 변경합니다."
        },
        "Correct Answer": "루트 계정에 다단계 인증(MFA)을 활성화합니다.",
        "Explanation": "루트 계정에 다단계 인증(MFA)을 활성화하면 추가 인증 계층이 추가되어 보안이 크게 강화되며, 비밀번호를 가지고 있는 경우에도 무단 사용자가 접근하기 훨씬 더 어렵습니다.",
        "Other Options": [
            "루트 계정 비밀번호를 30일마다 변경하는 것은 좋은 관행이지만, MFA가 제공하는 추가 보안 계층을 제공하지는 않습니다.",
            "관리 권한이 있는 새로운 IAM 사용자를 생성하는 것은 루트 계정과 관련된 위험을 제거하지 않으며, 루트 계정은 여전히 적절하게 보호되어야 합니다.",
            "루트 계정을 청구 목적으로만 사용하는 것은 활성 루트 자격 증명을 보유하는 것과 관련된 위험을 완화하지 않으며, MFA로 루트 계정을 보호하는 것이 여전히 중요합니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "데이터 엔지니어링 팀은 CloudTrail 및 VPC 흐름 로그를 포함한 다양한 AWS 서비스에서 S3에 저장된 로그를 분석하는 임무를 맡고 있습니다. 이 팀은 데이터 보안 및 접근 제어를 유지하면서 이 데이터를 효율적이고 비용 효과적으로 쿼리할 수 있도록 하고자 합니다. 팀은 데이터 스키마 관리를 위해 AWS Glue 데이터 카탈로그와 원활하게 통합할 수 있는 서비스를 활용하는 데 특히 관심이 있습니다.",
        "Question": "팀이 로그 데이터를 효율적으로 분석하면서 세밀한 접근 제어를 보장하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "Amazon EMR을 사용하여 S3에 저장된 로그 데이터를 분석하고 AWS Glue를 사용하여 스키마를 관리합니다.",
            "2": "AWS Lambda를 사용하여 S3에 저장된 로그 데이터에 대한 쿼리를 트리거하고 IAM 역할을 통해 접근을 관리합니다.",
            "3": "AWS Athena를 사용하여 S3에서 로그 데이터를 직접 쿼리하고 AWS Glue와 통합하여 스키마 관리를 합니다.",
            "4": "Amazon Redshift를 사용하여 S3에 저장된 로그 데이터에 대한 복잡한 쿼리를 수행합니다."
        },
        "Correct Answer": "AWS Athena를 사용하여 S3에서 로그 데이터를 직접 쿼리하고 AWS Glue와 통합하여 스키마 관리를 합니다.",
        "Explanation": "AWS Athena는 SQL을 사용하여 S3에서 데이터를 직접 쿼리하도록 설계되어 있으며, 사전 처리 없이 로그 분석에 이상적입니다. AWS Glue와 원활하게 통합되어 스키마 관리를 지원하며, 기본 S3 데이터에 대한 세밀한 권한을 지원하여 안전한 접근 제어를 보장합니다.",
        "Other Options": [
            "Amazon Redshift는 대규모 데이터 세트에 대한 복잡한 분석에 더 적합하며 데이터 로딩 단계가 필요하므로 Athena가 효율적으로 처리할 수 있는 작은 로그 데이터 세트에는 비용 효과적이지 않을 수 있습니다.",
            "Amazon EMR은 대규모 데이터 세트를 처리하기 위한 강력한 프레임워크를 제공하지만 클러스터 관리가 필요하며, Athena가 더 적합한 로그 분석에 불필요한 복잡성을 초래할 수 있습니다.",
            "AWS Lambda는 주로 이벤트 기반 아키텍처를 위한 것이며 S3의 로그 데이터에 대한 직접 쿼리 기능을 제공하지 않으므로 Athena와 같은 쿼리 엔진과 통합하지 않으면 이 목적에 비효율적입니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "금융 기관은 고객 데이터가 저장 중 및 전송 중 모두 암호화되도록 해야 합니다. 이들은 규제 기준을 준수하면서 암호화 요구 사항을 충족하기 위해 AWS 서비스를 사용하는 것을 고려하고 있습니다. 솔루션은 운영 오버헤드를 최소화하고 가능한 경우 AWS 관리 서비스를 활용해야 합니다.",
        "Question": "다음 솔루션 중 고객 데이터를 저장 중 및 전송 중 모두 암호화하는 요구 사항을 가장 잘 충족하면서 운영 오버헤드를 최소화하는 것은 무엇입니까?",
        "Options": {
            "1": "AWS Secrets Manager를 사용하여 민감한 고객 정보를 안전하게 저장하고, 데이터 전송에는 표준 HTTP를 사용하면서 저장 중 암호화를 위한 내장 암호화에 의존합니다.",
            "2": "AWS Key Management Service (KMS)를 구현하여 저장 중 데이터 암호화를 위한 고객 관리 키를 생성하고, 애플리케이션을 구성하여 AES-256을 사용하여 전송 중 데이터를 수동으로 암호화합니다.",
            "3": "Amazon S3를 사용하여 고객 데이터를 저장하고, 저장 중 데이터에 대해 Amazon S3 관리 키(SSE-S3)를 사용하여 서버 측 암호화를 활성화합니다. 안전한 데이터 전송을 위해 HTTPS를 사용합니다.",
            "4": "AWS KMS를 사용하여 저장 중 데이터 암호화를 위해 암호화가 활성화된 Amazon RDS에 고객 데이터를 저장합니다. 전송 중 데이터 암호화를 위해 모든 연결이 SSL/TLS를 사용하도록 합니다."
        },
        "Correct Answer": "Amazon S3를 사용하여 고객 데이터를 저장하고, 저장 중 데이터에 대해 Amazon S3 관리 키(SSE-S3)를 사용하여 서버 측 암호화를 활성화합니다. 안전한 데이터 전송을 위해 HTTPS를 사용합니다.",
        "Explanation": "이 옵션은 SSE-S3를 통해 저장 중 데이터에 대한 AWS 관리 암호화를 활용하여 요구 사항을 효과적으로 충족합니다. 이는 키 관리 및 운영 오버헤드의 필요성을 없애줍니다. 또한 HTTPS를 사용하여 전송 중 데이터가 암호화되도록 하여 최소한의 관리 노력으로 규정 준수 요구 사항을 충족합니다.",
        "Other Options": [
            "이 옵션은 전송 중 데이터의 수동 암호화를 요구하므로 운영 오버헤드와 복잡성이 증가합니다. AWS KMS는 키 관리에 좋은 선택이지만, 암호화를 수동으로 처리해야 하는 필요성은 불필요한 위험과 작업 부담을 추가합니다.",
            "저장 중 데이터에 대해 암호화가 활성화된 Amazon RDS를 사용하는 것은 유효한 솔루션이지만, 기관이 모든 고객 데이터 저장에 RDS를 사용하지 않는 경우 최적의 선택이 아닐 수 있습니다. 또한 이 옵션은 전송 중 데이터 암호화에 대한 명시가 없으므로 규정 준수에 필수적입니다.",
            "이 옵션은 표준 HTTP에 의존하므로 전송 중 데이터 암호화를 실패합니다. AWS Secrets Manager는 저장 중 암호화를 제공하지만 모든 고객 데이터를 저장하는 데 적합하지 않으며 안전한 데이터 전송 요구 사항을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "한 회사는 AWS Virtual Private Cloud (VPC) 내의 서로 다른 서브넷에 여러 애플리케이션을 배포했습니다. 이들은 애플리케이션이 원치 않는 트래픽으로부터 보호되면서 VPC 내의 리소스 간의 합법적인 통신이 허용되도록 하고자 합니다.",
        "Question": "다음 구성 중 VPC 내 리소스 간의 트래픽을 관리하기 위한 가장 효과적인 보안 제어를 제공하는 것은 무엇입니까?",
        "Options": {
            "1": "AWS Network Firewall을 사용하여 알려진 IP 주소에서만 VPC 리소스에 접근할 수 있도록 하는 규칙을 생성합니다.",
            "2": "특정 인바운드 및 아웃바운드 트래픽을 허용하고 다른 모든 트래픽을 거부하도록 보안 그룹을 구성합니다.",
            "3": "각 리소스에 대해 보안 그룹을 구현하고 네트워크 ACL 없이 트래픽 제어를 위해 오직 그것에만 의존합니다.",
            "4": "모든 트래픽을 허용하도록 네트워크 ACL을 설정한 후 개별 리소스 제어를 위해 보안 그룹을 지정합니다."
        },
        "Correct Answer": "특정 인바운드 및 아웃바운드 트래픽을 허용하고 다른 모든 트래픽을 거부하도록 보안 그룹을 구성합니다.",
        "Explanation": "보안 그룹은 인스턴스 수준에서 인바운드 및 아웃바운드 트래픽을 제어하는 가상 방화벽 역할을 합니다. 특정 트래픽을 허용하도록 구성하면 합법적인 연결만 이루어지고 다른 모든 트래픽은 거부되어 VPC 리소스에 대한 강력한 보안을 제공합니다.",
        "Other Options": [
            "모든 트래픽을 허용하도록 네트워크 ACL을 설정하는 것은 효과적인 보안을 제공하지 않습니다. 네트워크 ACL은 상태 비저장 방식이며 모든 트래픽을 허용하면 리소스가 불필요한 위험에 노출될 수 있습니다. 접근을 제한하는 데 사용해야 하며 무차별적으로 허용해서는 안 됩니다.",
            "트래픽 제어를 위해 AWS Network Firewall을 사용하는 것은 효과적이지만, 간단한 VPC 트래픽 관리를 위해 불필요한 복잡성을 초래할 수 있습니다. 보안 그룹은 일반적으로 인스턴스의 트래픽 관리를 위한 충분한 기능을 제공하므로 이 옵션은 최적이 아닙니다.",
            "네트워크 ACL 없이 보안 그룹을 구현하는 것은 가능하지만, 네트워크 ACL이 없으면 추가 보안 계층을 잃게 됩니다. 네트워크 ACL은 서브넷 수준에서 더 넓은 제어를 제공하여 전체 보안을 강화할 수 있습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 회사가 AWS에 다계층 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 웹 계층, 애플리케이션 계층 및 데이터베이스 계층으로 구성됩니다. 회사는 애플리케이션이 안전하도록 보장하고, 특히 서로 다른 계층과 온프레미스 리소스 간의 네트워크 분할에 중점을 두고자 합니다.",
        "Question": "애플리케이션의 네트워크 분할을 강화할 수 있는 조치의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 비공용 서브넷을 생성합니다.",
            "2": "웹 계층에서 데이터베이스 서브넷으로의 모든 인바운드 트래픽을 거부하는 네트워크 ACL을 배포합니다.",
            "3": "모든 리소스를 공용 서브넷에 배포하여 연결을 단순화하기 위해 단일 VPC를 사용합니다.",
            "4": "지정된 리소스 간의 트래픽만 허용하고 다른 모든 트래픽을 제한하는 보안 그룹을 구현합니다.",
            "5": "애플리케이션 VPC와 온프레미스 리소스를 안전한 데이터 전송을 위해 연결하기 위해 VPC 피어링을 설정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 비공용 서브넷을 생성합니다.",
            "지정된 리소스 간의 트래픽만 허용하고 다른 모든 트래픽을 제한하는 보안 그룹을 구현합니다."
        ],
        "Explanation": "웹 계층을 위한 공용 서브넷과 애플리케이션 및 데이터베이스 계층을 위한 비공용 서브넷을 생성하면 웹 계층이 인터넷에서 접근 가능하면서 애플리케이션 및 데이터베이스 계층은 직접 접근으로부터 보호되어 네트워크 분할이 강화됩니다. 지정된 리소스 간의 트래픽만 허용하는 보안 그룹을 구현하면 서로 통신할 수 있는 리소스를 제어하여 보안 태세를 더욱 강화합니다.",
        "Other Options": [
            "모든 리소스를 공용 서브넷에 배포하는 단일 VPC를 사용하는 것은 모든 리소스를 인터넷에 노출시켜 네트워크 분할의 이점을 없애므로 충분한 보안을 제공하지 않습니다.",
            "애플리케이션 VPC와 온프레미스 리소스를 연결하기 위해 VPC 피어링을 설정하는 것은 VPC 내에서 네트워크 분할과 직접적인 관련이 없습니다. 피어링은 통신을 촉진할 수 있지만 분할을 강화하지는 않습니다.",
            "웹 계층에서 데이터베이스 서브넷으로의 모든 인바운드 트래픽을 거부하는 네트워크 ACL을 배포하는 것만으로는 분할이 충분하지 않으며, 다른 형태의 트래픽을 방지하거나 계층 간의 전체 보안을 보장하지 않습니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 Amazon EC2에서 실행되는 데이터베이스 워크로드에 대한 보안 솔루션을 구현하고 있습니다. 이들은 SQL Server 및 Oracle 데이터베이스에 대한 투명한 데이터 암호화를 활성화하면서 규제 요구 사항을 준수해야 합니다. 보안 팀은 키 관리에 대한 다양한 옵션을 고려하고 있습니다.",
        "Question": "다음 솔루션 중 EC2에서 SQL Server 및 Oracle 데이터베이스에 대한 투명한 데이터베이스 암호화를 가능하게 하면서 규정 준수 요구 사항을 충족하는 것은 무엇입니까?",
        "Options": {
            "1": "SQL Server 및 Oracle 데이터베이스에 대한 내장 암호화 기능이 있는 Amazon RDS를 사용합니다.",
            "2": "KMS 키를 사용하여 서버 측 암호화된 데이터베이스 백업을 저장하기 위해 Amazon S3를 활용합니다.",
            "3": "모든 데이터베이스 워크로드에 대해 봉투 암호화를 사용하는 AWS Key Management Service (KMS)를 구현합니다.",
            "4": "키 관리 및 암호화를 위한 전용 하드웨어 보안 모듈을 제공하기 위해 AWS CloudHSM을 배포합니다."
        },
        "Correct Answer": "키 관리 및 암호화를 위한 전용 하드웨어 보안 모듈을 제공하기 위해 AWS CloudHSM을 배포합니다.",
        "Explanation": "AWS CloudHSM은 FIPS 140-2 Level 3 인증을 받은 전용 하드웨어 보안 모듈을 제공하여 엄격한 규제 제약이 있는 조직에 적합합니다. 이는 EC2에서 실행되는 SQL Server 및 Oracle 데이터베이스와의 통합을 위해 PKCS#11, JCE 및 CNG를 지원하며, 투명한 데이터 암호화를 가능하게 합니다. 이는 민감한 데이터가 포함된 경우 규정 준수에 필수적입니다.",
        "Other Options": [
            "AWS KMS를 봉투 암호화와 함께 구현하는 것은 특정 규제 기준에서 요구하는 전용 HSM 기능을 제공하지 않기 때문에 EC2에서 SQL Server 및 Oracle 데이터베이스의 투명한 암호화에는 충분하지 않습니다.",
            "Amazon RDS를 사용하는 것은 RDS Oracle이 투명한 데이터베이스 암호화를 위해 CloudHSM을 지원하지 않기 때문에 잘못된 것입니다. 질문에서는 EC2 워크로드에 대한 요구 사항을 명시하고 있습니다.",
            "Amazon S3를 활용하여 데이터베이스 백업을 저장하는 것은 EC2에서 SQL Server 및 Oracle 데이터베이스의 런타임 중 투명한 데이터베이스 암호화와 관련이 없으며, 이는 백업 암호화만 다룹니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "보안 엔지니어는 여러 서비스에서 비정상적인 행동을 감지하여 AWS 환경의 보안 태세를 강화하는 임무를 맡고 있습니다. 목표는 수동 노력과 운영 오버헤드를 최소화하면서 잠재적인 위협을 식별하기 위해 데이터를 효과적으로 상관시키는 솔루션을 구현하는 것입니다.",
        "Question": "보안 엔지니어가 AWS 서비스 전반에서 비정상성을 효과적으로 감지하고 데이터를 상관시키기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "AWS CloudTrail을 활용하여 API 호출을 모니터링하고 비정상적인 패턴을 분석합니다.",
            "2": "각 서비스에 대한 특정 메트릭을 모니터링하기 위해 사용자 정의 CloudWatch 경고를 설정합니다.",
            "3": "구성 변경을 추적하고 규정 준수를 평가하기 위해 AWS Config 규칙을 구현합니다.",
            "4": "Amazon GuardDuty를 활용하여 계정 활동 및 네트워크 트래픽을 분석하여 위협을 감지합니다."
        },
        "Correct Answer": "Amazon GuardDuty를 활용하여 계정 활동 및 네트워크 트래픽을 분석하여 위협을 감지합니다.",
        "Explanation": "Amazon GuardDuty는 AWS 계정 활동 및 네트워크 트래픽을 분석하여 위협 감지를 제공하도록 특별히 설계되었습니다. 이는 기계 학습, 비정상 감지 및 통합된 위협 인텔리전스를 활용하여 여러 AWS 서비스 전반에서 잠재적인 보안 위협을 식별하므로, 설명된 시나리오에 가장 효과적인 선택입니다.",
        "Other Options": [
            "AWS CloudTrail을 활용하는 것은 API 호출을 모니터링하는 데 유용하지만 GuardDuty와 같은 수준의 자동화된 위협 감지 및 상관 기능을 제공하지 않습니다.",
            "AWS Config 규칙을 구현하는 것은 규정 준수 모니터링 및 구성 변경 추적에 도움이 되지만 보안 위협을 식별하는 데 필요한 비정상 감지 기능이 부족합니다.",
            "사용자 정의 CloudWatch 경고를 설정하는 것은 특정 메트릭을 모니터링하는 데 유용하지만 수동 구성이 필요하며 포괄적인 위협 감지를 위해 필요한 비정상 감지 및 상관 기능을 본질적으로 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 회사는 모든 AWS 리소스가 내부 보안 정책을 준수하도록 보장하고자 합니다. 보안 팀은 비준수 리소스를 자동으로 표시하는 AWS Config 규칙을 생성해야 합니다. 그들은 S3 버킷이 공개 액세스를 허용하지 않도록 하는 등 리소스 구성과 관련된 특정 준수 기준을 시행하고자 합니다.",
        "Question": "비준수 AWS 리소스를 감지하기 위해 보안 팀이 AWS Config 규칙을 설정하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "AWS Security Hub를 사용하여 AWS 계정 전반의 규정 준수를 모니터링하고 관리합니다.",
            "2": "S3 버킷 정책의 공개 액세스 설정을 확인하는 사용자 정의 AWS Config 규칙을 생성합니다.",
            "3": "AWS CloudTrail을 활성화하여 AWS 리소스에 대한 변경 사항을 기록하고 규정 준수를 위해 로그를 검토합니다.",
            "4": "AWS Lambda 함수를 설정하여 주기적으로 리소스 구성을 수동으로 확인합니다."
        },
        "Correct Answer": "S3 버킷 정책의 공개 액세스 설정을 확인하는 사용자 정의 AWS Config 규칙을 생성합니다.",
        "Explanation": "사용자 정의 AWS Config 규칙을 생성하는 것은 리소스 구성과 관련된 준수 요구 사항을 구체적으로 목표로 합니다. 이 규칙은 S3 버킷 정책을 자동으로 평가하고 공개 액세스를 허용하는 정책을 표시하여 보안 기준 준수를 보장합니다.",
        "Other Options": [
            "AWS CloudTrail을 활성화하면 AWS 리소스에서 수행된 작업을 기록하지만, 비준수 리소스를 감지하거나 준수를 적극적으로 시행하지는 않습니다.",
            "AWS Security Hub를 사용하는 것은 보안 발견 사항을 집계하는 데 도움이 되지만, 리소스 구성에 대한 특정 준수 모니터링을 독자적으로 제공하지 않습니다.",
            "주기적인 점검을 위한 AWS Lambda 함수를 설정하는 것은 준수 감지에 지연을 초래하고 수동 개입이 필요하므로 AWS Config 규칙을 사용하는 것만큼 효율적이지 않습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사가 AWS에 새로운 웹 애플리케이션을 배포하고 있으며, 일반적인 웹 공격 및 DDoS 공격으로부터 보호하는 것에 대해 우려하고 있습니다. 아키텍처에는 콘텐츠 전송 네트워크로 Amazon CloudFront가 포함되어 있으며, 애플리케이션은 Application Load Balancer 뒤의 Amazon EC2 인스턴스에 호스팅되고 있습니다. 이 회사는 이러한 위협으로부터 포괄적인 보호를 제공하면서 사용자에게 최소한의 지연 시간을 보장하는 솔루션을 구현하고자 합니다.",
        "Question": "AWS에 배포된 애플리케이션에 가장 효과적인 보안 기능을 제공하는 서비스 조합은 무엇입니까?",
        "Options": {
            "1": "기본 설정으로 Amazon CloudFront를 배포하고, 웹 공격으로부터 보호하기 위해 Application Load Balancer의 보안 기능에만 의존합니다.",
            "2": "AWS Firewall Manager를 사용하여 여러 AWS 계정에서 보안 정책을 관리하고, Application Load Balancer에 AWS WAF 규칙과 AWS Shield Advanced를 적용합니다.",
            "3": "Application Load Balancer에서 AWS WAF를 활성화하고 악성 트래픽을 필터링하는 규칙 세트로 구성합니다. DDoS 보호를 위해 AWS Shield Standard를 사용합니다.",
            "4": "Amazon CloudFront에서 사용자 정의 규칙으로 AWS Shield Advanced를 구현하고, Application Load Balancer에 도달하기 전에 트래픽을 필터링하기 위해 Network ACL에 의존합니다."
        },
        "Correct Answer": "Application Load Balancer에서 AWS WAF를 활성화하고 악성 트래픽을 필터링하는 규칙 세트로 구성합니다. DDoS 보호를 위해 AWS Shield Standard를 사용합니다.",
        "Explanation": "Application Load Balancer에서 AWS WAF를 사용하면 애플리케이션의 요구에 맞춘 사용자 정의 규칙을 생성하여 악성 트래픽을 효과적으로 필터링할 수 있습니다. AWS Shield Standard와 결합된 이 접근 방식은 DDoS 공격에 대한 강력한 보호를 제공하면서도 상당한 지연 시간을 초래하지 않습니다.",
        "Other Options": [
            "Application Load Balancer의 보안 기능에만 의존하면 기본 설정이 모든 잠재적 위협을 적절히 처리하지 못할 수 있으므로 애플리케이션이 다양한 웹 공격에 노출됩니다.",
            "AWS Shield Advanced를 구현하는 것은 유익하지만, 트래픽 필터링을 위해 Network ACL에만 의존하는 것은 AWS WAF와 같은 세부적인 제어 수준을 제공하지 않습니다.",
            "AWS Firewall Manager는 중앙 집중식 관리를 제공하지만, 애플리케이션을 본질적으로 보호하지는 않습니다. Application Load Balancer에서 AWS WAF 규칙을 적절히 구성하는 것이 애플리케이션 계층 보호에 중요합니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 금융 서비스 회사의 보안 팀은 AWS 환경에서 잠재적인 보안 위협을 모니터링하는 임무를 맡고 있습니다. 그들은 AWS 계정에서 이루어진 API 호출을 기록하기 위해 AWS CloudTrail을 구현했습니다. 보안 태세를 강화하기 위해, 그들은 로그에서 이상 징후나 알려진 위협을 나타낼 수 있는 패턴을 식별하고자 합니다.",
        "Question": "CloudTrail 로그에서 보안 이상 징후와 알려진 위협을 분석하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Trusted Advisor를 사용하여 보안 모범 사례를 평가합니다.",
            "2": "지속적인 위협 탐지를 위해 AWS GuardDuty를 활성화합니다.",
            "3": "구성 변경을 추적하기 위해 AWS Config를 활용합니다.",
            "4": "로그 분석을 위해 Amazon CloudWatch Logs Insights를 구현합니다."
        },
        "Correct Answer": "로그 분석을 위해 Amazon CloudWatch Logs Insights를 구현합니다.",
        "Explanation": "Amazon CloudWatch Logs Insights는 강력한 쿼리 언어와 로그 시각화 기능을 제공하여 CloudTrail 로그에서 패턴과 이상 징후를 식별하는 데 효과적인 도구입니다. 이는 보안 위협 탐지에 필수적입니다.",
        "Other Options": [
            "AWS Config는 주로 구성 변경 및 준수를 모니터링하는 데 사용되지만, 보안 이상 징후를 위해 로그를 분석하지는 않습니다.",
            "AWS Trusted Advisor는 모범 사례에 대한 권장 사항을 제공하지만, 보안 위협이나 이상 징후를 위해 로그를 구체적으로 분석하지는 않습니다.",
            "AWS GuardDuty는 악의적인 활동을 모니터링하는 위협 탐지 서비스이지만, CloudWatch Logs Insights처럼 CloudTrail 로그를 직접 분석하지는 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 회사가 AWS CloudFormation을 사용하여 인프라를 코드로 관리하고 있습니다. 개발 팀은 특정 작업을 위한 서비스 역할을 포함하는 CloudFormation 스택을 생성하고 관리할 수 있는 권한을 부여받았습니다. 보안 팀은 서비스 역할에 부여된 권한과 이것이 AWS 리소스의 보안에 미칠 수 있는 영향에 대해 우려하고 있습니다.",
        "Question": "보안 팀이 CloudFormation 스택과 관련된 서비스 역할을 특정 사용자만 사용할 수 있도록 하면서 스택 작업에 필요한 권한을 유지하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "특정 사용자 또는 그룹에 따라 서비스 역할에 대한 액세스를 제한하는 신뢰 정책이 포함된 사용자 정의 실행 역할을 구현합니다.",
            "2": "서비스 역할에 광범위한 IAM 정책을 할당하여 스택 작업의 유연성을 보장하기 위해 모든 AWS 리소스에 대한 권한을 부여합니다.",
            "3": "사용자나 그룹에 대한 제한 없이 CloudFormation 스택에서 작업을 허용하는 서비스 역할에 대한 IAM 정책을 생성합니다.",
            "4": "조직의 모든 사용자가 기본적으로 서비스 역할을 사용할 수 있도록 허용하고, IAM 정책에 의존하여 CloudFormation 스택에서의 작업을 제한합니다."
        },
        "Correct Answer": "특정 사용자 또는 그룹에 따라 서비스 역할에 대한 액세스를 제한하는 신뢰 정책이 포함된 사용자 정의 실행 역할을 구현합니다.",
        "Explanation": "특정 신뢰 정책이 포함된 사용자 정의 실행 역할을 구현함으로써 보안 팀은 서비스 역할에 대한 접근을 제어할 수 있으며, 이를 통해 권한이 있는 사용자만 안전하게 CloudFormation 스택을 관리할 수 있습니다.",
        "Other Options": [
            "조직의 모든 사용자가 기본적으로 서비스 역할을 사용할 수 있도록 허용하면 잠재적인 오용 및 보안 취약점이 발생할 수 있으며, 이는 접근을 효과적으로 제어하지 못합니다.",
            "서비스 역할에 광범위한 IAM 정책을 할당하는 것은 최소 권한 원칙을 저해하고 AWS 리소스를 무단 작업에 노출시킬 수 있습니다.",
            "사용자나 그룹에 대한 제한 없이 IAM 정책을 생성하는 것은 서비스 역할에 대한 접근을 제어하지 않으므로 상당한 보안 위험을 초래합니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "한 회사가 Amazon S3를 사용하여 민감한 데이터를 저장하고 있으며 적절한 접근 제어가 이루어지도록 하고자 합니다. 그들은 계정 수준에서 Block Public Access 설정을 활성화하고 세부적인 접근 제어를 위해 버킷 정책을 사용하고 있습니다. 보안 팀은 모범 사례 준수를 보장하기 위해 구성을 검토하고 있습니다.",
        "Question": "보안 팀이 S3 버킷의 보안을 강화하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "모든 버킷에 대한 로그를 활성화하여 접근 요청 및 변경 사항을 추적합니다.",
            "2": "특정 AWS 계정을 제외한 모든 사용자에 대한 접근을 명시적으로 거부하는 버킷 정책을 구현합니다.",
            "3": "BlockPublicAcls를 사용하여 S3 버킷에 대한 모든 공개 접근을 제한합니다.",
            "4": "IgnorePublicAcls 옵션을 설정하여 기존 객체에 대한 공개 접근이 허용되지 않도록 합니다.",
            "5": "각 버킷에 ACL을 추가하여 인증된 사용자 그룹에 읽기 접근을 부여합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "모든 버킷에 대한 로그를 활성화하여 접근 요청 및 변경 사항을 추적합니다.",
            "특정 AWS 계정을 제외한 모든 사용자에 대한 접근을 명시적으로 거부하는 버킷 정책을 구현합니다."
        ],
        "Explanation": "모든 버킷에 대한 로그를 활성화하면 회사가 접근 요청 및 변경 사항을 추적할 수 있어 감사 및 사고 대응에 필수적입니다. 특정 AWS 계정을 제외한 모든 사용자에 대한 접근을 명시적으로 거부하는 버킷 정책을 구현하면 민감한 데이터에 대한 접근을 허가된 사용자로 제한하여 보안을 강화합니다.",
        "Other Options": [
            "버킷 수준에서 모든 공개 접근을 제한하는 것은 좋은 보안 관행이지만, 데이터에 접근할 수 있는 사람에 대한 추가 로그나 제어를 제공하지 않습니다. 이는 예방 조치에 가깝습니다.",
            "인증된 사용자 그룹에 읽기 접근을 부여하는 ACL을 추가하면 민감한 데이터가 인증된 AWS 사용자에게 노출될 수 있어 최소 권한 원칙에 위배됩니다.",
            "IgnorePublicAcls 옵션을 설정하는 것은 기존의 공개 ACL을 무시하는 데 유용하지만, 접근을 추적하거나 제어하기 위한 능동적인 조치를 제공하지 않으므로 올바른 옵션보다 효과적이지 않습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "한 금융 서비스 회사가 보안 태세를 강화하기 위해 안전한 소프트웨어 개발 생명 주기(SDLC)를 구현했습니다. 그들은 AWS 보안 팀과 정기적으로 공식 설계 검토를 수행하고, 설계 단계에서 위협 모델링을 수행하며, 다양한 단계에서 위험 평가를 완료합니다. 빌드 프로세스의 일환으로 정적 코드 분석 도구를 활용하고, 배포된 모든 애플리케이션이 업계 전문가에 의해 반복적인 침투 테스트를 받도록 보장합니다. 준수를 유지하고 운영 무결성을 보장하기 위해, 회사는 AWS 인프라의 긴급 및 구성 변경에 대한 변경 관리 프로세스를 마련하고, 모든 수정 사항을 업계 표준에 따라 문서화합니다. 또한 고객에게 이메일과 서비스 건강 대시보드를 통해 업데이트를 전달합니다.",
        "Question": "금융 서비스 회사가 업계 기준을 준수하면서 안전한 소프트웨어 개발 생명 주기(SDLC)를 유지하기 위해 필수적인 관행은 무엇입니까?",
        "Options": {
            "1": "애플리케이션을 배포하기 위해 공식 설계 검토를 수행하지 않고 자동화된 스크립트를 사용하여 개발 프로세스를 가속화합니다.",
            "2": "회사의 예산 제약에 맞추기 위해 침투 테스트를 연 1회로 제한하고 다른 보안 조치에 집중합니다.",
            "3": "새로운 애플리케이션에 대해서만 위협 모델링을 수행하고 기존 애플리케이션에 대해서는 오버헤드를 줄이기 위해 피합니다.",
            "4": "빌드 프로세스의 일환으로 코드 검토를 수행하고 모든 변경 사항이 적절히 승인되고 기록되도록 합니다."
        },
        "Correct Answer": "빌드 프로세스의 일환으로 코드 검토를 수행하고 모든 변경 사항이 적절히 승인되고 기록되도록 합니다.",
        "Explanation": "빌드 프로세스의 일환으로 코드 검토를 수행하는 것은 잠재적인 보안 취약점을 조기에 식별하고 모든 변경 사항이 철저히 문서화되도록 보장하는 데 중요합니다. 이는 안전한 설계 원칙과 일치하며 SDLC 전반에 걸쳐 강력한 보안 태세를 유지하는 데 도움이 됩니다.",
        "Other Options": [
            "공식 설계 검토 없이 애플리케이션을 배포하기 위해 자동화된 스크립트를 사용하는 것은 취약점을 식별할 수 있는 중요한 평가를 건너뛰어 보안을 저해하며, 이는 안전한 설계 원칙에 반합니다.",
            "침투 테스트를 연 1회로 제한하면 시스템에 탐지되지 않은 취약점이 남아 있을 위험이 증가하며, 보안 위협은 지속적으로 진화하므로 정기적인 테스트를 수행하는 것이 필수적입니다.",
            "새로운 애플리케이션에 대해서만 위협 모델링을 수행하는 것은 기존 애플리케이션의 잠재적 취약점을 간과하게 되어 상당한 위험을 초래할 수 있으며, 포괄적인 보안 접근 방식과 일치하지 않습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "한 회사는 IAM 역할과 정책이 최소 권한 접근에 최적화되도록 하면서 AWS 리소스에 대한 접근을 안전하게 관리해야 합니다. 보안 팀은 IAM 역할이 적절하게 할당되고 정책이 지나치게 허용적이지 않도록 효과적인지 확인해야 합니다. 팀은 조직 내 여러 AWS 계정에 걸쳐 이러한 요구 사항을 최적으로 구현하는 방법을 고려하고 있습니다.",
        "Question": "보안 팀이 조직의 모든 AWS 계정에서 안전하고 효율적인 IAM 역할 및 정책 관리 전략을 구현하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "AWS IAM Access Analyzer를 활용하여 모든 계정의 IAM 역할과 정책을 정기적으로 검토하고 조정하여 역할이 필요한 최소 권한을 갖도록 합니다. AWS Organizations에서 SCP를 구현하여 조직 수준에서 접근을 제한하고 최소 권한 원칙을 시행합니다.",
            "2": "각 AWS 계정에 필요한 정책이 첨부된 IAM 역할을 생성하고, 충돌을 피하기 위해 각 역할에 고유한 이름을 사용합니다. AWS Organizations를 사용하여 계정 간 권한을 시행하기 위한 서비스 제어 정책(SCP)을 적용하지만 최소 권한 준수를 위해 정책을 감사하지 않습니다.",
            "3": "IAM 역할 관리를 단일 AWS 계정으로 중앙 집중화하고 교차 계정 IAM 역할을 사용하여 다른 계정에 대한 접근을 위임합니다. 사용자가 필요한 접근을 보장하기 위해 지나치게 허용적인 정책을 만들고, 수동 감사를 통해 주기적으로 권한을 검토합니다.",
            "4": "각 계정에 광범위한 권한을 가진 IAM 역할을 설정하여 접근 관리의 유연성을 허용합니다. AWS CloudTrail을 사용하여 역할 사용을 기록하지만 최소 권한 원칙 준수를 위한 IAM 정책의 정기적인 검토는 수행하지 않습니다."
        },
        "Correct Answer": "AWS IAM Access Analyzer를 활용하여 모든 계정의 IAM 역할과 정책을 정기적으로 검토하고 조정하여 역할이 필요한 최소 권한을 갖도록 합니다. AWS Organizations에서 SCP를 구현하여 조직 수준에서 접근을 제한하고 최소 권한 원칙을 시행합니다.",
        "Explanation": "AWS IAM Access Analyzer를 활용하면 IAM 역할과 정책을 지속적으로 모니터링하고 조정할 수 있어 최소 권한 원칙 준수를 보장합니다. 서비스 제어 정책(SCP)을 구현함으로써 조직은 모든 계정에 걸쳐 더 넓은 접근 제한을 시행할 수 있어 추가적인 보안 계층을 제공합니다.",
        "Other Options": [
            "각 계정에 고유한 이름을 가진 IAM 역할을 생성하면 일관성이 떨어지고 관리가 복잡해질 수 있습니다. 또한 최소 권한 준수를 감사하지 않으면 조직이 불필요한 위험에 노출될 수 있습니다.",
            "IAM 역할 관리를 단일 계정으로 중앙 집중화하면 병목 현상이 발생할 수 있으며 권한을 효과적으로 관리하는 데 어려움이 생길 수 있습니다. 지나치게 허용적인 정책은 보안을 저해할 수 있으므로 피해야 합니다.",
            "광범위한 권한을 가진 IAM 역할을 설정하면 최소 권한 원칙을 저해하고 상당한 보안 취약점을 초래할 수 있습니다. CloudTrail 로그에만 의존하고 IAM 정책을 정기적으로 검토하지 않으면 조직이 위험에 노출될 수 있습니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "개발 팀이 AWS에 배포된 마이크로서비스 아키텍처에서 작업하고 있습니다. 그들은 데이터베이스 자격 증명, API 키 및 IAM 액세스 키와 같은 비밀을 관리하고 회전시키기 위한 안전한 방법이 필요합니다. 팀은 비밀이 애플리케이션 코드에 하드코딩되지 않도록 하고, 다운타임 없이 정기적으로 회전할 수 있도록 보장하고자 합니다.",
        "Question": "팀이 이러한 비밀을 안전하게 관리하고 회전시키기 위해 구현해야 할 접근 방식의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "비밀을 애플리케이션 컨테이너 내의 환경 변수에 직접 저장하여 쉽게 접근할 수 있도록 합니다.",
            "2": "AWS Secrets Manager를 사용하여 비밀을 저장하고 팀을 위해 자동으로 회전시킵니다.",
            "3": "AWS Systems Manager Parameter Store를 활용하여 비밀 관리를 위한 자동 버전 관리 및 암호화를 제공합니다.",
            "4": "역할 및 권한에 따라 비밀에 대한 접근을 제한하는 IAM 정책을 설정합니다.",
            "5": "서버 측 암호화와 함께 Amazon S3에 비밀을 저장하는 맞춤형 솔루션을 구현합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Secrets Manager를 사용하여 비밀을 저장하고 팀을 위해 자동으로 회전시킵니다.",
            "AWS Systems Manager Parameter Store를 활용하여 비밀 관리를 위한 자동 버전 관리 및 암호화를 제공합니다."
        ],
        "Explanation": "AWS Secrets Manager는 비밀을 저장하고 관리하며 자동으로 회전시키기 위한 강력한 솔루션을 제공하여 비밀이 애플리케이션 코드에 하드코딩되지 않도록 보장합니다. AWS Systems Manager Parameter Store는 암호화 및 버전 관리를 통해 민감한 정보를 안전하게 저장할 수 있는 옵션을 제공하여 비밀을 안전하게 관리하는 데 적합합니다.",
        "Other Options": [
            "Amazon S3에 비밀을 저장하는 것은 서버 측 암호화가 있더라도 자동 회전 또는 관리 기능을 제공하지 않으므로 민감한 데이터에 대해 덜 안전합니다.",
            "애플리케이션 컨테이너 내에서 환경 변수를 직접 사용하는 것은 비밀을 컨테이너 환경에 접근할 수 있는 모든 사람에게 노출시키며 회전 또는 관리 기능을 제공하지 않습니다.",
            "IAM 정책을 설정하여 접근을 제한하는 것은 비밀을 저장하거나 회전시키는 방법을 제공하지 않으며, 단지 누가 접근할 수 있는지를 제어할 뿐입니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 애플리케이션 및 AWS 리소스의 성능을 실시간으로 모니터링해야 합니다. 보안 엔지니어는 리소스 활용도를 추적할 뿐만 아니라 특정 임계값이 초과될 때 경고를 제공하는 솔루션을 구현하는 임무를 맡고 있습니다. 이 솔루션은 다양한 AWS 서비스에서 로그를 집계하고 상세 분석을 위한 사용자 정의 메트릭을 활성화할 수 있어야 합니다.",
        "Question": "보안 엔지니어가 애플리케이션 및 리소스를 효과적으로 모니터링하고, 로그를 집계하며, 사용자 정의 메트릭을 기반으로 경고를 설정하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Config를 사용하여 AWS 리소스의 구성을 모니터링하지만, 로그 집계 또는 실시간 애플리케이션 성능 모니터링을 지원하지 않습니다.",
            "2": "AWS CloudTrail을 사용하여 API 호출을 모니터링하고 이를 감사 목적으로 기록하지만, 실시간 모니터링이나 사용자 정의 메트릭을 제공하지 않습니다.",
            "3": "Amazon CloudWatch를 사용하여 애플리케이션 및 AWS 리소스를 실시간으로 모니터링하고, 로그를 집계하며, 사용자 정의 메트릭을 기반으로 경고를 설정합니다.",
            "4": "AWS CloudFormation을 사용하여 리소스를 안전하게 배포하지만, 모니터링 및 로깅 기능이 없습니다."
        },
        "Correct Answer": "Amazon CloudWatch를 사용하여 애플리케이션 및 AWS 리소스를 실시간으로 모니터링하고, 로그를 집계하며, 사용자 정의 메트릭을 기반으로 경고를 설정합니다.",
        "Explanation": "Amazon CloudWatch는 AWS 리소스 및 애플리케이션의 실시간 모니터링을 위해 특별히 설계되어 있으며, 로그 집계 및 사용자 정의 메트릭을 기반으로 경고를 설정할 수 있는 기능을 제공하여 요구 사항에 이상적인 선택입니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출 기록에 중점을 두고 있으며, 실시간 모니터링이나 성능 메트릭을 기반으로 사용자 정의 경고를 설정할 수 있는 기능을 제공하지 않으므로 이 시나리오에 적합하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성 및 준수를 모니터링하는 데 사용되지만, 로그 집계나 실시간 성능 모니터링을 제공하지 않으므로 이 요구 사항에 필수적입니다.",
            "AWS CloudFormation은 AWS 인프라를 코드로 프로비저닝하고 관리하기 위한 도구입니다. 모니터링이나 로깅 기능을 제공하지 않으므로 성능 모니터링 요구 사항에 관련이 없습니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "귀 조직은 이벤트 기반 아키텍처를 촉진하고 사고 대응 능력을 향상시키기 위해 Amazon EventBridge를 구현했습니다. 모든 보안 관련 이벤트가 캡처되고 적절하게 제3자 보안 정보 및 이벤트 관리(SIEM) 시스템으로 라우팅되도록 해야 합니다.",
        "Question": "다음 구성 중 AWS 서비스의 보안 이벤트가 Amazon EventBridge를 통해 SIEM 시스템으로 전송되도록 보장하는 것은 무엇입니까?",
        "Options": {
            "1": "AWS Config를 활성화하여 리소스 변경 사항을 모니터링하고 SNS 주제를 통해 SIEM 시스템에 알림을 보냅니다.",
            "2": "AWS CloudTrail 이벤트와 일치하는 EventBridge 규칙을 생성하고 이를 API 대상으로 SIEM 시스템으로 라우팅합니다.",
            "3": "AWS Lambda 함수를 구성하여 CloudTrail 로그를 폴링하고 관련 이벤트를 수동으로 SIEM 시스템으로 보냅니다.",
            "4": "CloudWatch Logs 구독을 설정하여 모든 로그를 EventBridge를 사용하지 않고 SIEM 시스템으로 직접 전달합니다."
        },
        "Correct Answer": "AWS CloudTrail 이벤트와 일치하는 EventBridge 규칙을 생성하고 이를 API 대상으로 SIEM 시스템으로 라우팅합니다.",
        "Explanation": "AWS CloudTrail 이벤트와 일치하는 EventBridge 규칙을 생성하면 AWS 서비스에서 생성된 특정 보안 이벤트를 캡처하고 해당 이벤트를 SIEM 시스템으로 직접 라우팅할 수 있습니다. 이 통합은 관련 이벤트가 실시간으로 처리되도록 하여 자동화된 사고 대응을 지원합니다.",
        "Other Options": [
            "CloudWatch Logs 구독을 설정하여 로그를 전달하는 것은 EventBridge를 활용하지 않으며, 이벤트 기반 아키텍처에서 이벤트를 라우팅하는 데 필요합니다. 또한 이 방법은 모든 관련 보안 이벤트를 효과적으로 캡처하지 못할 수 있습니다.",
            "AWS Lambda 함수를 구성하여 CloudTrail 로그를 수동으로 폴링하는 것은 복잡성과 이벤트 탐지 및 응답의 잠재적 지연을 초래합니다. 이는 실시간 이벤트 처리를 위한 AWS 서비스의 효율적인 사용이 아닙니다.",
            "AWS Config를 활성화하는 것은 리소스 변경 사항을 모니터링하는 데 유용하지만, 보안 이벤트를 SIEM 시스템으로 전송하도록 특별히 설계되지 않았습니다. SNS를 통한 알림 사용은 이벤트를 이벤트 기반 모델에 효과적으로 통합하지 않습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "조직이 다양한 환경에서 여러 개의 컨테이너화된 애플리케이션을 배포하고 있습니다. 보안 팀은 이러한 애플리케이션이 프로덕션에 배포되기 전에 알려진 취약점이 없는지 확인해야 합니다.",
        "Question": "보안 팀이 CI/CD 파이프라인 동안 컨테이너 이미지를 자동으로 취약점 스캔하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Config",
            "2": "Amazon Inspector",
            "3": "AWS Trusted Advisor",
            "4": "Amazon Elastic Container Registry (Amazon ECR) with image scanning"
        },
        "Correct Answer": "Amazon Elastic Container Registry (Amazon ECR) with image scanning",
        "Explanation": "Amazon Elastic Container Registry (ECR)는 배포 전에 컨테이너 이미지의 취약점을 식별하기 위한 내장 이미지 스캔 기능을 제공합니다. 이 기능은 CI/CD 워크플로우에 잘 통합되어 이미지 푸시 프로세스의 일환으로 알려진 취약점 및 준수 문제에 대해 자동으로 스캔되도록 보장합니다.",
        "Other Options": [
            "Amazon Inspector는 EC2 인스턴스 및 기타 AWS 리소스의 보안을 평가하기 위해 설계되었지만, ECR에 저장된 컨테이너 이미지를 스캔하는 데는 특별히 초점을 맞추지 않습니다.",
            "AWS Trusted Advisor는 AWS 환경에 대한 모범 사례 권장 사항 및 점검을 제공하지만, 컨테이너 이미지에 대한 취약점 스캔을 수행하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성 변경 및 준수를 모니터링하지만, 컨테이너 이미지에 대한 취약점 스캔 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "보안 팀은 다양한 출처의 로그를 분석하여 AWS 리소스의 잠재적인 보안 문제를 모니터링하는 임무를 맡고 있습니다.",
        "Question": "팀이 보안 문제를 효과적으로 식별하기 위해 분석해야 할 로그 출처의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "구성 규칙 준수를 평가하기 위한 AWS Config 로그.",
            "2": "데이터베이스 쿼리 성능을 추적하기 위한 Amazon RDS 성능 인사이트.",
            "3": "민감한 데이터에 대한 파일 접근 패턴을 모니터링하기 위한 Amazon S3 접근 로그.",
            "4": "배포 활동 및 변경 사항을 검토하기 위한 AWS CodeDeploy 로그.",
            "5": "AWS 리소스에서 이루어진 API 호출을 추적하기 위한 AWS CloudTrail 로그."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS CloudTrail 로그를 통해 AWS 리소스에서 이루어진 API 호출을 추적합니다.",
            "민감한 데이터에 대한 파일 접근 패턴을 모니터링하기 위한 Amazon S3 접근 로그."
        ],
        "Explanation": "AWS CloudTrail 로그를 분석하는 것은 무단 API 호출을 식별하는 데 필수적이며, 이는 악의적인 활동이나 잘못된 구성의 징후가 될 수 있습니다. Amazon S3 접근 로그를 검토하면 S3 버킷에 저장된 민감한 정보와 관련된 비정상적인 접근 패턴이나 잠재적인 데이터 유출을 탐지하는 데 도움이 됩니다.",
        "Other Options": [
            "AWS CodeDeploy 로그는 배포 활동에 초점을 맞추고 있어 보안 문제 식별에는 덜 관련이 있습니다.",
            "Amazon RDS 성능 인사이트는 주로 성능 최적화를 위해 사용되며 보안 관련 사건에 대한 정보를 직접 제공하지 않습니다.",
            "AWS Config 로그는 준수를 평가하는 데 유용하지만, 보안 위협을 직접적으로 나타내는 특정 활동이나 접근 패턴을 추적하지 않습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "금융 기관이 온프레미스 네트워크와 AWS 간의 안전한 연결을 구현하고 있습니다. 두 위치 간의 모든 트래픽이 암호화되고 솔루션이 무결성과 기밀성을 제공하는지 확인하고자 합니다. 보안 팀은 또한 다양한 암호화 알고리즘을 지원하도록 구성할 수 있는 널리 수용된 프로토콜을 찾고 있습니다.",
        "Question": "이러한 요구 사항을 충족하기 위해 금융 기관이 선택해야 할 VPN 프로토콜은 무엇입니까?",
        "Options": {
            "1": "SSL VPN",
            "2": "IPsec",
            "3": "PPTP",
            "4": "L2TP"
        },
        "Correct Answer": "IPsec",
        "Explanation": "IPsec은 암호화를 통해 데이터 무결성과 기밀성을 모두 제공하는 널리 사용되는 VPN 프로토콜입니다. 매우 구성 가능하며 다양한 암호화 알고리즘을 지원하여 온프레미스 네트워크와 AWS 간의 안전한 연결에 적합합니다.",
        "Other Options": [
            "L2TP는 단독으로 암호화를 제공하지 않으며, 보통 안전한 통신을 위해 IPsec과 함께 사용됩니다. 따라서 기밀성 요구 사항을 단독으로 충족할 수 없습니다.",
            "PPTP는 다른 옵션보다 보안성이 떨어지며 알려진 취약점이 있어 높은 수준의 보안을 요구하는 금융 기관에는 적합하지 않습니다.",
            "SSL VPN은 주로 원격 액세스에 사용되며, 금융 기관이 구현에서 찾고 있는 사이트 간 연결에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "한 의료 기관이 환자 기록 관리를 위한 새로운 클라우드 기반 애플리케이션을 구현하는 과정에 있습니다. 이들은 민감한 건강 정보를 보호하면서 비용을 최적화하기 위해 애플리케이션이 다양한 규제 프레임워크를 준수하는지 확인해야 합니다. 이 기관은 특히 HIPAA, NIST 및 PCI DSS에서 설정한 요구 사항을 충족하는 데 집중하고 있습니다. 보안 팀은 의료 데이터의 기밀성과 보안을 직접적으로 다루는 준수 프레임워크를 선택해야 합니다.",
        "Question": "의료 정보를 보호하고 행정 비용을 간소화하기 위해 기관이 우선적으로 고려해야 할 준수 프레임워크는 무엇입니까?",
        "Options": {
            "1": "ISO27001, 다양한 산업에 적용 가능한 정보 보안 관리 시스템에 대한 요구 사항을 설명합니다.",
            "2": "NIST, 사이버 보안에 대한 산업 표준을 제공하며 모든 부문에서 효과적으로 위험을 관리하는 데 도움을 줄 수 있습니다.",
            "3": "PCI DSS, 결제 카드 거래를 보호하고 카드 소지자 데이터를 보호하는 데 중점을 둡니다.",
            "4": "HIPAA, 의료 정보의 기밀성과 보안을 보호하는 것을 목표로 하기 때문에."
        },
        "Correct Answer": "HIPAA, 의료 정보의 기밀성과 보안을 보호하는 것을 목표로 하기 때문에.",
        "Explanation": "HIPAA는 건강 정보 보호를 보장하기 위해 특별히 설계된 가장 관련성 높은 프레임워크로, 환자 기록 관리를 위한 준수에 있어 매우 중요합니다.",
        "Other Options": [
            "NIST는 전반적인 사이버 보안 관리에 중요하지만 의료 정보를 특별히 다루지 않기 때문에 이 상황에서 HIPAA보다 덜 관련성이 있습니다.",
            "PCI DSS는 결제 카드 보안에 중점을 두고 있으며 의료 정보에는 적용되지 않으므로 기관의 요구를 충족하지 않습니다.",
            "ISO27001은 정보 보안 관리에 대한 광범위한 프레임워크를 제공하지만 HIPAA가 제공하는 특정 의료 초점이 부족하여 이 기관의 요구 사항에 덜 적합합니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 금융 기관이 개발, 테스트 및 프로덕션을 위한 환경을 분리하기 위해 여러 AWS 계정을 관리하고 있습니다. 이 기관은 이러한 계정 간의 리소스 관리 및 비용 할당을 개선하기 위해 태깅 전략을 구현했습니다. 그러나 리소스 태깅의 불일치를 발견하고 모든 계정에서 일관된 태깅 관행을 보장하고자 합니다. 이 기관은 모든 리소스에 프로젝트 식별자와 소유자 태그를 태깅하도록 요구하는 정책을 시행하고, 필수 태그가 없는 리소스는 생성할 수 없도록 하기를 원합니다.",
        "Question": "여러 AWS 계정에서 필수 태깅 전략을 가장 잘 시행할 수 있는 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS CloudFormation StackSets를 활용하여 모든 계정에서 리소스 생성 시 태깅 정책을 시행하는 템플릿을 배포합니다.",
            "2": "AWS Config 규칙을 활용하여 각 계정의 리소스 태깅을 평가합니다. 필수 태그가 누락된 리소스를 자동으로 태깅하는 수정 작업을 설정합니다.",
            "3": "필수 태그가 없는 리소스의 생성을 거부하는 AWS Organizations 서비스 제어 정책(SCP)을 구현합니다. 이 SCP를 모든 회원 계정에 적용합니다.",
            "4": "일정에 따라 실행되는 Lambda 함수를 생성하여 필수 태그가 없는 리소스를 스캔하고 모든 계정에서 비준수 리소스를 삭제합니다."
        },
        "Correct Answer": "필수 태그가 없는 리소스의 생성을 거부하는 AWS Organizations 서비스 제어 정책(SCP)을 구현합니다. 이 SCP를 모든 회원 계정에 적용합니다.",
        "Explanation": "AWS Organizations 서비스 제어 정책을 사용하면 여러 계정에서 정책을 중앙에서 관리할 수 있습니다. 필수 태그가 없는 리소스 생성을 거부하는 SCP를 구현함으로써 리소스가 프로비저닝되기 전에 계정 수준에서 준수를 보장하여 기관의 일관된 태깅 전략 시행 목표에 부합합니다.",
        "Other Options": [
            "AWS Config 규칙은 생성 후 준수를 평가하고 시행할 수 있지만 필수 태그가 없는 리소스의 생성을 방지하지 않으므로 기관의 요구에 비판적입니다.",
            "Lambda 함수를 사용하여 비준수 리소스를 삭제하는 것은 사후 문제를 해결할 수 있지만, 처음부터 리소스 생성을 중단하지 않으므로 태깅을 사전에 시행해야 하는 요구 사항을 충족하지 않습니다.",
            "AWS CloudFormation StackSets는 리소스 생성 중 태깅을 시행하는 데 도움이 될 수 있지만 더 복잡한 설정이 필요하고 모든 리소스 유형이나 기존 리소스를 포함하지 않을 수 있어 이 목적에 대해 SCP보다 효과적이지 않습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "한 금융 서비스 기관이 클라우드 리소스에 대한 액세스를 제어하기 위해 AWS Identity and Access Management (IAM)를 구현하고 있습니다. 특정 Amazon S3 버킷에서 읽을 수 있는 권한을 애플리케이션에 부여하는 정책을 정의해야 하지만 특정 조건 하에서만 가능합니다. 보안 팀은 보안을 강화하기 위해 특정 VPC 엔드포인트에서 오는 요청으로 액세스를 제한하고자 합니다.",
        "Question": "다음 IAM 정책 문 중에서 지정된 VPC 엔드포인트에서만 S3 버킷에 대한 액세스를 올바르게 허용하는 것은 무엇입니까?",
        "Options": {
            "1": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": \"s3:GetObject\", \"Resource\": \"arn:aws:s3:::example-bucket/*\" }] }",
            "2": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": \"s3:ListBucket\", \"Resource\": \"arn:aws:s3:::example-bucket\", \"Condition\": { \"StringEquals\": { \"aws:sourceVpce\": \"vpce-12345678\" } } }] }",
            "3": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": \"s3:GetObject\", \"Resource\": \"arn:aws:s3:::example-bucket/*\", \"Condition\": { \"StringEquals\": { \"aws:sourceVpce\": \"vpce-12345678\" } } }] }",
            "4": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Deny\", \"Action\": \"s3:GetObject\", \"Resource\": \"arn:aws:s3:::example-bucket/*\", \"Condition\": { \"StringEquals\": { \"aws:sourceVpce\": \"vpce-12345678\" } } }] }"
        },
        "Correct Answer": "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Action\": \"s3:GetObject\", \"Resource\": \"arn:aws:s3:::example-bucket/*\", \"Condition\": { \"StringEquals\": { \"aws:sourceVpce\": \"vpce-12345678\" } } }] }",
        "Explanation": "이 IAM 정책 문은 'example-bucket' 내의 객체에 대해 's3:GetObject' 작업을 올바르게 허용하지만, 요청이 지정된 VPC 엔드포인트에서 오는 경우에만 허용하여 필요한 보안 제약을 제공합니다.",
        "Other Options": [
            "이 옵션은 'Allow' 대신 'Deny'를 사용하므로 잘못되었습니다. 액세스를 거부하는 것은 애플리케이션에 S3 버킷에서 읽을 수 있는 권한을 부여하지 않습니다.",
            "이 옵션은 's3:GetObject' 대신 's3:ListBucket'을 허용하므로 잘못되었습니다. 요구 사항은 객체를 읽을 수 있도록 허용하는 것이지, 버킷 내용을 나열하는 것만이 아닙니다.",
            "이 옵션은 조건 없이 's3:GetObject'를 허용하므로 잘못되었습니다. 이는 어떤 요청이든 소스에 관계없이 S3 버킷에서 읽을 수 있게 하여 보안 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "보안 아키텍트는 AWS 환경 내에서 다양한 조건에 따라 엄격한 접근 제어를 시행하는 IAM 정책을 설계하는 임무를 맡고 있습니다. 이 정책은 여러 사용자와 리소스에 대한 권한을 효과적으로 관리하기 위해 AWS 관리 조건 키를 포함한 다양한 조건 연산자를 활용해야 합니다.",
        "Question": "보안 아키텍트가 세밀한 접근 제어를 보장하기 위해 어떤 IAM 정책 조건을 포함해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "aws:UserAgent를 사용하여 소스 애플리케이션에 따라 API 호출을 제한하고 aws:SourceVpc를 사용하여 특정 VPC에 대한 접근을 제한합니다.",
            "2": "aws:RequestTag를 활용하여 리소스 태깅을 제어하고 aws:SourceIp를 사용하여 클라이언트 IP 주소에 따라 접근을 제한하여 보안을 강화합니다.",
            "3": "aws:PrincipalTag를 설정하여 특정 태그가 있는 사용자만 일치하는 태그가 있는 리소스에서 작업을 수행할 수 있도록 합니다.",
            "4": "aws:PrincipalOrgID를 사용하여 특정 AWS 조직 내의 사용자에게 접근을 제한하고 aws:RequestedRegion을 사용하여 지정된 지역으로 작업을 제한합니다.",
            "5": "NotPrincipal 조건을 구현하여 지정된 역할 집합을 제외한 모든 사용자에게 권한을 거부하여 접근 제어를 위한 화이트리스트 접근 방식을 보장합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "aws:PrincipalOrgID를 사용하여 특정 AWS 조직 내의 사용자에게 접근을 제한하고 aws:RequestedRegion을 사용하여 지정된 지역으로 작업을 제한합니다.",
            "aws:PrincipalTag를 설정하여 특정 태그가 있는 사용자만 일치하는 태그가 있는 리소스에서 작업을 수행할 수 있도록 합니다."
        ],
        "Explanation": "aws:PrincipalOrgID를 사용하면 아키텍트가 특정 AWS 조직 내의 사용자에게 정책 적용 가능성을 효과적으로 제한할 수 있어, 리소스에 접근할 수 있는 계정 수를 줄여 보안을 강화합니다. 또한, aws:PrincipalTag는 태깅 정책을 시행할 수 있는 메커니즘을 제공하여, 정의된 태그에 따라 권한이 있는 사용자만 리소스를 태그하거나 접근할 수 있도록 보장합니다.",
        "Other Options": [
            "NotPrincipal 조건을 구현하면 세밀한 제어보다는 광범위한 접근 거부로 이어질 수 있어 이 시나리오에서는 효과적이지 않습니다.",
            "aws:RequestTag를 사용하는 것은 태깅 제어에 유용하지만, 이 경우에 필요한 전체 접근 제어 전략을 충분히 다루지 않습니다.",
            "aws:UserAgent와 aws:SourceVpc를 사용하는 것은 효과적일 수 있지만, 아키텍트가 목표로 하는 조건에서 필요한 수준의 구체성과 보안을 제공하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 금융 서비스 회사는 Amazon Aurora를 사용하여 거래 데이터베이스 요구를 충족하고 있습니다. 그들은 데이터베이스에 대한 안전한 접근을 제공하기 위해 IAM 데이터베이스 인증을 구현했습니다. 그러나 보안 검토 중에 일부 데이터베이스 접근 제어가 제대로 구성되지 않아 무단 사용자가 유효한 권한 없이 데이터베이스 연결을 시도할 수 있는 것으로 나타났습니다. 회사는 오직 권한이 있는 사용자만 연결할 수 있도록 하고 각 사용자의 권한이 그들의 역할과 일치하도록 해야 합니다.",
        "Question": "적절한 사용자 권한 및 접근 제어를 유지하면서 오직 권한이 있는 사용자만 Aurora 데이터베이스에 연결할 수 있도록 보장하는 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Lambda를 활용하여 데이터베이스 연결을 위한 단기 토큰을 생성하되, 데이터베이스 수준의 제어 없이 IAM 정책을 통해 사용자 권한을 완전히 관리합니다.",
            "2": "전송 중 데이터에 대한 SSL 암호화를 활성화하고 IAM 역할을 구성하여 데이터베이스 연결을 처리하며, 모든 사용자 권한을 데이터베이스 외부에서 관리합니다.",
            "3": "IAM 역할 및 정책을 사용하여 특정 IAM 사용자에게 rds-db:connect 작업을 부여하여 Aurora 데이터베이스 내에서 데이터베이스 사용자 권한이 관리되도록 합니다.",
            "4": "VPC 피어링을 구현하여 데이터베이스에 대한 접근을 제한하고 IAM을 사용하지 않고 보안 그룹만으로 사용자 권한을 시행합니다."
        },
        "Correct Answer": "IAM 역할 및 정책을 사용하여 특정 IAM 사용자에게 rds-db:connect 작업을 부여하여 Aurora 데이터베이스 내에서 데이터베이스 사용자 권한이 관리되도록 합니다.",
        "Explanation": "이 접근 방식은 Aurora 데이터베이스에 대한 인증을 위해 IAM 역할 및 정책을 사용하면서 데이터베이스 내에서 사용자 권한 제어를 유지합니다. 이는 보안 모범 사례와 일치하며, 사용자 역할에 따라 접근이 엄격하게 제어되도록 보장합니다.",
        "Other Options": [
            "VPC 피어링과 보안 그룹은 네트워크 접근을 제한하는 데 도움이 될 수 있지만, 사용자 인증이나 권한 부여를 직접적으로 다루지 않아 무단 접근으로 이어질 수 있습니다.",
            "전송 중 데이터에 대한 SSL을 활성화하는 것은 중요하지만, 사용자 인증이나 권한 부여를 다루지 않습니다. 데이터베이스 수준의 권한 없이 IAM에만 의존하는 것은 데이터베이스를 무단 접근에 노출시킬 수 있습니다.",
            "AWS Lambda를 사용하여 토큰을 생성하는 것은 유효한 접근 방식이지만, 사용자 권한을 IAM 정책만으로 관리하면 데이터베이스 작업에 대한 세밀한 제어가 부족해져 보안 위험이 증가할 수 있습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "조직의 보안 팀은 위협 탐지 및 사고 대응 능력을 향상시키고자 합니다. 그들은 다양한 AWS 서비스에서 발생한 모든 보안 발견 사항을 단일 대시보드로 중앙 집중화하여 가시성을 높이고 신속한 대응 시간을 확보하고자 합니다. 팀은 또한 발견 사항에 따라 자동화된 응답을 설정할 수 있도록 하고 싶어합니다. 이 목표를 달성하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Question": "AWS에서 보안 발견 사항을 중앙 집중화하고 사고 대응을 자동화하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "타사 보안 정보 및 이벤트 관리(SIEM) 솔루션을 배포하여 AWS 서비스의 로그를 수집하고 분석합니다. 이 솔루션을 AWS CloudWatch와 통합하여 경고를 설정합니다.",
            "2": "AWS Security Hub를 구현하여 다양한 AWS 서비스의 보안 발견 사항을 집계하고 시각화합니다. 이러한 발견 사항에 따라 자동화된 응답을 트리거하기 위해 AWS Lambda 함수를 구성합니다.",
            "3": "AWS CloudTrail을 사용하여 모든 API 호출을 기록하고 Amazon SNS를 설정하여 팀에 의심스러운 활동을 알립니다. 사건을 식별하기 위해 수동 검토를 수행합니다.",
            "4": "Amazon GuardDuty를 활성화하여 잠재적인 위협을 모니터링하고 AWS Config Rules를 구성하여 준수를 평가합니다. AWS Step Functions를 활용하여 사고 대응 워크플로를 관리합니다."
        },
        "Correct Answer": "AWS Security Hub를 구현하여 다양한 AWS 서비스의 보안 발견 사항을 집계하고 시각화합니다. 이러한 발견 사항에 따라 자동화된 응답을 트리거하기 위해 AWS Lambda 함수를 구성합니다.",
        "Explanation": "AWS Security Hub는 다양한 AWS 서비스의 보안 발견 사항을 중앙 집중화된 방식으로 제공하여 보안 팀이 위협을 관리하고 대응하기 쉽게 만듭니다. AWS Lambda와 통합함으로써 조직은 발견 사항에 따라 자동화된 응답을 구현할 수 있어 사고 대응 능력을 크게 향상시킬 수 있습니다.",
        "Other Options": [
            "AWS CloudTrail은 주로 API 호출을 기록하는 데 사용되며, 통합된 위협 인텔리전스나 자동화된 응답 기능을 제공하지 않아 보안 발견 사항을 중앙 집중화하는 데 효과적이지 않습니다.",
            "타사 SIEM 솔루션은 로그를 집계할 수 있지만, AWS 네이티브 서비스만큼의 통합 및 자동화 수준을 제공하지 못할 수 있어 사고 대응 속도를 저하시킬 수 있습니다.",
            "Amazon GuardDuty와 AWS Config Rules는 유용한 통찰력을 제공하지만, AWS Security Hub만큼 효과적으로 발견 사항을 단일 대시보드로 중앙 집중화하거나 자동화된 응답 워크플로를 가능하게 하지 않습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 S3 버킷에 저장된 정적 콘텐츠를 제공하기 위해 Amazon CloudFront를 사용하여 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 성능을 최적화하면서 민감한 데이터의 안전한 접근과 보호가 필요합니다. 팀은 권한이 있는 사용자만 콘텐츠에 접근할 수 있도록 보장해야 하며, 전송 중 민감한 데이터의 노출을 최소화하고자 합니다.",
        "Question": "팀이 CloudFront를 통해 콘텐츠를 제공하면서 보안을 강화하기 위해 어떤 구성 옵션을 구현해야 합니까?",
        "Options": {
            "1": "CloudFront를 사용하여 콘텐츠를 HTTP를 통해서만 제공하고 최대 성능을 보장하기 위해 모든 보안 기능을 비활성화합니다.",
            "2": "CloudFront 접근 로그를 활성화하고 S3 버킷을 awslogsdelivery 계정이 공용 접근을 제한하지 않고 전체 제어를 허용하도록 구성합니다.",
            "3": "CloudFront를 구성하여 접근 제어를 위해 서명된 URL 또는 서명된 쿠키를 사용하고 민감한 POST 데이터에 대해 필드 수준 암호화를 적용합니다.",
            "4": "공용 접근을 허용하는 S3 버킷 정책을 설정하고 CloudFront가 HTTP를 통해서만 콘텐츠를 제공하도록 설정합니다."
        },
        "Correct Answer": "CloudFront를 구성하여 접근 제어를 위해 서명된 URL 또는 서명된 쿠키를 사용하고 민감한 POST 데이터에 대해 필드 수준 암호화를 적용합니다.",
        "Explanation": "서명된 URL 또는 서명된 쿠키를 사용하면 콘텐츠에 대한 접근을 권한이 있는 사용자로 제한할 수 있습니다. 또한, 필드 수준 암호화를 적용하면 특정 POST 필드의 민감한 데이터가 암호화되어 백엔드를 통과할 때 노출이 줄어듭니다.",
        "Other Options": [
            "S3 버킷 정책을 통해 공용 접근을 허용하면 콘텐츠가 권한이 없는 사용자에게 노출되어 보안을 강화하려는 목표에 반합니다.",
            "접근 로그를 활성화하는 것은 모니터링에 유용하지만, 제한 없이 공용 접근을 허용하는 것은 상당한 보안 위험을 초래하며 민감한 데이터를 보호하지 않습니다.",
            "HTTP를 통해서만 콘텐츠를 제공하고 보안 기능을 비활성화하면 데이터 가로채기 및 공격의 위험이 크게 증가하여 애플리케이션의 보안 태세를 약화시킵니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 조직이 AWS 환경에 대한 보안 로그 및 모니터링 관행을 구현하고 있습니다. 보안 팀은 모든 로그가 안전하게 저장되고 모범 사례 및 규정 준수 요구 사항에 따라 관리되도록 해야 합니다.",
        "Question": "보안 팀이 로그 저장 및 수명 주기 관리를 효과적으로 구현하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "S3 버킷의 로그 파일 크기 변경에 대해 알림을 보내는 Amazon CloudWatch 경고를 설정합니다.",
            "2": "AWS Lambda를 사용하여 S3 버킷에서 90일 이상 된 로그를 자동으로 삭제합니다.",
            "3": "로그를 저장하는 S3 버킷에 대해 서버 측 암호화를 활성화하여 데이터가 정지 상태에서 보호되도록 합니다.",
            "4": "로그 저장 버킷에 대해 S3 버킷 버전 관리를 활성화하여 모든 로그 버전을 유지합니다.",
            "5": "Amazon S3 수명 주기 정책을 구성하여 30일 후 로그를 S3 Glacier로 전환합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3 수명 주기 정책을 구성하여 30일 후 로그를 S3 Glacier로 전환합니다.",
            "로그를 저장하는 S3 버킷에 대해 서버 측 암호화를 활성화하여 데이터가 정지 상태에서 보호되도록 합니다."
        ],
        "Explanation": "Amazon S3 수명 주기 정책을 구성하여 30일 후 로그를 S3 Glacier로 전환하면 저장 비용을 최적화하면서 로그가 규정 준수를 위해 유지되도록 합니다. S3 버킷에 대한 서버 측 암호화를 활성화하면 로그 데이터가 정지 상태에서 보호되어 보안 모범 사례를 준수합니다.",
        "Other Options": [
            "S3 버킷 버전 관리를 활성화하는 것은 객체 버전을 유지하는 데 유용하지만 로그 보존 및 비용 최적화를 위한 수명 주기 관리를 다루지 않습니다.",
            "로그 파일 크기 변경에 대한 Amazon CloudWatch 경고를 설정하는 것은 로그 저장 또는 관리와 직접적인 관련이 없으며, 모니터링과 관련이 있어 수명 주기 관리 요구 사항을 충족하지 않습니다.",
            "AWS Lambda를 사용하여 90일 이상 된 로그를 삭제하는 것은 일반적인 로그 보존 정책을 준수하지 않으며, 로그를 최소 기간 동안 보관해야 하는 경우가 많고, 유용한 데이터를 잃을 위험도 있습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 금융 서비스 회사가 AWS에 애플리케이션을 배포하고 있으며, 특정 트래픽만 민감한 백엔드 서비스에 접근할 수 있도록 엄격한 네트워크 제어를 구현해야 합니다. 보안 팀은 지정된 규칙에 따라 트래픽을 효과적으로 필터링하는 네트워크 제어를 구성하라는 요청을 받았습니다.",
        "Question": "보안 팀이 애플리케이션에 대한 인바운드 및 아웃바운드 트래픽 규칙을 시행하기 위해 어떤 AWS 서비스 조합을 사용해야 합니까?",
        "Options": {
            "1": "네트워크 ACL 및 AWS Firewall Manager",
            "2": "보안 그룹 및 AWS WAF",
            "3": "네트워크 방화벽 및 보안 그룹",
            "4": "AWS Shield 및 네트워크 ACL"
        },
        "Correct Answer": "네트워크 방화벽 및 보안 그룹",
        "Explanation": "네트워크 방화벽과 보안 그룹을 함께 사용하면 네트워크 트래픽을 제어하는 강력한 접근 방식을 제공합니다. 보안 그룹은 EC2 인스턴스의 인바운드 및 아웃바운드 트래픽을 제어하기 위한 가상 방화벽 역할을 하며, 네트워크 방화벽은 더 복잡한 규칙 세트와 상태 저장 검사를 네트워크 수준에서 가능하게 하여 포괄적인 보안 태세를 제공합니다.",
        "Other Options": [
            "보안 그룹만으로는 포괄적인 네트워크 제어에 필요한 상태 저장 검사 및 광범위한 규칙 기능을 제공하지 않습니다. AWS WAF는 주로 웹 애플리케이션을 일반적인 웹 공격으로부터 보호하는 데 사용되며 네트워크 트래픽 필터링에 중점을 두지 않습니다.",
            "네트워크 ACL은 서브넷 수준에서 트래픽을 필터링하는 데 도움이 될 수 있지만, 상태 비저장 방식이며 보안 그룹보다 유연성이 떨어집니다. AWS Firewall Manager는 계정 간 방화벽 규칙을 관리하는 데 사용되지만, 자체적으로 트래픽을 직접 필터링하지는 않습니다.",
            "AWS Shield는 관리형 DDoS 보호 서비스이며 네트워크 트래픽을 직접 필터링하지 않습니다. 네트워크 ACL은 상태 비저장 방식이며 민감한 백엔드 서비스에 필요한 세밀한 제어를 제공하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "보안 팀이 조직 내 AWS 루트 계정 관리에 대한 모범 사례를 검토하고 있습니다. 그들은 루트 계정이 보호되고 AWS 모범 사례에 따라 사용되도록 하기를 원합니다.",
        "Question": "AWS 루트 계정의 보안을 강화하기 위해 보안 팀이 구현해야 할 관행은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "일상적인 관리 작업을 위해 개별 IAM 사용자를 생성하고 루트 계정의 사용을 계정 복구 및 청구로 제한합니다.",
            "2": "루트 계정에 다단계 인증(MFA)을 활성화하여 추가 보안 계층을 제공합니다.",
            "3": "루트 계정 활동을 정기적으로 검토하고 비정상적인 접근 패턴에 대한 경고를 구성합니다.",
            "4": "신뢰할 수 있는 개발자와 루트 계정 자격 증명을 공유하여 리소스에 대한 빠른 접근을 용이하게 합니다.",
            "5": "모든 서비스에 제한 없이 접근할 수 있도록 루트 계정을 일상적인 작업에 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "루트 계정에 다단계 인증(MFA)을 활성화하여 추가 보안 계층을 제공합니다.",
            "일상적인 관리 작업을 위해 개별 IAM 사용자를 생성하고 루트 계정의 사용을 계정 복구 및 청구로 제한합니다."
        ],
        "Explanation": "루트 계정에 다단계 인증(MFA)을 활성화하면 두 번째 형태의 인증을 요구하여 보안의 중요한 계층을 추가하여 무단 사용자가 접근하기 어렵게 만듭니다. 또한, 일상적인 작업을 위해 개별 IAM 사용자를 생성하면 루트 계정을 사용하는 것과 관련된 위험을 최소화할 수 있으며, 루트 계정은 계정 복구 및 청구 관리와 같은 특정 관리 기능에만 사용해야 합니다.",
        "Other Options": [
            "루트 계정을 일상적인 작업에 사용하는 것은 매우 권장되지 않으며, 이는 계정 및 서비스에 대한 우발적이거나 악의적인 변경의 위험을 증가시킵니다. 모범 사례는 적절한 권한을 가진 IAM 사용자를 사용하는 것을 권장합니다.",
            "루트 계정 자격 증명을 공유하는 것은 심각한 보안 위험으로, 이는 무단 접근 및 전체 AWS 환경을 위협할 수 있는 행동으로 이어질 수 있습니다. 각 사용자는 최소한의 권한으로 자신의 자격 증명을 가져야 합니다.",
            "루트 계정 활동을 검토하는 것은 중요하지만, 이는 보안을 직접적으로 강화하지는 않습니다. 비정상적인 접근에 대한 경고를 구성하는 것도 좋은 관행이지만, 이러한 조치는 MFA 및 루트 계정 사용 제한의 필요성을 대체하지 않습니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 여러 지역에 걸쳐 데이터를 저장하기 위해 Amazon S3를 사용하고 있습니다. 그들은 데이터 내구성과 가용성을 보장하기 위해 교차 지역 복제(CRR)를 활성화했습니다. 소스 버킷은 미국 동부(N. Virginia) 지역에 위치하고, 대상 버킷은 EU(프랑크푸르트) 지역에 있습니다. 회사는 객체의 소유자가 버킷 소유자와 다를 때 성공적인 객체 복제를 위한 올바른 권한과 설정이 마련되어 있는지 확인하고자 합니다. 보안 팀은 교차 계정 접근에 대한 보안 모범 사례를 유지하면서 CRR 요구 사항 준수를 보장해야 합니다.",
        "Question": "소스와 대상 버킷 간의 교차 지역 복제(CRR)가 올바르게 작동하기 위해 필요한 구성은 무엇입니까? 객체 소유자가 버킷 소유자와 다를 경우를 고려합니다.",
        "Options": {
            "1": "소스 버킷 소유자는 객체 ACL을 통해 대상 버킷 소유자에게 READ 및 READ_ACP 권한을 부여해야 합니다.",
            "2": "고객 관리 정책이 복제를 위한 특정 권한 없이 IAM 역할에 연결되어야 합니다.",
            "3": "대상 버킷은 버전 관리가 활성화되어야 하지만, 소스 버킷은 필요하지 않습니다.",
            "4": "CRR가 제대로 작동하도록 하려면 소스 및 대상 버킷 모두 버전 관리가 활성화되어야 합니다."
        },
        "Correct Answer": "CRR가 제대로 작동하도록 하려면 소스 및 대상 버킷 모두 버전 관리가 활성화되어야 합니다.",
        "Explanation": "교차 지역 복제가 제대로 작동하려면 소스 및 대상 S3 버킷 모두 버전 관리가 활성화되어야 합니다. 이는 S3가 객체 버전을 추적할 수 있게 하여 복제에 필수적입니다.",
        "Other Options": [
            "이 옵션은 잘못된 것입니다. 소스 버킷 소유자가 필요한 권한을 부여해야 하지만, 이는 대상 버킷 소유자가 그 권한을 필요로 한다는 것과는 관련이 없습니다. 소스 버킷은 버킷 소유자와 관계없이 버전 관리가 활성화되어야 합니다.",
            "이 옵션은 잘못된 것입니다. CRR가 작동하려면 소스 및 대상 버킷 모두 버전 관리가 활성화되어야 합니다. 소스 버킷에 버전 관리가 활성화되어 있지 않으면 복제가 발생할 수 없습니다.",
            "이 옵션은 잘못된 것입니다. IAM 역할은 소스 버킷에서 대상 버킷으로 객체를 복제할 수 있는 능력과 같은 복제와 관련된 특정 권한을 가져야 합니다. 특정 권한이 없는 일반 정책은 충분하지 않습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 S3, DynamoDB 및 SQS와 같은 다양한 AWS 서비스에 접근해야 하는 웹 애플리케이션을 EC2 인스턴스에서 실행하고 있습니다. 보안 엔지니어는 애플리케이션 인스턴스가 애플리케이션 코드에 자격 증명을 하드코딩하지 않고 이러한 서비스에 접근할 수 있는 필요한 권한을 갖추도록 해야 합니다.",
        "Question": "애플리케이션을 실행하는 EC2 인스턴스에 필요한 권한을 부여하는 가장 안전한 방법은 무엇입니까?",
        "Options": {
            "1": "필요한 권한을 가진 IAM 사용자를 생성하고 EC2 인스턴스에서 실행 중인 애플리케이션에 액세스 키를 제공합니다.",
            "2": "AWS Secrets Manager를 사용하여 액세스 키를 저장하고 EC2 인스턴스에서 실행 중인 애플리케이션 내에서 이를 검색합니다.",
            "3": "EC2 인스턴스에서 접근해야 하는 각 AWS 서비스에 대한 권한을 수동으로 구성합니다.",
            "4": "필요한 AWS 서비스에 접근할 수 있는 권한을 부여하는 IAM 서비스 역할을 EC2 인스턴스에 연결합니다."
        },
        "Correct Answer": "필요한 AWS 서비스에 접근할 수 있는 권한을 부여하는 IAM 서비스 역할을 EC2 인스턴스에 연결합니다.",
        "Explanation": "EC2 인스턴스에 IAM 서비스 역할을 연결하는 것은 가장 안전한 방법입니다. 이는 애플리케이션이 자동으로 회전되는 임시 보안 자격 증명을 사용하여 AWS 서비스에 API 호출을 할 수 있게 합니다. 이는 애플리케이션 코드에 액세스 키를 저장할 필요를 없애고 자격 증명 유출의 위험을 줄입니다.",
        "Other Options": [
            "IAM 사용자를 생성하고 액세스 키를 제공하는 것은 보안 위험을 초래합니다. 키는 수동으로 관리하고 회전해야 하므로 유출될 가능성이 높아집니다.",
            "AWS Secrets Manager를 사용하여 액세스 키를 저장하는 것은 보안을 개선하지만, 여전히 애플리케이션이 정적 자격 증명을 관리하고 검색해야 하므로 IAM 역할을 사용하는 것보다 덜 효율적입니다.",
            "각 AWS 서비스에 대한 권한을 수동으로 구성하는 것은 비현실적이며 불일치와 잠재적인 보안 취약점을 초래할 수 있습니다. 이는 개별 서비스 구성을 기반으로 하며 중앙 집중식 역할에 의존하지 않습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "한 회사가 민감한 데이터에 무단으로 접근하는 보안 사고를 경험했습니다. 보안 팀은 사고에 관련된 AWS 리소스를 분석하여 가시성을 개선하고 향후 발생을 방지해야 합니다.",
        "Question": "사고 이후 보안 팀이 AWS 리소스의 서비스 기능, 권한 및 구성을 분석하기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "Amazon GuardDuty를 활성화하여 리소스에서의 악의적인 활동을 지속적으로 모니터링합니다.",
            "2": "CloudTrail 로그를 검토하여 사고 발생 중 영향을 받은 리소스에 대한 API 호출을 식별합니다.",
            "3": "사고 발생 기간 동안 리소스에 접근할 수 있었던 모든 사용자의 IAM 정책을 확인합니다.",
            "4": "AWS Config를 활용하여 영향을 받은 리소스의 구성 이력 및 준수를 검토합니다."
        },
        "Correct Answer": "CloudTrail 로그를 검토하여 사고 발생 중 영향을 받은 리소스에 대한 API 호출을 식별합니다.",
        "Explanation": "CloudTrail 로그를 검토하면 보안 팀이 사고와 관련된 특정 API 호출을 식별할 수 있어 접근이 어떻게 이루어졌는지와 어떤 조치가 취해졌는지를 파악할 수 있습니다. 이 정보는 사고를 이해하고 향후 발생을 방지하는 데 중요합니다.",
        "Other Options": [
            "AWS Config를 활용하는 것은 준수 및 구성 변화를 평가하는 데 유용하지만, 사고 발생 중에 취해진 조치에 대한 실시간 접근을 제공하지 않습니다.",
            "IAM 정책을 확인하는 것은 권한을 이해하는 데 중요하지만, 사고 발생 시 실제로 취해진 조치를 보여주지는 않습니다.",
            "Amazon GuardDuty를 활성화하는 것은 향후 모니터링에 유익하지만, 이미 발생한 과거 사고에 대한 통찰을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사가 Amazon EC2 인스턴스에 대한 안전한 원격 접근을 활성화해야 합니다. 보안 팀은 접근이 안전하고 회사 정책을 준수하며 잠재적 위협에 대한 노출을 최소화할 수 있는 다양한 방법을 평가하고 있습니다. 보안 엔지니어는 EC2 인스턴스에 대한 가장 안전한 원격 접근 방법을 선택하는 임무를 맡고 있습니다.",
        "Question": "EC2 인스턴스에 대한 원격 접근을 제공하는 가장 안전한 방법은 무엇입니까?",
        "Options": {
            "1": "인스턴스가 위치한 VPC에 VPN 연결을 설정하고 VPN을 통해 접근합니다.",
            "2": "보안 그룹에서 특정 IP 주소만 허용하여 인스턴스에 SSH 접근을 구현합니다.",
            "3": "AWS Systems Manager Session Manager를 사용하여 인바운드 포트를 열지 않고 인스턴스에 접근합니다.",
            "4": "인스턴스에 RDP 접근을 구성하고 사용자에 대해 다단계 인증(MFA)을 활성화합니다."
        },
        "Correct Answer": "AWS Systems Manager Session Manager를 사용하여 인바운드 포트를 열지 않고 인스턴스에 접근합니다.",
        "Explanation": "AWS Systems Manager Session Manager를 사용하면 인바운드 포트를 열 필요 없이 EC2 인스턴스에 안전하게 접근할 수 있어 공격 표면이 크게 줄어듭니다. 세션을 중앙에서 관리하고 활동을 기록하며 IAM 정책과 통합하여 세밀한 접근 제어를 가능하게 하여 원격 접근을 위한 가장 안전한 옵션이 됩니다.",
        "Other Options": [
            "특정 IP 주소 제한으로 SSH 접근을 구현하는 것은 여전히 인바운드 포트를 열어야 하며, 이를 잘 관리하지 않으면 취약점이 될 수 있습니다. 공격자는 SSH 구성의 약점을 이용하거나 자격 증명을 무차별 대입할 수 있습니다.",
            "RDP 접근을 구성하는 것은 공격자가 목표로 삼을 수 있는 포트를 여는 것을 포함합니다. MFA가 보안 계층을 추가하지만, RDP 서비스 자체의 노출은 여전히 위험이 되며, 특히 적절히 모니터링되고 보호되지 않는 경우 더욱 그렇습니다.",
            "VPN 연결을 설정하면 트래픽을 암호화하여 보안을 강화하지만, 여전히 VPN 구성 및 접근 제어를 관리해야 합니다. 제대로 보호되지 않으면 손상된 VPN이 네트워크에 대한 무단 접근으로 이어질 수 있습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 컴플라이언스 담당자가 Amazon S3에 저장된 데이터의 보안 조치를 검토하고 있습니다. 담당자는 특히 개인 식별 정보(PII)와 같은 민감한 정보를 식별하고 규제 요구 사항을 준수하는 데 관심이 있습니다. 담당자는 민감도에 따라 데이터를 자동으로 발견하고 분류할 수 있는 서비스를 활용하고자 합니다.",
        "Question": "컴플라이언스 담당자가 S3에 저장된 민감한 데이터를 자동으로 분류하고 접근 패턴을 모니터링하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "S3 데이터의 취약성 평가를 위한 Amazon Inspector.",
            "2": "S3에서 민감한 데이터를 발견하고 분류하기 위한 AWS Macie.",
            "3": "S3 버킷 정책의 구성 변경을 추적하기 위한 AWS Config.",
            "4": "S3 버킷에 대한 DDoS 보호를 위한 AWS Shield Advanced."
        },
        "Correct Answer": "S3에서 민감한 데이터를 발견하고 분류하기 위한 AWS Macie.",
        "Explanation": "AWS Macie는 Amazon S3에 저장된 민감한 데이터를 자동으로 발견하고 분류하며 보호하도록 설계되었습니다. PII, PHI 및 기타 유형의 민감한 정보를 식별할 수 있으며, 접근 패턴 및 정책 변경을 모니터링하여 컴플라이언스 담당자의 요구에 이상적인 선택이 됩니다.",
        "Other Options": [
            "AWS Shield Advanced는 DDoS 보호를 제공하는 데 중점을 두며, S3에서 데이터를 분류하거나 접근 패턴을 모니터링하지 않습니다.",
            "AWS Config는 구성 변경 및 준수를 추적하는 데 사용되지만, S3에 저장된 민감한 데이터를 분류하지 않습니다.",
            "Amazon Inspector는 EC2 인스턴스에 대한 취약성 평가에 사용되며, S3에서 데이터 분류 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "보안 아키텍트는 보안 정책 준수를 보장하기 위해 VPC 내의 네트워크 트래픽을 모니터링하는 임무를 맡았습니다. 아키텍트는 분석 및 준수 보고를 위해 모든 수신 및 발신 트래픽 정보를 캡처하는 솔루션을 구현해야 합니다.",
        "Question": "보안 아키텍트가 전체 VPC에서 상세한 트래픽 모니터링을 달성하기 위해 구현해야 할 방법은 무엇입니까?",
        "Options": {
            "1": "VPC에 서드파티 네트워크 모니터링 도구를 배포합니다.",
            "2": "모든 트래픽을 캡처하기 위해 VPC 수준에서 Flow Log를 생성합니다.",
            "3": "구성 변경을 모니터링하기 위해 AWS Config 규칙을 설정합니다.",
            "4": "VPC에서 이루어진 모든 API 호출에 대해 CloudTrail 로깅을 활성화합니다."
        },
        "Correct Answer": "모든 트래픽을 캡처하기 위해 VPC 수준에서 Flow Log를 생성합니다.",
        "Explanation": "VPC 수준에서 Flow Log를 생성하면 VPC 내의 모든 ENI에서 모든 네트워크 트래픽 정보를 캡처할 수 있어 포괄적인 모니터링 및 준수 목적에 이상적입니다.",
        "Other Options": [
            "CloudTrail 로그를 활성화하면 API 호출 및 이벤트를 캡처하지만, 준수 모니터링에 필요한 실제 네트워크 트래픽 흐름에 대한 정보를 제공하지 않습니다.",
            "AWS Config 규칙은 구성 변경을 추적하는 데 유용하지만, 이 시나리오에서 필수적인 네트워크 트래픽을 모니터링하지 않습니다.",
            "서드파티 네트워크 모니터링 도구가 통찰력을 제공할 수 있지만, VPC 내의 모든 트래픽 데이터를 캡처하기 위해 AWS Flow Logs를 사용하는 것만큼 통합되거나 포괄적이지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "한 회사는 Amazon S3 버킷에 호스팅된 공개 웹 애플리케이션을 운영하고 있습니다. 보안을 강화하기 위해, 회사는 사용자가 S3 버킷 URL에 직접 접근하는 것을 방지하고 Amazon CloudFront 배포를 통해서만 S3 버킷 콘텐츠에 접근할 수 있도록 하고자 합니다.",
        "Question": "배포가 이미 생성된 후 CloudFront를 통해 S3 버킷에 대한 접근을 제한하기 위해 회사가 취해야 할 단계는 무엇입니까?",
        "Options": {
            "1": "CloudFront 콘솔로 이동하여 배포를 선택한 후, Restrict Bucket Access를 활성화하고 배포를 위한 새로운 Origin Access Identity를 생성합니다.",
            "2": "S3 버킷 정책으로 이동하여 CloudFront 배포 도메인에서 오지 않는 요청을 거부하도록 수정합니다.",
            "3": "S3 콘솔에서 S3 버킷을 선택하고 Block Public Access 설정을 켠 후, CloudFront 배포를 통해서만 접근할 수 있도록 버킷을 설정합니다.",
            "4": "CloudFront 콘솔에 접근하여 Origins 및 Origin Groups로 이동하고, Restrict Bucket Access를 활성화한 후 Origin Access Identity를 생성하고, 버킷에 대한 읽기 권한을 부여합니다."
        },
        "Correct Answer": "CloudFront 콘솔에 접근하여 Origins 및 Origin Groups로 이동하고, Restrict Bucket Access를 활성화한 후 Origin Access Identity를 생성하고, 버킷에 대한 읽기 권한을 부여합니다.",
        "Explanation": "이 옵션은 배포가 생성된 후 CloudFront를 통해 S3 버킷에 대한 접근을 제한하기 위해 필요한 단계를 정확하게 설명합니다. 여기에는 Restrict Bucket Access를 활성화하고 Origin Access Identity를 생성하며 적절한 권한을 부여하는 것이 포함됩니다.",
        "Other Options": [
            "이 옵션은 배포가 생성된 후 접근을 제한하기 위한 적절한 방법이 아닌 CloudFront에서 직접 배포의 설정을 업데이트하라고 제안하므로 잘못된 것입니다.",
            "이 옵션은 S3 버킷 정책을 수정하는 것만으로는 접근 제한을 효과적으로 시행할 수 없기 때문에 잘못된 것입니다. CloudFront가 버킷에 접근할 수 있도록 하려면 CloudFront에서 올바른 구성이 필요합니다.",
            "이 옵션은 S3 버킷에서 Block Public Access 설정을 활성화하는 것만으로는 CloudFront를 통한 접근이 제한되지 않기 때문에 잘못된 것입니다. 올바른 단계는 CloudFront에서 배포 설정을 구성하는 것입니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 조직이 AWS 리소스에 대한 새로운 접근 관리 전략을 구현하고 있습니다. 보안 팀은 사용자 속성과 역할에 따라 접근이 부여되도록 하여 권한에 대한 보다 세분화된 제어를 가능하게 하고자 합니다.",
        "Question": "보안 팀이 역할 기반 접근 제어(RBAC) 원칙을 유지하면서 속성 기반 접근 제어(ABAC)를 달성하기 위해 구현해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "사용자 속성을 활용하지 않고 특정 리소스에만 접근할 수 있는 권한을 가진 EC2 인스턴스 프로필을 구현합니다.",
            "2": "AWS Organizations를 사용하여 계정을 관리하고 계정 ID에 따라 접근을 제한하는 서비스 제어 정책을 적용합니다.",
            "3": "광범위한 권한을 가진 단일 IAM 역할을 생성하고 모든 사용자에게 할당하여 관리를 단순화합니다.",
            "4": "사용자 속성을 기반으로 조건을 포함하는 IAM 정책을 활용하고 다양한 팀을 위한 역할을 정의합니다."
        },
        "Correct Answer": "사용자 속성을 기반으로 조건을 포함하는 IAM 정책을 활용하고 다양한 팀을 위한 역할을 정의합니다.",
        "Explanation": "사용자 속성을 기반으로 조건을 포함하는 IAM 정책을 구현하면 유연한 ABAC 전략을 가능하게 하며, 역할을 정의함으로써 RBAC 원칙도 준수할 수 있습니다. 이 하이브리드 접근 방식은 접근 관리에서 세분화와 구조를 모두 제공합니다.",
        "Other Options": [
            "광범위한 권한을 가진 단일 IAM 역할을 생성하는 것은 모든 사용자에게 과도한 권한을 부여하여 ABAC와 RBAC 원칙을 모두 저해할 수 있으며, 이는 보안 취약점을 초래할 수 있습니다.",
            "AWS Organizations를 사용하여 계정을 관리하고 서비스 제어 정책을 적용하는 것은 계정 수준에서 접근을 제한하지만, 세분화된 접근 전략에 필요한 속성 기반 제어를 구현하지 않습니다.",
            "사용자 속성을 활용하지 않는 권한을 가진 EC2 인스턴스 프로필을 구현하는 것은 접근 제어 기능을 인스턴스 수준으로 제한하고 ABAC의 이점을 활용하지 못하게 합니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 금융 서비스 회사가 AWS에서 마이크로서비스 아키텍처를 구축하고 있습니다. 그들은 Amazon S3에 저장된 민감한 금융 데이터에 접근할 때 API 엔드포인트의 보안에 대해 우려하고 있습니다. 그들은 모든 API 호출이 안전하게 전송되도록 보장하고 싶어합니다.",
        "Question": "모든 AWS API 호출이 안전한 채널을 통해 이루어지도록 보장하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "특별한 보안 조치 없이 AWS Lambda를 사용하여 API 호출을 처리합니다.",
            "2": "AWS API Gateway를 사용자 지정 도메인으로 구현하고 모든 API 호출에 대해 TLS를 적용합니다.",
            "3": "모든 API 호출이 보안을 위해 사용자 지정 헤더를 사용하는 HTTP를 사용하도록 요구합니다.",
            "4": "Amazon S3를 구성하여 API에 대한 보안되지 않은 접근만 허용합니다."
        },
        "Correct Answer": "AWS API Gateway를 사용자 지정 도메인으로 구현하고 모든 API 호출에 대해 TLS를 적용합니다.",
        "Explanation": "AWS API Gateway를 사용자 지정 도메인으로 구현하면 모든 API 호출에 대해 TLS를 적용할 수 있어 전송 중인 데이터가 암호화되고 안전하게 보호됩니다. 이 접근 방식은 민감한 데이터를 보호하고 보안 모범 사례를 준수하는 데 권장됩니다.",
        "Other Options": [
            "API 호출이 보안을 위해 사용자 지정 헤더를 사용하는 HTTP를 요구하는 것은 안전하지 않으며, 전송 중인 데이터를 암호화하지 않아 가로채기에 취약합니다.",
            "특별한 보안 조치 없이 AWS Lambda를 사용하여 API 호출을 처리하는 것은 안전한 전송을 보장하지 않으며, 전송 중에 민감한 정보가 노출될 수 있습니다.",
            "Amazon S3를 구성하여 API에 대한 보안되지 않은 접근만 허용하는 것은 보안 모범 사례에 직접적으로 반하며, 민감한 데이터를 위험에 빠뜨립니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사가 Amazon CloudFront를 콘텐츠 전송 네트워크로 사용하고 Application Load Balancer (ALB)를 통해 트래픽을 관리하는 새로운 웹 애플리케이션을 배포하고 있습니다. 그들은 애플리케이션이 일반적인 웹 공격으로부터 보호받으면서 합법적인 트래픽을 허용하고 싶어합니다. 보안 팀은 SQL 인젝션(SQLi) 및 교차 사이트 스크립팅(XSS) 공격을 효과적으로 완화하면서 유효한 사용자를 방해하지 않는 AWS 웹 애플리케이션 방화벽(WAF) 규칙을 구현해야 합니다.",
        "Question": "SQLi 및 XSS 공격으로부터 보호하기 위해 웹 애플리케이션에 대한 AWS WAF를 구성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "CommonAttackProtectionLargeBodyRule과 SQLi 및 XSS 규칙을 차단하는 규칙이 포함된 WebACL을 생성합니다. 이 WebACL을 지역 보호를 위해 Application Load Balancer와 연결합니다.",
            "2": "CommonAttackProtectionSqliRule 및 CommonAttackProtectionXssRule에 해당하는 요청을 계산하는 규칙이 포함된 WebACL을 생성합니다. 이 WebACL을 트래픽 패턴을 모니터링하기 위해 Application Load Balancer와 연결합니다.",
            "3": "모든 트래픽을 허용하지만 SQLi 및 XSS 시도를 식별하는 사용자 지정 정규 표현식 패턴에 따라 요청을 차단하는 규칙이 포함된 WebACL을 생성합니다. 이 WebACL을 CloudFront 배포와 연결합니다.",
            "4": "CommonAttackProtectionSqliRule 및 CommonAttackProtectionXssRule에 해당하는 요청을 차단하는 규칙이 포함된 WebACL을 생성합니다. 이 WebACL을 글로벌 보호를 위해 CloudFront 배포와 연결합니다."
        },
        "Correct Answer": "CommonAttackProtectionSqliRule 및 CommonAttackProtectionXssRule에 해당하는 요청을 차단하는 규칙이 포함된 WebACL을 생성합니다. 이 WebACL을 글로벌 보호를 위해 CloudFront 배포와 연결합니다.",
        "Explanation": "이 옵션은 SQL 인젝션 및 XSS 공격을 차단하기 위해 설계된 특정 규칙을 효과적으로 구현하여 애플리케이션이 이러한 일반적인 취약점으로부터 보호받도록 합니다. WebACL을 CloudFront와 연결하면 글로벌 보호를 제공하므로 가장 효율적인 구성입니다.",
        "Other Options": [
            "이 옵션은 SQLi 및 XSS 규칙에 해당하는 요청만 계산하므로 이러한 공격에 대한 보호 조치를 제공하지 않습니다. 요청을 계산하는 것은 악의적인 트래픽을 방지하지 않습니다.",
            "사용자 지정 정규 표현식 패턴을 사용하는 것은 효과적일 수 있지만, 이 옵션은 모든 트래픽을 허용하므로 필터링이 발생하기 전에 애플리케이션이 공격에 노출될 수 있어 보안 모범 사례에 권장되지 않습니다.",
            "대용량 본문 요청을 차단하는 것은 특정 유형의 공격을 완화하는 데 도움이 될 수 있지만, 이 옵션은 SQLi 및 XSS 취약점을 직접적으로 해결하지 않으므로 회사가 우려하는 특정 위협에 대해 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 대규모 조직이 AWS 리소스에 대한 태깅 전략을 구현하여 리소스 관리 및 보안 거버넌스를 강화하고자 합니다. 그들은 모든 리소스가 정책에 따라 올바르게 태그가 지정되도록 보장하고 싶어합니다.",
        "Question": "보안 거버넌스를 준수하기 위해 AWS 리소스를 태그하는 데 권장되는 모범 사례는 무엇입니까?",
        "Options": {
            "1": "정기적으로 태그를 감사하여 조직 정책에 부합하는지 확인하고 더 이상 필요하지 않은 태그를 제거합니다.",
            "2": "개별 팀이 리소스 관리의 유연성과 혁신을 촉진하기 위해 자체 태깅 전략을 만들도록 허용합니다.",
            "3": "행정적 부담을 최소화하고 비용 할당에 집중하기 위해 리소스가 생성될 때만 태그를 지정합니다.",
            "4": "모든 계정과 서비스에서 일관된 태깅 스키마를 사용하여 리소스 관리 및 자동화를 용이하게 합니다."
        },
        "Correct Answer": "모든 계정과 서비스에서 일관된 태깅 스키마를 사용하여 리소스 관리 및 자동화를 용이하게 합니다.",
        "Explanation": "일관된 태깅 스키마를 사용하면 모든 리소스를 쉽게 식별하고 관리할 수 있어 준수 및 보안 거버넌스에 매우 중요합니다. 이는 자동화 및 보고를 촉진하여 보안 정책을 모니터링하고 시행하기 쉽게 만듭니다.",
        "Other Options": [
            "리소스를 생성할 때만 태그를 지정하면 불완전한 태깅이 발생하고 시간이 지남에 따라 리소스를 효과적으로 관리하기 어려워집니다. 태그는 모든 기존 및 새로운 리소스에 일관되게 적용되어야 합니다.",
            "태그를 감사하는 것은 중요하지만, 준수는 처음부터 일관된 태깅을 구현함으로써 더 잘 보장되며, 감사에만 의존하는 것은 바람직하지 않습니다. 태그를 제거하면 거버넌스에 중요한 정보가 누락될 수 있습니다.",
            "개별 팀이 자체 태깅 전략을 만들도록 허용하면 리소스 관리 및 준수를 저해하는 혼란스러운 태깅 환경이 조성되어 보안 거버넌스를 시행하기 어려워질 수 있습니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 회사가 개인 식별 정보(PII)를 저장하는 매우 민감한 S3 버킷을 보유하고 있습니다. 이들은 특정 IAM 사용자만 이 버킷에 접근하고 특정 작업을 수행할 수 있도록 보장하고자 합니다. 회사는 권한이 있는 사용자에게만 접근을 제한하면서 필요한 작업을 허용하는 버킷 정책을 설계해야 합니다.",
        "Question": "S3 버킷 정책에 어떤 변경 사항을 조합하여 적절하게 접근을 제한해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "정책에 명시적으로 나열된 사용자 외의 모든 사용자에 대한 접근을 거부하는 문장을 추가합니다.",
            "2": "특정 IP 주소에서 발생하는 요청으로 접근을 제한하는 조건을 사용합니다.",
            "3": "'s3:*' 권한에 대해 모든 작업을 허용하도록 버킷 정책을 설정합니다.",
            "4": "버킷 정책에 특정 IAM 사용자 ARN을 확인하는 조건을 포함합니다.",
            "5": "사용자의 AWS 계정 ID에 따라 접근을 허용하도록 버킷 정책을 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "버킷 정책에 특정 IAM 사용자 ARN을 확인하는 조건을 포함합니다.",
            "특정 IP 주소에서 발생하는 요청으로 접근을 제한하는 조건을 사용합니다."
        ],
        "Explanation": "S3 버킷에 대한 접근을 효과적으로 제한하기 위해서는 어떤 IAM 사용자가 자신의 ARN을 사용하여 버킷에 접근할 수 있는지를 명시하는 조건을 포함하는 것이 중요합니다. 또한, IP 주소 조건을 사용하면 권한이 있는 사용자로의 접근을 더욱 좁혀 특정 위치에서의 요청만 허용됩니다.",
        "Other Options": [
            "버킷 정책을 's3:*' 권한에 대해 모든 작업을 허용하도록 설정하는 것은 민감한 데이터를 보호하는 목표와 모순되며 광범위한 권한을 부여하므로 안전하지 않습니다.",
            "정책에 명시적으로 나열된 사용자 외의 모든 사용자에 대한 접근을 거부하는 문장은 신중하게 작성되지 않으면 너무 광범위할 수 있으며, 정책이 충분히 구체적이지 않으면 정당한 접근을 차단할 수 있습니다.",
            "사용자의 AWS 계정 ID에 따라 접근을 허용하도록 버킷 정책을 구성하는 것은 개별 사용자 접근 관리에 필요한 세밀한 제어를 제공하지 않으며, 해당 계정 내 모든 사용자에게 원치 않는 접근을 허용할 수 있습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "한 보안 엔지니어가 AWS 서비스에 대한 침투 테스트를 수행하기 위한 가이드라인을 검토하고 있습니다. 엔지니어는 특정 활동이 사전 승인이 필요하고 다른 활동은 사전 승인 없이 수행할 수 있다는 것을 알고 있습니다. 그들은 테스트 전략을 계획하면서 AWS 정책을 준수해야 합니다.",
        "Question": "다음 중 보안 엔지니어가 사전 승인 없이 침투 테스트를 수행할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon S3 및 Amazon DynamoDB",
            "2": "AWS Lambda 및 Amazon API Gateway",
            "3": "Amazon EC2 및 Amazon RDS",
            "4": "Amazon CloudFront 및 Amazon SQS"
        },
        "Correct Answer": "Amazon EC2 및 Amazon RDS",
        "Explanation": "Amazon EC2 및 Amazon RDS는 사전 승인 없이 침투 테스트를 허용하는 여덟 개의 AWS 서비스 중 하나로, AWS 정책을 준수합니다.",
        "Other Options": [
            "Amazon S3 및 Amazon DynamoDB는 사전 승인 없이 침투 테스트를 허용하는 서비스 목록에 포함되지 않으므로, 이들 서비스에 대한 테스트는 사전 승인이 필요합니다.",
            "AWS Lambda 및 Amazon API Gateway는 사전 승인 없이 침투 테스트를 허용하는 승인된 목록에 있지만, 이 옵션에서 언급된 유일한 서비스가 아니므로 잘못된 것입니다.",
            "Amazon CloudFront 및 Amazon SQS는 사전 승인 없이 침투 테스트를 허용하는 서비스 목록에 포함되지 않으므로, 이들 서비스에 대한 침투 테스트는 사전 승인이 필요합니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "한 회사가 AWS에 웹 애플리케이션을 배포하고 있으며, 지역 규정을 준수하기 위해 특정 지리적 지역에서만 트래픽을 제공하도록 보장하고자 합니다. 이 애플리케이션은 CloudFront를 CDN으로 사용하여 전 세계에 콘텐츠를 배포합니다. 보안 팀은 허가되지 않은 지역에서의 요청을 차단하기 위해 지리적 제한을 구현하는 임무를 맡았습니다.",
        "Question": "보안 팀이 웹 애플리케이션의 엣지에서 지리적 제한을 시행하기 위해 어떤 방법을 사용해야 합니까?",
        "Options": {
            "1": "AWS WAF를 활용하여 특정 국가에서의 요청을 차단하는 지리적 일치 조건이 포함된 웹 ACL을 생성합니다.",
            "2": "원본 접근 ID를 활용하여 지정된 지역에서만 트래픽을 허용하도록 CloudFront를 구성합니다.",
            "3": "허용된 국가의 IP 주소 범위를 기반으로 접근을 제한하기 위해 AWS에서 보안 그룹을 설정합니다.",
            "4": "사용자의 지리적 위치에 따라 리디렉션하는 Amazon Route 53 트래픽 정책을 구현합니다."
        },
        "Correct Answer": "AWS WAF를 활용하여 특정 국가에서의 요청을 차단하는 지리적 일치 조건이 포함된 웹 ACL을 생성합니다.",
        "Explanation": "AWS WAF는 지리적 위치에 따라 요청을 차단하거나 허용하는 규칙을 생성할 수 있어, CloudFront 배포의 엣지에서 지리적 제한을 시행하는 데 적합합니다.",
        "Other Options": [
            "CloudFront는 원본 접근 ID를 통해 지리적 제한을 위한 내장 기능이 없으며, 해당 기능은 AWS WAF와 더 잘 맞습니다.",
            "보안 그룹은 인스턴스 수준에서 수신 및 송신 트래픽을 제어하도록 설계되었으며, 웹 애플리케이션의 엣지에서 지리적 제한에 적합하지 않습니다.",
            "Amazon Route 53 트래픽 정책은 트래픽 라우팅에 사용될 수 있지만, 지리적 위치에 따라 요청을 차단하는 기능을 제공하지 않으며, 접근 제어를 위해 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "회사가 Amazon S3에 저장된 민감한 고객 데이터의 기밀성과 무결성을 보장하기 위해 AWS 환경에서 데이터 암호화 및 접근 제어를 구현하고 있습니다. 보안 엔지니어는 데이터에 대한 안전한 접근을 가능하게 하면서도 권한이 있는 직원만이 데이터를 삭제하거나 수정하는 등의 작업을 수행할 수 있도록 하는 솔루션을 설계하는 임무를 맡고 있습니다.",
        "Question": "보안 엔지니어가 S3의 데이터 기밀성과 무결성을 보장하면서 적절한 접근 제어를 허용하기 위해 어떤 전략을 사용해야 합니까?",
        "Options": {
            "1": "AWS Config를 사용하여 S3 버킷을 모니터링하고 모든 사용자에게 버킷에 대한 전체 접근을 허용하는 IAM 정책을 생성합니다.",
            "2": "AWS KMS를 사용하여 서버 측 암호화를 구현하고 S3 버킷에 대한 버전 관리를 활성화하여 우발적인 삭제로부터 보호합니다.",
            "3": "S3 객체 잠금 구성을 설정하여 객체 삭제를 방지하고 모든 IAM 사용자에게 접근을 허용하는 버킷 정책을 시행합니다.",
            "4": "S3 버킷 정책을 구성하여 버킷에 대한 공개 접근을 허용하고 CloudTrail을 사용하여 접근을 모니터링합니다."
        },
        "Correct Answer": "AWS KMS를 사용하여 서버 측 암호화를 구현하고 S3 버킷에 대한 버전 관리를 활성화하여 우발적인 삭제로부터 보호합니다.",
        "Explanation": "AWS KMS를 사용하여 서버 측 암호화를 구현하면 데이터가 저장 중에 암호화되어 기밀성을 유지합니다. 버전 관리를 활성화하면 이전 객체 버전을 복구할 수 있어 우발적인 삭제로부터 보호하여 데이터 무결성을 보장합니다.",
        "Other Options": [
            "이 옵션은 모든 사용자에게 버킷에 대한 전체 접근을 허용하는 것은 적절한 접근 제어를 보장하지 않으며, 무단 데이터 접근 또는 수정으로 이어질 수 있기 때문에 잘못된 것입니다.",
            "이 옵션은 버킷에 대한 공개 접근을 허용하는 것은 기밀성을 훼손하여 민감한 데이터가 인터넷의 누구에게나 노출되므로 보안 모범 사례에 반하기 때문에 잘못된 것입니다.",
            "이 옵션은 S3 객체 잠금이 삭제를 방지하지만 모든 IAM 사용자에게 접근을 허용하면 부적절한 접근으로 이어질 수 있으며 기밀성이나 무결성을 보장하지 않기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "회사가 프로덕션에서 Amazon EC2 인스턴스에 웹 애플리케이션을 배포했습니다. 보안 팀은 애플리케이션이 보안 모범 사례를 준수하고 취약점이 없도록 하기를 원합니다. 그들은 AWS Inspector를 사용하여 인스턴스의 보안을 평가하고 AWS Trusted Advisor를 사용하여 보안 권장 사항을 검토하기로 결정했습니다.",
        "Question": "보안 팀이 보안 평가를 수행하기 위해 어떤 단계의 조합을 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "평가 템플릿을 생성하고 평가를 실행하여 보안 결과를 생성합니다.",
            "2": "기본 요금제에 대해 AWS Trusted Advisor를 활성화하여 모든 보안 검사를 접근합니다.",
            "3": "평가 대상을 생성하고 EC2 인스턴스에 AWS Inspector 에이전트를 설치합니다.",
            "4": "AWS Trusted Advisor에서 열린 보안 그룹 및 MFA 설정에 대한 결과를 검토합니다.",
            "5": "평가에 사용된 보안 규칙에 대해 AWS Inspector의 상세 결과를 검토합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "평가 대상을 생성하고 EC2 인스턴스에 AWS Inspector 에이전트를 설치합니다.",
            "평가에 사용된 보안 규칙에 대해 AWS Inspector의 상세 결과를 검토합니다."
        ],
        "Explanation": "AWS Inspector를 사용하여 보안 평가를 수행하려면 팀이 먼저 평가 대상을 생성하고 EC2 인스턴스에 AWS Inspector 에이전트를 설치해야 합니다. 평가를 수행한 후, 보안 규칙에 대한 상세 결과를 검토하여 취약점 및 준수 문제를 식별해야 합니다.",
        "Other Options": [
            "이 옵션은 AWS Trusted Advisor를 언급하지만, 이는 일반적인 보안 권장 사항을 제공하며 AWS Inspector를 사용하는 특정 단계의 일부가 아닙니다.",
            "AWS Trusted Advisor의 기본 요금제는 모든 보안 검사에 대한 접근을 제공하지 않으며, 전체 Trusted Advisor 버전에 비해 범위가 제한적입니다.",
            "이 옵션은 결과를 검토하는 것을 언급하지만 AWS Inspector로 보안 평가를 시작하는 데 필요한 단계를 명시하지 않습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "조직이 여러 AWS 계정을 보유하고 있으며 이러한 계정에서 IAM 역할을 관리하기 위한 중앙 집중식 거버넌스 모델을 구현해야 합니다. 그들은 특정 역할이 최소한의 관리 오버헤드로 계정 간에 수임될 수 있도록 하고 보안 모범 사례가 준수되도록 하기를 원합니다.",
        "Question": "여러 AWS 계정에서 보안 거버넌스를 보장하면서 교차 계정 역할을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "각 AWS 계정에 역할을 생성하고 필요한 계정이 리소스 기반 정책을 사용하여 역할을 수임하도록 허용합니다.",
            "2": "교차 계정 IAM 역할을 구현하고 외부 시스템에 대한 준수 감사용 권한을 문서화합니다.",
            "3": "중앙 계정에 단일 IAM 역할을 설정하고 모든 다른 계정이 신뢰 관계를 사용하여 이 역할을 수임하도록 허용합니다.",
            "4": "AWS Organizations를 사용하여 IAM 역할을 중앙에서 관리하고 서비스 제어 정책(SCP)을 활용하여 권한을 시행합니다."
        },
        "Correct Answer": "각 AWS 계정에 역할을 생성하고 필요한 계정이 리소스 기반 정책을 사용하여 역할을 수임하도록 허용합니다.",
        "Explanation": "각 AWS 계정에 역할을 생성하고 리소스 기반 정책을 사용하면 각 계정에 대한 권한이 명시적으로 정의되어 명확한 거버넌스 구조를 유지하면서 필요한 접근을 허용합니다. 이 접근 방식은 교차 계정 접근을 안전하게 관리하기 위한 AWS 모범 사례와 일치합니다.",
        "Other Options": [
            "AWS Organizations를 사용하여 IAM 역할을 중앙에서 관리하는 것은 여기서 최선의 접근 방식이 아닙니다. SCP는 주로 조직 수준에서 권한을 관리하며 교차 계정 역할 수임을 직접 처리하지 않습니다.",
            "중앙 계정에 단일 IAM 역할을 설정하면 지나치게 넓은 접근으로 인해 보안 위험이 발생할 수 있으며 개별 계정 권한에 대한 세밀한 제어가 부족해질 수 있습니다.",
            "교차 계정 IAM 역할을 구현하고 외부에 권한을 문서화하는 것은 역할 수임을 위한 안전한 메커니즘을 제공하지 않으며 AWS 내에서 구조화된 거버넌스의 필요성을 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "한 금융 서비스 회사가 AWS Fargate를 사용하여 컨테이너화된 애플리케이션을 위한 마이크로서비스 아키텍처를 배포하고 있습니다. 민감한 데이터의 보안을 보장하고 취약점을 최소화하기 위해 보안 팀이 컨테이너 이미지와 비밀 관리에 대한 모범 사례를 검토하고 있습니다.",
        "Question": "보안 팀이 컨테이너화된 애플리케이션의 최적 보안을 보장하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "컨테이너 내 환경 변수에 데이터베이스 자격 증명을 저장하고 최신 업데이트를 위해 공용 레지스트리에서 이미지를 가져옵니다.",
            "2": "작업 실행을 위한 IAM 역할을 활용하고, 애플리케이션 코드에 비밀을 하드코딩하지 않으며, 신뢰할 수 있는 컨테이너 이미지만 사용하도록 합니다.",
            "3": "Amazon Certificate Manager (ACM)를 사용하여 TLS 인증서를 저장하고 Fargate 작업을 최대 권한을 위해 루트 사용자로 실행하도록 구성합니다.",
            "4": "최소한의 라이브러리로 컨테이너를 배포하고 단일 컨테이너에서 여러 서비스를 실행하여 관리 효율성을 높이고 비용을 줄입니다."
        },
        "Correct Answer": "작업 실행을 위한 IAM 역할을 활용하고, 애플리케이션 코드에 비밀을 하드코딩하지 않으며, 신뢰할 수 있는 컨테이너 이미지만 사용하도록 합니다.",
        "Explanation": "작업 실행을 위한 IAM 역할을 활용하면 애플리케이션 코드에 민감한 자격 증명을 하드코딩할 필요가 없어집니다. 이 접근 방식은 AWS의 내장 역할 관리를 활용하여 보안을 강화하고 신뢰할 수 있는 컨테이너 이미지를 사용할 수 있게 하여 검증되지 않은 출처로부터의 취약성 위험을 줄입니다.",
        "Other Options": [
            "루트 사용자 권한을 사용하는 것은 공격 표면을 증가시키고 컨테이너 보안에 대한 모범 사례를 위반합니다. 권한 상승으로 인해 무단 접근 및 악용이 발생할 수 있습니다.",
            "환경 변수에 자격 증명을 저장하면 적절히 관리되지 않을 경우 민감한 데이터가 노출될 수 있습니다. 공용 레지스트리는 보안 위험을 초래하는 검증되지 않은 이미지를 포함할 수 있어 이 접근 방식은 안전하지 않습니다.",
            "단일 컨테이너 내에서 여러 서비스를 실행하는 것은 공격 표면을 최소화하는 원칙에 반합니다. 서비스는 별도의 컨테이너에서 격리하는 것이 모범 사례이며, 불필요한 라이브러리를 제거하여 이미지를 경량화하는 것이 좋습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "최근 AWS IAM 리소스를 제대로 관리하지 않은 회사에서 클라우드 관리자 역할을 맡게 되었습니다. 이전 관리자는 루트 사용자 계정에 지나치게 의존했으며, 이제 보안을 위한 모범 사례를 구현해야 합니다. 첫 번째 작업은 루트 사용자 계정을 안전하게 보호하고 IAM 엔터티를 효과적으로 관리하는 것입니다.",
        "Question": "AWS 루트 사용자 계정을 보호하기 위해 가장 먼저 취해야 할 단계는 무엇입니까?",
        "Options": {
            "1": "루트 사용자의 관리 편의를 위해 새로운 액세스 키를 생성합니다.",
            "2": "모든 기존 IAM 역할에 대한 IAM 정책을 구현하여 접근을 제한합니다.",
            "3": "루트 사용자 비밀번호를 변경하고 MFA를 비활성화한 후 다시 활성화합니다.",
            "4": "이전 관리자가 생성한 모든 IAM 사용자를 삭제합니다."
        },
        "Correct Answer": "루트 사용자 비밀번호를 변경하고 MFA를 비활성화한 후 다시 활성화합니다.",
        "Explanation": "AWS 루트 사용자 계정을 보호하기 위한 첫 번째 단계는 루트 사용자 비밀번호를 변경하고 다단계 인증(MFA)을 비활성화한 후 다시 활성화하는 것입니다. 이를 통해 계정이 무단 접근으로부터 보호되고 MFA가 추가 보안 계층으로 적용됩니다.",
        "Other Options": [
            "모든 IAM 사용자를 삭제하는 것은 불필요하며 정당한 사용자의 필요한 접근을 방해할 수 있습니다. 대신 IAM 사용자를 검증하고 관리하는 것이 더 좋습니다.",
            "루트 사용자에 대한 새로운 액세스 키를 생성하는 것은 모범 사례에 위배됩니다. 루트 사용자는 액세스 키를 사용해서는 안 되며, 대신 필요한 권한을 가진 IAM 사용자를 생성하는 것을 고려해야 합니다.",
            "기존 역할에 대한 IAM 정책을 구현하는 것은 중요하지만, 가장 먼저 취해야 할 행동은 아닙니다. 루트 계정을 보호하는 것이 우선입니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 보안 엔지니어가 AWS 환경에서 네트워크 트래픽 패턴을 분석하는 임무를 맡았습니다. 엔지니어는 특정 EC2 인스턴스의 트래픽을 캡처하고 분석하기 위해 AWS Traffic Mirroring을 사용하기로 결정했습니다. 목표는 잠재적인 보안 위협과 성능 문제를 식별하는 것입니다. 이 설정은 분석 중 민감한 데이터가 적절하게 관리되도록 신중한 고려가 필요합니다.",
        "Question": "AWS 환경에서 트래픽 샘플을 캡처하기 위해 Traffic Mirroring을 사용할 때의 주요 고려 사항을 정확하게 설명하는 진술은 무엇입니까?",
        "Options": {
            "1": "Traffic Mirroring은 소스 인스턴스의 성능에 영향을 주지 않고 패킷을 캡처하고 분석할 수 있게 해줍니다.",
            "2": "Traffic Mirroring은 데이터 무결성을 보장하기 위해 동일한 VPC 및 서브넷의 인스턴스에서만 사용할 수 있습니다.",
            "3": "Traffic Mirroring은 민감한 데이터를 포함한 모든 트래픽을 캡처하며, 이는 규정 준수 요구 사항에 따라 처리해야 합니다.",
            "4": "Traffic Mirroring은 미러링된 트래픽의 양에 따라 데이터 처리에 추가 비용이 발생합니다."
        },
        "Correct Answer": "Traffic Mirroring은 민감한 데이터를 포함한 모든 트래픽을 캡처하며, 이는 규정 준수 요구 사항에 따라 처리해야 합니다.",
        "Explanation": "Traffic Mirroring은 EC2 인스턴스의 네트워크 인터페이스로 흐르는 모든 트래픽을 캡처합니다. 여기에는 민감한 데이터가 포함되므로, 캡처된 데이터를 보안 및 개인 정보 보호 규정에 따라 관리하는 것이 중요하여 데이터 노출과 관련된 위험을 완화해야 합니다.",
        "Other Options": [
            "Traffic Mirroring은 영향을 최소화하도록 설계되었지만, 미러링되고 분석되는 트래픽의 양에 따라 소스 인스턴스의 성능에 영향을 줄 수 있으므로 이 진술은 오해의 소지가 있습니다.",
            "Traffic Mirroring은 동일한 VPC 내의 서로 다른 서브넷에 있는 인스턴스와 함께 사용할 수 있으므로 이 진술은 Traffic Mirroring의 기능을 정확하게 설명하지 않습니다.",
            "데이터 처리와 관련된 비용이 있을 수 있으며 미러링된 트래픽의 양이 비용에 영향을 줄 수 있지만, 이 진술은 분석을 위한 트래픽 캡처 시 주요 고려 사항을 나타내지 않으므로 오해의 소지가 있습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 금융 서비스 회사가 직원들 간의 적절한 직무 분리를 시행하기 위해 신원 및 접근 관리(IAM) 전략을 구현하고 있습니다. 이 회사는 단일 개인이 감독 없이 민감한 작업을 수행할 수 없도록 보장하고자 합니다. 보안 아키텍트는 이 요구 사항을 충족하는 IAM 정책을 설계하는 임무를 맡고 있습니다.",
        "Question": "보안 아키텍트가 IAM에서 직무 분리를 효과적으로 시행하기 위해 어떤 접근 방식을 취해야 합니까?",
        "Options": {
            "1": "모든 IAM 권한을 모든 직원으로 구성된 그룹에 할당하여 제한 없이 모든 작업을 수행할 수 있도록 합니다.",
            "2": "특정 작업을 허용하고 민감한 작업을 위해 여러 사용자가 이러한 역할을 맡도록 요구하는 IAM 역할을 생성합니다.",
            "3": "모든 사용자에 대해 IAM 역할을 생성하고 최소 권한을 할당하여 개인이 독립적으로 민감한 작업을 수행할 수 있도록 합니다.",
            "4": "모든 민감한 작업과 관련된 작업을 수행할 수 있는 권한을 가진 단일 IAM 사용자 계정을 구현합니다."
        },
        "Correct Answer": "특정 작업을 허용하고 민감한 작업을 위해 여러 사용자가 이러한 역할을 맡도록 요구하는 IAM 역할을 생성합니다.",
        "Explanation": "이 접근 방식은 여러 사용자가 협력하고 지정된 역할을 맡아 민감한 작업을 수행하도록 요구함으로써 직무 분리를 시행하여 무단 작업의 위험을 줄이고 책임을 보장합니다.",
        "Other Options": [
            "이 옵션은 모든 권한을 하나의 사용자에게 중앙 집중화하여 직무 분리 원칙에 반하며 오용이나 오류의 위험을 증가시킵니다.",
            "모든 권한을 그룹에 할당하면 민감한 작업에 접근할 수 있는 사람에 대한 통제를 무효화하여 보안 및 위험 관리의 모범 사례에 반합니다.",
            "최소 권한은 좋은 관행이지만 개인이 독립적으로 민감한 작업을 수행하도록 허용하는 것은 감독 및 직무 분리 요구 사항을 저해합니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "한 회사가 민감한 데이터를 처리하기 위해 Amazon EC2 인스턴스를 사용하는 애플리케이션을 AWS에 배포했습니다. 이 애플리케이션은 EC2 인스턴스에 특정 IAM 역할이 연결되어야 하지만, 보안 팀은 지나치게 허용적인 IAM 역할이 실수로 할당되어 불필요한 AWS 리소스에 접근할 수 있게 되었다고 확인했습니다. 팀은 최소 권한 원칙이 시행되도록 이러한 의도하지 않은 권한을 식별하고 수정해야 합니다.",
        "Question": "보안 팀이 EC2 인스턴스와 관련된 IAM 역할에 부여된 의도하지 않은 권한을 조사하기 위해 FIRST로 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "AWS Config 규칙을 구현하여 EC2 인스턴스의 IAM 정책 변경 사항을 모니터링하고 경고합니다.",
            "2": "AWS Inspector를 사용하여 EC2 인스턴스의 보안 태세를 평가하는 보안 평가를 수행합니다.",
            "3": "AWS CloudTrail을 사용하여 EC2 인스턴스에서 수행된 API 호출을 감사하여 무단 리소스 접근을 식별합니다.",
            "4": "EC2 인스턴스에 연결된 IAM 역할 정책을 검토하여 지나치게 허용적인 작업을 식별합니다."
        },
        "Correct Answer": "EC2 인스턴스에 연결된 IAM 역할 정책을 검토하여 지나치게 허용적인 작업을 식별합니다.",
        "Explanation": "의도하지 않은 권한을 해결하기 위한 FIRST 단계는 EC2 인스턴스에 연결된 IAM 역할 정책을 검토하는 것입니다. 이를 통해 보안 팀은 현재 부여된 특정 권한을 이해하고 애플리케이션이 기능하기 위해 필요한 것 이상인 권한을 식별할 수 있습니다. 권한을 평가하는 이 직접적인 접근 방식은 즉각적인 수정에 필수적입니다.",
        "Other Options": [
            "AWS CloudTrail을 사용하여 API 호출을 감사하는 것은 중요하지만 FIRST 단계는 아닙니다. 이 작업은 권한으로 수행된 작업을 드러낼 수 있지만 지나치게 허용적인 IAM 역할의 근본 원인을 해결하지 않습니다.",
            "AWS Config 규칙을 구현하는 것은 지속적인 준수 모니터링을 위한 사전 예방적 조치이지만 현재 할당된 권한을 식별하는 데 직접적으로 도움이 되지 않습니다. 이 옵션은 즉각적인 조사보다는 예방적 단계에 가깝습니다.",
            "AWS Inspector를 사용한 보안 평가로 EC2 인스턴스의 전반적인 보안을 평가하지만 IAM 권한을 구체적으로 조사하지는 않습니다. 이는 즉각적인 권한 문제에 집중하기보다는 더 넓은 분석이 될 것입니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "한 금융 서비스 회사가 IAM 정책을 사용하여 AWS 리소스에 대한 세분화된 접근 제어를 구현하고 있습니다. 이 회사는 개발자가 애플리케이션을 배포할 수 있도록 하면서 최소 권한 원칙을 준수하고자 합니다. 이를 위해 다양한 유형의 IAM 정책을 고려하고 있습니다.",
        "Question": "각 개발자가 자신의 사용자 계정에 직접 연결된 특정 권한 세트를 가지면서 향후 관리 및 업데이트가 용이하도록 하기 위해 회사가 어떤 IAM 정책 유형을 사용해야 합니까?",
        "Options": {
            "1": "관리형 정책, 사용의 용이성과 권한에 대한 세분화된 제어 간의 균형을 제공하기 때문입니다.",
            "2": "AWS 관리형 정책, 미리 정의되어 있어 개발자의 정책 관리 프로세스를 단순화할 수 있기 때문입니다.",
            "3": "고객 관리형 정책, 사용자 계정과 독립적으로 업데이트할 수 있는 맞춤형 권한을 허용하기 때문입니다.",
            "4": "인라인 정책, 사용자 계정과 엄격한 일대일 관계를 설정하여 고유한 권한에 이상적이기 때문입니다."
        },
        "Correct Answer": "고객 관리형 정책, 사용자 계정과 독립적으로 업데이트할 수 있는 맞춤형 권한을 허용하기 때문입니다.",
        "Explanation": "고객 관리형 정책은 개발자의 요구에 맞춘 특정 권한을 정의할 수 있는 유연성을 제공하여 회사가 접근에 대한 세분화된 제어를 유지하면서도 이러한 정책을 사용자 계정과 독립적으로 업데이트할 수 있도록 하여 최소 권한 원칙에 부합합니다.",
        "Other Options": [
            "AWS 관리형 정책은 미리 정의되어 수정할 수 없으므로 각 개발자에게 고유한 세분화된 접근 제어에 덜 적합합니다.",
            "인라인 정책은 사용자 계정과 엄격한 일대일 관계를 생성하여 관리가 복잡해지고 여러 사용자 간에 정책을 재사용하기 어렵게 만들 수 있습니다.",
            "관리형 정책은 AWS 관리형 정책인지 고객 관리형 정책인지 명확하지 않은 모호한 용어로, 맞춤형 권한에 대한 특정 요구 사항을 해결하는 데 덜 명확합니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "조직은 AWS에 배포된 마이크로서비스 아키텍처를 가지고 있으며, 여러 서비스가 서로 안전하게 통신해야 하지만 민감한 데이터를 공용 인터넷에 노출하지 않아야 합니다. 보안 팀은 서비스 간의 모든 트래픽이 비공식적이며 공용 인터넷을 통과하지 않도록 보장하고자 합니다. 이 목표를 달성하기 위해 다양한 AWS 네트워킹 옵션을 고려하고 있습니다.",
        "Question": "조직이 마이크로서비스 간의 안전한 통신을 보장하고 데이터를 공용 인터넷에 노출하지 않기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "AWS Transit Gateway를 사용하여 여러 VPC를 연결하고 모든 트래픽이 내부에 유지되도록 합니다.",
            "2": "VPN 연결을 설정하여 마이크로서비스 간의 모든 트래픽을 온프레미스 데이터 센터를 통해 라우팅합니다.",
            "3": "각 마이크로서비스 앞에 Amazon API Gateway를 배포하여 접근을 관리하고 보안합니다.",
            "4": "VPC 엔드포인트를 활용하여 서비스와 AWS 리소스 간의 비공식적인 연결을 허용합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 사용하여 여러 VPC를 연결하고 모든 트래픽이 내부에 유지되도록 합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 여러 VPC와 온프레미스 네트워크를 효과적으로 연결할 수 있으며, 서비스 간의 안전하고 비공식적인 통신을 가능하게 하여 트래픽을 공용 인터넷에 노출하지 않습니다. 이 솔루션은 네트워크 관리를 중앙 집중화하고 모든 내부 트래픽을 AWS 인프라 내에 유지하여 보안을 강화합니다.",
        "Other Options": [
            "Amazon API Gateway를 배포하면 복잡성이 증가하고 마이크로서비스가 인터넷에 노출되어 데이터가 공용 인터넷에 노출되지 않도록 하는 요구 사항과 모순됩니다.",
            "VPC 엔드포인트를 활용하는 것은 AWS 서비스에 비공식적으로 연결하는 데 유용하지만, 여러 VPC 간의 마이크로서비스 간 직접 통신을 촉진하지 않으므로 이 시나리오에서는 필수적이지 않습니다.",
            "VPN 연결을 설정하면 불필요한 지연과 복잡성이 발생하며, AWS의 내부 네트워킹 기능을 활용하는 대신 온프레미스 데이터 센터를 통해 트래픽을 라우팅하므로 마이크로서비스 통신에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "보안 운영 팀은 AWS 환경에서 보안 사고를 모니터링하고 대응하는 책임이 있습니다. 그들은 Amazon GuardDuty, AWS Security Hub 및 AWS Config와 같은 다양한 소스에서 보안 결과를 집계하기 위해 AWS 서비스를 활용합니다. 이러한 결과의 형식을 표준화하여 사고 대응 워크플로우와의 통합을 개선하기 위해 AWS에서 제공하는 특정 결과 형식을 활용해야 합니다.",
        "Question": "보안 운영 팀이 집계된 모든 보안 결과가 분석 및 대응을 용이하게 하는 일관된 형식이 되도록 하기 위해 어떤 AWS 기능을 사용해야 합니까?",
        "Options": {
            "1": "AWS Config를 활용하여 리소스 준수를 모니터링하고 결과를 AWS Security Finding Format (ASFF)으로 자동 변환합니다.",
            "2": "AWS Systems Manager를 활용하여 다양한 서비스의 결과를 통합하고 AWS Security Finding Format (ASFF)에 따라 형식을 지정합니다.",
            "3": "Amazon GuardDuty 결과를 AWS Config 내에서 직접 구현하여 사고 대응을 위한 표준화된 형식으로 보장합니다.",
            "4": "AWS Security Hub를 사용하여 결과를 집계하고 AWS Security Finding Format (ASFF)으로 변환되도록 합니다."
        },
        "Correct Answer": "AWS Security Hub를 사용하여 결과를 집계하고 AWS Security Finding Format (ASFF)으로 변환되도록 합니다.",
        "Explanation": "AWS Security Hub는 여러 AWS 서비스 및 타사 솔루션의 보안 결과를 집계하기 위해 특별히 설계되었습니다. 이 결과를 자동으로 AWS Security Finding Format (ASFF)으로 형식을 지정하여 조직 전반에 걸쳐 일관된 분석 및 사고 대응을 가능하게 합니다.",
        "Other Options": [
            "Amazon GuardDuty 결과를 AWS Config 내에서 직접 구현하는 것은 결과가 ASFF 형식이 될 것이라는 보장을 제공하지 않습니다. AWS Config는 주로 리소스 준수 모니터링을 위한 것이며 보안 결과를 집계하는 것이 아닙니다.",
            "AWS Config를 활용하여 리소스 준수를 모니터링하는 것은 결과를 ASFF로 변환하지 않습니다. 이는 구성 준수에 중점을 두며 여러 소스의 보안 결과를 집계하지 않습니다.",
            "AWS Systems Manager를 활용하여 결과를 통합하는 것은 본질적으로 ASFF 형식 지정 기능을 제공하지 않습니다. Systems Manager는 보안 결과의 집계 및 표준화를 위해 특별히 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "조직은 보안 사고에 대한 자동 알림을 구현하여 보안 태세를 개선하고자 합니다. 현재 AWS 서비스를 사용하고 있지만 이 목표를 효과적으로 달성하기 위해 함께 작동할 수 있는 서비스의 최적 조합을 선택해야 합니다.",
        "Question": "보안 사고에 대한 알림을 자동화하는 데 사용할 수 있는 AWS 서비스는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Direct Connect를 사용하여 보안 모니터링을 강화합니다.",
            "2": "AWS Security Hub를 사용하여 보안 결과를 집계합니다.",
            "3": "AWS Lambda 함수를 사용하여 보안 이벤트를 처리합니다.",
            "4": "Amazon Simple Notification Service (Amazon SNS)를 사용하여 알림을 보냅니다.",
            "5": "Amazon CloudWatch Logs를 사용하여 중앙 집중식 로그 관리를 수행합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambda 함수를 사용하여 보안 이벤트를 처리합니다.",
            "Amazon Simple Notification Service (Amazon SNS)를 사용하여 알림을 보냅니다."
        ],
        "Explanation": "AWS Lambda는 보안 이벤트 처리를 자동화하는 데 사용될 수 있으며, 특정 트리거에 따라 사용자 정의 작업을 수행할 수 있습니다. 그런 다음 Amazon SNS는 이러한 이벤트가 발생할 때 관련 이해관계자에게 알림을 보낼 수 있어 효과적인 알림 메커니즘을 생성합니다.",
        "Other Options": [
            "AWS Direct Connect는 주로 전용 네트워크 연결에 사용되며 보안 사고에 대한 알림 기능을 제공하지 않습니다.",
            "Amazon CloudWatch Logs는 로그 관리 및 분석에 사용되지만 추가 구성이나 통합 없이 직접적으로 알림을 촉진하지 않습니다.",
            "AWS Security Hub는 보안 결과를 집계하고 우선 순위를 매기지만, 자체적으로 알림을 자동화하지 않으며, 알림을 위해 다른 서비스와의 통합이 필요합니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "글로벌 기업의 보안 아키텍트는 여러 AWS 계정에서 준수 및 효과적인 보안 거버넌스를 보장하는 임무를 맡고 있습니다. 아키텍트는 보안 구성을 관리하고 다양한 AWS 서비스에서 발견된 내용을 집계하기 위한 중앙 집중식 전략을 구현해야 합니다.",
        "Question": "아키텍트가 중앙 집중식 보안 관리를 달성하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "여러 계정에서 보안 발견 사항을 집계하기 위해 AWS Security Hub를 설정하고, 준수 위반에 대한 SNS 알림을 실시간으로 구성합니다.",
            "2": "AWS Organizations를 활용하여 거버넌스를 위한 서비스 제어 정책(SCP)을 활성화하고, 보안 평가를 자동화하기 위해 AWS Lambda 함수를 구현합니다.",
            "3": "모든 계정에서 AWS Config를 활성화하고, AWS Config Aggregators를 사용하여 준수 데이터를 단일 대시보드로 집계하여 모니터링합니다.",
            "4": "각 계정에 AWS CloudTrail을 배포하여 API 호출을 추적하지만, 분석 및 보고의 복잡성을 줄이기 위해 로그를 중앙 집중화하지 않습니다.",
            "5": "각 계정의 각 서비스에 대해 개별 IAM 역할을 생성하여 중앙 집중식 관리 기능을 제한하고 거버넌스를 복잡하게 만듭니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "모든 계정에서 AWS Config를 활성화하고, AWS Config Aggregators를 사용하여 준수 데이터를 단일 대시보드로 집계하여 모니터링합니다.",
            "여러 계정에서 보안 발견 사항을 집계하기 위해 AWS Security Hub를 설정하고, 준수 위반에 대한 SNS 알림을 실시간으로 구성합니다."
        ],
        "Explanation": "모든 계정에서 AWS Config를 활성화하면 리소스 구성을 지속적으로 모니터링할 수 있으며, Config Aggregators를 사용하면 준수 데이터를 효과적으로 단일 보기로 통합할 수 있습니다. AWS Security Hub를 설정하면 보안 발견 사항을 집계하여 계정 전반에 걸친 보안에 대한 포괄적인 개요를 제공하며, SNS 알림은 사전 예방적인 준수 관리를 도와줍니다.",
        "Other Options": [
            "각 계정에 AWS CloudTrail을 배포하는 것은 API 호출을 기록하는 좋은 방법이지만, 로그를 중앙 집중화하지 않으면 보안 이벤트를 효과적으로 분석할 수 있는 능력이 감소하고 준수 문제를 놓칠 수 있습니다.",
            "AWS Organizations와 서비스 제어 정책(SCP)을 활용하면 거버넌스에 도움이 되지만, 발견 사항을 집계하고 보안 구성을 중앙에서 관리할 필요를 직접적으로 해결하지는 않습니다.",
            "각 서비스에 대해 개별 IAM 역할을 생성하면 보안 거버넌스가 복잡해지고 중앙 집중식 관리의 효과가 감소하며 잘못된 구성의 위험이 증가합니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사는 AWS에 호스팅된 웹 애플리케이션을 위한 안전한 인증 시스템을 구현하고자 합니다. 민감한 리소스에 대한 접근을 허용하기 전에 사용자의 신원을 확인해야 합니다. 애플리케이션은 사용자 이름/비밀번호와 다단계 인증(MFA)을 모두 지원해야 합니다.",
        "Question": "DevSecOps 팀이 안전한 인증 시스템을 구축하기 위해 어떤 전략을 사용해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS 관리 서비스를 사용하지 않는 맞춤형 인증 시스템을 개발합니다.",
            "2": "AWS IAM Identity Center(구 AWS SSO)를 통합하여 사용자 신원을 관리하고 애플리케이션에 대한 접근을 제공합니다.",
            "3": "AWS Cognito 사용자 풀을 구현하여 사용자 가입 및 로그인을 관리하고, MFA를 필수로 설정합니다.",
            "4": "AWS Lambda 함수를 사용하여 사용자 인증을 처리하고 자격 증명을 평문으로 저장합니다.",
            "5": "IAM 역할을 사용하여 인증 없이 사용자에게 직접 임시 접근을 부여합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Cognito 사용자 풀을 구현하여 사용자 가입 및 로그인을 관리하고, MFA를 필수로 설정합니다.",
            "AWS IAM Identity Center(구 AWS SSO)를 통합하여 사용자 신원을 관리하고 애플리케이션에 대한 접근을 제공합니다."
        ],
        "Explanation": "AWS Cognito 사용자 풀을 사용하면 애플리케이션이 사용자 인증을 안전하게 관리할 수 있으며, MFA를 지원하여 보안을 강화합니다. 또한, AWS IAM Identity Center를 통합하면 중앙 집중식 신원 관리가 가능해져 여러 AWS 서비스에 대한 접근 관리를 개선하여 전반적인 보안 태세를 향상시킵니다.",
        "Other Options": [
            "인증 없이 IAM 역할을 사용하는 것은 사용자의 신원을 확인하지 않기 때문에 안전하지 않으며, 이는 민감한 리소스에 대한 무단 접근으로 이어질 수 있습니다.",
            "AWS 관리 서비스를 사용하지 않는 맞춤형 인증 시스템을 개발하면 복잡성이 증가하고 애플리케이션의 잠재적 취약점이 커지며, 보안 모범 사례를 충족하기 위한 추가 노력이 필요합니다.",
            "자격 증명을 평문으로 저장하는 것은 매우 안전하지 않으며, 이는 민감한 정보를 무단 사용자에게 노출시켜 자격 증명 도난으로 이어질 수 있어 보안 모범 사례를 위반하게 됩니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 회사는 AWS CloudTrail을 사용하여 AWS 계정 활동을 모니터링하고 준수를 보장하고 있습니다. 그들은 특정 데이터 이벤트를 포함하도록 로깅 전략을 강화하고 여러 지역에서 효과적으로 트레일을 관리하고자 합니다.",
        "Question": "AWS CloudTrail에 대한 어떤 조합의 진술이 사실입니까? (두 가지 선택)",
        "Options": {
            "1": "CloudTrail에서 생성된 모든 새로운 로그 파일에 대해 SNS를 통해 알림을 구성할 수 있습니다.",
            "2": "모든 AWS 리전에서 동일한 트레일을 자동으로 생성하는 글로벌 트레일을 만들 수 있습니다.",
            "3": "CloudTrail은 AWS Cognito 및 CodeDeploy의 이벤트를 기록할 수 있지만, SimpleDB의 이벤트는 기록할 수 없습니다.",
            "4": "CloudTrail 트레일을 사용하면 기록할 리소스를 지정하여 데이터 이벤트를 포함할 수 있습니다.",
            "5": "트레일이 없으면 CloudTrail은 30일 동안의 이벤트 기록만 표시할 수 있으며 모든 이벤트 유형을 포함합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "CloudTrail은 AWS Cognito 및 CodeDeploy의 이벤트를 기록할 수 있지만, SimpleDB의 이벤트는 기록할 수 없습니다.",
            "CloudTrail 트레일을 사용하면 기록할 리소스를 지정하여 데이터 이벤트를 포함할 수 있습니다."
        ],
        "Explanation": "CloudTrail은 AWS Cognito 및 CodeDeploy의 이벤트를 기록할 수 있지만, SimpleDB의 이벤트는 기록하지 않습니다. 또한, CloudTrail 트레일은 추적할 리소스를 지정하여 특정 데이터 이벤트를 포함하도록 구성할 수 있습니다. 이는 보다 세분화된 로깅을 가능하게 합니다.",
        "Other Options": [
            "이 옵션은 잘못된 것입니다. 트레일이 없으면 CloudTrail은 90일 동안의 이벤트 기록을 표시하며, 모든 이벤트 유형을 포함하지 않고 많은 읽기 이벤트를 제외합니다.",
            "이 옵션은 잘못된 것입니다. 글로벌 트레일을 생성할 수 있지만, 모든 AWS 리전에서 동일한 트레일을 자동으로 생성하지 않으며, 이를 달성하기 위해서는 올바르게 설정해야 합니다.",
            "이 옵션은 잘못된 것입니다. 새로운 로그 파일에 대한 SNS 알림을 구성할 수 있지만, 이는 CloudTrail의 핵심 기능이 아니라 별도로 구성해야 하는 추가 설정입니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "보안 분석가는 조직 환경의 다양한 AWS 리소스에서 생성된 여러 보안 경고를 조사하고 있습니다. 분석가는 근본 원인 분석을 수행하여 근본적인 문제를 이해하고 위협에 효과적으로 대응해야 합니다.",
        "Question": "이 조사에서 보안 이벤트에 대한 통찰력을 얻고 AWS 리소스 간의 관계를 분석하기 위해 분석가가 주로 사용해야 하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon Detective",
            "2": "AWS Security Hub",
            "3": "Amazon GuardDuty",
            "4": "AWS CloudTrail"
        },
        "Correct Answer": "Amazon Detective",
        "Explanation": "Amazon Detective는 보안 데이터를 분석하고 다양한 AWS 서비스에서 로그 데이터를 자동으로 수집하고 정리하여 보안 사건에 대한 통찰력을 제공하도록 특별히 설계되었습니다. 이는 보안 문제를 시각화하고 조사하는 데 도움을 주어 근본 원인 분석에 가장 적합한 선택입니다.",
        "Other Options": [
            "AWS CloudTrail은 계정 활동 및 API 사용을 기록하지만 보안 사건을 효과적으로 조사하는 데 필요한 심층 분석을 제공하지 않습니다.",
            "Amazon GuardDuty는 악의적인 활동을 식별하는 위협 탐지 서비스이지만 근본 원인 분석에 필요한 세부 조사 기능을 제공하지 않습니다.",
            "AWS Security Hub는 다양한 AWS 서비스의 보안 결과를 집계하고 우선 순위를 매기지만 보안 사건을 심층적으로 조사하는 데 필요한 특정 분석 기능이 부족합니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사는 다중 계정 AWS 환경을 관리하며 리소스에 대한 엄격한 접근 제어를 시행하고자 합니다. 보안 아키텍트는 태그, IP 주소 및 다단계 인증(MFA) 사용 여부에 따라 특정 사용자만 특정 리소스에 접근할 수 있도록 조건을 활용하는 IAM 정책을 정의하는 임무를 맡고 있습니다. 아키텍트는 이를 구현하기 위해 올바른 IAM 정책 조건을 선택해야 합니다.",
        "Question": "이러한 보안 요구 사항을 달성하기 위해 IAM 정책에 포함해야 할 조건의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "aws:SourceIp:192.168.1.0/24",
            "2": "aws:RequestedRegion:us-west-1",
            "3": "aws:PrincipalTag/Department:Finance",
            "4": "aws:RequestTag/Project:NewProduct",
            "5": "aws:MultiFactorAuthPresent:true"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "aws:PrincipalTag/Department:Finance",
            "aws:MultiFactorAuthPresent:true"
        ],
        "Explanation": "'aws:PrincipalTag/Department:Finance'를 사용하면 'Finance' 부서로 태그가 지정된 사용자만 리소스에 접근할 수 있도록 하여 사용자 역할에 기반한 접근 제어를 시행합니다. 'aws:MultiFactorAuthPresent:true' 조건은 사용자가 MFA를 사용하여 인증한 경우에만 접근이 허용되도록 하여 보안을 크게 강화합니다.",
        "Other Options": [
            "'aws:RequestTag/Project:NewProduct' 조건은 요청에 적용된 태그에 따라 접근을 제어하므로 사용자 또는 리소스 태그에 기반한 접근 제어를 제공하지 않아 잘못된 것입니다.",
            "'aws:SourceIp:192.168.1.0/24' 조건은 특정 IP 범위에 따라 접근을 제한하므로 사용자 특정 태그나 MFA를 활용하지 않아 잘못된 것입니다.",
            "'aws:RequestedRegion:us-west-1' 조건은 AWS 지역에 따라 접근을 제한할 뿐이며 사용자 태그나 다단계 인증을 통한 보안을 다루지 않으므로 잘못된 것입니다."
        ]
    }
]