[
    {
        "Question Number": "1",
        "Situation": "SysOps 관리자는 AWS에 호스팅된 애플리케이션의 안전하고 효율적인 연결을 보장하기 위해 가상 사설 클라우드(VPC)를 구성하는 임무를 맡았습니다. 이 애플리케이션은 높은 가용성과 낮은 대기 시간을 유지하면서 온프레미스 리소스에 대한 액세스가 필요합니다.",
        "Question": "SysOps 관리자가 VPC와 온프레미스 리소스 간의 신뢰할 수 있는 연결을 설정하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "여러 VPC를 연결하고 온프레미스 네트워크와 통합하기 위해 Transit Gateway를 배포합니다.",
            "2": "공용 가상 인터페이스를 사용하여 온프레미스 데이터 센터에 Direct Connect 연결을 설정합니다.",
            "3": "온프레미스 리소스에 대한 직접 액세스를 용이하게 하기 위해 인터넷 게이트웨이를 구성합니다.",
            "4": "VPC에 연결된 가상 사설 게이트웨이를 사용하여 VPN 연결을 생성합니다."
        },
        "Correct Answer": "VPC에 연결된 가상 사설 게이트웨이를 사용하여 VPN 연결을 생성합니다.",
        "Explanation": "가상 사설 게이트웨이를 사용하여 VPN 연결을 생성하면 인터넷을 통해 VPC와 온프레미스 리소스 간의 안전한 통신이 가능하므로 두 환경을 안전하게 연결하는 적합한 솔루션이 됩니다.",
        "Other Options": [
            "공용 가상 인터페이스를 사용하여 Direct Connect 연결을 설정하는 것은 잘못된 선택입니다. Direct Connect는 사설 연결에 사용되며 공용으로 구성되어서는 안 되며, 이는 온프레미스 리소스를 인터넷에 노출시킬 수 있습니다.",
            "인터넷 게이트웨이를 구성하는 것은 잘못된 선택입니다. 이는 VPC 리소스가 인터넷에 연결될 수 있는 방법을 제공하지만, 온프레미스 리소스에 대한 안전하고 사적인 연결을 설정하지 않습니다.",
            "이 특정 시나리오에서 Transit Gateway를 배포하는 것은 잘못된 선택입니다. Transit Gateway는 여러 VPC와 VPN을 상호 연결하기 위해 설계되었으며, 온프레미스 리소스에 대한 단일 연결에는 필요하지 않습니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "금융 기관은 AWS 환경에서 발생할 수 있는 보안 위협에 대해 우려하고 있습니다. 그들은 AWS GuardDuty를 사용하여 악의적인 활동과 무단 행동을 모니터링하고 있습니다. SysOps 관리자는 보안 팀에게 GuardDuty의 기능을 명확히 해야 합니다.",
        "Question": "AWS 환경에서 AWS GuardDuty의 주요 기능은 무엇입니까?",
        "Options": {
            "1": "계정 및 워크로드에 대한 실시간 위협 탐지 및 지속적인 모니터링을 제공합니다.",
            "2": "무단 액세스를 방지하기 위해 정지 상태와 전송 중인 민감한 데이터를 암호화합니다.",
            "3": "악의적인 IP 주소와 무단 액세스 시도를 적극적으로 차단합니다.",
            "4": "환경에서 발견된 보안 취약점을 자동으로 수정합니다."
        },
        "Correct Answer": "계정 및 워크로드에 대한 실시간 위협 탐지 및 지속적인 모니터링을 제공합니다.",
        "Explanation": "AWS GuardDuty는 직접적으로 문제를 차단하거나 수정하는 행동을 취하기보다는 위협 탐지 및 모니터링을 위해 주로 설계되었습니다. 다양한 데이터 소스를 분석하여 잠재적인 위협을 식별하고 사용자가 추가 조사를 할 수 있도록 경고합니다.",
        "Other Options": [
            "이 옵션은 잘못된 선택입니다. GuardDuty는 위협을 적극적으로 차단하지 않으며, 대신 사용자가 수동으로 해결해야 할 잠재적인 보안 문제에 대해 탐지하고 경고합니다.",
            "이 옵션은 잘못된 선택입니다. GuardDuty는 자동 수정 기능을 수행하지 않으며, 탐지 및 경고에 중점을 두고 있습니다.",
            "이 옵션은 잘못된 선택입니다. GuardDuty는 데이터 암호화를 처리하지 않습니다. 그 주요 역할은 위협을 모니터링하고 탐지하는 것이지 데이터 암호화를 관리하는 것이 아닙니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 회사가 Amazon S3를 사용하여 정적 웹사이트를 호스팅하고자 합니다. 웹사이트는 공개적으로 접근 가능해야 하며, 사용자는 사용자 지정 도메인 이름을 사용하여 접근할 수 있어야 합니다. 또한 회사는 보안상의 이유로 웹사이트에 대한 모든 요청이 HTTPS 버전으로 리디렉션되도록 하기를 원합니다.",
        "Question": "SysOps 관리자가 이러한 요구 사항으로 S3 정적 웹사이트 호스팅을 구성하기 위해 어떤 단계를 밟아야 합니까?",
        "Options": {
            "1": "S3 버킷 설정에서 정적 웹사이트 호스팅을 활성화하고 공개 액세스를 위한 버킷 정책을 구성합니다.",
            "2": "Amazon API Gateway를 사용하여 S3 버킷에 대한 요청을 프록시하고 API에서 HTTPS를 강제합니다.",
            "3": "사용자 지정 도메인과 동일한 이름의 S3 버킷을 생성하고 도메인에 대한 A 레코드를 Route 53에 설정합니다.",
            "4": "S3 버킷을 원본으로 하는 CloudFront 배포를 설정하고 HTTPS 리디렉션을 위해 SSL을 구성합니다."
        },
        "Correct Answer": "S3 버킷을 원본으로 하는 CloudFront 배포를 설정하고 HTTPS 리디렉션을 위해 SSL을 구성합니다.",
        "Explanation": "CloudFront를 콘텐츠 전송 네트워크(CDN)로 사용하면 HTTPS 지원과 더 나은 성능을 제공합니다. SSL을 구성하면 모든 트래픽이 암호화되어 회사의 보안 요구 사항을 충족합니다. S3 버킷은 정적 파일을 제공하고 CloudFront는 HTTPS 요청을 처리합니다.",
        "Other Options": [
            "정적 웹사이트 호스팅을 활성화하고 버킷 정책을 구성하는 것만으로는 HTTPS 지원이나 사용자 지정 도메인 리디렉션을 제공하지 않으므로 안전한 액세스 요구 사항을 충족하지 않습니다.",
            "사용자 지정 도메인에 대한 A 레코드를 Route 53에 생성하는 것은 HTTPS 리디렉션이나 캐싱 이점을 제공하지 않으며, 이는 더 나은 성능과 보안에 필수적입니다.",
            "Amazon API Gateway를 사용하는 것은 S3에서 정적 콘텐츠를 제공하는 데 필요하지 않습니다. API Gateway는 일반적으로 동적 API에 사용되며, 정적 웹사이트에 불필요한 복잡성을 추가합니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "한 회사가 새로운 가상 사설 클라우드(VPC)에서 웹 애플리케이션을 배포하고 있습니다. 그들은 애플리케이션이 공개적으로 접근 가능하면서도 백엔드 서버에 대한 안전한 환경을 유지해야 합니다. 애플리케이션은 공용 서브넷에 호스팅되고, 데이터베이스는 사설 서브넷에 위치합니다. 회사는 필요한 네트워킹 구성 요소를 설정하는 임무를 맡고 있습니다.",
        "Question": "데이터베이스를 사설 서브넷에서 안전하게 유지하면서 웹 애플리케이션에 대한 공개 접근을 가능하게 하려면 다음 중 어떤 구성이 필수적입니까?",
        "Options": {
            "1": "더 나은 네트워크 분할을 위해 겹치는 CIDR 블록으로 구성된 서브넷.",
            "2": "VPC에 연결된 인터넷 게이트웨이와 포트 80에서 수신 트래픽을 허용하는 보안 그룹.",
            "3": "백엔드 서버의 아웃바운드 인터넷 접근을 허용하기 위한 공용 서브넷의 NAT 게이트웨이.",
            "4": "인터넷에서 사설 서브넷으로 모든 트래픽을 허용하도록 구성된 네트워크 ACL."
        },
        "Correct Answer": "VPC에 연결된 인터넷 게이트웨이와 포트 80에서 수신 트래픽을 허용하는 보안 그룹.",
        "Explanation": "VPC에 인터넷 게이트웨이를 연결하면 공용 서브넷이 인터넷과의 트래픽을 라우팅할 수 있습니다. 보안 그룹은 웹 애플리케이션에 대한 HTTP 접근을 가능하게 하기 위해 포트 80에서 수신 트래픽을 허용해야 하며, 이를 통해 애플리케이션은 공개적으로 접근 가능하면서 데이터베이스는 사설 서브넷에서 안전하게 유지됩니다.",
        "Other Options": [
            "NAT 게이트웨이는 주로 사설 서브넷의 인스턴스가 인터넷으로 아웃바운드 트래픽을 시작하도록 허용하면서 원치 않는 수신 트래픽을 방지하는 데 사용됩니다. 이는 웹 애플리케이션에 대한 공개 접근을 직접적으로 촉진하지 않습니다.",
            "네트워크 ACL은 상태 비저장(stateless)이며, 인터넷에서 사설 서브넷으로 모든 트래픽을 허용해서는 안 됩니다. 이는 데이터베이스를 잠재적인 공격에 노출시킬 수 있습니다. 대신, 더 제한적인 접근 정책을 제공하도록 구성해야 합니다.",
            "겹치는 CIDR 블록은 라우팅 문제를 일으킬 수 있으며 효과적인 네트워크 분할을 위해 권장되지 않습니다. 각 서브넷은 적절한 라우팅과 네트워크 성능을 보장하기 위해 고유한 CIDR 블록을 가져야 합니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "한 미디어 회사가 Amazon S3를 사용하여 대용량 비디오 파일을 저장하고 있으며, 이를 전 세계에 낮은 지연 시간으로 배포하고자 합니다. 그들은 사용자에게 콘텐츠 배달 성능을 개선하기 위해 Amazon CloudFront를 콘텐츠 배달 네트워크(CDN)로 구현하기로 결정했습니다. SysOps 관리자는 S3 버킷이 안전하고 CloudFront를 통해서만 접근 가능하도록 해야 합니다. 회사는 또한 S3 버킷을 인터넷에 직접 노출하는 것에 대해 우려하고 있습니다.",
        "Question": "관리자가 CloudFront가 콘텐츠를 배포할 수 있도록 하면서 S3 버킷을 안전하게 보호하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "CloudFront 원본 접근 ID(OAI)에서만 접근을 허용하도록 S3 버킷 정책을 구성합니다.",
            "2": "S3 버킷에 대한 공개 접근 차단을 설정하고 CloudFront가 서명된 URL을 사용하도록 구성합니다.",
            "3": "CloudFront 배포의 IP 범위에서 모든 트래픽을 허용하는 S3 버킷 정책을 사용합니다.",
            "4": "CloudFront를 위해 S3 버킷에서 교차 출처 리소스 공유(CORS)를 활성화합니다."
        },
        "Correct Answer": "CloudFront 원본 접근 ID(OAI)에서만 접근을 허용하도록 S3 버킷 정책을 구성합니다.",
        "Explanation": "S3 버킷 정책을 CloudFront 원본 접근 ID(OAI)에서만 접근을 허용하도록 구성하면 버킷이 공개적으로 접근할 수 없게 되고 CloudFront 배포를 통해서만 접근할 수 있습니다. 이는 인터넷에서 S3 버킷에 대한 직접 접근을 방지하여 보안을 강화합니다.",
        "Other Options": [
            "S3 버킷에 대한 공개 접근 차단을 설정하고 CloudFront가 서명된 URL을 사용하도록 구성하는 것은 접근을 완전히 제한하지 않습니다. 공개 차단은 공개 접근만 방지할 뿐 CloudFront의 OAI에 기반한 제한을 시행하지 않습니다.",
            "CloudFront 배포의 IP 범위에서 모든 트래픽을 허용하는 S3 버킷 정책을 사용하면 버킷이 잠재적인 오용에 노출될 수 있습니다. 이는 해당 IP에서의 모든 요청을 허용할 수 있기 때문입니다.",
            "CloudFront를 위해 S3 버킷에서 교차 출처 리소스 공유(CORS)를 활성화하는 것은 보안 문제를 해결하지 않으며, 버킷 자체에 대한 접근을 제한하지 않으므로 S3를 보호하는 데 적절한 해결책이 아닙니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "한 회사가 AWS CloudFormation을 사용하여 필요한 리소스를 생성하는 새로운 애플리케이션을 배포하고 있습니다. 그러나 배포가 권한 문제로 인해 실패합니다. 팀은 애플리케이션을 성공적으로 배포하기 위해 근본 원인을 파악해야 합니다.",
        "Question": "팀이 CloudFormation 배포에서 권한 문제를 해결하고 해결하기 위해 어떤 조치를 취해야 합니까?",
        "Options": {
            "1": "CloudFormation 스택과 연결된 IAM 역할을 검토합니다.",
            "2": "생성되는 리소스에 대한 서비스 쿼터 한도를 검사합니다.",
            "3": "적절한 서브넷 할당을 위해 VPC 구성을 확인합니다.",
            "4": "구문 오류를 위해 CloudFormation 템플릿을 검사합니다."
        },
        "Correct Answer": "CloudFormation 스택과 연결된 IAM 역할을 검토합니다.",
        "Explanation": "CloudFormation 스택과 연결된 IAM 역할은 스택이 AWS 리소스를 생성하고 관리할 수 있는 권한을 결정합니다. 권한 문제로 인해 배포가 실패하는 경우, 이 역할을 검토하면 누락된 권한이나 잘못된 정책을 식별하는 데 도움이 됩니다.",
        "Other Options": [
            "VPC 구성을 확인하는 것은 연결성에 중요하지만 CloudFormation 스택 실행과 관련된 권한 문제를 직접적으로 해결하지는 않습니다.",
            "리소스를 생성할 때 서비스 쿼터 한도를 검사하는 것은 중요하지만 CloudFormation 배포에서 권한 오류를 해결하는 것과는 직접적으로 관련이 없습니다.",
            "CloudFormation 템플릿의 구문 오류를 검사하는 것은 템플릿 유효성을 검증하는 데 필수적이지만, 배포 실패를 초래하는 권한 관련 문제를 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "글로벌 전자상거래 회사가 AWS로 애플리케이션을 마이그레이션하고 있으며, 장애에 견딜 수 있는 고가용성 아키텍처가 필요합니다. SysOps 관리자으로서, 데이터 복원력을 보장하고 중단 동안 다운타임을 최소화하는 솔루션을 설계해야 합니다.",
        "Question": "다음 솔루션 중 데이터 접근성을 보장하면서 애플리케이션의 내결함성을 가장 잘 향상시킬 수 있는 것은 무엇입니까?",
        "Options": {
            "1": "단일 가용 영역에서 Amazon RDS 인스턴스 사용",
            "2": "다중 AZ 지원이 있는 Amazon Elastic File System 구현",
            "3": "모든 인스턴스에 대해 단일 Elastic IP 주소 활용",
            "4": "버전 관리 없이 정적 콘텐츠를 위해 Amazon S3 배포"
        },
        "Correct Answer": "다중 AZ 지원이 있는 Amazon Elastic File System 구현",
        "Explanation": "다중 AZ 지원이 있는 Amazon Elastic File System (EFS)을 사용하면 데이터가 여러 가용 영역에 자동으로 복제되어 애플리케이션의 고가용성과 내결함성을 보장하는 완전 관리형, 확장 가능하고 탄력적인 파일 저장 솔루션을 제공합니다.",
        "Other Options": [
            "모든 인스턴스에 대해 단일 Elastic IP 주소를 사용하는 것은 내결함성을 제공하지 않으며, 해당 IP를 사용하는 인스턴스가 사용할 수 없게 되면 단일 실패 지점을 생성합니다.",
            "버전 관리 없이 정적 콘텐츠를 위해 Amazon S3를 배포하는 것은 내결함성을 향상시키지 않으며, 실패 시 가용성을 보장하는 데이터 복제 기능이 부족합니다.",
            "단일 가용 영역에서 Amazon RDS 인스턴스를 사용하는 것은 고가용성이나 내결함성을 제공하지 않으며, 이는 영역 실패에 취약하고 여러 영역에 데이터를 복제하지 않습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "금융 서비스 회사가 악의적인 공격으로부터 웹 애플리케이션을 보호하는 것에 대해 우려하고 있습니다. 그들은 EC2 인스턴스에서 Elastic Load Balancer (ELB) 뒤에 호스팅된 애플리케이션을 구현하고 있으며, 콘텐츠 배달을 위해 CloudFront를 사용하고 있습니다. 회사는 일반적인 웹 공격 및 DDoS 공격으로부터 애플리케이션이 안전하게 보호되기를 원합니다.",
        "Question": "그들의 웹 애플리케이션의 보안을 강화하기 위해 어떤 AWS 서비스를 추천하시겠습니까? (두 개 선택)",
        "Options": {
            "1": "AWS WAF를 활성화하여 특정 조건에 따라 웹 트래픽을 필터링하는 사용자 정의 규칙을 생성합니다.",
            "2": "특정 VPC에서 웹 애플리케이션에 대한 접근을 제한하기 위해 VPC 피어링 연결을 설정합니다.",
            "3": "클라우드에서 웹 애플리케이션 리소스에 대한 접근을 제어하기 위해 AWS IAM 역할을 구현합니다.",
            "4": "ELB 및 CloudFront 배포를 위한 추가 DDoS 보호를 제공하기 위해 AWS Shield Advanced를 구성합니다.",
            "5": "의심스러운 활동에 대한 네트워크 트래픽을 모니터링하기 위해 Amazon GuardDuty 인스턴스를 배포합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS WAF를 활성화하여 특정 조건에 따라 웹 트래픽을 필터링하는 사용자 정의 규칙을 생성합니다.",
            "ELB 및 CloudFront 배포를 위한 추가 DDoS 보호를 제공하기 위해 AWS Shield Advanced를 구성합니다."
        ],
        "Explanation": "AWS WAF를 사용하면 원하지 않는 웹 트래픽을 필터링하는 규칙을 정의할 수 있어 SQL 주입 및 XSS와 같은 일반적인 웹 공격으로부터 보호할 수 있습니다. AWS Shield Advanced는 ELB 및 CloudFront와 같은 리소스에 대해 향상된 DDoS 보호를 제공하여 대규모 공격 중에도 애플리케이션이 가용성을 유지하도록 추가 보안 계층을 추가합니다.",
        "Other Options": [
            "VPC 피어링은 외부 위협으로부터 웹 애플리케이션의 보안을 직접적으로 강화하지 않으며, 주로 두 VPC를 연결하는 데 사용됩니다.",
            "Amazon GuardDuty는 악의적인 활동에 대해 AWS 계정을 모니터링하는 위협 탐지 서비스이지만, 웹 애플리케이션을 공격으로부터 적극적으로 보호하지는 않습니다.",
            "IAM 역할은 AWS 리소스에 대한 접근 관리를 위해 중요하지만, 웹 애플리케이션 공격이나 DDoS 위협으로부터 보호를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "SysOps 관리자가 Amazon DynamoDB를 사용하는 중요한 애플리케이션의 고가용성을 보장하는 임무를 맡고 있습니다. 애플리케이션은 지역 실패가 발생하더라도 계속 운영되어야 합니다. 관리자는 DynamoDB에서 글로벌 테이블 구성을 구현하기로 결정했습니다.",
        "Question": "애플리케이션에 대해 Amazon DynamoDB 글로벌 테이블을 사용하는 주요 이점은 무엇입니까?",
        "Options": {
            "1": "글로벌 테이블은 수동 복제 없이 여러 지역에서 저지연 읽기 및 쓰기를 허용합니다.",
            "2": "글로벌 테이블은 서로 다른 지역의 DynamoDB 인스턴스 간 데이터 마이그레이션 프로세스를 간소화합니다.",
            "3": "글로벌 테이블은 지역 간 자동 백업 및 복원 기능을 제공합니다.",
            "4": "글로벌 테이블은 추가 구성 없이 모든 지역에서 데이터 암호화를 지원합니다."
        },
        "Correct Answer": "글로벌 테이블은 수동 복제 없이 여러 지역에서 저지연 읽기 및 쓰기를 허용합니다.",
        "Explanation": "Amazon DynamoDB 글로벌 테이블을 사용하는 주요 이점은 다중 지역, 다중 마스터 데이터베이스를 배포하기 위한 완전 관리형 솔루션을 제공한다는 것입니다. 이를 통해 수동 복제 솔루션 없이 여러 지역에서 저지연 읽기 및 쓰기가 가능하여 애플리케이션의 고가용성을 보장합니다.",
        "Other Options": [
            "DynamoDB는 백업 및 복원 기능을 제공하지만, 이러한 기능은 글로벌 테이블 기능과 특별히 연결되어 있지 않으므로 이 옵션은 올바르지 않습니다.",
            "DynamoDB는 데이터를 자동으로 암호화하지만, 이 기능은 글로벌 테이블에만 국한되지 않으며 다중 지역 가용성의 주요 이점을 다루지 않습니다.",
            "DynamoDB 인스턴스 간 데이터 마이그레이션은 다른 AWS 서비스를 통해 관리할 수 있지만, 글로벌 테이블은 고가용성과 저지연을 위해 특별히 설계되었으며 데이터 마이그레이션을 간소화하기 위한 것이 아닙니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 금융 서비스 회사가 AWS 환경 전반에 걸쳐 보안 및 규정 준수를 강화하기 위해 다중 계정 전략을 구현할 계획입니다. SysOps 관리자는 이러한 계정의 적절한 거버넌스 및 관리를 보장하면서 운영 오버헤드를 최소화해야 합니다.",
        "Question": "SysOps 관리자가 계정 관리 및 규정 준수를 간소화하는 안전한 다중 계정 전략을 수립하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Control Tower",
            "2": "AWS Config",
            "3": "AWS Identity and Access Management (IAM)",
            "4": "AWS Service Catalog"
        },
        "Correct Answer": "AWS Control Tower",
        "Explanation": "AWS Control Tower는 안전한 다중 계정 AWS 환경을 설정하고 관리하기 위해 특별히 설계되었습니다. 이는 조직이 계정을 관리하고, 모범 사례를 구현하며, 정책 준수를 보장하는 데 도움이 되는 규범적 프레임워크를 제공합니다.",
        "Other Options": [
            "AWS Config는 주로 단일 계정 내에서 리소스 구성 추적 및 규정 준수 모니터링에 사용되지만, 포괄적인 다중 계정 관리 솔루션을 제공하지 않습니다.",
            "AWS Identity and Access Management (IAM)는 계정 내 AWS 리소스에 대한 사용자 액세스를 관리하지만, 안전한 다중 계정 전략에 필요한 다중 계정 거버넌스 기능을 제공하지 않습니다.",
            "AWS Service Catalog는 IT 서비스의 카탈로그를 생성하고 관리할 수 있지만, 여러 AWS 계정을 관리하는 데 필요한 거버넌스 및 규정 준수 측면을 다루지 않습니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "AWS에 호스팅된 웹 애플리케이션이 트래픽 급증으로 인해 간헐적인 다운타임을 겪고 있어 사용자 불만이 발생하고 있습니다. SysOps 관리자로서, 다운타임 동안 수동 개입을 최소화하면서 애플리케이션의 고가용성과 신뢰성을 보장해야 합니다.",
        "Question": "Elastic Load Balancing과 Route 53을 사용하여 애플리케이션의 신뢰성을 향상시키기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "헬스 체크가 있는 Application Load Balancer를 사용하고 Route 53을 구성하여 다른 지역으로 DNS 장애 조치를 수행합니다.",
            "2": "단일 가용 영역의 Network Load Balancer를 구현하고 Route 53을 구성하여 가중 라우팅을 수행합니다.",
            "3": "여러 대상 그룹이 있는 Application Load Balancer를 구성하고 Route 53을 설정하여 지연 시간에 따라 트래픽을 라우팅합니다.",
            "4": "단일 대상 그룹이 있는 Classic Load Balancer를 설정하고 Route 53에서 스티키 세션을 활성화합니다."
        },
        "Correct Answer": "헬스 체크가 있는 Application Load Balancer를 사용하고 Route 53을 구성하여 다른 지역으로 DNS 장애 조치를 수행합니다.",
        "Explanation": "헬스 체크가 있는 Application Load Balancer를 사용하면 건강한 인스턴스로 트래픽을 자동으로 라우팅할 수 있어 애플리케이션의 신뢰성이 향상됩니다. Route 53을 DNS 장애 조치로 구성하면 기본 지역이 비정상 상태가 될 경우 트래픽이 다른 지역으로 라우팅되어 가용성이 더욱 증가합니다.",
        "Other Options": [
            "여러 대상 그룹이 있는 Application Load Balancer를 구성하고 지연 시간에 따라 트래픽을 라우팅하는 것은 헬스 체크 및 장애 조치 기능이 부족하여 다운타임 동안 고가용성이나 신뢰성 문제를 직접 해결하지 않습니다.",
            "단일 대상 그룹이 있는 Classic Load Balancer를 설정하고 스티키 세션을 활성화하는 것은 중복성이나 장애 조치를 제공하지 않으므로 트래픽 급증이나 인스턴스 실패 시 다운타임으로 이어질 수 있습니다.",
            "단일 가용 영역의 Network Load Balancer를 구현하는 것은 고가용성을 보장하지 않으며, 해당 가용 영역을 잃으면 서비스가 완전히 중단됩니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "한 회사가 애플리케이션 서버를 AWS로 마이그레이션할 계획이며, 이들이 조직의 보안 정책을 준수하는지 확인해야 합니다. 애플리케이션은 민감한 고객 데이터를 처리할 것이며, 모범 사례에 부합하는 보안 조치를 구현하는 것이 중요합니다.",
        "Question": "AWS에 배포된 애플리케이션 서버가 보안 및 규정 준수 정책을 준수하도록 보장하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "타사 보안 도구를 배포하여 애플리케이션 서버의 규정 준수 문제를 모니터링합니다.",
            "2": "애플리케이션 서버의 보안 설정을 주기적으로 검토하기 위한 수동 체크리스트를 작성합니다.",
            "3": "AWS CloudTrail을 사용하여 애플리케이션 서버에서 발생하는 모든 API 호출을 기록합니다.",
            "4": "AWS Config Rules를 구현하여 AWS 리소스의 구성을 보안 정책에 대해 평가합니다."
        },
        "Correct Answer": "AWS Config Rules를 구현하여 AWS 리소스의 구성을 보안 정책에 대해 평가합니다.",
        "Explanation": "AWS Config Rules는 AWS 리소스 구성을 조직의 규정 준수 정책에 대해 자동으로 평가할 수 있도록 합니다. 이 사전 대응적 접근 방식은 규정 준수 문제의 실시간 모니터링 및 수정에 도움이 되어 가장 효과적인 옵션이 됩니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출 추적 및 감사에 유용하지만, 보안 정책에 대한 실시간 규정 준수 평가를 제공하지 않습니다.",
            "타사 보안 도구가 도움이 될 수 있지만, 규정 준수 모니터링을 위해 이들에만 의존하는 것은 AWS 서비스와 완전히 통합되지 않을 수 있으며, 규정 준수 범위에 공백이 생길 수 있습니다.",
            "수동 체크리스트를 만드는 것은 인적 오류에 취약하며, 민감한 고객 데이터에 필수적인 지속적인 규정 준수 모니터링에 비효율적입니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "SysOps 관리자는 Amazon EC2에 호스팅된 고트래픽 애플리케이션의 스토리지 성능을 최적화하는 임무를 맡고 있습니다. 이 애플리케이션은 데이터 무결성을 보장하기 위해 높은 I/O 성능과 중복성을 모두 요구합니다. 관리자는 이러한 목표를 달성하기 위해 다양한 RAID 구성을 고려하고 있습니다.",
        "Question": "관리자가 높은 I/O 성능과 중복성을 모두 제공하기 위해 선택해야 할 RAID 구성은 무엇입니까?",
        "Options": {
            "1": "여러 볼륨을 스트라이핑하기 위한 RAID 0",
            "2": "여러 디스크에 패리티를 스트라이핑하기 위한 RAID 5",
            "3": "스트라이핑과 미러링을 결합하기 위한 RAID 10",
            "4": "두 볼륨을 미러링하기 위한 RAID 1"
        },
        "Correct Answer": "스트라이핑과 미러링을 결합하기 위한 RAID 10",
        "Explanation": "RAID 10은 미러링된 쌍에 데이터를 스트라이핑하여 RAID 0과 RAID 1의 이점을 결합합니다. 이 구성은 스트라이핑을 통한 높은 I/O 성능과 미러링을 통한 중복성을 제공하여 성능과 내결함성을 모두 요구하는 애플리케이션에 이상적입니다.",
        "Other Options": [
            "RAID 0은 스트라이핑을 통해 높은 I/O 성능을 제공하지만 중복성을 제공하지 않아 데이터 무결성이 중요한 시나리오에는 적합하지 않습니다.",
            "RAID 1은 두 볼륨 간의 데이터를 미러링하여 중복성을 제공하지만 스트라이핑 구성만큼의 성능을 제공하지 않아 높은 I/O 성능 요구 사항을 충족하지 못할 수 있습니다.",
            "RAID 5는 패리티를 통해 중복성을 제공하지만 RAID 10에 비해 느린 쓰기 성능을 겪을 수 있어 높은 성능과 중복성이 모두 필요한 시나리오에는 덜 최적입니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "한 회사는 AWS에 호스팅된 웹 애플리케이션의 성능을 모니터링하고자 합니다. 그들은 여러 EC2 인스턴스에서 CPU 사용률, 네트워크 트래픽 및 요청 수와 같은 주요 지표를 시각화하는 CloudWatch 대시보드를 생성해야 합니다. 팀은 시간이 지남에 따라 애플리케이션의 성능 추세를 유지하는 것에 대해 우려하고 있습니다.",
        "Question": "회사의 요구 사항을 충족하는 CloudWatch 대시보드를 만드는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "각 지표에 대해 CloudWatch 알람을 설정하고 임계값이 초과될 때 SNS 주제로 알림을 트리거하도록 구성합니다.",
            "2": "미리 정의된 JSON 구성에 따라 CloudWatch 대시보드를 자동으로 업데이트하는 AWS Lambda 함수를 구현합니다.",
            "3": "CloudWatch 콘솔을 사용하여 수동으로 대시보드를 생성하고 EC2 인스턴스에서 필요한 각 지표에 대한 위젯을 추가합니다.",
            "4": "AWS CloudFormation을 활용하여 CloudWatch 대시보드를 정의하고 인프라를 코드로 관리하는 과정의 일환으로 배포합니다."
        },
        "Correct Answer": "AWS CloudFormation을 활용하여 CloudWatch 대시보드를 정의하고 인프라를 코드로 관리하는 과정의 일환으로 배포합니다.",
        "Explanation": "AWS CloudFormation을 사용하면 CloudWatch 대시보드를 인프라를 코드로 관리하는 전략의 일환으로 정의하고 배포할 수 있습니다. 이는 대시보드를 생성하는 데 일관성과 반복성을 보장하여 시간이 지남에 따라 변경 사항을 관리하기 쉽게 만듭니다.",
        "Other Options": [
            "CloudWatch 콘솔을 사용하여 대시보드를 수동으로 생성하는 것은 가능하지만 CloudFormation이 제공하는 자동화 및 일관성의 이점을 제공하지 않아 지속적인 관리에는 덜 효과적입니다.",
            "대시보드를 업데이트하기 위해 Lambda 함수를 구현하면 복잡성과 잠재적인 실패를 초래할 수 있으며, 특히 대시보드 구성이 자주 변경되는 경우에는 가장 효율적인 방법이 아닙니다.",
            "CloudWatch 알람을 설정하는 것은 특정 임계값을 모니터링하는 데 유용하지만 대시보드에서 지표의 시각적 표현을 생성하지 않습니다. 이 옵션은 성능 추세를 시각화하는 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "한 회사는 AWS 청구서에서 예상치 못한 요금을 경험하고 있으며, 비용에 기여하고 있는 활용도가 낮은 리소스가 있을 수 있다고 의심하고 있습니다. 회사는 이러한 리소스를 효율적으로 식별하고자 합니다.",
        "Question": "SysOps 관리자가 리소스 사용을 분석하고 비용 최적화를 위한 권장 사항을 제공하기 위해 사용해야 할 AWS 도구는 무엇입니까?",
        "Options": {
            "1": "AWS Budgets를 사용하여 비용 임계값에 대한 알림을 설정하고 리소스 사용을 모니터링합니다.",
            "2": "AWS Compute Optimizer를 사용하여 기존 EC2 인스턴스의 성능을 분석하고 최적의 인스턴스 유형을 추천합니다.",
            "3": "AWS Trusted Advisor를 사용하여 비용 최적화에 대한 통찰력을 받고 활용도가 낮은 리소스를 식별합니다.",
            "4": "AWS Cost Explorer를 사용하여 지출 추세를 시각화하고 사용되지 않는 리소스를 식별합니다."
        },
        "Correct Answer": "AWS Trusted Advisor를 사용하여 비용 최적화에 대한 통찰력을 받고 활용도가 낮은 리소스를 식별합니다.",
        "Explanation": "AWS Trusted Advisor는 비용 최적화 권장 사항을 포함하여 AWS 환경에 대한 포괄적인 개요를 제공하며, 다양한 서비스에서 활용도가 낮거나 유휴 리소스를 식별하는 데 도움을 줍니다.",
        "Other Options": [
            "AWS Cost Explorer는 주로 지출 패턴을 시각화하는 데 중점을 두며 활용도가 낮은 리소스를 직접 식별하지는 않습니다.",
            "AWS Compute Optimizer는 EC2 인스턴스에 대한 최적의 인스턴스 유형을 추천하는 데 중점을 두며 전체 리소스 활용도 통찰력을 제공하지 않습니다.",
            "AWS Budgets는 설정된 예산에 대한 지출을 추적하고 임계값에 대해 알림을 제공하도록 설계되었지만 활용도가 낮은 리소스를 분석하거나 식별하지는 않습니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "회사는 실패 시 Amazon RDS 데이터베이스의 신뢰성과 빠른 복구를 보장해야 합니다. 회사는 백업이 얼마나 자주 수행되고 유지되어야 하는지를 규정하는 특정 RTO(복구 시간 목표) 및 RPO(복구 지점 목표) 요구 사항을 가지고 있습니다. 이 요구 사항을 효율적으로 충족하기 위해 스냅샷 및 백업 프로세스를 자동화하고자 합니다.",
        "Question": "회사가 RDS 스냅샷 및 백업 관리를 자동화하면서 RTO 및 RPO 요구 사항을 준수하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "RDS에 대해 매일 24시간마다 수동 스냅샷을 생성하고 S3에 저장합니다.",
            "2": "Amazon Data Lifecycle Manager를 사용하여 RDS 인스턴스의 EBS 볼륨 스냅샷을 자동화합니다.",
            "3": "AWS Backup을 활용하여 RDS 백업을 관리하고 적절한 라이프사이클 정책을 설정합니다.",
            "4": "RDS에 대해 자동 백업을 활성화하고 백업 보존 기간을 구성합니다."
        },
        "Correct Answer": "AWS Backup을 활용하여 RDS 백업을 관리하고 적절한 라이프사이클 정책을 설정합니다.",
        "Explanation": "AWS Backup은 RDS를 포함한 AWS 서비스 전반에 걸쳐 백업 관리를 자동화하는 중앙 집중식 방법을 제공합니다. 이를 통해 백업을 저렴한 스토리지로 자동으로 이동하거나 더 이상 필요하지 않을 때 삭제하는 라이프사이클 정책을 설정할 수 있어 RTO 및 RPO 요구 사항을 효과적으로 충족하는 데 도움을 줍니다.",
        "Other Options": [
            "RDS에 대한 자동 백업을 활성화하면 시점 복구를 제공하지만 추가 관리 도구가 없으면 광범위한 백업 관리를 위해 필요한 복잡한 라이프사이클 정책과 완전히 일치하지 않을 수 있습니다.",
            "수동 스냅샷을 생성하면 백업을 유지하는 데 도움이 될 수 있지만 자동화되지 않으며 매일 24시간마다 수동 개입이 필요하므로 RTO 및 RPO 요구 사항을 효율적으로 충족하지 못합니다.",
            "Amazon Data Lifecycle Manager는 EBS 스냅샷 관리를 위해 유용하지만 RDS 데이터베이스에는 적용되지 않으며, 스냅샷 관리를 위한 다른 접근 방식이 필요합니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "회사는 AWS Service Catalog를 사용하여 클라우드 리소스를 관리하고 있습니다. SysOps 관리자는 모든 프로비저닝된 제품이 일관된 분류 체계에 따라 관리될 수 있도록 태그 전략을 구현하고자 합니다. 관리자는 제품을 시작할 때 사용자가 미리 정의된 태그에서 선택할 수 있는 기능을 사용해야 합니다.",
        "Question": "AWS Service Catalog의 어떤 기능이 관리자가 프로비저닝된 제품에 대한 미리 정의된 태그 옵션을 제공하여 일관된 태그 전략을 생성할 수 있도록 합니까?",
        "Options": {
            "1": "AWS Organizations를 사용하여 여러 계정 간에 태그 정책을 공유하여 리소스 관리의 일관성을 유지합니다.",
            "2": "AWS Config 규칙을 사용하여 계정 내 모든 AWS 리소스에 대한 태그 준수를 강제합니다.",
            "3": "TagOption 라이브러리를 사용하여 프로비저닝된 제품에 적용할 수 있는 표준화된 키-값 쌍 세트를 생성합니다.",
            "4": "AWS CloudTrail을 사용하여 프로비저닝된 제품에서 수행된 태그 활동을 감사하고 기록합니다."
        },
        "Correct Answer": "TagOption 라이브러리를 사용하여 프로비저닝된 제품에 적용할 수 있는 표준화된 키-값 쌍 세트를 생성합니다.",
        "Explanation": "AWS Service Catalog의 TagOption 라이브러리는 관리자가 미리 정의된 키-값 쌍 세트를 생성할 수 있게 하여 일관된 분류 체계를 강제하고 프로비저닝된 제품의 태그 프로세스를 간소화합니다.",
        "Other Options": [
            "AWS Config 규칙은 준수를 모니터링하는 데 유용하지만 프로비저닝된 제품에 대한 미리 정의된 태그 옵션을 생성하는 수단을 제공하지 않습니다.",
            "AWS Organizations는 여러 AWS 계정을 관리하는 데 중점을 두며, 해당 계정 내 개별 리소스에 대한 태그 전략을 구체적으로 처리하지 않습니다.",
            "AWS CloudTrail은 AWS 리소스에서 수행된 API 호출을 기록하는 로깅 서비스이지만 태그 전략의 관리 또는 강제를 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "SysOps 관리자는 애플리케이션의 트랜잭션 무결성을 보장하기 위해 엄격한 메시지 순서 및 정확히 한 번 처리되는 메시징 시스템을 구현해야 합니다. 관리자는 이러한 요구 사항을 충족하기 위해 AWS의 다양한 큐 옵션을 고려하고 있습니다.",
        "Question": "다음 중 AWS의 FIFO 큐 기능을 정확하게 설명하는 문장은 무엇입니까?",
        "Options": {
            "1": "FIFO 큐는 단일 정렬된 메시지 그룹만 지원하여 메시지 처리의 유연성을 제한합니다.",
            "2": "FIFO 큐는 메시지가 전송된 후 자동으로 삭제되어 다시 처리할 수 없도록 보장합니다.",
            "3": "FIFO 큐는 메시지를 순서에 관계없이 병렬로 처리할 수 있도록 하여 처리량을 증가시킵니다.",
            "4": "FIFO 큐는 메시지가 전송된 순서대로 처리되도록 보장하며 중복을 발생시키지 않습니다."
        },
        "Correct Answer": "FIFO 큐는 메시지가 전송된 순서대로 처리되도록 보장하며 중복을 발생시키지 않습니다.",
        "Explanation": "FIFO 큐는 메시지가 전송된 정확한 순서로 배달되도록 보장하며, 각 메시지가 정확히 한 번 처리되도록 보장하여 큐에 중복이 발생하지 않도록 합니다.",
        "Other Options": [
            "이 옵션은 FIFO 큐가 메시지를 병렬로 처리하지 않기 때문에 잘못된 것입니다. FIFO 큐는 엄격한 순서를 유지하여 메시지의 동시 처리를 방지합니다.",
            "이 옵션은 FIFO 큐가 메시지가 전송된 후 자동으로 삭제되지 않기 때문에 잘못된 것입니다. 메시지는 처리될 때까지 큐에 남아 있으며 소비자가 명시적으로 삭제할 때까지 유지됩니다.",
            "이 옵션은 FIFO 큐가 여러 정렬된 메시지 그룹을 지원할 수 있기 때문에 잘못된 것입니다. 이는 다양한 메시지 스트림을 처리하는 데 더 큰 유연성을 제공합니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "SysOps 관리자는 보안을 강화하고 연결 문제를 해결하기 위해 가상 사설 클라우드(VPC) 내 인스턴스 간의 네트워크 트래픽을 모니터링하는 임무를 맡았습니다. 관리자는 이 트래픽을 시간에 따라 분석할 수 있는 솔루션을 구현하고 싶으며, 향후 참조 및 문제 해결을 위해 데이터를 저장할 수 있는 기능을 포함하고자 합니다.",
        "Question": "관리자가 VPC 인스턴스의 IP 트래픽 정보를 효과적으로 모니터링하고 분석하기 위해 활성화해야 하는 AWS 기능은 무엇입니까?",
        "Options": {
            "1": "Amazon CloudWatch Alarms를 구성하여 VPC 인스턴스의 리소스 활용도를 모니터링하고 알림을 전송합니다.",
            "2": "AWS CloudTrail을 활성화하여 모든 API 호출을 기록하고 VPC의 네트워크 인터페이스에 대한 변경 사항을 추적합니다.",
            "3": "VPC Flow Logs를 활성화하여 IP 트래픽 데이터를 Amazon CloudWatch Logs 또는 Amazon S3에 캡처하고 저장하여 향후 분석합니다.",
            "4": "AWS Config를 설정하여 VPC 및 관련 리소스의 구성 변경 사항을 지속적으로 모니터링합니다."
        },
        "Correct Answer": "VPC Flow Logs를 활성화하여 IP 트래픽 데이터를 Amazon CloudWatch Logs 또는 Amazon S3에 캡처하고 저장하여 향후 분석합니다.",
        "Explanation": "VPC Flow Logs를 활성화하면 관리자는 VPC 인스턴스 간의 IP 트래픽에 대한 자세한 정보를 캡처할 수 있습니다. 이 데이터는 Amazon CloudWatch Logs 또는 Amazon S3에 저장되어 네트워크 연결 문제 및 보안 모니터링을 위한 철저한 분석과 문제 해결을 가능하게 합니다.",
        "Other Options": [
            "AWS CloudTrail은 API 호출을 기록하지만 실시간 네트워크 트래픽 데이터를 캡처하지 않으므로 IP 트래픽 모니터링에는 적합하지 않습니다.",
            "Amazon CloudWatch Alarms는 메트릭 및 리소스 활용도를 모니터링하기 위해 설계되었으며, 네트워크 트래픽 데이터를 캡처하는 데는 적합하지 않습니다.",
            "AWS Config는 구성 변경 사항을 추적하는 데 사용되지만 인스턴스 간의 실제 IP 트래픽 흐름에 대한 자세한 통찰력을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 Amazon VPC의 출입 트래픽을 모니터링하기 위해 VPC Flow Logs를 구현했습니다. SysOps 관리자는 이러한 로그를 분석하여 잠재적인 보안 위협을 나타낼 수 있는 비정상적인 패턴을 식별해야 합니다.",
        "Question": "SysOps 관리자가 잠재적인 보안 위협을 식별하기 위해 VPC Flow Logs를 분석하는 가장 효과적인 접근 방식은 무엇입니까?",
        "Options": {
            "1": "CloudTrail을 활용하여 API 호출을 모니터링하고 이를 VPC Flow Logs와 연관시켜 보안 위협을 식별합니다.",
            "2": "AWS Config 규칙을 구성하여 트래픽 패턴을 분석하지 않고도 보안 모범 사례 준수를 보장합니다.",
            "3": "Amazon Athena를 사용하여 Amazon S3에 저장된 로그를 쿼리하고 SQL 유사 구문을 적용하여 트래픽 패턴을 필터링하고 분석합니다.",
            "4": "CloudWatch 대시보드를 생성하여 VPC Flow Logs를 시각화하고 비정상적인 트래픽 볼륨에 대한 경고를 설정합니다."
        },
        "Correct Answer": "Amazon Athena를 사용하여 Amazon S3에 저장된 로그를 쿼리하고 SQL 유사 구문을 적용하여 트래픽 패턴을 필터링하고 분석합니다.",
        "Explanation": "Amazon Athena를 사용하면 SysOps 관리자가 S3에 저장된 VPC Flow Logs에 대해 즉석 쿼리를 수행할 수 있어 보안 위협을 나타내는 비정상적인 트래픽 패턴을 식별하기 위한 자세한 분석이 가능합니다. 이 방법은 철저한 로그 분석에 필수적인 유연성과 강력한 쿼리 기능을 제공합니다.",
        "Other Options": [
            "CloudTrail을 활용하는 것은 VPC Flow Logs를 직접 분석하는 데 효과적이지 않으며, CloudTrail은 API 호출 기록에 중점을 두고 있어 트래픽 패턴 식별에는 적합하지 않습니다.",
            "CloudWatch 대시보드를 생성하면 특정 메트릭을 시각화하는 데 도움이 될 수 있지만, Athena로 로그를 직접 쿼리하는 것과 같은 수준의 자세한 분석을 제공하지 않아 특정 보안 위협을 식별하는 능력이 제한됩니다.",
            "AWS Config 규칙을 구성하는 것은 리소스 준수 및 구성에 중점을 두며, 네트워크 트래픽 패턴 분석에는 도움이 되지 않으므로 VPC Flow Logs에서 잠재적인 보안 위협을 식별하는 데 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 회사가 상당한 관리 및 유지 관리가 필요한 Amazon EC2 인스턴스에서 웹 애플리케이션을 실행하고 있습니다. SysOps 관리자는 관리형 서비스를 활용하여 비용과 성능을 최적화할 기회를 찾고 있습니다.",
        "Question": "다음 서비스 중 웹 애플리케이션의 운영 오버헤드를 가장 효과적으로 줄이면서 성능을 개선할 수 있는 것은 무엇입니까?",
        "Options": {
            "1": "수동 확장을 사용하는 Amazon EC2",
            "2": "서버리스 실행을 위한 AWS Lambda",
            "3": "파일 저장을 위한 Amazon S3",
            "4": "데이터베이스 관리를 위한 Amazon RDS"
        },
        "Correct Answer": "데이터베이스 관리를 위한 Amazon RDS",
        "Explanation": "Amazon RDS는 백업, 패치 및 확장과 같은 작업을 자동화하는 관리형 데이터베이스 서비스로, SysOps 관리자가 데이터베이스 유지 관리가 아닌 애플리케이션 개발에 집중할 수 있도록 합니다. 이 서비스는 읽기 복제본 및 자동 확장 옵션과 같은 기능을 통해 성능 향상도 제공합니다.",
        "Other Options": [
            "수동 확장을 사용하는 Amazon EC2는 더 많은 관리와 감독이 필요하므로 관리형 서비스가 제공하는 자동 확장 및 유지 관리의 이점 없이 운영 오버헤드가 증가합니다.",
            "Amazon S3는 주로 객체 저장을 위한 것이며 데이터베이스 관리나 애플리케이션 성능을 직접 최적화하지 않으며, 효율적인 데이터베이스 관리를 위한 기능이 부족합니다.",
            "AWS Lambda는 이벤트 기반 아키텍처에 적합한 서버리스 컴퓨팅 서비스이지만, 지속적인 상태나 복잡한 데이터베이스 상호작용이 필요한 웹 애플리케이션에는 적합하지 않으며, 이는 Amazon RDS가 효율적으로 처리할 수 있습니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "소매 회사가 시즌 세일 동안 전자상거래 사이트에서 높은 트래픽을 경험하고 있습니다. SysOps 관리자으로서, 캐싱 전략을 구현하여 애플리케이션의 성능과 신뢰성을 향상시켜야 합니다.",
        "Question": "애플리케이션 성능을 개선하기 위해 고려해야 할 캐싱 솔루션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "Memcached를 사용하여 인메모리 캐싱을 위한 EC2 인스턴스 설정",
            "2": "세션 데이터를 캐시하기 위해 Amazon ElastiCache for Redis 사용",
            "3": "정적 자산 캐싱을 위한 CDN으로 Amazon CloudFront 활용",
            "4": "빠른 검색을 위해 자주 접근하는 데이터를 Amazon RDS에 저장",
            "5": "정적 콘텐츠 배달을 위해 Amazon S3 구현"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "세션 데이터를 캐시하기 위해 Amazon ElastiCache for Redis 사용",
            "정적 자산 캐싱을 위한 CDN으로 Amazon CloudFront 활용"
        ],
        "Explanation": "Amazon ElastiCache for Redis를 사용하면 자주 접근하는 세션 데이터를 캐시할 수 있어 데이터베이스 부하를 크게 줄이고 응답 시간을 개선할 수 있습니다. 또한, Amazon CloudFront는 정적 자산을 엣지 위치에서 캐시하는 콘텐츠 배달 네트워크(CDN)로, 전 세계 사용자에게 더 빠른 콘텐츠 배달을 가능하게 합니다.",
        "Other Options": [
            "정적 콘텐츠 배달을 위해 Amazon S3를 구현하는 것은 캐싱 기능을 제공하지 않으며, 단순히 정적 콘텐츠를 저장합니다. S3는 정적 파일 저장에 좋은 옵션이지만, CloudFront처럼 콘텐츠를 캐시하지는 않습니다.",
            "자주 접근하는 데이터를 Amazon RDS에 저장하는 것은 본질적으로 캐싱을 제공하지 않습니다. 빠른 검색은 가능하지만, 캐싱 레이어만큼 데이터베이스의 부하를 효과적으로 줄이지는 않습니다.",
            "Memcached를 사용하여 인메모리 캐싱을 위한 EC2 인스턴스를 설정하는 것은 가능하지만, 추가 관리가 필요하며 ElastiCache와 같은 관리형 서비스만큼 확장 가능하거나 통합되어 있지 않습니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 회사가 AWS에서 새로운 애플리케이션을 배포하고 있으며, EC2 서비스의 여러 인스턴스가 자동으로 프로비저닝되고 구성되어야 합니다. 애플리케이션은 수요에 따라 확장되고 축소되며, 배포 프로세스가 효율적이고 신뢰할 수 있는 것이 중요합니다. SysOps 관리자는 모든 인스턴스가 동일하게 구성되고 신속하게 배포되도록 하면서 수동 개입을 최소화하는 솔루션을 구현해야 합니다.",
        "Question": "이 애플리케이션의 EC2 인스턴스 프로비저닝 및 구성을 자동화하기 위해 관리자가 사용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "웹 애플리케이션의 자동 확장 및 배포를 위한 AWS Elastic Beanstalk.",
            "2": "템플릿을 사용하여 리소스를 생성하고 관리하기 위한 AWS CloudFormation.",
            "3": "기존 인스턴스에 소프트웨어 배포를 자동화하기 위한 AWS CodeDeploy.",
            "4": "Chef 또는 Puppet을 사용하여 애플리케이션 배포 및 구성을 관리하기 위한 AWS OpsWorks."
        },
        "Correct Answer": "템플릿을 사용하여 리소스를 생성하고 관리하기 위한 AWS CloudFormation.",
        "Explanation": "AWS CloudFormation을 사용하면 템플릿에서 클라우드 리소스를 정의하여 EC2 인스턴스를 일관되게 효율적으로 프로비저닝할 수 있습니다. 이 서비스는 코드로서의 인프라를 설정하는 데 이상적이며, 동일한 구성으로 신속한 배포를 가능하게 합니다.",
        "Other Options": [
            "AWS OpsWorks는 Chef 또는 Puppet을 사용하여 애플리케이션 배포를 관리하는 구성 관리 서비스이지만, EC2 인스턴스 프로비저닝에 주로 집중하지 않으며 필요 이상으로 수동 설정이 포함될 수 있습니다.",
            "AWS Elastic Beanstalk는 애플리케이션 배포에 훌륭하지만, 플랫폼 서비스가 필요한 웹 애플리케이션에 더 적합하며 EC2 인스턴스를 직접 프로비저닝하는 데 필요한 제어 수준을 제공하지 않을 수 있습니다.",
            "AWS CodeDeploy는 기존 EC2 인스턴스에 소프트웨어 배포를 자동화하는 배포 서비스이지만, 인스턴스 자체의 프로비저닝을 처리하지 않습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "한 회사가 Amazon S3 버킷에 대한 접근 문제를 경험하고 있습니다. 보안 팀은 이러한 리소스에 대한 접근에 영향을 미치는 IAM 정책을 확인하는 임무를 맡았습니다. 그들은 현재 정책이 최소 권한 원칙에 부합하는지 확인하고자 합니다.",
        "Question": "보안 팀이 S3 버킷에 대한 접근에 대한 IAM 정책의 영향을 시뮬레이션하고 분석하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "IAM 정책 시뮬레이터",
            "2": "AWS CloudTrail",
            "3": "AWS IAM Access Analyzer",
            "4": "AWS Config"
        },
        "Correct Answer": "IAM 정책 시뮬레이터",
        "Explanation": "IAM 정책 시뮬레이터는 사용자가 IAM 정책이 사용자 권한에 미치는 영향을 적용하기 전에 테스트하고 시뮬레이션할 수 있도록 합니다. 이는 접근 문제를 해결하고 최소 권한 원칙 준수를 보장하는 데 중요합니다.",
        "Other Options": [
            "AWS IAM Access Analyzer는 외부 엔티티와 공유된 리소스를 식별하는 데 사용되지만, 접근 권한을 테스트하기 위해 IAM 정책을 시뮬레이션하지는 않습니다.",
            "AWS CloudTrail은 API 호출을 기록하고 AWS 계정 활동의 로그를 제공하지만, IAM 정책을 직접 시뮬레이션하거나 분석하는 기능은 없습니다.",
            "AWS Config는 리소스 구성 및 준수를 모니터링하지만, 접근 문제에 대한 IAM 정책을 시뮬레이션하거나 테스트하는 기능은 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "한 금융 서비스 회사는 규정 준수를 위해 AWS Cloud에서 암호화 키를 안전하게 관리해야 합니다. 이 회사는 모든 암호화 작업이 안전한 환경 내에서 수행되도록 보장하고자 합니다. SysOps 관리자로서, FIPS 140-2 Level 3 인증을 받은 하드웨어 보안 모듈(HSM)을 제공하는 솔루션을 구현하는 임무를 맡았습니다.",
        "Question": "FIPS 140-2 Level 3 표준을 준수하면서 암호화 키를 관리하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Certificate Manager",
            "2": "AWS CloudHSM",
            "3": "AWS Key Management Service (KMS)",
            "4": "AWS Secrets Manager"
        },
        "Correct Answer": "AWS CloudHSM",
        "Explanation": "AWS CloudHSM은 FIPS 140-2 Level 3 인증을 받은 HSM을 사용하여 암호화 키를 안전하게 관리하도록 특별히 설계되었으며, 엄격한 규정 준수 요구 사항이 있는 조직에 이상적인 선택입니다.",
        "Other Options": [
            "AWS Key Management Service (KMS)는 암호화에 대한 관리형 서비스를 제공하지만 CloudHSM과 같은 수준의 물리적 보안 및 HSM에 대한 제어를 제공하지 않습니다.",
            "AWS Secrets Manager는 API 키 및 비밀번호와 같은 민감한 정보를 관리하는 데 사용되지만 암호화 키 관리에 대한 HSM 기능을 제공하지 않습니다.",
            "AWS Certificate Manager는 SSL/TLS 인증서 관리를 도와주지만 암호화 키 관리 또는 HSM 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 금융 서비스 회사는 Amazon Kinesis Data Streams (KDS)를 사용하여 거래 로그 및 사용자 상호작용을 포함한 다양한 출처에서 실시간 데이터를 수집하고 처리하고 있습니다. 이 회사는 수신 데이터 처리에 지연이 발생하고 있어 분석 대시보드의 적시성에 영향을 미치고 있습니다. SysOps 관리자는 지연 없이 실시간으로 데이터가 처리되도록 KDS 설정을 최적화해야 합니다.",
        "Question": "Kinesis Data Streams의 실시간 처리 능력을 개선하기 위해 SysOps 관리자가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "Kinesis Data Stream의 데이터 보존 기간을 줄여 처리해야 할 데이터 양을 최소화합니다.",
            "2": "Kinesis Data Stream의 샤드 수를 늘려 더 높은 처리량을 허용하고 수신 데이터의 병렬 처리를 가능하게 합니다.",
            "3": "Kinesis Data Stream을 매분 폴링하여 도착한 새로운 레코드를 처리하는 Lambda 함수를 구현합니다.",
            "4": "Kinesis Data Stream에서 향상된 팬 아웃을 활성화하여 여러 소비자가 서로의 성능에 영향을 주지 않고 데이터를 받을 수 있도록 합니다."
        },
        "Correct Answer": "Kinesis Data Stream의 샤드 수를 늘려 더 높은 처리량을 허용하고 수신 데이터의 병렬 처리를 가능하게 합니다.",
        "Explanation": "Kinesis Data Stream의 샤드 수를 늘리면 스트림의 처리량이 직접 증가하여 더 많은 데이터를 동시에 처리할 수 있습니다. 이 조치는 데이터 처리 지연을 없애고 분석 대시보드의 성능을 향상시키는 데 도움이 됩니다.",
        "Other Options": [
            "Kinesis Data Stream의 데이터 보존 기간을 줄이면 처리 속도가 향상되지 않으며, 데이터가 삭제되기 전에 처리할 수 있는 시간이 줄어들어 데이터 손실로 이어질 수 있습니다.",
            "향상된 팬 아웃을 활성화하면 여러 소비자가 스트림에서 데이터를 읽을 수 있지만, 스트림의 처리량과 직접 관련된 처리 지연 문제를 해결하지는 않습니다.",
            "Kinesis Data Stream을 매분 폴링하는 Lambda 함수를 구현하면 데이터 처리에 불필요한 지연이 발생할 수 있으며, 실시간 기능을 위해 스트림 자체를 최적화하지 않습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "SysOps 관리자는 Amazon EventBridge를 사용하여 AWS 환경 내 특정 이벤트에 대한 응답을 자동화해야 합니다. EC2 인스턴스가 '중지' 상태에 들어갈 때마다 Lambda 함수를 트리거하는 규칙을 설정하고자 합니다. 다음 구성 중 이 작업을 수행하는 것은 무엇입니까?",
        "Question": "EC2 인스턴스 상태 변경 시 Lambda 함수를 호출하기 위해 EventBridge에서 관리자가 구성해야 할 옵션은 무엇입니까?",
        "Options": {
            "1": "EC2 인스턴스 중지 작업에 대한 CloudTrail 로그를 기반으로 트리거되는 규칙을 생성합니다.",
            "2": "EC2 인스턴스 상태 변경과 일치하는 이벤트 패턴으로 규칙을 생성합니다.",
            "3": "인스턴스가 중지 상태에 들어갈 때 CloudFormation 스택을 호출하는 규칙을 생성합니다.",
            "4": "EC2 인스턴스가 중지될 때마다 SNS 주제를 대상으로 하는 규칙을 생성합니다."
        },
        "Correct Answer": "EC2 인스턴스 상태 변경과 일치하는 이벤트 패턴으로 규칙을 생성합니다.",
        "Explanation": "EC2 인스턴스가 '중지' 상태로 전환될 때 Lambda 함수를 효과적으로 호출하기 위해 관리자는 EC2의 상태 변경 이벤트를 캡처하도록 특별히 설계된 이벤트 패턴으로 규칙을 생성해야 합니다. 이를 통해 이벤트 발생 시 Lambda 함수가 적절하게 트리거됩니다.",
        "Other Options": [
            "이 옵션은 SNS 주제를 대상으로 하면 Lambda 함수가 직접 호출되지 않으며, SNS 주제가 Lambda를 트리거하도록 추가 설정이 필요하기 때문에 잘못된 것입니다.",
            "이 옵션은 CloudTrail 로그가 API 호출 감사에 사용되며 상태 변경에 따라 직접적으로 작업을 트리거하지 않기 때문에 잘못된 것입니다.",
            "이 옵션은 CloudFormation 스택을 호출하는 것이 EC2 인스턴스가 중지 상태에 들어가는 특정 이벤트와 관련이 없으며 요구 사항을 충족하지 않기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "소프트웨어 개발 회사가 배치 처리 작업을 AWS로 마이그레이션할 계획입니다. 이 작업은 시간에 민감하지 않으며 중단을 견딜 수 있습니다. 회사는 비용 최적화를 위해 EC2 Spot Instances를 사용하는 것을 고려하고 있습니다.",
        "Question": "다음 중 EC2 Spot Instances에 배포하기에 가장 적합한 작업은 무엇입니까?",
        "Options": {
            "1": "지연 시간이 낮은 고객 요청을 처리하는 웹 서버.",
            "2": "트랜잭션 처리를 위해 지속적인 가동 시간이 필요한 데이터베이스 인스턴스.",
            "3": "필요에 따라 일시 중지하고 재개할 수 있는 배치 처리 작업.",
            "4": "높은 가용성을 요구하는 실시간 데이터 처리 애플리케이션."
        },
        "Correct Answer": "필요에 따라 일시 중지하고 재개할 수 있는 배치 처리 작업.",
        "Explanation": "일시 중지하고 재개할 수 있는 배치 처리 작업은 중단을 원활하게 처리할 수 있기 때문에 EC2 Spot Instances에 이상적입니다. Spot Instances는 비용 효율적이지만 EC2 용량에 대한 수요가 증가할 때 AWS에 의해 종료될 수 있으므로, 이러한 중단을 견딜 수 있는 작업이 이 가격 모델에 가장 적합합니다.",
        "Other Options": [
            "높은 가용성을 요구하는 실시간 데이터 처리 애플리케이션은 지속적인 가동 시간과 낮은 지연 시간이 필요하기 때문에 Spot Instances에 적합하지 않습니다. 이러한 애플리케이션에서의 중단은 상당한 데이터 손실이나 처리 지연을 초래할 수 있습니다.",
            "지연 시간이 낮은 고객 요청을 처리하는 웹 서버는 중단이 서비스 중단을 초래하고 사용자 경험을 저하시킬 수 있으므로 Spot Instances를 사용해서는 안 됩니다.",
            "트랜잭션 처리를 위해 지속적인 가동 시간이 필요한 데이터베이스 인스턴스는 높은 가용성이 필요하고 데이터 무결성을 위험에 빠뜨리지 않고는 중단을 견딜 수 없기 때문에 Spot Instances에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "데이터 분석 팀이 AWS 환경에서 다양한 소스의 데이터를 처리하는 임무를 맡고 있습니다. 그들은 데이터를 추출, 변환 및 적재(ETL)하여 추가 분석을 위해 Amazon S3 버킷에 저장하는 반복적인 워크플로우를 설정해야 합니다. 팀은 이 프로세스를 자동화하기 위해 AWS Data Pipeline을 사용하는 것을 고려하고 있습니다.",
        "Question": "AWS Data Pipeline에서 파이프라인을 정의할 때 필요한 구성 요소는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "데이터 처리 및 데이터 소스",
            "2": "활동 및 일정",
            "3": "데이터 노드 및 일정",
            "4": "활동 및 데이터 노드",
            "5": "활동 및 보안 정책"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "활동 및 데이터 노드",
            "활동 및 일정"
        ],
        "Explanation": "AWS Data Pipeline에서 파이프라인 정의는 다양한 구성 요소로 구성됩니다. 주요 구성 요소는 수행할 작업을 정의하는 '활동'과 입력 및 출력 데이터의 위치와 유형을 지정하는 '데이터 노드'입니다. 또한 '일정'은 이러한 활동이 언제 실행되어야 하는지를 결정하는 데 중요하므로 '활동 및 일정'과 '활동 및 데이터 노드'가 정답입니다.",
        "Other Options": [
            "'데이터 처리 및 데이터 소스'는 관련성이 있어 보일 수 있지만, AWS Data Pipeline에서 사용되는 용어를 정확하게 반영하지 않습니다. 시스템은 수행되는 작업과 데이터 소스의 정의를 위해 '활동'과 '데이터 노드'를 사용합니다.",
            "'활동 및 보안 정책'의 조합은 적절하지 않습니다. AWS Data Pipeline에는 파이프라인 정의 구조 내에 '보안 정책'이라는 특정 구성 요소가 없습니다.",
            "'데이터 노드 및 일정'은 중요한 측면을 다루지만, 파이프라인이 실행할 작업을 지정하는 데 중요한 '활동'을 생략하고 있습니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 회사는 중요한 애플리케이션을 위해 Amazon EBS 볼륨에 의존하고 있으며, 자동화를 통해 데이터의 무결성과 가용성을 보장하는 임무를 맡고 있습니다. SysOps 관리자는 EBS 스냅샷의 생성, 보존 및 삭제를 자동화하는 스냅샷 관리 전략을 구현할 방법을 모색하고 있습니다.",
        "Question": "SysOps 관리자가 EBS 스냅샷에 대해 Amazon Data Lifecycle Manager(Amazon DLM)를 구현함으로써 얻을 수 있는 이점은 무엇입니까?",
        "Options": {
            "1": "EBS 볼륨 사용량을 모니터링하고 수요에 따라 인스턴스 유형을 자동으로 조정합니다.",
            "2": "규정 준수 요구 사항에 따라 EBS 볼륨의 암호화를 자동화합니다.",
            "3": "정기적인 백업이 생성되고 규정 준수를 위해 보존되며, 오래된 스냅샷이 삭제되도록 보장합니다.",
            "4": "정기적으로 스냅샷을 찍어 EBS 볼륨의 성능을 향상시킵니다."
        },
        "Correct Answer": "정기적인 백업이 생성되고 규정 준수를 위해 보존되며, 오래된 스냅샷이 삭제되도록 보장합니다.",
        "Explanation": "Amazon DLM은 EBS 스냅샷 관리를 자동화하도록 특별히 설계되어 정기적인 백업을 생성하고 규정 준수 요구에 따라 보존하며, 오래된 백업을 삭제하여 저장 비용과 데이터 보호를 최적화합니다.",
        "Other Options": [
            "암호화 자동화는 중요하지만, Amazon DLM은 EBS 볼륨의 암호화를 직접 처리하지 않습니다. 그 주요 초점은 스냅샷 관리에 있습니다.",
            "스냅샷은 본질적으로 EBS 볼륨의 성능을 향상시키지 않으며, 백업 메커니즘으로 작용합니다. 성능은 EBS 볼륨의 유형과 사용되는 인스턴스에 더 밀접하게 연결되어 있습니다.",
            "Amazon DLM은 EBS 볼륨 사용량을 모니터링하거나 인스턴스 유형을 조정하지 않습니다. 스냅샷의 라이프사이클 관리에 중점을 두고 있습니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "SysOps 관리자가 Amazon S3 버킷에 대한 접근 문제를 해결하고 있습니다. 버킷 정책은 특정 IAM 역할에 대한 접근을 허용하지만, 사용자들은 버킷에 접근할 수 없다고 보고하고 있습니다. 관리자는 접근 거부의 원인을 파악해야 합니다.",
        "Question": "SysOps 관리자가 접근 문제를 효과적으로 해결하고 감사하기 위해 사용할 수 있는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Config를 사용하여 S3 버킷 구성의 준수 여부를 확인합니다.",
            "2": "IAM Access Analyzer를 사용하여 IAM 역할과 관련된 권한을 분석합니다.",
            "3": "AWS Trusted Advisor를 사용하여 AWS 계정의 보안 상태를 검토합니다.",
            "4": "AWS CloudTrail을 사용하여 거부된 접근 시도의 로그를 검토합니다."
        },
        "Correct Answer": "AWS CloudTrail을 사용하여 거부된 접근 시도의 로그를 검토합니다.",
        "Explanation": "AWS CloudTrail은 AWS 서비스에 대한 API 호출의 상세 로그를 제공하며, 여기에는 접근 거부도 포함됩니다. 이러한 로그를 검토함으로써 SysOps 관리자는 접근 문제의 정확한 원인을 파악하고, 잘못된 권한이나 정책 때문인지 확인할 수 있습니다.",
        "Other Options": [
            "AWS Config는 AWS 리소스의 구성을 평가, 감사 및 평가하는 데 사용되지만, 접근 시도의 상세 로그를 제공하지 않으므로 즉각적인 접근 문제 해결에는 덜 효과적입니다.",
            "IAM Access Analyzer는 IAM 역할에 부여된 권한을 식별하는 데 도움이 되지만, 실제 접근 요청이나 거부를 추적하지 않으므로 접근 문제 해결에 필수적이지 않습니다.",
            "AWS Trusted Advisor는 일반적인 모범 사례 권장 사항을 제공하지만, S3 버킷과 관련된 API 호출이나 접근 시도를 구체적으로 기록하지 않으므로 접근 문제 해결에 직접적으로 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 소매 회사가 Amazon QuickSight를 사용하여 판매 데이터에서 통찰력을 얻고자 합니다. 그들은 이해관계자들이 주요 지표를 시각화하고 데이터 기반 결정을 내릴 수 있도록 하는 대화형 대시보드를 만들고자 합니다.",
        "Question": "Amazon QuickSight의 대시보드에서 상호작용성과 성능을 향상시키기 위해 활용해야 할 두 가지 기능은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "데이터 드릴링 기능을 통합합니다.",
            "2": "대시보드에서 자동 새로 고침을 설정합니다.",
            "3": "더 빠른 데이터 검색을 위해 SPICE를 활성화합니다.",
            "4": "데이터 소스에 대해 직접 SQL 쿼리를 사용합니다.",
            "5": "QuickSight의 이상 탐지 기능을 활용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "더 빠른 데이터 검색을 위해 SPICE를 활성화합니다.",
            "데이터 드릴링 기능을 통합합니다."
        ],
        "Explanation": "SPICE(초고속, 병렬, 인메모리 계산 엔진)를 활성화하면 QuickSight가 더 빠른 데이터 검색 및 처리를 수행할 수 있어 대시보드 성능이 향상됩니다. 데이터 드릴링 기능을 통합하면 사용자가 다양한 세부 수준에서 데이터를 탐색할 수 있어 상호작용성과 통찰력이 향상됩니다.",
        "Other Options": [
            "직접 SQL 쿼리를 사용하는 것은 대규모 데이터 세트의 경우 SPICE보다 느릴 수 있으며, 성능을 효과적으로 향상시키지 못할 수 있습니다.",
            "자동 새로 고침을 설정하는 것은 반드시 상호작용성을 향상시키지 않으며, 주로 데이터를 최신 상태로 유지하기 위한 것이지만, 제대로 관리되지 않으면 성능 문제를 초래할 수 있습니다.",
            "이상 탐지 기능은 유용한 기능이지만, SPICE 및 데이터 드릴링에 비해 대시보드의 상호작용성을 직접적으로 향상시키지 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 금융 서비스 회사가 온프레미스 네트워크와 AWS 환경 간에 전송되는 민감한 데이터를 보호하고자 합니다. 그들은 모든 전송 데이터가 암호화되어 도청 및 중간자 공격으로부터 보호되도록 하는 솔루션을 구현하고자 합니다.",
        "Question": "회사가 온프레미스 네트워크와 AWS 간의 데이터 전송을 위한 안전한 통신 채널을 설정하기 위해 사용해야 할 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS Certificate Manager (ACM)",
            "2": "Amazon CloudFront",
            "3": "AWS Direct Connect",
            "4": "AWS VPN"
        },
        "Correct Answer": "AWS VPN",
        "Explanation": "AWS VPN은 인터넷을 통해 안전한 연결을 설정할 수 있으며, 전송 중인 데이터를 암호화하여 민감한 정보를 보호합니다. 이 서비스는 온프레미스 네트워크와 AWS 간에 안전한 터널을 생성하도록 특별히 설계되어 모든 트래픽이 암호화되고 안전하게 유지됩니다.",
        "Other Options": [
            "AWS Certificate Manager (ACM)은 주로 SSL/TLS 인증서를 관리하는 데 사용되며, 이는 전송 중인 데이터를 보호하는 데 도움이 되지만, 자체적으로 안전한 통신 채널을 생성하지는 않습니다.",
            "Amazon CloudFront는 콘텐츠 전송 네트워크(CDN)로, 엣지 위치에서 콘텐츠를 캐시하여 지연 시간을 개선하지만, 온프레미스 통신을 위한 안전한 터널링 메커니즘을 본질적으로 제공하지 않습니다.",
            "AWS Direct Connect는 온프레미스에서 AWS로의 전용 네트워크 연결을 제공하지만, 추가 구성 없이 VPN처럼 전송 중인 데이터를 암호화하지는 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "한 회사가 여러 AWS 계정을 사용하여 다양한 부서의 리소스를 관리하고 있습니다. 재무 팀은 각 부서에 대해 비용을 적절하게 추적하고 할당할 수 있도록 보장하고 싶어합니다. 그들은 AWS 환경 내에서 다양한 서비스와 리소스에 대한 세분화된 비용 추적을 가능하게 하는 솔루션을 구현해야 합니다.",
        "Question": "SysOps 관리자가 재무 팀의 요구 사항을 충족하기 위해 비용 할당 태그를 구현하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "모든 AWS 리소스에 태그를 자동으로 할당하는 리소스 기반 정책을 생성합니다.",
            "2": "각 리소스에 부서 이름으로 수동 태그를 지정하고 AWS Budgets를 사용하여 비용을 추적합니다.",
            "3": "AWS Billing and Cost Management 콘솔에서 비용 할당 태그를 활성화하고 관련 리소스에 적용합니다.",
            "4": "AWS CloudFormation을 사용하여 미리 정의된 태그로 리소스를 배포하고 비용 추적을 활성화합니다."
        },
        "Correct Answer": "AWS Billing and Cost Management 콘솔에서 비용 할당 태그를 활성화하고 관련 리소스에 적용합니다.",
        "Explanation": "AWS Billing and Cost Management 콘솔에서 비용 할당 태그를 활성화하면 재무 팀이 리소스에 할당된 태그를 기반으로 비용을 분류할 수 있습니다. 이를 통해 추가적인 관리 부담 없이 다양한 부서 간에 비용을 정확하게 추적하고 할당할 수 있습니다.",
        "Other Options": [
            "리소스 기반 정책을 생성하는 것은 기존 리소스에 태그를 자동으로 할당하지 않으며, 모든 리소스가 일관되게 태그가 지정되도록 추가 관리가 필요합니다.",
            "미리 정의된 태그로 리소스를 배포하기 위해 AWS CloudFormation을 사용하는 것은 기존 리소스의 태그를 관리하거나 모든 리소스에 태그를 소급 적용하는 방법을 제공하지 않습니다.",
            "각 리소스에 수동으로 태그를 지정하는 것은 불일치와 인적 오류를 초래할 수 있으며, 조직 전반에 걸쳐 정확한 비용 할당을 유지하기 어렵게 만듭니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 DNS 관리를 위해 Amazon Route 53을 사용하고 있으며, 사용자의 지리적 위치에 따라 가장 가까운 지역 데이터 센터로 사용자를 안내하고자 합니다.",
        "Question": "SysOps 관리자가 이를 달성하기 위해 구현해야 할 라우팅 정책은 무엇입니까?",
        "Options": {
            "1": "지리적 위치 기반 라우팅",
            "2": "페일오버 라우팅",
            "3": "가중치 기반 라우팅",
            "4": "지연 시간 기반 라우팅"
        },
        "Correct Answer": "지리적 위치 기반 라우팅",
        "Explanation": "지리적 위치 기반 라우팅은 Route 53이 사용자의 지리적 위치에 따라 트래픽을 안내할 수 있도록 합니다. 이를 통해 사용자가 가장 가까운 지역 데이터 센터로 라우팅되어 성능이 향상되고 지연 시간이 줄어듭니다.",
        "Other Options": [
            "지연 시간 기반 라우팅은 사용자를 가장 낮은 지연 시간을 제공하는 지역으로 안내하지만, 사용자의 지리적 위치를 기반으로 특정적으로 타겟팅하지는 않습니다.",
            "가중치 기반 라우팅은 할당된 가중치에 따라 여러 리소스에 트래픽을 분배할 수 있지만, 사용자의 지리적 위치를 고려하지 않습니다.",
            "페일오버 라우팅은 기본 리소스가 사용할 수 없을 때 트래픽을 보조 리소스로 라우팅하는 데 사용되며, 사용자 위치에 따라 라우팅할 필요를 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 다양한 AWS 서비스를 활용하여 애플리케이션을 호스팅하고 있습니다. 그들은 AWS에서 실행 중인 애플리케이션에 영향을 미칠 수 있는 잠재적인 문제나 이벤트를 인지하고 싶어합니다. 운영 팀은 서비스 상태를 모니터링하고 사고에 대응하는 책임이 있습니다. 그들은 AWS Personal Health Dashboard에 대해 들었고, 그것이 어떻게 도움이 될 수 있는지 이해하고 싶어합니다.",
        "Question": "운영 팀이 AWS Personal Health Dashboard를 사용할 때의 주요 이점은 무엇입니까?",
        "Options": {
            "1": "사용자 정의 없이 모든 AWS 서비스의 일반 상태를 제공합니다.",
            "2": "지난 1년 동안 AWS 서비스의 역사적 성능 데이터를 보여줍니다.",
            "3": "AWS 리소스에 영향을 미치는 이벤트에 대한 경고 및 수정 안내를 제공합니다.",
            "4": "사용자가 다양한 지역에서 AWS 서비스의 상태를 수동으로 확인할 수 있게 합니다."
        },
        "Correct Answer": "AWS 리소스에 영향을 미치는 이벤트에 대한 경고 및 수정 안내를 제공합니다.",
        "Explanation": "AWS Personal Health Dashboard는 사용자가 특정 AWS 리소스에 영향을 미치는 이벤트에 대해 경고하고 수정 안내를 제공하는 개인화된 뷰를 제공합니다. 이는 사전 사고 관리에 매우 중요합니다.",
        "Other Options": [
            "이 옵션은 AWS Service Health Dashboard를 설명하며, 일반 상태 개요를 제공하지만 사용자 계정에 특정한 개인화된 통찰력이나 경고를 제공하지 않습니다.",
            "역사적 성능 데이터는 유용하지만, Personal Health Dashboard는 장기간의 역사적 데이터보다는 현재 이벤트와 경고에 중점을 둡니다.",
            "이 옵션은 수동 상태 확인을 제안하며, 이는 Personal Health Dashboard의 목적이 아닙니다. 이 대시보드는 AWS 서비스 상태에 대한 자동 경고 및 통찰력을 제공하도록 설계되었습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "클라우드 관리자는 AWS 서비스 한계를 사전 모니터링하기 위한 솔루션을 구현하는 임무를 맡고 있습니다. 목표는 조직이 리소스 한계를 초과하지 않도록 하여 서비스 중단을 방지하는 것입니다. 관리자는 AWS Trusted Advisor를 활용하고 이메일이나 Slack을 통해 알림을 보낼 수 있는 참조 구현에 대해 알고 있습니다. 그들은 솔루션이 효과적이도록 구성해야 합니다.",
        "Question": "다음 중 AWS 서비스 사용량을 사전 추적하고 한계에 접근할 때 알림을 받을 수 있는 기능은 무엇입니까?",
        "Options": {
            "1": "AWS CloudTrail 이벤트 모니터링",
            "2": "AWS Trusted Advisor 서비스 한계 검사",
            "3": "AWS 서비스 쿼터 대시보드",
            "4": "AWS 비용 탐색기"
        },
        "Correct Answer": "AWS Trusted Advisor 서비스 한계 검사",
        "Explanation": "AWS Trusted Advisor 서비스 한계 검사는 다양한 AWS 서비스의 사용량과 한계를 보여주도록 특별히 설계되어, 한계에 접근할 때 사전 모니터링 및 알림 기능을 제공합니다.",
        "Other Options": [
            "AWS 서비스 쿼터 대시보드는 서비스 쿼터에 대한 개요를 제공하지만 자동으로 알림을 보내거나 사용량을 사전 추적하지는 않습니다.",
            "AWS 비용 탐색기는 AWS 지출 및 사용 비용을 분석하고 시각화하는 데 사용되지만, 서비스 한계를 추적하거나 한계에 대한 알림을 보내지 않습니다.",
            "AWS CloudTrail 이벤트 모니터링은 계정 활동 및 API 사용을 기록하고 모니터링하는 데 중점을 두지만, 서비스 한계에 대한 실시간 알림을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사가 AWS CloudFormation을 사용하여 새로운 애플리케이션을 배포하고 있습니다. SysOps 관리자는 템플릿이 잘 구조화되고 향후 업데이트를 위해 명확성을 유지하도록 해야 합니다.",
        "Question": "CloudFormation 템플릿의 사용성과 유지 관리를 향상시키기 위해 포함해야 할 섹션은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "Parameters - 스택을 생성하거나 업데이트할 때 런타임에 템플릿에 전달할 값입니다.",
            "2": "Outputs - 스택이 생성되거나 업데이트될 때 반환되는 값입니다.",
            "3": "Mappings - 조건부 매개변수 값에 대한 키와 관련 값의 매핑입니다.",
            "4": "Description - 템플릿을 설명하는 텍스트 문자열입니다.",
            "5": "Resources - 템플릿에 의해 생성될 AWS 리소스입니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Parameters - 스택을 생성하거나 업데이트할 때 런타임에 템플릿에 전달할 값입니다.",
            "Description - 템플릿을 설명하는 텍스트 문자열입니다."
        ],
        "Explanation": "Parameters 섹션을 포함하면 사용자가 스택을 생성하거나 업데이트할 때 입력을 사용자화할 수 있어 템플릿의 유연성이 향상됩니다. Description 섹션은 템플릿의 목적에 대한 맥락을 제공하여 이해하고 유지 관리하기 쉽게 만듭니다.",
        "Other Options": [
            "Mappings는 조건부 값에 유용하지만 런타임에서 최종 사용자에게 직접적인 사용성을 향상시키지 않습니다.",
            "Resources는 인프라를 정의하는 데 필수적이지만 템플릿 자체의 사용성이나 유지 관리에는 기여하지 않습니다.",
            "Outputs는 스택 생성 후 정보를 제공하지만 초기 구성이나 템플릿의 명확성에는 도움이 되지 않습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "SysOps 관리자는 웹 애플리케이션을 실행하는 EC2 인스턴스에 대한 자동 패치 관리 솔루션을 구현하는 임무를 맡고 있습니다. 관리자는 인스턴스가 수동 개입 없이 정기적으로 최신 패치로 업데이트되도록 하면서 다운타임을 최소화하고자 합니다.",
        "Question": "EC2 인스턴스의 패치 관리를 자동화하기 위해 사용할 수 있는 옵션은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS Systems Manager Patch Manager를 사용하여 미리 정의된 유지 관리 창에 따라 패치 프로세스를 자동화합니다.",
            "2": "CloudWatch Events에 따라 EC2 인스턴스 업데이트를 트리거하는 Lambda 함수를 설정합니다.",
            "3": "최신 패치를 포함하는 새로운 AMI로 인스턴스를 교체하기 위해 Auto Scaling 그룹을 구현합니다.",
            "4": "SSH를 사용하여 각 EC2 인스턴스에 수동으로 패치를 적용합니다.",
            "5": "AWS CodeDeploy를 활용하여 EC2 인스턴스에 패치된 애플리케이션 버전을 자동으로 배포합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Systems Manager Patch Manager를 사용하여 미리 정의된 유지 관리 창에 따라 패치 프로세스를 자동화합니다.",
            "최신 패치를 포함하는 새로운 AMI로 인스턴스를 교체하기 위해 Auto Scaling 그룹을 구현합니다."
        ],
        "Explanation": "AWS Systems Manager Patch Manager는 지정된 일정 및 유지 관리 창에 따라 EC2 인스턴스의 패치 관리를 자동화할 수 있습니다. 업데이트된 AMI로 Auto Scaling 그룹을 구현하면 인스턴스가 최신 패치로 교체되어 가용성을 유지하면서 패치 관리 정책을 준수할 수 있습니다.",
        "Other Options": [
            "패치 관리를 위해 Lambda 함수를 사용하는 것은 복잡한 구성이 필요하고 모든 인스턴스가 동시에 패치되지 않을 수 있으므로 권장되지 않는 접근 방식입니다.",
            "SSH를 통해 패치를 수동으로 적용하는 것은 자동화의 목표에 반하며 인스턴스 간에 일관되지 않은 패치 상태를 초래할 수 있습니다.",
            "AWS CodeDeploy는 애플리케이션 배포를 자동화할 수 있지만 EC2 인스턴스의 기본 OS나 소프트웨어에 대한 패치 관리 전용으로 설계되지 않았습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "SysOps 관리자는 AWS에 호스팅된 웹 애플리케이션의 성능을 최적화하는 임무를 맡고 있습니다. 이 애플리케이션은 정적 및 동적 콘텐츠를 제공하기 위해 Amazon CloudFront를 콘텐츠 전송 네트워크(CDN)로 사용합니다. 관리자는 캐싱 전략을 개선하고 사용자 경험을 향상시키기 위해 콘텐츠의 사용 패턴과 접근 통계를 분석하고자 합니다.",
        "Question": "관리자가 자주 접근되는 객체와 그 접근 통계를 식별하기 위해 검토해야 할 CloudFront 보고서는 무엇입니까?",
        "Options": {
            "1": "접근 요청의 지리적 분포와 빈도를 이해하기 위한 Viewers Reports.",
            "2": "사용자가 콘텐츠에 접근할 때 발생하는 오류 유형을 식별하기 위한 Error Reports.",
            "3": "CloudFront 배포에 대한 총 요청 수를 분석하기 위한 Usage Reports.",
            "4": "가장 자주 접근되는 객체와 관련 메트릭을 확인하기 위한 Popular Objects Report."
        },
        "Correct Answer": "가장 자주 접근되는 객체와 관련 메트릭을 확인하기 위한 Popular Objects Report.",
        "Explanation": "Popular Objects Report는 가장 자주 접근되는 객체에 대한 자세한 통찰력과 요청 수 및 총 제공 바이트와 같은 메트릭을 제공합니다. 이 정보는 캐싱 전략을 최적화하고 성능을 향상시키는 데 매우 중요합니다.",
        "Other Options": [
            "Viewers Reports는 콘텐츠에 접근하는 사용자의 지리적 위치에 초점을 맞추고 있어 자주 접근되는 객체를 식별하는 데 덜 관련성이 있습니다.",
            "Usage Reports는 HTTP 및 HTTPS 요청의 전체 수를 제공하지만, 인기 있는 객체를 결정하는 데 필요한 개별 객체 접근에 대한 구체적인 세부정보를 제공하지 않습니다.",
            "Error Reports는 발생한 오류의 유형과 빈도를 추적하는 데 사용되지만, 객체 접근이나 빈도에 대한 정보를 제공하지 않으므로 요구 사항을 충족하지 않습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "한 회사는 AWS에 호스팅된 웹 애플리케이션의 보안을 강화하기 위해 SSL/TLS 인증서를 구현하고자 합니다. 이들은 AWS 리소스에 대해 이러한 인증서를 쉽게 관리하고 배포할 수 있는 솔루션을 원합니다.",
        "Question": "회사가 SSL/TLS 인증서를 효과적으로 프로비저닝, 관리 및 배포하기 위해 사용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon CloudFront",
            "2": "AWS Certificate Manager",
            "3": "AWS Identity and Access Management",
            "4": "Amazon Route 53"
        },
        "Correct Answer": "AWS Certificate Manager",
        "Explanation": "AWS Certificate Manager는 AWS 서비스 및 애플리케이션을 위한 SSL/TLS 인증서를 프로비저닝, 관리 및 배포하는 과정을 간소화하도록 특별히 설계되었습니다. 인증서 갱신을 자동화하여 이 요구 사항에 이상적인 선택입니다.",
        "Other Options": [
            "Amazon Route 53은 SSL/TLS 인증서 관리 기능을 제공하지 않는 도메인 이름 시스템(DNS) 웹 서비스입니다. 리소스로 트래픽을 라우팅할 수 있지만 인증서 프로비저닝을 처리하지 않습니다.",
            "AWS Identity and Access Management(IAM)는 AWS 서비스 및 리소스에 대한 접근을 안전하게 관리하기 위해 설계되었습니다. IAM 역할 및 정책을 관리할 수 있지만 SSL/TLS 인증서 관리 기능은 제공하지 않습니다.",
            "Amazon CloudFront는 콘텐츠를 전 세계에 배포할 수 있는 콘텐츠 전송 네트워크(CDN)로 SSL/TLS 인증서를 활용할 수 있지만, 이러한 인증서의 프로비저닝 및 갱신 관리는 하지 않습니다. 이러한 작업을 위해서는 AWS Certificate Manager가 필요합니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "데이터베이스 관리자는 Amazon RDS DB 인스턴스의 보안을 강화하는 임무를 맡고 있습니다. 관리자는 DB 인스턴스가 암호화되어야 한다고 생각하지만 현재는 암호화되어 있지 않습니다. 기존 DB 인스턴스를 재생성하지 않고 암호화를 활성화할 수 있는 옵션을 탐색하고 있습니다.",
        "Question": "관리자가 기존의 비암호화된 Amazon RDS DB 인스턴스에서 암호화를 활성화하기 위한 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "RDS 콘솔을 통해 기존의 비암호화된 DB 인스턴스를 수정하여 암호화를 활성화합니다.",
            "2": "AWS CLI를 사용하여 비암호화된 DB 인스턴스를 새 암호화된 DB 인스턴스로 직접 복사합니다.",
            "3": "비암호화된 DB 인스턴스에서 데이터를 내보내고 새로 생성된 암호화된 DB 인스턴스로 가져옵니다.",
            "4": "비암호화된 DB 인스턴스의 암호화된 스냅샷을 생성하고 이를 새 암호화된 DB 인스턴스로 복원합니다."
        },
        "Correct Answer": "비암호화된 DB 인스턴스의 암호화된 스냅샷을 생성하고 이를 새 암호화된 DB 인스턴스로 복원합니다.",
        "Explanation": "기존의 비암호화된 Amazon RDS DB 인스턴스에서 암호화를 활성화하는 올바른 방법은 비암호화된 인스턴스의 스냅샷을 암호화된 복사본으로 생성하는 것입니다. 이를 통해 관리자는 DB 인스턴스를 수동으로 재생성하지 않고도 효과적으로 암호화를 추가할 수 있습니다.",
        "Other Options": [
            "기존의 비암호화된 DB 인스턴스를 수정하여 암호화를 활성화하는 것은 불가능합니다. Amazon RDS는 생성 후 암호화를 추가하는 것을 허용하지 않습니다.",
            "AWS CLI를 통해 비암호화된 DB 인스턴스를 새 암호화된 DB 인스턴스로 직접 복사하는 옵션은 없습니다. 암호화는 스냅샷을 통해 처리해야 합니다.",
            "비암호화된 DB 인스턴스에서 새 암호화된 DB 인스턴스로 데이터를 내보내는 것은 유효한 접근 방식이지만, 스냅샷을 사용하는 것보다 덜 효율적이며, 스냅샷을 사용하면 더 간단한 암호화 프로세스가 가능합니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 회사가 가용성과 확장성을 개선하기 위해 애플리케이션을 AWS로 마이그레이션할 계획입니다. 이 애플리케이션은 피크 시간 동안 트래픽 급증을 처리할 수 있는 능력이 필요하며, 저트래픽 기간 동안 비용을 최소화해야 합니다. SysOps 관리자는 애플리케이션의 수요에 따라 컴퓨팅 리소스를 자동으로 조정하는 솔루션을 구현해야 합니다.",
        "Question": "SysOps 관리자가 애플리케이션의 최적의 확장성과 탄력성을 보장하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "Amazon EC2 인스턴스에 애플리케이션을 배포하고, 알려진 피크 시간에 대응하기 위해 예약된 스케일링 정책으로 Auto Scaling 그룹을 구성합니다.",
            "2": "AWS Lambda를 사용하여 애플리케이션 코드를 실행하고, 서버 관리 없이 들어오는 요청 수에 따라 자동으로 스케일링합니다.",
            "3": "애플리케이션 앞에 Amazon CloudFront 배포를 설정하여 콘텐츠를 캐시하고, 트래픽이 많은 시간 동안 백엔드 서버의 부하를 줄입니다.",
            "4": "AWS Elastic Beanstalk를 활용하여 애플리케이션을 배포하고, 애플리케이션의 트래픽 패턴에 따라 자동으로 스케일링을 처리하도록 합니다."
        },
        "Correct Answer": "AWS Elastic Beanstalk를 활용하여 애플리케이션을 배포하고, 애플리케이션의 트래픽 패턴에 따라 자동으로 스케일링을 처리하도록 합니다.",
        "Explanation": "AWS Elastic Beanstalk는 애플리케이션을 배포하기 위한 플랫폼을 제공하며, 자동으로 스케일링과 로드 밸런싱을 처리하여 다양한 트래픽 패턴에 따라 탄력성이 필요한 애플리케이션에 이상적인 선택입니다.",
        "Other Options": [
            "EC2에서 예약된 스케일링으로 애플리케이션을 배포하는 것은 예상치 못한 트래픽 급증에 대한 필요한 반응성을 제공하지 않아 애플리케이션의 동적 스케일링 능력을 제한합니다.",
            "CloudFront 배포를 설정하면 캐싱과 성능 향상에 도움이 될 수 있지만, 애플리케이션 자체에 필요한 기본 컴퓨팅 리소스 스케일링 문제를 해결하지는 않습니다.",
            "AWS Lambda를 사용하는 것은 일부 애플리케이션에 적합할 수 있지만, 애플리케이션에 특정 서버 요구 사항이나 Lambda가 효과적으로 관리할 수 없는 상태 저장 구성 요소가 있는 경우 적합하지 않을 수 있습니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사가 Amazon EC2 인스턴스에 호스팅된 애플리케이션의 새 버전 배포를 관리하기 위해 AWS CodeDeploy를 사용하고 있습니다. DevOps 팀은 배포 과정에서 다운타임을 최소화하고 필요할 경우 이전 버전으로 신속하게 롤백할 수 있는 방법을 보장하고자 합니다.",
        "Question": "AWS CodeDeploy에서 다운타임을 최소화하고 롤백 옵션을 제공하는 회사의 요구 사항을 가장 잘 충족하는 배포 전략은 무엇입니까?",
        "Options": {
            "1": "Canary 배포 전략을 선택하여 새 버전을 먼저 소규모 사용자 집단에 배포합니다.",
            "2": "In-Place 배포 전략을 구현하여 기존 인스턴스를 직접 업데이트합니다.",
            "3": "Blue/Green 배포 전략을 사용하여 이전 버전과 새 버전 간에 트래픽을 쉽게 전환합니다.",
            "4": "Rolling 배포 전략을 선택하여 인스턴스에 새 버전을 점진적으로 배포합니다."
        },
        "Correct Answer": "Blue/Green 배포 전략을 사용하여 이전 버전과 새 버전 간에 트래픽을 쉽게 전환합니다.",
        "Explanation": "Blue/Green 배포 전략은 이전 버전과 새 애플리케이션 버전 간의 원활한 트래픽 전환을 가능하게 하여 다운타임을 효과적으로 최소화합니다. 문제가 발생할 경우, 사용자에게 영향을 주지 않고 이전 버전으로 쉽게 되돌릴 수 있습니다.",
        "Other Options": [
            "In-Place 배포 전략은 기존 인스턴스를 직접 업데이트하므로 배포 과정에서 다운타임이 발생할 수 있으며, 간단한 롤백 옵션을 제공하지 않습니다.",
            "Canary 배포 전략은 제한된 청중과 함께 새 버전을 테스트하는 데 유용하지만, 모든 사용자에 대한 다운타임을 본질적으로 줄이거나 전체 애플리케이션에 대한 즉각적인 롤백을 제공하지 않습니다.",
            "Rolling 배포 전략은 인스턴스를 점진적으로 업데이트하므로 여전히 일부 다운타임이 발생할 수 있으며, Blue/Green 전략에 비해 롤백 프로세스를 복잡하게 만듭니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 금융 서비스 회사는 EC2 인스턴스가 일관되고 반복 가능한 방식으로 자동으로 프로비저닝되도록 해야 합니다. 수동 설정 작업을 제거하고 모든 인스턴스가 시작 시 필요한 보안 그룹 및 IAM 역할로 구성되도록 하기를 원합니다.",
        "Question": "미리 정의된 구성으로 EC2 인스턴스 배포를 자동화하는 데 가장 적합한 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS CodeDeploy",
            "2": "AWS Systems Manager",
            "3": "AWS CloudFormation",
            "4": "AWS Lambda"
        },
        "Correct Answer": "AWS CloudFormation",
        "Explanation": "AWS CloudFormation은 템플릿을 사용하여 AWS 리소스의 프로비저닝을 자동화하도록 설계되었습니다. 클라우드 인프라를 코드로 정의할 수 있어 EC2 인스턴스와 기타 관련 리소스의 일관되고 반복 가능한 배포를 가능하게 합니다.",
        "Other Options": [
            "AWS CodeDeploy는 주로 EC2 인스턴스에 애플리케이션 배포를 자동화하는 데 사용되며, 인스턴스 자체의 프로비저닝을 관리하지 않습니다.",
            "AWS Lambda는 이벤트에 응답하여 코드를 실행하는 서버리스 컴퓨팅 서비스이지만, EC2 인스턴스에 대한 인프라 프로비저닝 기능을 제공하지 않습니다.",
            "AWS Systems Manager는 운영 데이터 관리 및 자동화를 제공하지만, CloudFormation처럼 EC2 인스턴스의 초기 배포에 특별히 집중하지 않습니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 회사가 웹 애플리케이션을 실행하는 여러 EC2 인스턴스를 배포했습니다. 보안 팀은 이러한 인스턴스의 취약점을 정기적으로 평가하고 애플리케이션의 보안 상태에 대한 상세 보고서를 제공할 수 있는 솔루션을 요청했습니다. SysOps 관리자는 AWS 서비스를 사용하여 이 요구 사항을 구현하는 임무를 맡았습니다.",
        "Question": "SysOps 관리자가 EC2 인스턴스의 자동화된 취약성 평가를 위한 보안 팀의 요청을 충족하기 위해 어떤 솔루션을 구현해야 합니까?",
        "Options": {
            "1": "EC2 인스턴스를 포함하는 Amazon Inspector 평가 대상을 생성하고 정기적인 보안 평가를 예약하기 위한 평가 템플릿을 정의합니다.",
            "2": "각 EC2 인스턴스에 수동으로 로그인하고 로컬 도구를 사용하여 보안 검사를 실행하여 보고서를 생성합니다.",
            "3": "AWS CloudTrail을 사용하여 EC2 인스턴스에서 수행된 모든 API 호출을 기록하고 보안 취약점을 분석합니다.",
            "4": "VPC에 외부 보안 장비를 배포하여 EC2 인스턴스를 지속적으로 모니터링합니다."
        },
        "Correct Answer": "EC2 인스턴스를 포함하는 Amazon Inspector 평가 대상을 생성하고 정기적인 보안 평가를 예약하기 위한 평가 템플릿을 정의합니다.",
        "Explanation": "Amazon Inspector는 EC2 인스턴스에서 실행되는 애플리케이션의 보안 평가를 자동화하도록 특별히 설계되었습니다. 평가 대상을 생성하고 평가 템플릿을 사용함으로써 관리자는 인스턴스의 보안 상태를 정기적으로 평가할 수 있으며, 이는 보안 팀의 지속적인 취약성 평가 요구 사항을 충족합니다.",
        "Other Options": [
            "이 접근 방식은 매우 비효율적이며 여러 인스턴스가 있을 경우 확장성이 없습니다. 또한 인적 오류의 위험을 증가시키고 자동화된 보고서를 제공하지 않습니다.",
            "외부 보안 장비가 일부 수준의 모니터링을 제공할 수 있지만, AWS 서비스와 통합되어 취약성 평가를 자동화하지 않으며 추가 관리 오버헤드가 필요합니다.",
            "AWS CloudTrail은 주로 API 호출을 기록하는 데 사용되며 EC2 인스턴스의 보안 취약점을 직접 평가할 수 없습니다. 취약성 평가를 수행하는 메커니즘을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "귀하의 조직의 AWS SysOps 관리자로서, AWS 비용이 예산 내에 유지되도록 주의 깊게 살펴봐야 합니다. AWS CloudWatch를 활용하여 예상 비용을 효과적으로 모니터링하고자 합니다.",
        "Question": "AWS CloudWatch의 다음 기능 중 어떤 것을 사용하여 예상 AWS 비용을 모니터링할 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "사용 패턴에 따라 예상 월별 비용을 모니터링합니다.",
            "2": "시간에 따른 지출 추세를 시각화하는 대시보드를 생성합니다.",
            "3": "비용이 한도를 초과할 때 리소스를 자동으로 종료합니다.",
            "4": "정의된 임계값을 초과하는 예상 비용에 대한 알람을 설정합니다.",
            "5": "사용률이 지정된 임계값 아래로 떨어질 때 알림을 받습니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "정의된 임계값을 초과하는 예상 비용에 대한 알람을 설정합니다.",
            "사용 패턴에 따라 예상 월별 비용을 모니터링합니다."
        ],
        "Explanation": "정의된 임계값을 초과하는 예상 비용에 대한 알람을 설정하면 비용을 사전 관리할 수 있습니다. 또한 사용 패턴에 따라 예상 월별 비용을 모니터링하면 추세와 잠재적인 절약을 식별하는 데 도움이 됩니다. 두 가지 전략 모두 AWS 지출에 대한 정보를 유지하도록 보장합니다.",
        "Other Options": [
            "이 옵션은 잘못된 것입니다. AWS CloudWatch는 비용에 대한 알림을 제공할 수 있지만, 사용률이 정의된 임계값 아래로 떨어질 때 알림을 설정할 수는 없습니다. 이는 비용 모니터링에 중점을 두고 있습니다.",
            "이 옵션은 잘못된 것입니다. AWS CloudWatch는 비용 한도에 따라 리소스를 자동으로 종료하지 않습니다. 비용에 대한 알림을 제공할 수 있지만 리소스를 종료하는 조치를 취하지는 않습니다.",
            "이 옵션은 잘못된 것입니다. CloudWatch에서 대시보드를 생성할 수 있지만, 이는 예상 AWS 비용 모니터링에 특별히 초점을 맞추고 있지 않습니다. 대시보드는 다양한 메트릭을 시각화할 수 있지만, 비용 모니터링 기능을 특별히 다루지는 않습니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "SysOps 관리자는 기업의 온프레미스 네트워크와 Amazon VPC 간의 안전하고 효율적인 연결을 보장하는 임무를 맡았습니다. 조직에는 온프레미스 데이터 센터와 VPC 내 리소스 간의 통신에 의존하는 여러 애플리케이션이 있습니다. 관리자는 대중 인터넷에 VPC 리소스를 노출하지 않으면서 지연 시간을 최소화하고 보안을 극대화하는 솔루션을 구현하고자 합니다.",
        "Question": "SysOps 관리자가 온프레미스 네트워크와 VPC 간의 안전한 개인 연결을 제공하기 위해 어떤 AWS 서비스를 구현해야 합니까?",
        "Options": {
            "1": "AWS 서비스에 개인적으로 연결하기 위해 VPC 엔드포인트를 활용합니다.",
            "2": "AWS Site-to-Site VPN을 사용하여 VPN 연결을 설정합니다.",
            "3": "AWS Direct Connect를 사용하여 전용 네트워크 연결을 생성합니다.",
            "4": "온프레미스 네트워크와 VPC 간의 VPC 피어링을 구성합니다."
        },
        "Correct Answer": "AWS Direct Connect를 사용하여 전용 네트워크 연결을 생성합니다.",
        "Explanation": "AWS Direct Connect는 온프레미스 네트워크와 AWS 클라우드 간의 전용 개인 연결을 제공합니다. 이 솔루션은 대중 인터넷을 피함으로써 지연 시간을 최소화하고 보안을 극대화하여 일관된 성능이 필요한 고처리량 애플리케이션에 이상적입니다.",
        "Other Options": [
            "AWS Site-to-Site VPN을 사용하여 VPN 연결을 설정하는 것은 안전하지만, 대중 인터넷에 의존하므로 전용 연결에 비해 지연 시간과 성능 변동이 발생할 수 있습니다.",
            "VPC 피어링을 구성하는 것은 두 VPC를 연결하는 데 유용하지만, 온프레미스 네트워크와의 직접 통신을 촉진하지 않으며 이 시나리오에는 적용되지 않습니다.",
            "VPC 엔드포인트를 활용하면 AWS 서비스에 대한 안전한 개인 접근을 허용하지만, 온프레미스 네트워크와 VPC 간의 직접 연결을 생성하지 않으므로 이 사용 사례에 필요합니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "한 회사가 EC2 인스턴스의 성능을 모니터링하고 중앙 집중식 대시보드에 주요 지표를 표시하여 가시성을 향상시키고자 합니다. 그들은 CPU 사용률, 네트워크 트래픽 및 디스크 활동과 같은 다양한 지표를 시각적으로 표현하는 CloudWatch 대시보드를 만들고자 합니다.",
        "Question": "EC2 인스턴스 지표 모니터링을 위한 효과적인 CloudWatch 대시보드를 만들기 위해 어떤 단계를 수행해야 합니까?",
        "Options": {
            "1": "CloudWatch 콘솔을 사용하여 새 대시보드를 만들고 각 EC2 인스턴스 지표에 대한 위젯을 수동으로 추가합니다.",
            "2": "원하는 지표에 대해 CloudWatch 알람을 구성하고 이를 새 대시보드에 연결합니다.",
            "3": "모든 EC2 인스턴스에서 상세 모니터링을 활성화하여 대시보드에 더 높은 해상도의 데이터를 사용할 수 있도록 합니다.",
            "4": "AWS CloudFormation 템플릿을 사용하여 대시보드 생성을 자동화하여 모니터링 설정을 표준화합니다."
        },
        "Correct Answer": "CloudWatch 콘솔을 사용하여 새 대시보드를 만들고 각 EC2 인스턴스 지표에 대한 위젯을 수동으로 추가합니다.",
        "Explanation": "CloudWatch 대시보드를 만드는 가장 직접적인 방법은 CloudWatch 콘솔을 사용하는 것입니다. 여기에서 다양한 지표에 대한 여러 위젯을 수동으로 추가할 수 있어 특정 모니터링 요구에 맞춘 사용자 정의 뷰를 제공할 수 있습니다.",
        "Other Options": [
            "CloudWatch 알람을 구성하는 것은 경고를 위한 중요한 작업이지만, 대시보드 생성 프로세스 자체에는 직접적으로 기여하지 않습니다.",
            "상세 모니터링을 활성화하면 더 세분화된 데이터를 제공하지만, 실제 대시보드 생성에는 도움이 되지 않습니다.",
            "AWS CloudFormation 템플릿을 사용하여 대시보드 생성을 자동화하는 것은 일관성을 위한 좋은 방법이지만, EC2 지표에 대한 시각적 대시보드를 수동으로 생성하는 즉각적인 작업을 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 회사가 높은 가용성과 내결함성이 필요한 새로운 애플리케이션을 AWS에 배포할 계획입니다. 이 애플리케이션은 Amazon EC2 인스턴스에서 호스팅되며, 팀은 이를 단일 가용 영역 내에 배포할지 아니면 여러 가용 영역에 걸쳐 배포할지를 평가하고 있습니다.",
        "Question": "여러 가용 영역에 애플리케이션을 배포할 때의 이점은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "다양한 지리적 지역에 위치한 사용자에 대한 낮은 대기 시간.",
            "2": "영역 간 자원 활용 감소로 인한 비용 절감.",
            "3": "애플리케이션에 대한 관리 간소화 및 운영 오버헤드 감소.",
            "4": "영역 장애 발생 시 애플리케이션이 계속 운영될 수 있도록 하여 가용성과 중복성 증가.",
            "5": "여러 영역에 자동으로 트래픽을 분산시켜 내결함성 향상."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "여러 영역에 자동으로 트래픽을 분산시켜 내결함성 향상.",
            "영역 장애 발생 시 애플리케이션이 계속 운영될 수 있도록 하여 가용성과 중복성 증가."
        ],
        "Explanation": "여러 가용 영역(Multi-AZ)에 애플리케이션을 배포하면 트래픽이 자동으로 분산되어 내결함성이 향상됩니다. 한 영역이 실패하더라도 애플리케이션은 다른 영역에서 계속 작동할 수 있습니다. 이 설정은 전체 가용성과 중복성을 증가시켜 영역 중단에 대한 강력한 솔루션을 제공합니다.",
        "Other Options": [
            "여러 영역에 배포하면 특정 사용자에 대한 대기 시간이 줄어들 수 있지만, 모든 사용자, 특히 영역에서 멀리 떨어진 사용자에 대한 대기 시간이 줄어들 것이라는 보장은 없습니다.",
            "Multi-AZ 배포는 일반적으로 관리 복잡성을 추가하며, 여러 영역 간의 조정이 필요하므로 관리가 간소화되지 않습니다.",
            "비용 절감은 Multi-AZ 배포에서 보장되지 않으며, 실제로 여러 영역을 활용하면 자원 프로비저닝 증가로 인해 비용이 더 높아질 수 있습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "운영 엔지니어는 회사가 EC2 인스턴스에 대한 Amazon Machine Images (AMIs)를 효율적으로 생성하고 관리할 수 있도록 해야 합니다. 목표는 이미지 생성 프로세스를 자동화하고 회사 표준을 준수하는 것입니다.",
        "Question": "엔지니어가 AMI 생성 및 관리를 자동화하기 위해 어떤 조치를 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Systems Manager Automation 문서를 설정하여 실행 중인 인스턴스에서 AMI 생성을 자동화합니다.",
            "2": "AWS CloudFormation 템플릿을 사용하여 자동화 없이 AMI를 EC2 인스턴스에 직접 정의하고 배포합니다.",
            "3": "EC2 Image Builder를 활용하여 AMI 빌드 및 업데이트를 자동화하는 파이프라인을 생성합니다.",
            "4": "EC2 콘솔에서 AMI를 수동으로 생성하고 AWS Lambda 함수를 예약하여 오래된 AMI를 삭제합니다.",
            "5": "Amazon CloudWatch Events를 구현하여 EC2 Image Builder 파이프라인을 호출하는 AWS Lambda 함수를 트리거합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "EC2 Image Builder를 활용하여 AMI 빌드 및 업데이트를 자동화하는 파이프라인을 생성합니다.",
            "Amazon CloudWatch Events를 구현하여 EC2 Image Builder 파이프라인을 호출하는 AWS Lambda 함수를 트리거합니다."
        ],
        "Explanation": "EC2 Image Builder를 활용하면 정의된 파이프라인을 통해 AMI를 효율적으로 생성하고 관리할 수 있어 준수를 보장하고 수동 오류를 줄일 수 있습니다. CloudWatch Events를 구현하여 자동화 프로세스를 트리거하면 AMI가 일관되게 생성되도록 보장할 수 있습니다.",
        "Other Options": [
            "AMI를 수동으로 생성하는 것은 준수를 유지하는 데 필요한 자동화를 제공하지 않으며, 인적 오류에 취약합니다. Lambda를 통한 삭제 예약은 일관된 AMI 생성을 위한 필요를 해결하지 않습니다.",
            "Systems Manager Automation 문서를 사용하는 것은 유효한 접근 방식이지만, 환경 전반에 걸쳐 자동화된 이미지 생성을 위해 EC2 Image Builder를 사용하는 것만큼 간소화되지 않을 수 있습니다.",
            "CloudFormation은 주로 코드로서의 인프라에 사용되며, AMI를 본질적으로 생성하거나 관리하지 않습니다. 지속적인 AMI 관리를 위한 자동화 기능이 부족합니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "SysOps 관리자는 중요한 애플리케이션을 실행하는 EC2 인스턴스의 집합을 관리하는 책임이 있습니다. 관리자는 응답하지 않는 인스턴스가 수동 개입 없이 자동으로 교체되도록 해야 합니다. 이를 달성하기 위해 관리자는 인스턴스가 지속적으로 모니터링되고 특정 건강 검사를 충족하지 못할 경우 교체되도록 하는 모니터링 및 경고 전략을 구현하고자 합니다.",
        "Question": "응답하지 않는 EC2 인스턴스를 자동으로 모니터링하고 교체하기 위한 가장 효과적인 솔루션은 무엇입니까?",
        "Options": {
            "1": "EC2 인스턴스 상태 변경에 대한 AWS CloudTrail 로깅을 설정하고 필요에 따라 수동으로 인스턴스를 교체합니다.",
            "2": "인스턴스 건강을 매시간 확인하고 응답하지 않는 인스턴스를 교체하는 Lambda 함수를 구현합니다.",
            "3": "인스턴스 상태를 모니터링하고 Auto Scaling 정책을 트리거하는 CloudWatch 경고를 생성합니다.",
            "4": "AWS Config를 사용하여 EC2 인스턴스의 준수를 평가하고 비준수 인스턴스에 대해 관리자에게 알립니다."
        },
        "Correct Answer": "인스턴스 상태를 모니터링하고 Auto Scaling 정책을 트리거하는 CloudWatch 경고를 생성합니다.",
        "Explanation": "인스턴스 상태를 모니터링하기 위한 CloudWatch 경고를 생성하면 응답하지 않는 인스턴스를 자동으로 감지할 수 있습니다. 이는 수동 개입 없이 인스턴스를 교체하기 위해 Auto Scaling 정책을 직접 트리거할 수 있어 가장 효과적인 솔루션입니다.",
        "Other Options": [
            "AWS CloudTrail 로깅을 설정하는 것은 실시간 모니터링이나 자동 복구를 제공하지 않으며, 주로 API 호출 및 변경 사항을 감사하는 데 사용되므로 응답하지 않는 인스턴스를 자동으로 교체하는 데 도움이 되지 않습니다.",
            "건강 검사를 위한 Lambda 함수를 구현하면 인스턴스 교체에 지연이 발생하고 추가 관리 오버헤드가 필요하므로 CloudWatch 경고 및 Auto Scaling을 사용하는 것만큼 효율적이지 않습니다.",
            "AWS Config를 사용하여 준수를 평가하는 것은 실시간 건강 모니터링 및 자동 인스턴스 교체보다는 거버넌스 및 보안 준수에 더 중점을 두므로 이 사용 사례에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 회사가 활용되지 않는 리소스로 인해 높은 AWS 비용을 경험하고 있습니다. SysOps 관리자는 이러한 리소스를 식별하여 지출을 최적화하고 성능을 개선하는 임무를 맡고 있습니다.",
        "Question": "다음 중 활용도가 낮거나 사용되지 않는 리소스를 식별하고 수정하는 데 도움이 되는 AWS 서비스 또는 도구는 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Cost Explorer",
            "2": "AWS Security Hub",
            "3": "AWS Personal Health Dashboard",
            "4": "AWS Trusted Advisor",
            "5": "AWS Compute Optimizer"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Compute Optimizer",
            "AWS Trusted Advisor"
        ],
        "Explanation": "AWS Compute Optimizer는 AWS 리소스의 성능을 분석하고 최적의 인스턴스 유형에 대한 권장 사항을 제공하며, AWS Trusted Advisor는 활용도가 낮은 리소스 및 비용 절감 기회에 대한 통찰력을 제공합니다.",
        "Other Options": [
            "AWS Security Hub는 보안 태세 관리에 중점을 두며 비용이나 리소스 활용에 대한 통찰력을 제공하지 않습니다.",
            "AWS Personal Health Dashboard는 AWS 리소스에 영향을 미치는 이벤트와 관련된 경고 및 알림을 제공하지만, 비용 최적화를 위한 리소스 활용 분석은 수행하지 않습니다.",
            "AWS Cost Explorer는 지출 패턴을 시각화하고 분석하는 데 도움이 되지만, 활용도가 낮은 리소스를 직접 식별하지는 않습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "한 회사가 VPC 내의 프라이빗 서브넷에 위치한 Amazon EC2 인스턴스에 애플리케이션을 배포했습니다. 이 애플리케이션은 소프트웨어 업데이트 및 외부 API에 접근하기 위해 인터넷에 접속해야 합니다. 그러나 외부 사용자가 이러한 인스턴스에 연결을 시작할 수 없도록 하는 것이 중요합니다. 이 요구 사항을 충족하기 위해 SysOps 관리자는 프라이빗 인스턴스의 보안을 유지하면서 아웃바운드 인터넷 접근을 허용하는 솔루션을 설정해야 합니다.",
        "Question": "관리자가 구현해야 할 옵션은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "프라이빗 인스턴스가 인터넷에 접근할 수 있도록 공용 서브넷에 NAT Gateway를 배포합니다.",
            "2": "프라이빗 서브넷 인스턴스에 대한 공용 접근을 허용하기 위해 인터넷 게이트웨이를 구성합니다.",
            "3": "아웃바운드 트래픽 비용 절감을 위해 NAT Gateway 대신 NAT 인스턴스를 사용합니다.",
            "4": "각 프라이빗 인스턴스에 대한 Elastic IP 주소를 설정하여 직접 인터넷 접근을 용이하게 합니다.",
            "5": "프라이빗 인스턴스에 공용 IP를 할당하여 인터넷에 연결할 수 있도록 합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "프라이빗 인스턴스가 인터넷에 접근할 수 있도록 공용 서브넷에 NAT Gateway를 배포합니다.",
            "아웃바운드 트래픽 비용 절감을 위해 NAT Gateway 대신 NAT 인스턴스를 사용합니다."
        ],
        "Explanation": "공용 서브넷에 NAT Gateway를 배포하면 프라이빗 서브넷의 인스턴스가 인터넷에 아웃바운드 연결을 시작할 수 있지만, 인터넷으로부터의 인바운드 연결은 차단됩니다. NAT 인스턴스는 NAT Gateway의 비용 효율적인 대안으로 사용될 수 있으며, 아웃바운드 인터넷 접근을 위한 유사한 기능을 제공합니다.",
        "Other Options": [
            "인터넷 게이트웨이는 공용 서브넷에 사용되며, 이는 프라이빗 인스턴스를 인터넷에 노출시켜 보안 요구 사항에 위배됩니다.",
            "프라이빗 인스턴스에 Elastic IP를 할당하면 공개적으로 접근 가능해져 외부 연결이 가능해지므로 이 시나리오에서는 원하지 않는 결과입니다.",
            "프라이빗 인스턴스에 공용 IP를 부여하면 프라이빗 서브넷의 목적이 무색해지며, 인터넷에서 해당 인스턴스에 직접 접근할 수 있게 됩니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "한 회사가 AWS에서 인프라 배포를 자동화하려고 합니다. 그들은 인프라를 코드로 정의할 수 있는 서비스를 사용하여 설정을 쉽게 복제하고 시간이 지남에 따라 변경 사항을 관리하고자 합니다. 팀은 JSON 및 YAML 형식에 익숙하며, 다른 AWS 서비스와 잘 통합되는 솔루션을 구현하고 싶어합니다.",
        "Question": "회사가 배포를 위한 인프라를 코드로 구현하기 위해 주로 사용해야 할 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS CodeDeploy",
            "2": "AWS Systems Manager",
            "3": "AWS CloudFormation",
            "4": "AWS Elastic Beanstalk"
        },
        "Correct Answer": "AWS CloudFormation",
        "Explanation": "AWS CloudFormation은 인프라를 코드로 정의할 수 있도록 설계되어 있으며, 사용자가 JSON 또는 YAML 템플릿을 사용하여 인프라를 정의할 수 있게 해줍니다. 이를 통해 AWS 리소스의 자동 프로비저닝 및 관리가 가능합니다.",
        "Other Options": [
            "AWS CodeDeploy는 인프라를 코드로 관리하기보다는 애플리케이션 배포 자동화에 주로 초점을 맞추고 있습니다.",
            "AWS Systems Manager는 운영 관리 기능을 제공하지만 인프라를 코드로 정의하는 직접적인 도구로 사용되지 않습니다.",
            "AWS Elastic Beanstalk는 애플리케이션 배포 및 관리를 단순화하지만 CloudFormation처럼 인프라를 코드로 다루지는 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "SysOps 관리자 역할로서, Amazon API Gateway에 호스팅된 API의 성능과 신뢰성을 개선하는 임무를 맡고 있습니다. 문제를 진단하고 요청이 아키텍처를 통해 어떻게 처리되는지 이해하기 위해 추적 기능을 구현하고자 합니다.",
        "Question": "Amazon API Gateway API에서 AWS X-Ray를 효과적으로 활용하기 위해 어떤 접근 방식을 취할 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "AWS X-Ray에서 샘플링 규칙을 구성하여 기록되는 요청 수를 제한하고, 대표적인 하위 집합만 분석되도록 합니다.",
            "2": "API Gateway API에서 AWS X-Ray 추적을 활성화하여 요청을 자동으로 추적하고 지연 분석을 위한 서비스 맵을 시각화합니다.",
            "3": "API Gateway API에서 AWS X-Ray 추적을 비활성화하여 사용자 요청 추적과 관련된 성능 오버헤드를 피합니다.",
            "4": "AWS SDK로 백엔드 서비스를 수동으로 계측하여 AWS X-Ray에 추적 데이터를 전송하고 API Gateway 통합의 필요성을 우회합니다.",
            "5": "X-Ray 서비스 맵을 사용하여 통합된 각 백엔드 서비스에 대한 세부 메트릭을 보고 아키텍처의 성능 병목 현상을 식별합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "API Gateway API에서 AWS X-Ray 추적을 활성화하여 요청을 자동으로 추적하고 지연 분석을 위한 서비스 맵을 시각화합니다.",
            "AWS X-Ray에서 샘플링 규칙을 구성하여 기록되는 요청 수를 제한하고, 대표적인 하위 집합만 분석되도록 합니다."
        ],
        "Explanation": "API Gateway에서 AWS X-Ray 추적을 활성화하면 요청을 자동으로 추적하고 서비스 맵을 통해 시각화할 수 있어 지연을 식별하는 데 필수적입니다. 또한, 샘플링 규칙을 구성하면 추적 데이터의 양을 관리하는 데 도움이 되어 성능을 분석하기가 더 쉬워집니다.",
        "Other Options": [
            "백엔드 서비스를 수동으로 계측하여 AWS X-Ray에 추적 데이터를 전송할 수 있지만, API Gateway의 내장 추적 기능을 사용할 때는 필요하지 않습니다.",
            "X-Ray 서비스 맵을 사용하는 것은 유용하지만 단독으로 추적을 활성화하지 않으며, 추적이 설정된 후 데이터를 시각화하는 도구입니다.",
            "AWS X-Ray 추적을 비활성화하는 것은 요청 진단을 통한 성능 및 신뢰성 개선 목표에 반하므로 잘못된 선택입니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "한 회사가 여러 AWS 리전과 계정에서 운영되고 있으며, 이러한 환경 간에 VPC 서브넷 및 Route 53 호스팅 존과 같은 리소스를 효율적으로 공유해야 합니다.",
        "Question": "SysOps 관리자가 여러 AWS 리전과 계정에서 공유 리소스를 프로비저닝하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "AWS Resource Access Manager (AWS RAM)를 구성하여 계정과 리전 간에 리소스를 공유합니다.",
            "2": "각 AWS 계정과 리전에서 리소스를 수동으로 배포하고 개별적으로 관리합니다.",
            "3": "다른 계정과 리전의 리소스에 대한 액세스를 허용하는 IAM 크로스 계정 역할을 생성합니다.",
            "4": "AWS CloudFormation StackSets를 사용하여 필요한 계정과 리전에서 공유 리소스를 배포합니다."
        },
        "Correct Answer": "AWS CloudFormation StackSets를 사용하여 필요한 계정과 리전에서 공유 리소스를 배포합니다.",
        "Explanation": "AWS CloudFormation StackSets는 여러 계정과 리전에서 스택을 생성, 업데이트 또는 삭제할 수 있는 단일 작업을 허용하여 환경 간에 공유 리소스를 프로비저닝하는 가장 효율적인 방법입니다.",
        "Other Options": [
            "AWS Resource Access Manager (AWS RAM)는 특정 리소스를 공유하는 데 유용하지만 계정과 리전 간에 리소스를 직접 프로비저닝하지 않으며, 기존 리소스에 대한 액세스를 용이하게 할 뿐입니다.",
            "IAM 크로스 계정 역할을 생성하면 액세스 제어를 제공하지만 리소스 프로비저닝을 자동화하지 않으며, 단순히 한 계정의 사용자나 서비스가 다른 계정의 리소스에 접근할 수 있도록 합니다.",
            "각 AWS 계정과 리전에서 리소스를 수동으로 배포하는 것은 비효율적이며 구성 이탈 및 관리 오버헤드의 위험을 증가시킵니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "한 금융 서비스 회사가 민감한 데이터를 AWS로 이전하고 있으며, 암호화 키가 안전하게 관리되도록 해야 합니다. 이들은 산업 규정을 준수하면서 이러한 키를 생성하고 관리하는 다양한 방법을 평가하고 있습니다.",
        "Question": "회사가 암호화 키를 효과적으로 생성, 관리 및 보호하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Key Management Service (KMS)",
            "2": "AWS Certificate Manager",
            "3": "AWS Identity and Access Management (IAM)",
            "4": "AWS Secrets Manager"
        },
        "Correct Answer": "AWS Key Management Service (KMS)",
        "Explanation": "AWS Key Management Service (KMS)는 암호화 키를 생성, 관리 및 보호하도록 특별히 설계되었습니다. 데이터 보호에 사용되는 암호화 키에 대한 중앙 집중식 제어를 제공하여 다양한 규제 요구 사항을 준수할 수 있도록 합니다.",
        "Other Options": [
            "AWS Secrets Manager는 API 키 및 데이터베이스 자격 증명과 같은 비밀 및 민감한 정보를 관리하는 데 주로 사용되지만, 암호화 키 관리에 중점을 두지 않습니다.",
            "AWS Certificate Manager는 웹사이트 및 애플리케이션을 보호하기 위한 SSL/TLS 인증서를 관리하는 데 사용되며, 암호화 키를 직접 관리하는 데 사용되지 않습니다.",
            "AWS Identity and Access Management (IAM)는 AWS에서 사용자 접근 및 권한을 관리하는 데 사용되지만, 암호화 키를 생성하거나 관리하는 특정 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 회사가 성능을 개선하고 비용을 줄이기 위해 온프레미스 데이터 센터에서 AWS로의 전용 네트워크 연결을 설정할 계획입니다. SysOps 관리자는 이 연결을 설정하기 위한 최상의 솔루션을 선택하는 임무를 맡고 있습니다.",
        "Question": "SysOps 관리자가 온프레미스 데이터 센터와 AWS 간의 전용 네트워크 연결을 생성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "AWS Transit Gateway",
            "2": "AWS PrivateLink",
            "3": "AWS VPN",
            "4": "AWS Direct Connect"
        },
        "Correct Answer": "AWS Direct Connect",
        "Explanation": "AWS Direct Connect는 귀하의 시설에서 AWS로의 전용 네트워크 연결을 제공하여 성능을 향상시키고 인터넷 기반 연결과 관련된 비용을 줄일 수 있습니다. AWS 리소스에 대한 개인 연결을 허용하여 대역폭 처리량을 증가시키고 일관된 네트워크 경험을 제공합니다.",
        "Other Options": [
            "AWS VPN은 인터넷을 통해 안전한 연결을 생성하지만, AWS Direct Connect가 제공하는 전용 고속 연결을 제공하지 않습니다.",
            "AWS Transit Gateway는 여러 VPC 및 온프레미스 네트워크를 연결하여 네트워크 아키텍처를 단순화하지만, AWS Direct Connect처럼 AWS에 전용 회선을 설정하지 않습니다.",
            "AWS PrivateLink는 온프레미스 네트워크에서 AWS에 호스팅된 서비스에 대한 안전한 접근을 허용하지만, AWS Direct Connect처럼 전용 네트워크 연결을 설정하지 않습니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 스타트업이 빠른 성장을 경험하고 있으며, 증가하는 트래픽을 수용하기 위해 EC2 인스턴스를 동적으로 확장하고 있습니다. 그러나 새로운 On-Demand 인스턴스 요청이 용량 부족으로 인해 거부되는 문제가 발생했습니다. 운영 팀은 피크 시간에도 인스턴스를 신뢰성 있게 프로비저닝할 수 있도록 해야 합니다.",
        "Question": "On-Demand 용량 부족 문제를 해결하기 위해 무엇을 할 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "예측 가능한 워크로드에 대해 예약 인스턴스를 사용하는 것을 고려하십시오.",
            "2": "다른 가용 영역에서 인스턴스를 시작해 보십시오.",
            "3": "가용성을 높이기 위해 여러 지역에 인스턴스를 배포하십시오.",
            "4": "비용 효율성을 위해 스팟 인스턴스로 전환하십시오.",
            "5": "현재 인스턴스의 인스턴스 유형 크기를 늘리십시오."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "예측 가능한 워크로드에 대해 예약 인스턴스를 사용하는 것을 고려하십시오.",
            "다른 가용 영역에서 인스턴스를 시작해 보십시오."
        ],
        "Explanation": "예약 인스턴스를 사용하면 선택한 인스턴스 유형에 대해 보장된 용량을 제공하므로 용량 문제를 완화하는 데 도움이 될 수 있습니다. 다른 가용 영역에서 인스턴스를 시작하는 것도 AWS가 다른 영역에서 사용 가능한 용량을 가질 수 있으므로 용량 제약을 우회하는 데 도움이 될 수 있습니다.",
        "Other Options": [
            "인스턴스 유형 크기를 늘리는 것은 용량 문제를 해결하지 않으며, 더 큰 인스턴스 유형이 공급이 부족할 경우 문제를 악화시킬 수 있습니다.",
            "스팟 인스턴스로 전환하는 것은 용량 문제를 해결하지 못할 수 있으며, 스팟 인스턴스는 현재 시장 수요에 따라 제한될 수 있고 필요할 때 항상 사용 가능하다고 보장되지 않습니다.",
            "여러 지역에 인스턴스를 배포하는 것은 가용성에 도움이 될 수 있지만, 원래 지역의 On-Demand 인스턴스에 대한 용량 부족 문제를 직접적으로 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "SysOps 관리자는 EC2 인스턴스와 인터넷 간의 IPv6 통신을 가능하게 하기 위해 Amazon VPC를 구성하는 임무를 맡았습니다. 요구 사항에는 VPC에 /56 IPv6 CIDR 블록을 연결하고, /64 IPv6 CIDR 블록을 가진 서브넷을 생성하며, 서브넷이 인터넷 게이트웨이를 통해 인터넷으로 트래픽을 라우팅할 수 있도록 하는 것이 포함됩니다.",
        "Question": "서브넷 내의 EC2 인스턴스가 IPv6를 통해 인터넷과 통신할 수 있도록 보장하기 위해 관리자가 취해야 할 단계는 무엇입니까?",
        "Options": {
            "1": "공용 IPv6 주소를 가진 새로운 EC2 인스턴스를 생성하고 추가 구성 없이 인터넷과 통신할 것이라고 가정합니다.",
            "2": "/56 IPv6 CIDR 블록을 서브넷에 직접 연결하고 IPv6 트래픽을 위한 사용자 지정 라우트 테이블 생성을 건너뜁니다.",
            "3": "VPC 흐름 로그를 활성화하여 인터넷 게이트웨이에 대한 라우트를 생성할 필요 없이 IPv6 트래픽을 모니터링합니다.",
            "4": "인터넷 게이트웨이를 생성하고 이를 VPC에 연결한 다음, 모든 IPv6 트래픽을 인터넷 게이트웨이로 향하도록 사용자 지정 라우트 테이블에 라우트를 추가합니다."
        },
        "Correct Answer": "인터넷 게이트웨이를 생성하고 이를 VPC에 연결한 다음, 모든 IPv6 트래픽을 인터넷 게이트웨이로 향하도록 사용자 지정 라우트 테이블에 라우트를 추가합니다.",
        "Explanation": "서브넷 내의 EC2 인스턴스가 IPv6를 통해 인터넷과 통신할 수 있도록 하려면 인터넷 게이트웨이를 생성하고 이를 VPC에 연결한 다음, IPv6 트래픽을 인터넷 게이트웨이로 유도하는 라우트를 사용자 지정 라우트 테이블에 추가해야 합니다. 이는 인터넷으로의 아웃바운드 통신을 가능하게 하는 데 필수적입니다.",
        "Other Options": [
            "/56 IPv6 CIDR 블록을 서브넷에 직접 연결하는 것만으로는 인터넷 통신을 가능하게 하지 않으며, 필요한 라우트 구성을 간과합니다.",
            "VPC 흐름 로그를 활성화하는 것은 주로 트래픽 모니터링을 위한 것이며 인터넷과의 직접 통신을 촉진하지 않습니다. 인터넷 게이트웨이에 대한 라우트가 필요합니다.",
            "공용 IPv6 주소를 가진 새로운 EC2 인스턴스를 생성하는 것만으로는 자동으로 인터넷 연결을 제공하지 않으며, 라우팅 및 게이트웨이 구성은 여전히 필요합니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "금융 서비스 회사는 애플리케이션에서 변동하는 트래픽 패턴을 경험하고 있으며, 이를 위해 강력한 로드 밸런싱 솔루션이 필요합니다. SysOps 관리자로서, 성능 및 운영 요구 사항을 고려하여 그들의 필요에 적합한 로드 밸런서를 선택하는 임무를 맡았습니다.",
        "Question": "정적 IP 주소를 제공하고 IP 주소로 대상을 등록할 수 있는 기능을 갖춘 수백만 개의 요청을 처리하기 위한 최상의 AWS 로드 밸런서는 무엇입니까?",
        "Options": {
            "1": "Network Load Balancer",
            "2": "Classic Load Balancer",
            "3": "Application Load Balancer",
            "4": "Gateway Load Balancer"
        },
        "Correct Answer": "Network Load Balancer",
        "Explanation": "Network Load Balancer는 수백만 개의 요청을 처리하도록 설계되었으며, 정적 IP 주소를 제공하고 IP 주소로 대상을 등록할 수 있는 기능을 포함하여 VPC 외부에 위치한 대상을 지원합니다. 이는 변동성이 큰 워크로드에 이상적입니다.",
        "Other Options": [
            "Application Load Balancer는 HTTP 및 HTTPS 트래픽과 고급 요청 라우팅에 가장 적합하지만, 수백만 개의 요청을 처리하거나 정적 IP 주소를 지원하는 데 중점을 두지 않습니다.",
            "Classic Load Balancer는 레거시 옵션으로, 최신 로드 밸런서의 고급 기능이나 확장성을 제공하지 않아 고성능 애플리케이션에 적합하지 않습니다.",
            "Gateway Load Balancer는 서드파티 가상 어플라이언스를 통합하기 위해 특별히 설계되었으며, 대량 요청의 일반 로드 밸런싱에 최적화되어 있지 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "한 회사는 Amazon EMR을 사용하여 대규모 데이터 세트를 분석하고 비즈니스 전략을 위한 통찰력을 추출하고 있습니다. 그들은 EMR 클러스터가 워크로드에 따라 동적으로 확장되도록 하고, 처리 중 실제로 사용하는 리소스에 대해서만 비용이 발생하도록 해야 합니다.",
        "Question": "워크로드 요구에 따라 Amazon EMR 클러스터의 동적 확장을 달성하기 위해 SysOps 관리자가 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "클러스터에 대한 Auto Scaling 정책을 활성화하여 메트릭에 따라 인스턴스 수를 동적으로 조정합니다.",
            "2": "일정한 성능을 보장하기 위해 고정된 수의 인스턴스로 클러스터를 구성합니다.",
            "3": "처리 중 관찰된 워크로드에 따라 수동으로 인스턴스 수를 늘리거나 줄입니다.",
            "4": "Auto Scaling을 활성화하지 않고 스팟 인스턴스와 온디맨드 인스턴스를 조합하여 사용합니다."
        },
        "Correct Answer": "클러스터에 대한 Auto Scaling 정책을 활성화하여 메트릭에 따라 인스턴스 수를 동적으로 조정합니다.",
        "Explanation": "Auto Scaling 정책을 활성화하면 EMR 클러스터가 워크로드 메트릭에 따라 인스턴스 수를 자동으로 조정할 수 있어 데이터 처리 중 비용 효율성과 최적의 성능을 보장합니다.",
        "Other Options": [
            "고정된 수의 인스턴스를 구성하는 것은 유연성을 허용하지 않으며, 리소스의 과잉 프로비저닝 또는 부족 프로비저닝을 초래할 수 있어 비용이 증가하거나 성능이 저하될 수 있습니다.",
            "인스턴스 수를 수동으로 조정하는 것은 비효율적이며, 인간의 개입에 의존하고 워크로드 변화에 실시간으로 반응하지 않습니다.",
            "Auto Scaling 없이 스팟 인스턴스와 온디맨드 인스턴스를 조합하여 사용하는 것은 비용 절감으로 이어질 수 있지만, 워크로드 요구에 효과적으로 반응하는 동적 확장을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "한 금융 서비스 회사가 API 키, 데이터베이스 자격 증명 및 액세스 토큰과 같은 민감한 정보를 안전하게 저장해야 하는 애플리케이션을 개발하고 있습니다. SysOps 관리자 역할로서 모든 비밀이 안전하게 관리되고 필요할 때 애플리케이션에서 쉽게 접근할 수 있도록 하는 임무를 맡고 있습니다.",
        "Question": "이러한 민감한 비밀을 안전하게 저장하고 관리하기 위한 최상의 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "AWS S3와 서버 측 암호화",
            "2": "AWS Systems Manager Parameter Store",
            "3": "AWS IAM Roles",
            "4": "AWS Secrets Manager"
        },
        "Correct Answer": "AWS Secrets Manager",
        "Explanation": "AWS Secrets Manager는 API 키 및 데이터베이스 자격 증명과 같은 민감한 정보를 안전하게 저장하고 관리하기 위해 특별히 설계되었습니다. 내장된 암호화, 비밀의 자동 회전 및 세밀한 접근 제어를 제공하여 이 시나리오에 가장 적합한 선택입니다.",
        "Other Options": [
            "AWS S3와 서버 측 암호화를 사용하는 것은 비밀 관리를 위한 특정 기능이 부족하므로 비밀 관리에 이상적이지 않습니다. 예를 들어, 자동 회전 및 감사 기능이 없습니다.",
            "AWS IAM Roles는 AWS 서비스 및 리소스에 대한 권한을 부여하기 위한 것이며, 민감한 정보를 저장하기 위한 것이 아닙니다. 비밀을 안전하게 저장하고 검색할 수 있는 수단을 제공하지 않습니다.",
            "AWS Systems Manager Parameter Store는 비밀을 저장할 수 있지만 AWS Secrets Manager가 제공하는 자동 비밀 회전 및 향상된 보안 제어와 같은 일부 고급 기능이 부족합니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사가 비용, 성능 및 보안에 대한 모범 사례를 준수하기 위해 AWS 환경을 최적화하고 있습니다. SysOps 관리자는 사용 패턴 및 리소스 구성에 따라 권장 사항을 제공하는 AWS 도구를 활용하는 임무를 맡고 있습니다.",
        "Question": "SysOps 관리자가 AWS 리소스를 최적화하기 위한 통찰력과 권장 사항을 얻기 위해 사용할 수 있는 리소스는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "AWS CloudTrail 및 AWS Trusted Advisor",
            "2": "AWS Trusted Advisor 및 AWS Personal Health Dashboard",
            "3": "AWS Budgets 및 AWS Trusted Advisor",
            "4": "AWS Cost Explorer 및 AWS Trusted Advisor",
            "5": "AWS Config 및 AWS Trusted Advisor"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Trusted Advisor 및 AWS Cost Explorer"
        ],
        "Explanation": "AWS Trusted Advisor는 모범 사례에 따라 리소스를 프로비저닝하는 데 도움을 주는 실시간 가이드를 제공하며, AWS Cost Explorer는 지출 패턴을 분석하고 최적화할 수 있게 해줍니다. 이 두 가지를 함께 사용하면 비용을 줄이고 리소스 활용도를 개선하는 데 도움이 됩니다.",
        "Other Options": [
            "AWS Personal Health Dashboard는 경고 및 수정 지침을 제공하지만 리소스 사용 최적화에 대한 권장 사항을 제공하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성을 평가, 감사 및 평가하는 데 도움을 주는 서비스이지만 비용 관련 통찰력을 제공하지 않습니다.",
            "AWS Budgets는 사용자 정의 비용 및 사용 예산을 설정할 수 있지만 리소스 활용 최적화에 대한 권장 사항을 제공하지 않습니다."
        ]
    }
]