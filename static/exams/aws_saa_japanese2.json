[
    {
        "Question Number": "1",
        "Situation": "金融サービス会社は、複数のソースからさまざまな形式で取引データを収集しています。分析を行う前に、データをクリーンアップし、正規化し、強化する必要があります。この会社は、このETL（抽出、変換、ロード）プロセスを自動化できるサーバーレスソリューションを求めています。",
        "Question": "データ変換のためにソリューションアーキテクトが推奨すべきAWSサービスはどれですか？",
        "Options": {
            "1": "Amazon EMR",
            "2": "AWS Glue",
            "3": "AWS Lambda",
            "4": "Amazon Redshift Spectrum"
        },
        "Correct Answer": "AWS Glue",
        "Explanation": "AWS Glueは、データ準備と変換のために特別に設計された完全管理型のETL（抽出、変換、ロード）サービスです。データの発見、カタログ化、変換のプロセスを自動化し、さまざまなソースから取引データをクリーンアップ、正規化、強化する必要がある金融サービス会社に最適です。AWS Glueはサーバーレス操作を処理できるため、会社のサーバーレスソリューションの要件に合致します。",
        "Other Options": [
            "Amazon EMRは、Apache HadoopやApache Sparkなどのビッグデータフレームワークを実行するための管理されたクラスタープラットフォームです。ETLタスクを実行できますが、サーバーレスソリューションではなく、AWS Glueと比較してより多くの管理と設定が必要です。",
            "AWS Lambdaは、イベントに応じてコードを実行するサーバーレスコンピューティングサービスです。データ変換に使用できますが、ETLプロセス専用に設計されておらず、AWS Glueが提供するデータカタログ化やスキーマ推論のための組み込み機能が欠けています。",
            "Amazon Redshift Spectrumは、RedshiftにデータをロードすることなくS3に保存されたデータに対してクエリを実行できます。ただし、主にクエリサービスであり、ETLサービスではなく、分析前にデータをクリーンアップおよび強化するために必要なデータ変換機能を提供しません。"
        ]
    },
    {
        "Question Number": "2",
        "Situation": "ある会社は、AWSリソースのセキュリティを監視するためにAmazon CloudWatchを使用しています。会社は、ネットワークトラフィックの異常パターンや不正アクセスの試みが検出された際に、修復アクションをトリガーすることで自動的に潜在的なセキュリティ脅威に対応できるシステムを設定する必要があります。",
        "Question": "セキュリティインシデントがリアルタイムで検出され、修復されることを確実にするために、会社はどのような構成を実装すべきですか？",
        "Options": {
            "1": "CloudWatch Logsを使用してEC2インスタンスからログを収集し、ログ内で特定のパターンが検出されたときに修復アクションのためにLambda関数をトリガーするCloudWatchアラームを設定します。",
            "2": "CloudWatch Metricsを使用してEC2インスタンスの健康を監視し、他のAWSセキュリティサービスと統合せずにセキュリティしきい値が超えたときに自動スケーリングを構成します。",
            "3": "CloudWatch Eventsを設定して、CloudTrailから外部SIEM（セキュリティ情報およびイベント管理）システムにログデータを転送し、リアルタイム分析と自動修復を行います。",
            "4": "CloudWatch Dashboardsを有効にしてEC2メトリクスを視覚化し、必要に応じてAmazon SNSを通じてアラートをトリガーするためにデータを手動で検査します。"
        },
        "Correct Answer": "CloudWatch Logsを使用してEC2インスタンスからログを収集し、ログ内で特定のパターンが検出されたときに修復アクションのためにLambda関数をトリガーするCloudWatchアラームを設定します。",
        "Explanation": "このオプションは、セキュリティインシデントのリアルタイム検出と修復の必要性に直接対処しているため正しいです。CloudWatch Logsを使用してEC2インスタンスからログを収集することで、会社は潜在的なセキュリティ脅威を示す特定のパターンを監視できます。CloudWatchアラームを設定することで、AWS Lambda関数を介して自動応答が可能になり、脅威が検出されたときに事前定義された修復アクションを即座に実行できます。この構成により、セキュリティインシデントがリアルタイムで検出されるだけでなく、自動的に対処され、AWSリソースの全体的なセキュリティ姿勢が強化されます。",
        "Other Options": [
            "このオプションは不正解です。CloudWatch Logsとアラームの使用を提案していますが、自動修復のためにLambda関数を使用することを明示していません。自動化がなければ、検出された脅威への対応はリアルタイムではなくなり、効果的なセキュリティ管理には重要です。",
            "このオプションは不正解です。EC2インスタンスの健康を監視し、自動スケーリングに焦点を当てていますが、これはセキュリティ脅威の検出と修復に直接関連していません。インスタンスの健康を監視することは重要ですが、異常なネットワークトラフィックや不正アクセスの試みに対するセキュリティインシデントへの対応の具体的な必要性には対処していません。",
            "このオプションは不正解です。外部SIEMシステムにログデータを転送することは分析に役立ちますが、リアルタイムの修復アクションのための直接的なメカニズムを提供しません。外部システムへの依存は応答時間に遅延をもたらし、即時の脅威軽減には適していません。"
        ]
    },
    {
        "Question Number": "3",
        "Situation": "金融サービス会社は、災害が発生した場合に重要な取引アプリケーションを非常に短い時間内に復元し、稼働させることを確実にしなければなりません。運用要件を満たすために、会社は15分の復旧時間目標（RTO）を設定しており、これは停電が発生した場合にアプリケーションがこの時間内にオンラインに戻る必要があることを意味します。",
        "Question": "このRTO要件を最もよく満たす災害復旧戦略はどれですか？",
        "Options": {
            "1": "バックアップと復元、Amazon S3に保存された夜間バックアップを利用し、必要に応じてアプリケーションをオンラインに戻すために復元できます。",
            "2": "パイロットライト、オフのまま維持される事前構成されたインフラストラクチャを保持し、必要に応じてアプリケーションを復元するために迅速に起動できます。",
            "3": "ウォームスタンバイ、15分のRTO内にフルプロダクション容量にスケールアップできるアプリケーションの最小限の実行バージョンを維持します。",
            "4": "マルチサイトアクティブ-アクティブセットアップ、完全に運用可能なリソースが複数の場所に維持され、即時フェイルオーバーとゼロダウンタイムを確保します。"
        },
        "Correct Answer": "マルチサイトアクティブ-アクティブセットアップ、完全に運用可能なリソースが複数の場所に維持され、即時フェイルオーバーとゼロダウンタイムを確保します。",
        "Explanation": "マルチサイトアクティブ-アクティブセットアップは、15分の復旧時間目標（RTO）を満たすための最良の災害復旧戦略です。これは、複数の場所にわたって常に完全に運用可能なリソースが利用可能であることを保証します。災害が発生した場合、システムはダウンタイムなしに別のサイトに即座にフェイルオーバーできるため、アプリケーションを直ちにオンラインに戻すという厳しい要件を満たします。このセットアップは、可用性と回復力の最高レベルを提供し、遅延を許さない重要な取引アプリケーションに最適です。",
        "Other Options": [
            "バックアップと復元は、夜間バックアップからの復元に15分以上かかる可能性があるため、15分のRTO要件を満たしません。特にバックアップが大きい場合や復元プロセス中に問題が発生した場合は、さらに時間がかかることがあります。",
            "パイロットライトは、迅速に起動できる最小限のインフラストラクチャを維持しますが、必要なリソースを起動するのに時間がかかるため、15分のRTO内にアプリケーションが完全に運用可能であることを保証するものではありません。",
            "ウォームスタンバイは、スケールアップできるアプリケーションの最小バージョンを維持しますが、フルプロダクション容量にスケールアップするのに15分以上かかる可能性があり、特にリソース制約がある場合やアプリケーションに重要な初期化時間が必要な場合はそうです。"
        ]
    },
    {
        "Question Number": "4",
        "Situation": "高性能コンピューティング（HPC）アプリケーションがAmazon EC2インスタンス上で実行されており、一時的なデータストレージに対して超低遅延と可能な限り最高のIOPSを必要としています。インスタンスが停止したり失敗した場合、データは保持する必要がなく、コストが主な懸念事項です。",
        "Question": "ソリューションアーキテクトはどのストレージオプションを推奨すべきですか？",
        "Options": {
            "1": "Amazon EBS General Purpose SSD (gp3)",
            "2": "Amazon EBS Provisioned IOPS SSD (io2)",
            "3": "インスタンスストア",
            "4": "Amazon S3 with Transfer Acceleration"
        },
        "Correct Answer": "インスタンスストア",
        "Explanation": "インスタンスストアはホストサーバーに物理的に接続されているため、可能な限り最高のIOPSと超低遅延を提供します。これにより、迅速な一時的データストレージを必要とする高性能コンピューティングアプリケーションに最適です。インスタンスが停止したり失敗した場合、データを保持する必要がないため、インスタンスストアを使用することはコスト効率が良く、EBSボリュームのように追加料金が発生しません。",
        "Other Options": [
            "Amazon EBS General Purpose SSD (gp3)は良好なパフォーマンスを提供しコスト効率が良いですが、インスタンスストアと同じレベルのIOPSと遅延を提供しないため、超低遅延を必要とするHPCアプリケーションには適していません。",
            "Amazon EBS Provisioned IOPS SSD (io2)は高いIOPSを提供し、持続的なパフォーマンスを必要とするアプリケーション向けに設計されていますが、インスタンスストアよりも高価であり、保持する必要のない一時的なデータストレージには必要ありません。",
            "Amazon S3 with Transfer Accelerationはインターネット上での高速データ転送のために設計されており、超低遅延の要件には適していません。さらに、S3はオブジェクトストレージサービスであり、高速アクセスを必要とするHPCアプリケーションの一時的なデータストレージには適していません。"
        ]
    },
    {
        "Question Number": "5",
        "Situation": "あるeコマース会社は、予期しない地域的な障害が発生した場合にデータベースを迅速に回復するための災害復旧ソリューションを必要としています。最小限のダウンタイムとデータ損失を求めています。",
        "Question": "低い復旧ポイント目標（RPO）と低い復旧時間目標（RTO）を満たすために、会社はどのAWSサービスと戦略を検討すべきですか？",
        "Options": {
            "1": "Amazon RDSのMulti-AZデプロイメントとクロスリージョンリードレプリカを使用すること。これにより、自動フェイルオーバーとクロスリージョンレプリケーションが提供され、最小限のデータ損失で迅速な回復が可能です。",
            "2": "バージョニングを有効にしたAmazon S3を使用すること。これにより、各オブジェクトの複数のバージョンを保持することでデータの耐久性が確保されます。",
            "3": "データベースの定期的なスナップショットのためにAWS Backupを使用すること。これにより、複数のリージョンにわたるデータベースの時点復旧が提供されます。",
            "4": "スケジュールされたバックアップを使用したAmazon EC2 Auto Scaling。これにより、自動スケーリングと定期的なデータ復旧が可能です。"
        },
        "Correct Answer": "Amazon RDSのMulti-AZデプロイメントとクロスリージョンリードレプリカを使用すること。これにより、自動フェイルオーバーとクロスリージョンレプリケーションが提供され、最小限のデータ損失で迅速な回復が可能です。",
        "Explanation": "Amazon RDSのMulti-AZデプロイメントは高可用性と耐久性のために設計されています。Multi-AZセットアップでは、RDSは自動的にデータベースを異なるアベイラビリティゾーンのスタンバイインスタンスにレプリケートし、障害が発生した場合に自動フェイルオーバーを可能にします。このセットアップはダウンタイムを最小限に抑え（低RTO）、データが継続的にレプリケートされることを保証し、低い復旧ポイント目標（RPO）を達成します。さらに、クロスリージョンリードレプリカを使用することで、地域的な障害が発生した場合のデータ冗長性と迅速な回復が可能になり、会社の要件に理想的なソリューションとなります。",
        "Other Options": [
            "バージョニングを有効にしたAmazon S3は主にオブジェクトストレージ用であり、必要なデータベース復旧機能を提供しません。複数のオブジェクトのバージョンを保持することでデータの耐久性を確保しますが、データベースの低RPOおよびRTOのニーズには対応していません。",
            "データベースの定期的なスナップショットのためのAWS Backupは時点復旧を提供できますが、Multi-AZデプロイメントとクロスリージョンリードレプリカほど低いRPOおよびRTOの要件を効果的に満たすことはできません。スナップショットの復元には時間がかかることがあり、ダウンタイムが長くなる可能性があります。",
            "スケジュールされたバックアップを使用したAmazon EC2 Auto ScalingはEC2インスタンスのスケーリングに焦点を当てており、データベースのための災害復旧ソリューションを本質的に提供しません。スケジュールされたバックアップは、会社が必要とする即時のフェイルオーバーと低RPO/RTOを提供しない可能性があります。"
        ]
    },
    {
        "Question Number": "6",
        "Situation": "ある会社はAmazon RDS上でウェブアプリケーションを運営しており、プライマリデータベースから読み取りクエリをオフロードすることでアプリケーションの読み取りパフォーマンスを向上させたいと考えています。会社はピークトラフィック時にプライマリデータベースが圧倒されないようにする必要があります。彼らは増加した読み取り負荷を処理するためにリードレプリカの使用を検討しています。",
        "Question": "会社がリードレプリカを使用すべきタイミングを最もよく説明しているのはどれですか？",
        "Options": {
            "1": "アプリケーションが高い書き込みスループットを必要とし、複数のリージョンにわたって書き込みを分散させる必要がある場合にリードレプリカを使用します。",
            "2": "アプリケーションに読み取り重視のクエリが多く、複数のレプリカにわたって読み取り容量をスケールさせる必要がある場合にリードレプリカを使用します。",
            "3": "アプリケーションが画像やドキュメントなどの非構造化データを保存する必要があり、高可用性を必要とする場合にリードレプリカを使用します。",
            "4": "アプリケーションのパフォーマンスを向上させるためではなく、データ移行の目的でのみリードレプリカを使用します。"
        },
        "Correct Answer": "アプリケーションに読み取り重視のクエリが多く、複数のレプリカにわたって読み取り容量をスケールさせる必要がある場合にリードレプリカを使用します。",
        "Explanation": "リードレプリカはプライマリデータベースからの読み取りトラフィックをオフロードするために特別に設計されています。アプリケーションが高いボリュームの読み取りクエリを経験する場合、リードレプリカを使用することで、これらのクエリを複数のインスタンスに分散させることができ、読み取りパフォーマンスが向上し、ピークトラフィック時にプライマリデータベースが圧倒されないようにします。このセットアップは、読み取り重視のワークロードに対するスケーラビリティと応答性を向上させます。",
        "Other Options": [
            "アプリケーションが高い書き込みスループットを必要とし、複数のリージョンにわたって書き込みを分散させる必要がある場合にリードレプリカを使用します。これは誤りです。リードレプリカは読み取り操作のために設計されており、書き込み操作を分散させるためのものではありません。書き込みは常にプライマリデータベースに向けられます。",
            "アプリケーションが画像やドキュメントなどの非構造化データを保存する必要があり、高可用性を必要とする場合にリードレプリカを使用します。これは誤りです。リードレプリカは非構造化データを保存するために使用されず、データベース内の構造化データの読み取りパフォーマンスを向上させるために使用されます。",
            "アプリケーションのパフォーマンスを向上させるためではなく、データ移行の目的でのみリードレプリカを使用します。これは誤りです。リードレプリカはデータ移行中に使用されることもありますが、その主な目的は読み取りクエリを処理することでアプリケーションのパフォーマンスを向上させることです。"
        ]
    },
    {
        "Question Number": "7",
        "Situation": "メディア制作会社は、コストを抑えつつ動画編集のための高性能ストレージを必要としています。彼らは高性能と低性能のワークロードが混在しており、適切なブロックストレージの種類を選ぶ必要があります。",
        "Question": "コストを最適化しながらパフォーマンス要件を満たすために、会社はどのブロックストレージオプションの組み合わせを使用すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "すべてのボリュームに対してProvisioned IOPS SSD (io2)",
            "2": "高性能タスクにはGeneral Purpose SSD (gp3)、低性能タスクにはThroughput Optimized HDD (st1)",
            "3": "すべてのボリュームにCold HDD (sc1)",
            "4": "すべてのデータに対してブロックストレージの代わりにAmazon S3を使用",
            "5": "ほとんどのワークロードにGeneral Purpose SSD (gp3)、アーカイブストレージニーズにはCold HDD (sc1)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "すべてのボリュームに対してProvisioned IOPS SSD (io2)",
            "高性能タスクにはGeneral Purpose SSD (gp3)、低性能タスクにはThroughput Optimized HDD (st1)"
        ],
        "Explanation": "Provisioned IOPS SSD (io2)は、高性能ワークロード（動画編集など）に適した、高速で予測可能かつ一貫したスループットを提供する高性能ストレージオプションです。しかし、他のオプションよりも高価です。一方、General Purpose SSD (gp3)は価格とパフォーマンスのバランスを提供し、幅広いワークロードに適しています。Throughput Optimized HDD (st1)は、低コストで中程度のパフォーマンスを提供し、要求の少ないタスクに適しています。",
        "Other Options": [
            "すべてのボリュームにCold HDD (sc1)を使用するのは適切な選択ではありません。これは、アクセス頻度が低く、長期的かつ順次のコールドデータやアーカイブストレージ用に設計されており、動画編集に必要な高いパフォーマンスを提供しません。",
            "すべてのデータに対してAmazon S3の代わりにブロックストレージを使用するのは理想的ではありません。なぜなら、S3はオブジェクトストレージサービスであり、ブロックストレージサービスではないからです。動画編集のような高性能ワークロードには、データへの低遅延アクセスが必要です。",
            "ほとんどのワークロードにGeneral Purpose SSD (gp3)、アーカイブストレージニーズにはCold HDD (sc1)を使用するのは最良の選択ではありません。gp3はほとんどのワークロードに適していますが、sc1は高性能タスクには適していません。これは、アクセス頻度が低く、長期的かつ順次のコールドデータやアーカイブストレージ用に設計されています。"
        ]
    },
    {
        "Question Number": "8",
        "Situation": "大規模なマルチVPCアーキテクチャにおいて、多数のポイントツーポイント接続を維持し、ネットワークの複雑さが増すことに課題を感じています。",
        "Question": "スケーラビリティとレジリエンスを向上させながら、ネットワークアーキテクチャを最も簡素化するソリューションはどれですか？",
        "Options": {
            "1": "各VPC間にVPN接続を設定して、直接通信を確保し、セキュリティを強化します。",
            "2": "各VPCにAWS Direct Connectを使用し、各VPCが独立してオンプレミスネットワークに接続できるようにします。",
            "3": "Transit Gateway (TGW)を実装して、すべてのVPCを接続する中央ハブとして機能させ、個別接続の必要性を減らします。",
            "4": "すべてのVPC間にピアリング接続を構成して、高可用性を維持し、接続間の遅延を最小限に抑えます。"
        },
        "Correct Answer": "Transit Gateway (TGW)を実装して、すべてのVPCを接続する中央ハブとして機能させ、個別接続の必要性を減らします。",
        "Explanation": "Transit Gateway (TGW)は、複数のVPCとオンプレミスネットワークを相互接続するための中央ハブとして機能し、ネットワークアーキテクチャを簡素化します。これにより、多数のポイントツーポイント接続を管理する複雑さが軽減され、すべてのVPCがTGWを介して通信できるようになります。新しい接続を各ペアに対して確立する必要がなく、VPCを簡単に追加できるため、スケーラビリティが向上します。さらに、単一の管理および監視ポイントを提供することで、トラブルシューティングやメンテナンスを効率化し、レジリエンスを向上させます。",
        "Other Options": [
            "各VPC間にVPN接続を設定すると、接続の複雑なメッシュが作成され、管理のオーバーヘッドが増加し、パフォーマンスのボトルネックが発生する可能性があります。このアプローチは、VPCの数が増えるにつれてスケールしません。",
            "各VPCにAWS Direct Connectを使用すると、オンプレミスネットワークへの独立した接続が可能ですが、VPC間の通信の複雑さには対処できません。各VPCは独自のセットアップと管理が必要であり、断片化されたネットワークアーキテクチャを引き起こす可能性があります。",
            "すべてのVPC間にピアリング接続を構成すると、複雑なメッシュネットワークが作成されます。低遅延の接続を提供できますが、VPCの数が増えるにつれて多数のピアリング接続の管理が煩雑になり、Transit Gatewayと比較してスケーラビリティが低下します。"
        ]
    },
    {
        "Question Number": "9",
        "Situation": "医療会社は、災害復旧の目的で患者データをAWSにバックアップする必要があります。コストを削減するために、バックアップの長期保存を確保しつつ、ストレージコストを最小限に抑えるソリューションが必要です。また、必要に応じて数時間以内にデータを取得できるオプションも求めています。",
        "Question": "これらの要件を最も満たすバックアップ戦略はどれですか？",
        "Options": {
            "1": "Amazon S3 Standardにバックアップを保存",
            "2": "アーカイブストレージ用にAmazon S3 Glacier Flexible Retrievalを使用",
            "3": "Amazon S3 Standard-IAにバックアップを保存",
            "4": "同じリージョンに保存されたAmazon EBSスナップショットを使用"
        },
        "Correct Answer": "アーカイブストレージ用にAmazon S3 Glacier Flexible Retrievalを使用",
        "Explanation": "Amazon S3 Glacier Flexible Retrievalは、長期的なデータアーカイブ用に設計されており、アクセス頻度が低いデータを保存するためのコスト効果の高いソリューションを提供します。数時間以内にデータを取得できるため、医療会社のバックアップをタイムリーに取得する要件に合致しています。このオプションはストレージコストを最小限に抑えつつ、データが長期間保持されることを保証し、災害復旧の目的に最適です。",
        "Other Options": [
            "Amazon S3 Standardにバックアップを保存するのは、長期保存にはコスト効果が低いです。これは、頻繁にアクセスされるデータ用に設計されており、同じ量のデータに対して時間の経過とともにGlacierよりも高いコストが発生します。",
            "アーカイブストレージ用にAmazon S3 Glacier Flexible Retrievalを使用するのは正しい答えですが、S3 Glacier Deep Archiveのオプションを考慮すると、長期保存にはさらに安価です。ただし、データを数時間以内に取得する要件には合致せず、取得時間は最大12時間かかる可能性があります。",
            "Amazon S3 Standard-IA（Infrequent Access）にバックアップを保存するのはStandardよりも良いオプションですが、長期保存に関してはGlacierほどコスト効果が高くありません。アクセス頻度が低いデータには適していますが、長期保存のためのコスト削減のレベルはGlacierほどではありません。"
        ]
    },
    {
        "Question Number": "10",
        "Situation": "あるSaaS企業が、中央のAmazon RDS for MySQLデータベースに接続するWebアプリケーションを提供しています。このアプリケーションは、時折データベースの最大接続数を超える接続のスパイクが発生します。",
        "Question": "ソリューションアーキテクトは、データベース接続を効果的に管理し、接続制限を超えないようにするためにどのソリューションを実装すべきですか？",
        "Options": {
            "1": "Amazon RDSインスタンスで許可される最大接続数を増やす。",
            "2": "データベースクエリを処理し、直接接続を減らすためにAmazon ElastiCacheクラスターを展開する。",
            "3": "データベース接続を効率的にプールし共有するためにAmazon RDS Proxyを実装する。",
            "4": "AWS Lambda関数を使用してデータベース接続を動的に管理および分配する。"
        },
        "Correct Answer": "データベース接続を効率的にプールし共有するためにAmazon RDS Proxyを実装する。",
        "Explanation": "Amazon RDS Proxyは、複数のアプリケーションインスタンス間で接続をプールし共有することで、データベース接続を効率的に管理するように設計されています。これにより、データベースへの同時接続数を減らすことができ、接続要求のスパイクが発生するシナリオで特に有用です。RDS Proxyを使用することで、アプリケーションはデータベースへのアクティブな接続数を少なく保つことができ、接続制限を超えることを防ぎ、全体的なアプリケーションのパフォーマンスと信頼性を向上させます。",
        "Other Options": [
            "Amazon RDSインスタンスで許可される最大接続数を増やすことは一時的な解決策を提供するかもしれませんが、接続スパイクの根本的な問題には対処しません。このアプローチは、リソース消費の増加を招く可能性があり、アプリケーションが成長し続ける場合には持続可能ではないかもしれません。",
            "Amazon ElastiCacheクラスターを展開することで、頻繁にアクセスされるデータをキャッシュすることによりデータベースの負荷を軽減できますが、データベース接続を直接管理するわけではありません。データベースへのクエリ数を減らすことでパフォーマンスを向上させることはできますが、最大接続制限を超える問題を解決することはできません。",
            "AWS Lambda関数を使用してデータベース接続を動的に管理および分配することは、このシナリオに対する効果的な解決策ではありません。Lambda関数はステートレスであり、イベント駆動型アーキテクチャ向けに設計されているため、データベース接続のスパイクを処理するために必要な接続プールと管理機能を提供しない可能性があります。"
        ]
    },
    {
        "Question Number": "11",
        "Situation": "ある企業がAWS上にデータベースソリューションを展開し、バックアップとスケーリングのためのマネージドサービスの利点を享受しながら、カスタムOSパッチやソフトウェアインストールの柔軟性を保持したいと考えています。彼らはAmazon RDS、RDS Custom、およびEC2上でのデータベースの運用を検討しています。",
        "Question": "制御とマネージドサービスのバランスに最も適したオプションはどれですか？",
        "Options": {
            "1": "Amazon RDSは、AWSによる完全な管理を提供し、自動バックアップとスケーリングを行いますが、OSやソフトウェアのカスタマイズは制限されています。",
            "2": "RDS Customは、企業がカスタムOSパッチやソフトウェアのインストールを管理できる一方で、AWSがバックアップとスケーリングを管理します。",
            "3": "EC2で自己管理のデータベースを運用することで、OSやソフトウェアに対する完全な制御を提供しますが、企業はバックアップを含むすべての管理タスクを処理する必要があります。",
            "4": "Amazon RDSをMulti-AZで有効にすることで、可用性とバックアップのバランスを取りますが、カスタマイズのためのOSレベルのアクセスは許可されません。"
        },
        "Correct Answer": "RDS Customは、企業がカスタムOSパッチやソフトウェアのインストールを管理できる一方で、AWSがバックアップとスケーリングを管理します。",
        "Explanation": "RDS Customは、カスタムOSパッチやソフトウェアのインストールの柔軟性を提供しつつ、AWSが提供するマネージドサービス（自動バックアップやスケーリングなど）の利点を享受できるように特別に設計されています。このオプションは、制御と管理のバランスをうまく取っており、企業が特定のニーズに合わせてデータベース環境を調整できる一方で、マネージドサービスの利点を犠牲にすることはありません。",
        "Other Options": [
            "Amazon RDSは、AWSによる完全な管理を提供し、自動バックアップとスケーリングを行いますが、OSやソフトウェアのインストールのカスタマイズは許可されておらず、企業の柔軟性の要件を満たしていません。",
            "EC2で自己管理のデータベースを運用することは、オペレーティングシステムやソフトウェアに対する完全な制御を提供しますが、企業はデータベースのすべての側面を管理する必要があり、バックアップやスケーリングを含むため、マネージドサービスの希望に反します。",
            "Amazon RDSをMulti-AZで有効にすることで可用性が向上し、自動バックアップが提供されますが、標準のRDSと同様にOSレベルのアクセスやカスタマイズは許可されず、企業のニーズには適していません。"
        ]
    },
    {
        "Question Number": "12",
        "Situation": "複数のAWSアカウントを持つ企業が、すべてのアカウントにわたってセキュリティと権限を管理するための集中管理アプローチを実装したいと考えています。企業は、各アカウントが厳格なコンプライアンスポリシーに従うことを要求しつつ、個々のアカウント管理者が自分のアカウント内のユーザーを管理できるようにしたいと考えています。",
        "Question": "企業はこれらの要件を達成するためにどのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "AWS IAM Identity Center (AWS Single Sign-On)",
            "2": "AWS Organizationsとサービスコントロールポリシー (SCP)",
            "3": "AWS IAMとクロスアカウントロール",
            "4": "Amazon Cognito"
        },
        "Correct Answer": "AWS Organizationsとサービスコントロールポリシー (SCP)",
        "Explanation": "AWS Organizationsを使用すると、複数のAWSアカウントを集中管理し、それらのアカウントにポリシーを適用できます。サービスコントロールポリシー (SCP) は、AWS Organizationsの機能であり、アカウントに対して権限のガードレールを設定することを可能にし、厳格なポリシーに準拠しつつ、個々のアカウント管理者が自分のアカウント内のユーザーや権限を管理できるようにします。この設定は、複数のアカウントにわたる集中管理とコンプライアンスの強制という企業の要件を満たします。",
        "Other Options": [
            "AWS IAM Identity Center (AWS Single Sign-On)は、主にAWSアカウントやアプリケーション間でのユーザーアクセスとシングルサインオンを管理するために使用されます。ユーザー管理には役立ちますが、AWS OrganizationsとSCPが提供する集中管理ポリシーの強制機能は提供しません。",
            "AWS IAMとクロスアカウントロールは、異なるAWSアカウント間で権限を付与することを可能にしますが、複数のアカウントにわたってコンプライアンスポリシーを強制するための集中管理の方法は提供しません。各アカウントは、SCPによって提供される全体的な制御なしに、自分のIAMポリシーを管理する必要があります。",
            "Amazon Cognitoは、Webおよびモバイルアプリケーションのユーザー認証と管理のために設計されています。複数のAWSアカウントにわたる権限やコンプライアンスを管理するには適しておらず、ユーザーのアイデンティティに焦点を当てているため、アカウントレベルのポリシー強制には不向きです。"
        ]
    },
    {
        "Question Number": "13",
        "Situation": "eコマース企業であるABC Onlineは、CloudFront、Application Load Balancer (ALB)、AppSync、API Gatewayなどのサービスを使用して、AWS上にウェブサイトとAPIをホストしています。SQLインジェクション、クロスサイトスクリプティング（XSS）、IPベースの攻撃などの脅威から保護するために、ABC Onlineは、悪意のあるトラフィックを動的にブロックし、正当なユーザーには中断のないアクセスを許可するファイアウォールソリューションを実装したいと考えています。彼らは、AWS Web Application Firewall (WAF)とWeb Access Control Lists (Web ACLs)を使用して、複数のAWSサービスにわたってアプリケーションを保護することを検討しています。セキュリティチームは、特定の基準に基づいてトラフィックの流れを制御し、アプリケーションや顧客データを危険にさらす攻撃を防ぐためにカスタムルールを設定したいと考えています。",
        "Question": "AWS Web Application Firewall (WAF)とWeb ACLsが、CloudFront、ALB、AppSync、API GatewayなどのAWSサービスにデプロイされたアプリケーションを保護するためにどのように機能するかを最もよく説明しているのは次のうちどれですか？",
        "Options": {
            "1": "AWS WAFは、手動の調整や更新なしにすべての受信トラフィックを自動的に許可または拒否する事前定義されたルールを適用し、一般的な脅威に対して静的な保護を提供します。",
            "2": "AWS WAFのWeb ACLsは、CloudFrontや地域サービスなどの特定のリソースに適用できるルールとルールグループで構成され、IPの評判、SQLインジェクション、クロスサイトスクリプティング（XSS）攻撃などの定義された基準に基づいてアクセスを制御します。",
            "3": "AWS WAFはWeb ACLsを使用して動作し、特定のIPアドレスから発信されるトラフィックのみをブロックするため、IPベースの攻撃を防ぐためにのみ効果的です。",
            "4": "Web ACLsはCloudFrontディストリビューションにのみ対応しており、ALB、AppSync、API Gatewayなどの他のAWSサービスでは使用できません。"
        },
        "Correct Answer": "AWS WAFのWeb ACLsは、CloudFrontや地域サービスなどの特定のリソースに適用できるルールとルールグループで構成され、IPの評判、SQLインジェクション、クロスサイトスクリプティング（XSS）攻撃などの定義された基準に基づいてアクセスを制御します。",
        "Explanation": "AWS WAFは、ウェブトラフィックをフィルタリングするルールとルールグループを含むWeb Access Control Lists (Web ACLs)を作成することをユーザーに許可します。これらのルールは、SQLインジェクションやXSSなどの特定の脅威をターゲットにするようにカスタマイズでき、CloudFront、ALB、AppSync、API GatewayなどのさまざまなAWSサービスに適用できます。この柔軟性により、組織は悪意のあるトラフィックを動的にブロックし、正当なユーザーには中断のないアクセスを許可することができ、アプリケーションのセキュリティを維持するために不可欠です。",
        "Other Options": [
            "AWS WAFは事前定義されたルールのみに依存せず、カスタムルールの作成を許可し、進化する脅威に適応するために手動の調整が必要です。静的ではなく動的な保護を提供します。",
            "AWS WAFは特定のIPアドレスからのトラフィックをブロックすることに限定されません。SQLインジェクションやXSSを含む幅広い基準に基づいてトラフィックをブロックまたは許可できるため、ウェブアプリケーションセキュリティの包括的なソリューションとなります。",
            "Web ACLsはCloudFrontだけでなく、複数のAWSサービスと互換性があります。Application Load Balancers、API Gateway、その他の地域サービスにも適用でき、さまざまなプラットフォームにわたるウェブアプリケーションセキュリティへの統一的なアプローチを提供します。"
        ]
    },
    {
        "Question Number": "14",
        "Situation": "ある企業は、AWS上に高可用性のリレーショナルデータベースをデプロイし、アベイラビリティゾーンの障害が発生した場合にシームレスにフェイルオーバーできるようにしたいと考えています。また、読み取りトラフィックをオフロードし、災害復旧のためのバックアップを維持することにも関心があります。",
        "Question": "これらの要件を満たすために、どのAWS RDS構成を使用すべきですか？",
        "Options": {
            "1": "Amazon RDSをMulti-AZデプロイメントで設定し、スタンバイインスタンスへの同期レプリケーションを行い、異なるリージョンに読み取りレプリカを作成して読み取りのスケーラビリティを確保します。",
            "2": "単一のAmazon RDSインスタンスを使用し、定期的なEBSスナップショットを作成し、フェイルオーバーのためにリモートアクセスを許可するためにパブリックアドレッシングを設定します。",
            "3": "Amazon RDSをMulti-AZデプロイメントで設定し、同じアベイラビリティゾーン内の読み取りレプリカのために非同期レプリケーションを行います。",
            "4": "Amazon RDSをクロスリージョンレプリケーションでデプロイし、メインインスタンスが失敗した場合に別のAWSリージョンのプライマリインスタンスにフェイルオーバーできるようにします。"
        },
        "Correct Answer": "Amazon RDSをMulti-AZデプロイメントで設定し、スタンバイインスタンスへの同期レプリケーションを行い、異なるリージョンに読み取りレプリカを作成して読み取りのスケーラビリティを確保します。",
        "Explanation": "この構成は、状況で示されたすべての要件を満たしています。Multi-AZデプロイメントは、障害が発生した場合に別のアベイラビリティゾーンのスタンバイインスタンスに自動的にフェイルオーバーすることで高可用性を提供し、シームレスなフェイルオーバーを確保します。同期レプリケーションにより、データがスタンバイインスタンスに一貫してレプリケートされます。さらに、異なるリージョンに読み取りレプリカを作成することで、企業は読み取りトラフィックをオフロードし、読み取り操作をスケールさせることができ、バックアップを通じて災害復旧のオプションも提供されます。",
        "Other Options": [
            "単一のAmazon RDSインスタンスを使用し、定期的なEBSスナップショットを作成することは、高可用性やシームレスなフェイルオーバーを提供しません。回復には手動の介入が必要です。パブリックアドレッシングは可用性を向上させず、データベースをセキュリティリスクにさらす可能性があります。",
            "Amazon RDSをMulti-AZデプロイメントで設定し、同じアベイラビリティゾーン内の読み取りレプリカのために非同期レプリケーションを行うことは、必要な高可用性やフェイルオーバー機能を提供しません。Multi-AZの利点を活用せず、効果的に読み取りトラフィックをオフロードすることもできません。",
            "Amazon RDSをクロスリージョンレプリケーションでデプロイすることは、要件に対して必要ではありません。設定が複雑になり、レイテンシが発生する可能性があります。主な焦点は、同じリージョン内での高可用性のためのMulti-AZデプロイメントと、スケーラビリティのための読み取りレプリカに置くべきです。"
        ]
    },
    {
        "Question Number": "15",
        "Situation": "ある企業が、SSLを使用してコンテンツを安全に提供するためにCloudFrontディストリビューションを設定しています。彼らは代替ドメイン名を使用し、視聴者からCloudFrontへの安全な接続と、CloudFrontからS3バケットやApplication Load Balancer (ALB)などのオリジンへの安全な接続を確保したいと考えています。",
        "Question": "安全なSSL接続を確保するためにどのステップを踏む必要がありますか？",
        "Options": {
            "1": "CloudFrontがデプロイされているリージョンでACMを使用してSSL証明書を設定します。",
            "2": "S3バケット用にACMでSSL証明書を設定し、CloudFrontがHTTPSでバケットを直接使用できるようにします。",
            "3": "ALB用にACMからの証明書を使用し、カスタムオリジンには外部証明書を使用します。自己署名証明書は許可されます。",
            "4": "CloudFrontでSNIサポートを設定し、単一のIPで複数のHTTPSサイトを処理し、代替ドメイン名用にus-east-1でACM証明書を生成します。"
        },
        "Correct Answer": "CloudFrontがデプロイされているリージョンでACMを使用してSSL証明書を設定します。",
        "Explanation": "安全なSSL接続を確保するために、企業はAWS Certificate Manager (ACM)を使用してCloudFrontにSSL証明書を設定する必要があります。この証明書は、視聴者とCloudFrontの間の接続を暗号化するために使用されます。CloudFrontは、代替ドメイン名で使用するためにSSL証明書が米国東部（バージニア州北部）リージョン（us-east-1）にある必要があることに注意することが重要です。このステップにより、CloudFrontによって提供されるコンテンツがHTTPSを介して安全に配信されることが保証されます。",
        "Other Options": [
            "S3バケット用にACMでSSL証明書を設定する必要はありません。CloudFrontは、バケット自体のために別のSSL証明書を必要とせずにHTTPSでS3からコンテンツを提供できます。CloudFrontがSSLターミネーションを処理します。",
            "ALB用にACMからの証明書を使用し、カスタムオリジンには外部証明書を使用することは最良のプラクティスではありません。すべてのオリジンは、一貫性と管理の容易さのために理想的にはACM証明書を使用すべきです。自己署名証明書は、信頼の問題から本番環境では一般的に推奨されません。",
            "CloudFrontでSNIサポートを設定する必要はありません。このシナリオでは、SNI（Server Name Indication）は単一のIPアドレスから複数のSSL証明書を提供することを可能にしますが、主な要件は代替ドメイン名用にCloudFrontでSSL証明書を正しく設定することであり、CloudFrontがSSLターミネーションを処理します。"
        ]
    },
    {
        "Question Number": "16",
        "Situation": "ある企業は、オンプレミスのデータセンターとAWS環境の間で、安全で信頼性の高い接続を確立する必要があります。これは、機密データにアクセスするためです。企業は、低遅延、高帯域幅、および転送中のデータの暗号化を要求しています。",
        "Question": "これらの要件を最も満たすソリューションはどれですか？",
        "Options": {
            "1": "AWS Direct Connect接続を設定し、VPNオーバーレイを使用してオンプレミスとAWS間のデータ伝送を暗号化し、安全にします。",
            "2": "VPC内に標準のインターネットゲートウェイを設定し、IPsec VPNトンネルを使用して転送中のデータを暗号化します。",
            "3": "インターネットゲートウェイとAWS Shieldを使用してDDoS保護を行い、暗号化にはHTTPSを依存します。",
            "4": "オンプレミスのデータセンターとAWS VPC間にVPCピアリング接続を確立し、安全で低遅延の通信を確保します。"
        },
        "Correct Answer": "AWS Direct Connect接続を設定し、VPNオーバーレイを使用してオンプレミスとAWS間のデータ伝送を暗号化し、安全にします。",
        "Explanation": "AWS Direct Connectは、オンプレミスのデータセンターからAWSへの専用ネットワーク接続を提供し、低遅延と高帯域幅を確保します。VPNオーバーレイを追加することで、転送中のデータを暗号化でき、機密データの安全な伝送に対する企業の要件を満たします。この組み合わせは、Direct Connectのパフォーマンスの利点とVPNのセキュリティを提供し、与えられたシナリオに最適なソリューションとなります。",
        "Other Options": [
            "VPC内に標準のインターネットゲートウェイを設定し、EC2インスタンスをパブリックIPで構成することは、インターネットに直接インスタンスを公開することになり、インターネットから直接アクセスできないという要件に反します。",
            "インターネットゲートウェイを使用して、AWS ShieldでDDoS保護を行い、暗号化にはHTTPSを依存することは、低遅延と高帯域幅の要件を満たしません。HTTPSは転送中のデータを保護するのに適していますが、公共のインターネットに依存することでパフォーマンスが変動し、機密データにアクセスするには理想的ではありません。",
            "VPCピアリング接続を確立することは、この文脈では適用されません。VPCピアリングは、AWS内の2つのVPCを接続するために使用され、オンプレミスのデータセンターをAWSに接続するためには使用されません。さらに、VPCピアリングは暗号化や専用接続を提供せず、企業のニーズには重要です。"
        ]
    },
    {
        "Question Number": "17",
        "Situation": "ある企業は、VPCのプライベートサブネット内にAmazon EC2インスタンス上でアプリケーションを展開しています。このアプリケーションは、更新をダウンロードし、他の公共サービスと通信するためにインターネットにアクセスする必要がありますが、インターネットから直接アクセスできるべきではありません。",
        "Question": "この要件を満たすために企業が使用すべき構成はどれですか？",
        "Options": {
            "1": "プライベートサブネットにインターネットゲートウェイを接続し、EC2インスタンスをパブリックIPで構成してアウトバウンドアクセスを提供します。",
            "2": "パブリックサブネットにNATゲートウェイを展開し、プライベートサブネットにルートテーブルを関連付けて0.0.0.0/0トラフィックをNATゲートウェイに向け、NATゲートウェイにElastic IPを設定します。",
            "3": "VPCピアリングを使用してプライベートサブネットをインターネットアクセスのある別のVPCに接続し、2つのVPC間のルーティングを構成します。",
            "4": "プライベートサブネットとインターネットアクセスのあるオンプレミスネットワーク間にVPN接続を設定し、EC2インスタンスがアウトバウンドトラフィックのためにオンプレミスネットワークを経由できるようにします。"
        },
        "Correct Answer": "パブリックサブネットにNATゲートウェイを展開し、プライベートサブネットにルートテーブルを関連付けて0.0.0.0/0トラフィックをNATゲートウェイに向け、NATゲートウェイにElastic IPを設定します。",
        "Explanation": "NATゲートウェイは、プライベートサブネット内のインスタンスがインターネットへのアウトバウンドトラフィックを開始できるようにし、インターネットからのインバウンドトラフィックを防ぎます。パブリックサブネットにNATゲートウェイを展開し、プライベートサブネットのルートテーブルを0.0.0.0/0トラフィックをNATゲートウェイに向けるルートで関連付けることで、EC2インスタンスはインターネットにアクセスして更新や通信を行うことができ、インターネットから直接アクセスされることはありません。NATゲートウェイに割り当てられたElastic IPは、アウトバウンドトラフィックのためのパブリックIPを提供し、適切なインターネット接続を確保します。",
        "Other Options": [
            "プライベートサブネットにインターネットゲートウェイを接続し、EC2インスタンスをパブリックIPで構成することは、インスタンスをインターネットに直接公開することになり、インターネットから直接アクセスできないという要件に反します。",
            "VPCピアリングを使用してプライベートサブネットをインターネットアクセスのある別のVPCに接続することは、プライベートサブネットのインスタンスがインターネットにアクセスするための直接ルートを提供しません。VPCピアリングは、NATなどの追加構成なしにはプライベートサブネットのインターネットアクセスを促進しません。",
            "プライベートサブネットとインターネットアクセスのあるオンプレミスネットワーク間にVPN接続を設定することは、アーキテクチャを複雑にし、遅延を引き起こす可能性があります。また、EC2インスタンスがインターネットにアクセスするために外部ネットワークに依存するため、インターネットから露出せずにアクセスするという要件に直接対応していません。"
        ]
    },
    {
        "Question Number": "18",
        "Situation": "ある金融サービス会社は、毎日オンプレミスで大量の顧客データを生成し保存しています。厳格な規制およびコンプライアンス要件により、このデータをローカルに保持する必要がありますが、ストレージコストを削減するために、古いアクセス頻度の低いデータをAWSにオフロードしたいと考えています。既存のアプリケーションやワークフローを中断することなく、現在のストレージインフラをAWSにシームレスに拡張できるソリューションが必要です。",
        "Question": "どのAWSサービスが企業の要件を最も満たしますか？（2つ選択）",
        "Options": {
            "1": "ライフサイクルポリシーを使用したAmazon S3",
            "2": "AWS Direct Connect",
            "3": "AWS Storage Gateway",
            "4": "Amazon EBSスナップショットエクスポート",
            "5": "Amazon Glacier Deep Archive with Vault Lock"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "ライフサイクルポリシーを使用したAmazon S3",
            "AWS Storage Gateway"
        ],
        "Explanation": "ライフサイクルポリシーを使用したAmazon S3は、定義されたルールに基づいてデータを異なるストレージクラスに自動的に移行できるため、アクセス頻度の低いデータのストレージコストを削減するのに役立ちます。AWS Storage Gatewayも正解で、オンプレミスのアプリケーションをAWSストレージにシームレスに接続する方法を提供します。ファイル、ボリューム、テープストレージタイプをサポートし、S3、Glacier、EBSにデータを保存するために使用できるため、企業の要件に適しています。",
        "Other Options": [
            "AWS Direct Connectは、主にオンプレミスからAWSへの専用ネットワーク接続を確立するために使用され、ストレージやアーカイブ目的には特に使用されません。",
            "Amazon EBSスナップショットエクスポートは、Amazon EBSスナップショットをAmazon S3バケットにエクスポートできますが、オンプレミスのストレージインフラをAWSにシームレスに拡張することはできません。",
            "Amazon Glacier Deep Archive with Vault Lockは、非常に低コストでデータアーカイブや長期バックアップ用のストレージクラスですが、オンプレミスのストレージをAWSにシームレスに拡張する方法を提供せず、データの取得時間が最大12時間かかることがあり、企業のアーカイブデータへのアクセスニーズには合致しません。"
        ]
    },
    {
        "Question Number": "19",
        "Situation": "ビデオストリーミングサービスは、特にライブイベント中に視聴者トラフィックの予測不可能な急増を経験しています。このサービスは、手動介入なしで突然の負荷の増加に対応できるようにし、オフピーク時のコストを最小限に抑える必要があります。",
        "Question": "トラフィックパターンに基づいてEC2インスタンスの数を自動的に調整するために、ソリューションアーキテクトはどのAWS機能を設定すべきですか？",
        "Options": {
            "1": "AWS Elastic Beanstalkスケーリング",
            "2": "Amazon CloudWatchアラーム",
            "3": "Amazon EC2 Auto Scaling",
            "4": "AWS Lambdaオートスケーリング"
        },
        "Correct Answer": "Amazon EC2 Auto Scaling",
        "Explanation": "Amazon EC2 Auto Scalingは、変化するトラフィックパターンに応じてEC2インスタンスの数を自動的に調整するように設計されています。ピーク時にはスケールアウト（インスタンスを追加）し、オフピーク時にはスケールイン（インスタンスを削除）することができ、手動介入は不要です。この機能は、ライブイベント中の視聴者トラフィックの予測不可能な急増に対応するのに理想的であり、需要が低い期間中のコストを最小限に抑えることができます。",
        "Other Options": [
            "AWS Elastic Beanstalkスケーリングは、アプリケーションとその環境の管理を可能にする機能であり、スケーリングを含みますが、EC2インスタンス管理に直接焦点を当てているわけではありません。トラフィックパターンに基づく生のインスタンススケーリングよりもアプリケーションに適しています。",
            "Amazon CloudWatchアラームは、メトリクスを監視し、しきい値に基づいてアクションをトリガーできますが、EC2インスタンスを直接スケールすることはできません。EC2 Auto Scalingと組み合わせてスケーリングアクションをトリガーするために使用できますが、スケーリング自体は行いません。",
            "AWS Lambdaオートスケーリングはサーバーレスコンピューティングに関連しており、受信リクエストの数に基づいてLambda関数インスタンスの数を自動的に調整します。ただし、EC2インスタンスのスケーリングには適用されず、このシナリオの要件には合致しません。"
        ]
    },
    {
        "Question Number": "20",
        "Situation": "ある企業は、継続的な可用性とレジリエンシーを確保するために、us-east-1リージョン内のAmazon EC2インスタンスで重要なアプリケーションを運用しています。高可用性アーキテクチャを実現するために、個々のホスト、アベイラビリティゾーン（AZ）、またはインスタンスなど、さまざまなレベルでの潜在的な障害に耐えられるようにEC2デプロイメントを設計する必要があります。",
        "Question": "次のアプローチのうち、レジリエントなEC2アーキテクチャを最もサポートするものはどれですか？（2つ選択してください）",
        "Options": {
            "1": "AZの障害が発生した場合に障害隔離と冗長性を提供するために、リージョン内の複数のアベイラビリティゾーンにEC2インスタンスを展開します。",
            "2": "単一のアベイラビリティゾーンにEC2インスタンスを展開しますが、EC2 Auto Scalingを利用して失敗したインスタンスを即座に置き換えます。",
            "3": "リソース利用率を最大化し、管理を簡素化するために、1つのアベイラビリティゾーン内の専用ホストにすべてのEC2インスタンスを配置します。",
            "4": "高性能を確保するためにインスタンスストアボリュームのみでEC2インスタンスを構成し、耐久性のためにスナップショットに依存します。",
            "5": "複数のアベイラビリティゾーンに分散したAuto Scalingグループと組み合わせてElastic Load Balancing（ELB）を使用し、トラフィックを分散し、インスタンスの障害をシームレスに処理します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AZの障害が発生した場合に障害隔離と冗長性を提供するために、リージョン内の複数のアベイラビリティゾーンにEC2インスタンスを展開します。",
            "複数のアベイラビリティゾーンに分散したAuto Scalingグループと組み合わせてElastic Load Balancing（ELB）を使用し、トラフィックを分散し、インスタンスの障害をシームレスに処理します。"
        ],
        "Explanation": "リージョン内の複数のアベイラビリティゾーンにEC2インスタンスを展開することで、AZの障害が発生した場合に障害隔離と冗長性を提供します。これにより、1つのAZがダウンしても、他のAZでアプリケーションが利用可能な状態を保つことができます。複数のアベイラビリティゾーンに分散したAuto Scalingグループと組み合わせてElastic Load Balancing（ELB）を使用することで、トラフィックの分散とインスタンスの障害処理がシームレスに行えます。ELBはトラフィックをインスタンス間で均等に分配し、Auto Scalingは需要に応じてインスタンスの数をスケールアップまたはスケールダウンし、高可用性と障害耐性を提供します。",
        "Other Options": [
            "単一のアベイラビリティゾーンにEC2インスタンスを展開し、EC2 Auto Scalingを利用して失敗したインスタンスを即座に置き換えることは、AZレベルでの障害耐性を提供しません。単一のAZがダウンすると、アプリケーション全体が利用不可になります。",
            "リソース利用率を最大化し、管理を簡素化するために、1つのアベイラビリティゾーン内の専用ホストにすべてのEC2インスタンスを配置することは、AZレベルでの障害耐性を提供しません。単一のAZがダウンすると、アプリケーション全体が利用不可になります。",
            "高性能を確保するためにインスタンスストアボリュームのみでEC2インスタンスを構成し、耐久性のためにスナップショットに依存することは、AZレベルでの障害耐性を提供しません。インスタンスストアボリュームは一時的であり、インスタンスが停止または障害が発生した場合にデータが失われるため、このオプションはレジリエントではありません。"
        ]
    },
    {
        "Question Number": "21",
        "Situation": "あるスタートアップが、さまざまなソースからデータを取り込み、処理し、分析のために結果を保存するデータ処理パイプラインをAWS上に構築しています。このパイプラインは、スパイキーなワークロードを処理し、受信データ量に基づいて自動的にスケールする必要があります。企業は、サーバー管理の運用オーバーヘッドを最小限に抑えたいと考えています。",
        "Question": "このパイプラインに対してソリューションアーキテクトが推奨すべきAWSサービスの組み合わせはどれですか？（2つ選択してください）",
        "Options": {
            "1": "Auto Scalingを使用したAmazon EC2インスタンス",
            "2": "AWS Lambda",
            "3": "Amazon EMR",
            "4": "Amazon Kinesis Data Firehose",
            "5": "Amazon RDS"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambda",
            "Amazon Kinesis Data Firehose"
        ],
        "Explanation": "AWS Lambdaは、イベントに応じてコードを実行し、基盤となるコンピューティングリソースを自動的に管理するサーバーレスコンピューティングサービスであり、運用オーバーヘッドを最小限に抑えるという企業の要件に合致しています。また、受信データ量に基づいて自動的にスケールすることができ、スパイキーなワークロードの処理に理想的です。Amazon Kinesis Data Firehoseは、ストリーミングデータをデータレイク、データストア、および分析サービスに信頼性高くロードする最も簡単な方法です。ストリーミングデータをキャプチャ、変換、AWSサービス（Amazon S3、Amazon Redshift、Amazon Elasticsearch Service、Splunkなど）にロードし、既存のビジネスインテリジェンスツールやダッシュボードを使用してほぼリアルタイムの分析を可能にします。",
        "Other Options": [
            "Auto Scalingを使用したAmazon EC2インスタンス：EC2インスタンスはスパイキーなワークロードを処理し、受信データ量に基づいてスケールできますが、サーバー管理の運用オーバーヘッドを最小限に抑えることはできません。企業は依然としてEC2インスタンスを管理する必要があります。",
            "Amazon EMR：Amazon EMRは、人気のある分散フレームワーク（Apache SparkやHadoopなど）を使用して、大量のデータを迅速かつコスト効率よく処理できるクラウドネイティブなビッグデータプラットフォームです。ただし、サーバークラスターの管理が必要であり、運用オーバーヘッドを最小限に抑えるという企業の要件には合致しません。",
            "Amazon RDS：Amazon RDSはリレーショナルデータベースサービスであり、スパイキーなワークロードを処理し、受信データ量に基づいて自動的にスケールする必要があるデータ処理パイプラインの要件には合致しません。"
        ]
    },
    {
        "Question Number": "22",
        "Situation": "ある動画ストリーミングプラットフォームは、特に数百万の視聴者を引き付けるライブイベント中に、予測不可能なトラフィックの急増を経験しています。パフォーマンスを維持し、中断を避けるために、プラットフォームは計算能力を迅速かつ効率的にスケールさせる必要があります。ストリーミングアプリケーションは現在、複数のアベイラビリティゾーンにわたるAmazon EC2インスタンス上で実行されており、チームは特に予期しないトラフィックの急増時に、需要に基づいてこれらのインスタンスが自動的にプロビジョニングされることを確実にしたいと考えています。パフォーマンスの低下を防ぐためです。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどの構成を実装すべきですか？（2つ選択してください）",
        "Options": {
            "1": "ピーク負荷を処理するために、すべてのアベイラビリティゾーンにわたって固定数のEC2インスタンスを設定する",
            "2": "CPU使用率などのメトリクスに基づいて動的スケーリングポリシーを設定したAuto Scaling Groupを使用し、需要の変動に応じて自動的にスケールアップおよびスケールダウンする",
            "3": "トラフィックパターンを手動で監視し、高トラフィックイベント中に必要に応じてEC2インスタンスを追加する",
            "4": "ウェブサイトのコンテンツをAmazon S3にホストし、ウェブサイトトラフィックを処理するためのEC2インスタンスの必要性を排除する",
            "5": "Amazon CloudWatchを使用して予測スケーリングを実装し、トラフィックの急増を予測して容量を事前に調整する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "CPU使用率などのメトリクスに基づいて動的スケーリングポリシーを設定したAuto Scaling Groupを使用し、需要の変動に応じて自動的にスケールアップおよびスケールダウンする",
            "Amazon CloudWatchを使用して予測スケーリングを実装し、トラフィックの急増を予測して容量を事前に調整する"
        ],
        "Explanation": "AWSのAuto Scaling Groupは、需要に基づいてEC2インスタンスの動的スケーリングを可能にします。これは、需要が増加すると、負荷を処理するためにより多くのインスタンスがプロビジョニングされ、需要が減少すると、コストを節約するためにインスタンスが終了されることを意味します。これは、予測不可能なトラフィックの急増を処理するのに理想的です。Amazon CloudWatchの予測スケーリングは、機械学習アルゴリズムを使用して将来の需要を予測し、事前に容量を調整します。これは、トラフィックの急増を予測し、需要に応じて事前にスケーリングするのに役立ちます。",
        "Other Options": [
            "すべてのアベイラビリティゾーンにわたって固定数のEC2インスタンスを設定することは効率的な解決策ではありません。需要の変動を考慮せず、過剰プロビジョニング（需要が低いときにリソースを無駄にする）や不足プロビジョニング（需要が高いときに十分なリソースがない）につながる可能性があります。",
            "トラフィックパターンを手動で監視し、高トラフィックイベント中に必要に応じてEC2インスタンスを追加することは、スケーラブルでも効率的でもない解決策です。常に監視と手動介入が必要であり、スケールアップに遅れが生じる可能性があり、パフォーマンスに影響を与える可能性があります。",
            "ウェブサイトのコンテンツをAmazon S3にホストし、ウェブサイトトラフィックを処理するためのEC2インスタンスの必要性を排除することは、動画ストリーミングプラットフォームには適した解決策ではありません。S3は静的ウェブサイトのホスティングには優れていますが、動画ストリーミングプラットフォームは動的コンテンツ配信と計算能力を必要とし、これはEC2インスタンスによってより適切に処理されます。"
        ]
    },
    {
        "Question Number": "23",
        "Situation": "ある企業は、オンプレミスのデータセンターとAWS間のネットワーク接続の一貫性と速度を向上させるために、AWS Direct Connectを検討しています。",
        "Question": "この目的のためにAWS Direct Connectを使用することの利点と制限を正確に説明しているのは次のうちどれですか？",
        "Options": {
            "1": "AWS Direct Connectは、耐障害性が組み込まれたプライベートな専用回線を介して安全なデータ転送を提供しますが、接続ごとに1 Gbpsの帯域幅に制限されています。",
            "2": "AWS Direct Connectは、インターネットに依存せずにAWSのパブリックおよびプライベートサービスに直接、高速かつ低遅延の接続を提供できますが、物理ケーブルに依存しているため、耐障害性は本質的に提供されません。",
            "3": "AWS Direct Connectは、AWSとオンプレミス環境間で耐障害性のある高速データ転送を提供し、自動フェイルオーバーのオプションがありますが、世界中の特定のAWSリージョンでのみ利用可能です。",
            "4": "AWS Direct Connectは、インターネットベースのデータ転送に対するコスト効果の高いソリューションを提供し、データをAWSのパブリックエンドポイントを介してルーティングできますが、共有インフラストラクチャのため、VPNベースのソリューションよりも高い遅延に直面する可能性があります。"
        },
        "Correct Answer": "AWS Direct Connectは、インターネットに依存せずにAWSのパブリックおよびプライベートサービスに直接、高速かつ低遅延の接続を提供できますが、物理ケーブルに依存しているため、耐障害性は本質的に提供されません。",
        "Explanation": "AWS Direct Connectは、AWSサービスへの高速かつ低遅延の接続を提供するように設計されており、パブリックインターネットをバイパスすることでパフォーマンスと信頼性を向上させます。ただし、専用接続を提供しますが、自動的に冗長性や耐障害性を含むわけではありません。物理接続が中断されると、障害が発生する可能性があります。したがって、ユーザーは冗長性を確保するために、複数の接続やフェイルオーバー戦略を使用するなどの追加の対策を実施する必要があります。",
        "Other Options": [
            "AWS Direct Connectはプライベートラインを介して安全なデータ転送を提供しますが、接続ごとに1 Gbpsの帯域幅に厳密に制限されているわけではありません。AWS Direct Connectは、要件に応じて10 Gbps以上の複数の接続速度を提供します。",
            "AWS Direct Connectは、異なる場所に冗長接続を作成するオプションなど、耐障害性のためのオプションを提供しています。さらに、多くのAWSリージョンで利用可能であり、特定のリージョンだけではなく、アクセス性が向上します。",
            "AWS Direct Connectはインターネットベースのソリューションではなく、通常はVPNソリューションと比較して低遅延をもたらす専用接続を提供します。パブリックエンドポイントを介してデータをルーティングすることはなく、これがDirect Connectを使用する際の重要な利点です。"
        ]
    },
    {
        "Question Number": "24",
        "Situation": "ある多国籍企業は、北米、ヨーロッパ、アジアのユーザーにサービスを提供する新しい顧客向けアプリケーションをAWS上に展開する計画を立てています。アプリケーションのパフォーマンスを最適化し、各地域のデータ居住規制に準拠するために、企業はユーザーデータがユーザーの地理的な場所の近くで処理および保存されることを確実にしたいと考えています。さらに、各地域のユーザーベースに最も近いインフラストラクチャを使用して遅延を最小限に抑えたいと考えています。",
        "Question": "このアプリケーションを展開するための最も適切な戦略は何ですか？",
        "Options": {
            "1": "高容量のインスタンスを使用して単一のAWSリージョンにアプリケーションを展開し、地域のリソースを活用して中央集権的な場所からすべてのグローバルユーザーを処理する",
            "2": "複数のAWSリージョンにアプリケーションを展開し、各リージョンにそのユーザーベースにサービスを提供し、データ居住要件を満たすためのローカルインフラストラクチャを確保する",
            "3": "1つの中央AWSリージョンにアプリケーションを展開し、他のリージョンにデータをキャッシュするためにコンテンツ配信ネットワーク（CDN）を使用してアクセス速度を向上させる",
            "4": "単一のAWSリージョン内のアベイラビリティゾーンを使用してグローバルユーザーにサービスを提供し、複数のリージョンに展開することなく冗長性を確保する"
        },
        "Correct Answer": "複数のAWSリージョンにアプリケーションを展開し、各リージョンにそのユーザーベースにサービスを提供し、データ居住要件を満たすためのローカルインフラストラクチャを確保する",
        "Explanation": "複数のAWSリージョンにアプリケーションを展開することで、企業は北米、ヨーロッパ、アジアのユーザーの近くでユーザーデータの処理と保存を行うことができます。この戦略は、アプリケーションにアクセスするユーザーの遅延を減少させることでアプリケーションのパフォーマンスを最適化するだけでなく、特定の地理的場所にデータを保存することを要求するデータ居住規制に準拠することを確実にします。各リージョンにローカルインフラストラクチャを持つことで、企業は法的要件を遵守しながらユーザーベースに効果的にサービスを提供できます。",
        "Other Options": [
            "高容量のインスタンスを使用して単一のAWSリージョンにアプリケーションを展開すると、中央集権的な障害点が生じ、地域から遠くにいるユーザーの遅延が増加します。このアプローチは、特定の地理的場所にデータを保存することを要求するデータ居住規制に対処していません。",
            "コンテンツ配信ネットワーク（CDN）を使用して他のリージョンにデータをキャッシュすることで静的コンテンツのアクセス速度を向上させることができますが、データ居住および処理要件の問題を解決するものではありません。動的データの処理と保存は、規制を遵守するために適切なリージョンで行う必要があります。",
            "単一のAWSリージョン内のアベイラビリティゾーンを使用することで冗長性と高可用性を提供しますが、地理的分散の必要性には対処していません。このオプションでは、単一のリージョンから遠くにいるユーザーの遅延が増加し、データ居住要件を満たすことができません。"
        ]
    },
    {
        "Question Number": "25",
        "Situation": "医療機関が、Amazon EC2インスタンス、RDSデータベース、EFSファイルシステムを含む複数のAWSサービスに保存された敏感な患者データの包括的なバックアップソリューションを求めています。彼らは、複数のAWSアカウントとリージョンにわたるバックアップを管理し、偶発的な変更を防ぐために書き込み一回、読み取り多回（WORM）コンプライアンスでデータの整合性を確保し、重要なデータ保護のための規制および運用ニーズを満たすために時点復元を提供できるソリューションを必要としています。",
        "Question": "これらの要件を最もよく満たすAWSサービスの構成はどれですか？",
        "Options": {
            "1": "各リソースの手動スナップショットを設定し、冗長性を高めるためにクロスリージョンレプリケーションを有効にする",
            "2": "AWS Backupを使用し、バックアッププラン、WORMコンプライアンスのためのVault Lock、信頼性のあるバックアップと復元のための時点復元（PITR）を利用する",
            "3": "データの整合性とクロスリージョンの可用性を確保するために、バージョニングとレプリケーションを有効にしたAmazon S3にバックアップを保存する",
            "4": "AWS CloudTrailを有効にしてログを記録し、ログデータに基づいて手動復元手順を作成する"
        },
        "Correct Answer": "AWS Backupを使用し、バックアッププラン、WORMコンプライアンスのためのVault Lock、信頼性のあるバックアップと復元のための時点復元（PITR）を利用する",
        "Explanation": "AWS Backupは、複数のアカウントとリージョンにわたるAWSリソースのバックアップを集中管理し、自動化するために特別に設計されています。ユーザーは、バックアップの頻度と保持ポリシーを定義するバックアッププランを作成できます。さらに、AWS BackupはVault Lockをサポートしており、バックアップデータへの偶発的な変更を防ぐためのWORMコンプライアンスを提供し、データの整合性を確保します。時点復元（PITR）機能により、特定の時点にデータを復元できるため、重要なデータ保護のための規制および運用ニーズを満たすのに不可欠です。",
        "Other Options": [
            "各リソースの手動スナップショットを設定し、クロスリージョンレプリケーションを有効にすることは、ある程度の冗長性を提供できますが、自動化や集中管理が欠けています。このアプローチは手間がかかり、WORMコンプライアンスや時点復元を確保できないため、組織の包括的なバックアップニーズには適していません。",
            "バージョニングとレプリケーションを有効にしたAmazon S3にバックアップを保存することは、データの整合性と可用性に役立ちますが、複数のAWSサービスやアカウントにわたるバックアップの管理機能を提供しません。さらに、敏感な患者データにとって重要なWORMコンプライアンスや時点復元を本質的に提供しません。",
            "AWS CloudTrailを有効にしてログを記録し、ログデータに基づいて手動復元手順を作成することはバックアップソリューションではありません。CloudTrailは主にAPIコールの監査と監視のためのものであり、リソースに対する変更を理解するのに役立ちますが、データのバックアップや復元のメカニズムを提供せず、WORMコンプライアンスや時点復元の要件を満たしません。"
        ]
    },
    {
        "Question Number": "26",
        "Situation": "あるテクノロジー企業が、EC2インスタンスのためのAuto Scalingグループを構成しています。彼らは、変更が必要なたびにインフラ全体を再作成することなく、構成の更新を可能にするセットアップを実装することを目指しています。",
        "Question": "構成の更新を効率的に促進するために、企業はどのオプションを選択すべきですか？その選択の理由は何ですか？",
        "Options": {
            "1": "バージョニングをサポートし、再作成なしで更新を可能にするためにLaunch Configurationsを利用する",
            "2": "バージョニング機能を提供し、新しいテンプレートを作成することなく構成の更新を可能にするためにLaunch Templatesを使用する",
            "3": "管理の容易さと固有のバージョニング機能のためにLaunch Configurationsを選択する",
            "4": "バージョン管理を必要とせずにAuto Scalingグループ内で直接ライブ更新を可能にするLaunch Templatesを選択する"
        },
        "Correct Answer": "バージョニング機能を提供し、新しいテンプレートを作成することなく構成の更新を可能にするためにLaunch Templatesを使用する",
        "Explanation": "Launch Templatesは、Auto Scalingグループの構成に最適な選択肢です。なぜなら、バージョニングをサポートしており、ユーザーがテンプレートの複数のバージョンを作成できるからです。これにより、構成変更が必要な場合、企業はインフラ全体を再作成することなく、既存のテンプレートの新しいバージョンを作成するだけで済みます。この機能は、構成の更新プロセスを効率化し、管理の効率を向上させ、必要に応じて以前のバージョンにロールバックすることを容易にします。",
        "Other Options": [
            "バージョニングをサポートし、再作成なしで更新を可能にするためにLaunch Configurationsを利用することは不正解です。なぜなら、Launch Configurationsはバージョニングをサポートしておらず、静的で一度作成されると更新できないからです。変更がある場合は新しいLaunch Configurationを作成する必要があります。",
            "管理の容易さと固有のバージョニング機能のためにLaunch Configurationsを選択することは不正解です。なぜなら、Launch Configurationsはバージョニング機能が欠けているため、Launch Templatesに比べて構成の更新に柔軟性がないからです。",
            "バージョン管理を必要とせずにAuto Scalingグループ内で直接ライブ更新を可能にするLaunch Templatesを選択することは不正解です。なぜなら、Launch Templatesはバージョニングを許可しますが、Auto Scalingグループ内で直接ライブ更新を許可するわけではなく、更新には新しいテンプレートのバージョンを作成する必要があるからです。"
        ]
    },
    {
        "Question Number": "27",
        "Situation": "研究チームが、非常に高いCPUパワーと迅速な処理速度を必要とする高度に複雑な科学的モデリングシミュレーションを実行しています。これらのシミュレーションは計算集約型で、メディアエンコーディング、計算流体力学、一般的な機械学習モデルのトレーニングなどのタスクを含みます。チームは、これらのタスクが主にCPUに依存しているため、高いメモリやGPUサポートを必要としません。",
        "Question": "どのEC2インスタンスカテゴリが彼らのニーズに最も適していますか？",
        "Options": {
            "1": "汎用",
            "2": "メモリ最適化",
            "3": "計算最適化",
            "4": "加速コンピューティング"
        },
        "Correct Answer": "計算最適化",
        "Explanation": "計算最適化EC2インスタンスカテゴリは、高いCPUパフォーマンスを必要とする計算集約型タスクのために特別に設計されています。研究チームのシミュレーションはCPUに依存しており、高いメモリやGPUサポートを必要としないため、計算最適化インスタンスはメディアエンコーディング、計算流体力学、機械学習モデルのトレーニングなどのタスクを効率的に処理するために必要な処理能力と速度を提供します。これらのインスタンスは、高い計算能力を要求するワークロードに最適であり、正確な結果を生成するのにかかる時間を大幅に短縮できます。",
        "Other Options": [
            "汎用インスタンスは、計算、メモリ、ネットワークリソースのバランスを提供し、さまざまなワークロードに適していますが、計算集約型タスクに特化して最適化されているわけではありません。シミュレーションに必要な高いCPUパフォーマンスを提供できない可能性があります。",
            "メモリ最適化インスタンスは、高いメモリ容量とスループットを必要とするワークロード、例えばインメモリデータベースやリアルタイムのビッグデータ分析のために設計されています。研究チームは高いメモリサポートを必要としないため、このカテゴリは彼らの計算集約型シミュレーションには適していません。",
            "加速コンピューティングインスタンスは、GPUやFPGAなどのハードウェアアクセラレーターの恩恵を受けるワークロードに特化しています。これらのインスタンスは、機械学習推論やグラフィックス処理などのタスクに最適ですが、CPUに依存するタスクには必要ないため、チームのニーズには適していません。"
        ]
    },
    {
        "Question Number": "28",
        "Situation": "物流会社は、配達車両からのデータをリアルタイムで処理し、ルートや交通状況を監視する必要があります。レイテンシを減らし、クラウドに送信するデータ量を最小限に抑えるために、データをソースにできるだけ近い場所で処理したいと考えています。",
        "Question": "このニーズを最も満たす分散コンピューティング戦略はどれですか？",
        "Options": {
            "1": "最寄りのAWSリージョンのAmazon EC2インスタンスで全てのデータ処理を実行する",
            "2": "エッジ処理を使用してデバイス上でデータをローカルに処理する",
            "3": "AWS Lambdaにデータを送信してサーバーレス処理を行う",
            "4": "会社のデータセンターにAWS Outpostsラックを使用する"
        },
        "Correct Answer": "エッジ処理を使用してデバイス上でデータをローカルに処理する",
        "Explanation": "エッジ処理は、データをソースにできるだけ近い場所で処理することを可能にし、配達車両のリアルタイム監視にとって重要です。デバイス上でデータをローカルに処理することで、データが遠くのクラウドサーバーに送信される必要がなくなり、レイテンシを大幅に削減できます。このアプローチは、クラウドに送信されるデータ量も最小限に抑え、データ処理の効率と速度に対する会社のニーズに完璧に合致します。",
        "Other Options": [
            "最寄りのAWSリージョンのAmazon EC2インスタンスで全てのデータ処理を実行することは、データがクラウドに到達するために移動しなければならない距離のためにレイテンシを引き起こします。このオプションは、エッジ処理ほどリアルタイム処理の要件を効果的に満たしません。",
            "AWS Lambdaにデータを送信してサーバーレス処理を行うことも、データが処理のためにクラウドに送信される必要があるため、レイテンシが発生します。AWS Lambdaは多くのユースケースに対して効率的ですが、即時分析が必要な配達車両によって生成されるデータのリアルタイム処理には最適ではありません。",
            "会社のデータセンターにAWS Outpostsラックを使用することは、ローカル処理のいくつかの利点を提供するかもしれませんが、物理的なセットアップが必要であり、真のエッジ処理ほど機敏またはコスト効率が良くない可能性があります。さらに、エッジデバイスほどデータソースに近くないため、デバイス上で直接処理する場合と比較してレイテンシが増加する可能性があります。"
        ]
    },
    {
        "Question Number": "29",
        "Situation": "ある会社が、各々ユニークなHTTPSドメイン名を持つ2つのウェブアプリケーションをホストしています。彼らは、両方のアプリケーションに対してHTTPSサポートを維持しながら、使用するロードバランサーの数を減らす必要があります。",
        "Question": "この要件に最も適したAWSロードバランサーの種類はどれで、なぜですか？",
        "Options": {
            "1": "Classic Load Balancer (CLB)、複数のドメインを単一のロードバランサーに統合できるため。",
            "2": "Application Load Balancer (ALB)、ホストベースのルーティングをサポートし、Server Name Indication (SNI)を使用して単一のロードバランサー上で複数のHTTPSドメインを許可するため。",
            "3": "Network Load Balancer (NLB)、レイヤー4のルーティングを提供し、複数のHTTPSドメインを処理できるため。",
            "4": "Elastic Load Balancer (ELB)でスティッキーセッションを使用する、同じロードバランサーの下で複数のターゲットグループを許可するため。"
        },
        "Correct Answer": "Application Load Balancer (ALB)、ホストベースのルーティングをサポートし、Server Name Indication (SNI)を使用して単一のロードバランサー上で複数のHTTPSドメインを許可するため。",
        "Explanation": "Application Load Balancer (ALB)は、HTTPおよびHTTPSトラフィックを処理するために特別に設計されており、ホストベースのルーティングを含む高度なルーティング機能をサポートしています。これは、リクエスト内のホスト名に基づいて異なるターゲットグループにリクエストをルーティングできることを意味し、ユニークなHTTPSドメイン名を持つ複数のウェブアプリケーションをホストするために不可欠です。さらに、ALBはServer Name Indication (SNI)をサポートしており、単一のIPアドレス上で複数のSSL証明書を提供できるため、各ドメインに対して安全な接続を可能にし、別々のロードバランサーを必要としません。",
        "Other Options": [
            "Classic Load Balancer (CLB)はホストベースのルーティングやSNIをサポートしておらず、複数のHTTPSドメインを効率的に処理するには不向きです。基本的なロードバランシングのために設計されており、このシナリオに必要な高度な機能が欠けています。",
            "Network Load Balancer (NLB)はレイヤー4で動作し、TCPトラフィックを処理するために最適化されています。複数のドメインを処理できますが、SSL終端やホストベースのルーティングに必要な機能を提供せず、HTTPSトラフィックを効果的に管理するには重要です。",
            "Elastic Load Balancer (ELB)はALBとNLBの両方を含む一般的な用語です。スティッキーセッションを設定できますが、単一のロードバランサー上で複数のHTTPSドメインをサポートする要件には対応していません。ALBがこのシナリオのニーズを満たす特定のタイプです。"
        ]
    },
    {
        "Question Number": "30",
        "Situation": "ある会社が、オンプレミスのアプリケーションをAWSに移行する計画を立てています。これらのアプリケーションは、ユーザー認証とグループ管理のためにActive Directoryに大きく依存しています。ITチームは、最大3,000ユーザーをサポートし、Amazon Workspacesと統合され、複雑なオンプレミスの統合を必要としないAWS上の管理ソリューションを求めています。さらに、リソースの集中管理のために、同じユーザー名とパスワードでWindows環境をサポートできるソリューションが必要です。",
        "Question": "この要件を最も満たすAWS Directory Serviceのオプションはどれですか？",
        "Options": {
            "1": "スタンドアロンのディレクトリ管理のためのSmallインスタンスを使用したSimple AD",
            "2": "マルチAZデプロイメントのAWS Managed Microsoft AD",
            "3": "クロスアカウントアクセスのためのAWS SSO (Single Sign-On)",
            "4": "ユーザープール管理のためのAmazon Cognito"
        },
        "Correct Answer": "マルチAZデプロイメントのAWS Managed Microsoft AD",
        "Explanation": "AWS Managed Microsoft ADは、AWSクラウド内で完全に管理されたActive Directoryを提供するように設計されています。Windows環境をサポートし、認証とグループ管理のためにActive Directoryに依存するアプリケーションとのシームレスな統合を可能にします。最大50,000ユーザーをサポートでき、3,000ユーザーの要件を超えています。さらに、Amazon Workspacesとの統合が良好で、リソースの集中管理のために同じユーザー名とパスワードを持つことができ、複雑なオンプレミスの統合を必要とせずに会社のニーズを満たします。マルチAZデプロイメントは高可用性と耐障害性を確保します。",
        "Other Options": [
            "Smallインスタンスを使用したSimple ADは、Active Directoryの機能セットが限られている基本的なディレクトリサービスであり、完全なActive Directory機能を必要とするアプリケーションには適していません。また、AWS Managed Microsoft ADほどAmazon Workspacesとの統合をサポートしていません。",
            "AWS SSO (Single Sign-On)は、複数のAWSアカウントやアプリケーションへのアクセス管理のために主に設計されていますが、Windows環境でのユーザー認証やグループ管理に必要な完全なActive Directory機能を提供しません。Active Directoryの直接的な代替にはなりません。",
            "Amazon Cognitoは、ウェブおよびモバイルアプリケーションのユーザー認証と管理に焦点を当てていますが、会社のアプリケーションに必要なActive Directory機能を提供しません。Active Directory統合を持つWindows環境の管理よりも、ユーザープールやフェデレーテッドアイデンティティにより適しています。"
        ]
    },
    {
        "Question Number": "31",
        "Situation": "ある企業が、異なるアベイラビリティゾーンにわたって複数のAmazon EC2インスタンスにウェブアプリケーションを展開しています。このアプリケーションは、ユーザー生成コンテンツを保存およびアクセスするための共有ファイルシステムが必要です。また、企業はオンプレミスのデータセンターをAWSの共有ストレージに接続する柔軟性も求めています。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのAWSソリューションを推奨すべきですか？",
        "Options": {
            "1": "Amazon EBSを使用してアベイラビリティゾーン間でマルチアタッチ",
            "2": "Amazon EFSを使用して各アベイラビリティゾーンにマウントターゲットを設定し、オンプレミス接続のためにVPNまたはDirect Connect経由でアクセス",
            "3": "Amazon S3を使用してクロスリージョンアクセスのためにTransfer Accelerationを利用",
            "4": "Amazon RDSを使用して各アベイラビリティゾーンにリードレプリカを設定"
        },
        "Correct Answer": "Amazon EFSを使用して各アベイラビリティゾーンにマウントターゲットを設定し、オンプレミス接続のためにVPNまたはDirect Connect経由でアクセス",
        "Explanation": "Amazon EFS（Elastic File System）は、異なるアベイラビリティゾーンにわたって複数のEC2インスタンスにマウントできる完全管理型のファイルストレージサービスであり、アプリケーションのための共有ファイルシステムを提供します。NFS（Network File System）プロトコルをサポートしており、ファイルへの共有アクセスを必要とするアプリケーションに適しています。さらに、EFSはVPNまたはAWS Direct Connectを通じてオンプレミスのデータセンターからアクセスでき、オンプレミスとAWSストレージ間の接続要件を満たします。",
        "Other Options": [
            "Amazon EBS（Elastic Block Store）を使用してマルチアタッチを行うと、複数のEC2インスタンスが単一のEBSボリュームにアタッチできますが、これは単一のアベイラビリティゾーンに制限されます。これでは、複数のアベイラビリティゾーンにわたる共有ファイルシステムの要件を満たすことはできません。",
            "Amazon S3（Simple Storage Service）はオブジェクトストレージサービスであり、ユーザー生成コンテンツを保存できますが、アプリケーションが通常必要とする共有アクセスのための従来のファイルシステムインターフェースを提供しません。Transfer Accelerationはアップロードとダウンロードを高速化するためのものであり、EC2インスタンス間での共有ファイルシステムの必要性には対応していません。",
            "Amazon RDS（Relational Database Service）は管理されたデータベースサービスであり、高可用性のために異なるアベイラビリティゾーンにリードレプリカを持つことができますが、共有ファイルシステム形式でユーザー生成コンテンツを保存するには適していません。RDSは構造化データとリレーショナルデータベースのユースケース向けに設計されており、ファイルストレージには適していません。"
        ]
    },
    {
        "Question Number": "32",
        "Situation": "あるメディア企業が、世界中で動画コンテンツをストリーミングしており、異なる地理的地域のユーザーに対して配信速度を改善し、レイテンシを減少させる必要があります。企業はピーク時に高い需要を見ており、コンテンツのバッファリングがユーザー体験に影響を与えています。また、オリジンサーバーへの負荷を減らし、リソースの枯渇を防ぐ必要があります。",
        "Question": "この目標を達成するために、企業はどのAWSサービスを使用すべきで、どのような利点がありますか？",
        "Options": {
            "1": "Amazon CloudFrontをCDNとして使用し、世界中のエッジロケーションでコンテンツをキャッシュしてレイテンシを減少させ、オリジンサーバーからのトラフィックをオフロードします。",
            "2": "Amazon Route 53を使用してジオロケーションルーティングを行い、ユーザーを動画コンテンツが保存されている最寄りのS3バケットに誘導します。",
            "3": "Amazon S3をストレージに使用し、ユーザーを1つのリージョンの単一EC2インスタンスに誘導してすべての動画コンテンツを提供します。",
            "4": "AWS Direct Connectを使用して、全顧客に対して専用のネットワーク接続を確立し、コンテンツ配信を高速化します。"
        },
        "Correct Answer": "Amazon CloudFrontをCDNとして使用し、世界中のエッジロケーションでコンテンツをキャッシュしてレイテンシを減少させ、オリジンサーバーからのトラフィックをオフロードします。",
        "Explanation": "Amazon CloudFrontは、世界中のエッジロケーションでコンテンツをキャッシュするコンテンツ配信ネットワーク（CDN）です。CloudFrontを使用することで、メディア企業はユーザーに近い場所で動画コンテンツを配信でき、レイテンシを大幅に減少させ、配信速度を向上させることができます。このキャッシングメカニズムは、オリジンサーバーからのトラフィックをオフロードし、ピーク需要時のリソース枯渇を防ぐのに役立ちます。全体として、CloudFrontはバッファリングを最小限に抑え、コンテンツへの迅速なアクセスを確保することでユーザー体験を向上させます。",
        "Other Options": [
            "Amazon Route 53を使用してジオロケーションルーティングを行うことで、ユーザーを最寄りのリソースに誘導することは可能ですが、コンテンツをキャッシュしたり、レイテンシを効果的に減少させることはできません。主にDNSルーティングを管理するものであり、バッファリングの問題やオリジンサーバーへの負荷には対処していません。",
            "Amazon S3をストレージに使用し、ユーザーを1つのリージョンの単一EC2インスタンスに誘導することは、グローバルなコンテンツ配信には効果的ではありません。このアプローチでは、EC2インスタンスから遠く離れたユーザーに対して高いレイテンシが発生し、オリジンサーバーへの負荷を軽減することもできず、ピーク時にパフォーマンスの問題が発生する可能性があります。",
            "AWS Direct Connectは専用のネットワーク接続を提供しますが、コンテンツ配信のためには設計されていません。これは、オンプレミスのデータセンターとAWS間のプライベート接続を確立するためにより適しており、エンドユーザーへのコンテンツ配信速度を向上させるためには不向きです。"
        ]
    },
    {
        "Question Number": "33",
        "Situation": "ある組織が、オンプレミスのデータセンターとAWS環境との間に安全な接続を確立したいと考えています。この接続は、高可用性と重要なアプリケーションデータのための低レイテンシリンクをサポートする必要があります。",
        "Question": "どのソリューションがこれらの要件を最もよく満たしますか？",
        "Options": {
            "1": "インターネット経由でVPN接続を設定する",
            "2": "冗長接続を使用してAWS Direct Connectを利用する",
            "3": "トラフィックを分散するためにElastic Load Balancerを設定する",
            "4": "VPCピアリング接続を使用する"
        },
        "Correct Answer": "冗長接続を使用してAWS Direct Connectを利用する",
        "Explanation": "AWS Direct Connectは、オンプレミスのデータセンターからAWSへの専用ネットワーク接続を提供し、高可用性と低レイテンシの要件に最適です。冗長接続を使用することで、組織はプライマリリンクが失敗した場合にバックアップリンクが利用可能であることを確保し、高可用性を維持できます。このソリューションは、エンタープライズレベルの接続性のために特に設計されており、重要なアプリケーションデータを効率的に処理できます。",
        "Other Options": [
            "インターネット経由でVPN接続を設定することは、安全な接続を提供するかもしれませんが、通常、AWS Direct Connectのような専用接続と比較して低レイテンシや高可用性を保証するものではありません。VPN接続はインターネットトラフィックの影響を受ける可能性があり、レイテンシに変動をもたらすことがあります。",
            "Elastic Load Balancerを設定することは、オンプレミスのデータセンターとAWS間の直接接続を確立することには関連しません。ロードバランサーは、複数のターゲットに対して受信アプリケーショントラフィックを分散するために使用されますが、このシナリオで必要な安全な接続を促進するものではありません。",
            "VPCピアリング接続を使用することは、AWS内の2つのVPCを接続するのに役立ちますが、オンプレミスのデータセンターとAWSを接続する要件には対処していません。VPCピアリングは専用の低レイテンシ接続を提供せず、このシナリオには適していません。"
        ]
    },
    {
        "Question Number": "34",
        "Situation": "ある企業が外部の契約者にS3バケットへの一時的なアクセスを付与する必要があります。このアクセスは指定された期間後に自動的に期限切れとなり、特定のアクションに制限される必要があります。",
        "Question": "企業はどのソリューションを実装すべきですか？（2つ選択してください。）",
        "Options": {
            "1": "各契約者のためにIAMユーザーを作成し、S3アクセスポリシーを添付する",
            "2": "一時的なアクセスロールを使用してAWS IAM Identity Center（AWS Single Sign-On）を利用する",
            "3": "契約者がアクセスする必要のあるS3オブジェクトのためにプレサイン付きURLを生成する",
            "4": "アクセスを制限するために時間ベースの条件を持つバケットポリシーを添付する",
            "5": "AWS Security Token Service（STS）を使用して一時的なセキュリティ認証情報を実装する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "契約者がアクセスする必要のあるS3オブジェクトのためにプレサイン付きURLを生成する",
            "AWS Security Token Service（STS）を使用して一時的なセキュリティ認証情報を実装する"
        ],
        "Explanation": "プレサイン付きURLは特定のS3オブジェクトへの一時的なアクセスを付与する方法を提供します。これらは有効期限を持って生成され、その後は無効になります。これは指定された期間後に自動的にアクセスが期限切れになるという要件に合致します。AWS Security Token Service（STS）は、AWS Identity and Access Management（IAM）ユーザーのために一時的で制限された権限の認証情報をリクエストすることを可能にするウェブサービスです。これらの一時的なセキュリティ認証情報の権限を指定することができ、契約者が実行できるアクションを制限することが可能です。",
        "Other Options": [
            "各契約者のためにIAMユーザーを作成し、S3アクセスポリシーを添付することは一時的な解決策ではなく、自動的に期限切れにはなりません。これにはアクセスを取り消すための手動の介入が必要です。",
            "一時的なアクセスロールを使用してAWS IAM Identity Center（AWS Single Sign-On）を利用することは一時的なアクセスを付与するために使用できますが、特定のアクションやS3オブジェクトへのアクセスを本質的に制限するものではありません。",
            "アクセスを制限するために時間ベースの条件を持つバケットポリシーを添付することは実現可能な解決策ではありません。AWSはバケットポリシーにおける時間ベースの条件をサポートしていないためです。"
        ]
    },
    {
        "Question Number": "35",
        "Situation": "ある企業がウェブアプリケーションを設計しており、関心を分離し、スケーラビリティを向上させるためにマルチティアアーキテクチャを実装したいと考えています。ユーザーの需要に基づいて変動するワークロードが予想され、アーキテクチャはトラフィックパターンに基づいて自動的にスケールする必要があります。企業はまた、レイヤーを分離して不正アクセスを防ぐことでセキュリティを向上させることを望んでいます。",
        "Question": "企業が実装すべきアーキテクチャを最もよく説明しているのはどれですか？（2つ選択してください。）",
        "Options": {
            "1": "ウェブレイヤーとしてAmazon EC2インスタンスを使用し、データベースレイヤーとしてAmazon RDSを使用し、ウェブレイヤーのインスタンス間でトラフィックを分散するためにApplication Load Balancer（ALB）を使用する。",
            "2": "インフラ管理を減らし、自動スケーリングを可能にするためにウェブレイヤーとデータベースレイヤーの両方にAWS Lambda関数を使用する。",
            "3": "ストレージにAmazon S3を使用し、計算にAmazon EC2インスタンスを使用し、レイヤー間の安全な通信のためにAWS Direct Connectを使用する。",
            "4": "ウェブティアのためにパブリックサブネットを持つVPCを実装し、アプリケーションおよびデータベースティアのためにプライベートサブネットを使用し、ウェブおよびアプリケーションレイヤーのためにAuto Scalingグループを使用し、プライベートサブネットにRDSインスタンスをデプロイする。",
            "5": "ウェブおよびデータベースレイヤーの両方に単一のEC2インスタンスを使用し、分離のためにVirtual Private Cloud（VPC）を介して接続する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "ウェブレイヤーとしてAmazon EC2インスタンスを使用し、データベースレイヤーとしてAmazon RDSを使用し、ウェブレイヤーのインスタンス間でトラフィックを分散するためにApplication Load Balancer（ALB）を使用する。",
            "ウェブティアのためにパブリックサブネットを持つVPCを実装し、アプリケーションおよびデータベースティアのためにプライベートサブネットを使用し、ウェブおよびアプリケーションレイヤーのためにAuto Scalingグループを使用し、プライベートサブネットにRDSインスタンスをデプロイする。"
        ],
        "Explanation": "最初の正しい回答は、変動するワークロードを処理でき、自動的にスケールできるウェブレイヤーとしてAmazon EC2を使用しています。データベースレイヤーにはAmazon RDSが使用されており、データベース管理のためのスケーラブルで安全なソリューションを提供します。Application Load Balancerはウェブレイヤーのインスタンス間でトラフィックを分散し、変動するワークロードの管理に役立ちます。2番目の正しい回答は、ウェブティアのためにパブリックサブネットを持つVPCを実装し、アプリケーションおよびデータベースティアのためにプライベートサブネットを使用しており、これにより分離が提供され、セキュリティが向上します。Auto Scalingグループはウェブおよびアプリケーションレイヤーに使用され、変動するワークロードを処理でき、自動的にスケールできます。プライベートサブネットにRDSインスタンスがデプロイされており、データベース管理のためのスケーラブルで安全なソリューションを提供します。",
        "Other Options": [
            "ウェブおよびデータベースレイヤーの両方にAWS Lambda関数を使用することは、確かにインフラ管理を減らし、自動スケーリングを可能にします。しかし、セキュリティを向上させるためにレイヤー間の必要な分離を提供しない可能性があります。",
            "ストレージにAmazon S3を使用し、計算にAmazon EC2インスタンスを使用し、レイヤー間の安全な通信のためにAWS Direct Connectを使用することはマルチティアアーキテクチャを提供できます。しかし、変動するワークロードを処理するためのメカニズムやトラフィックパターンに基づいて自動的にスケールするためのメカニズムについては言及されていません。",
            "ウェブおよびデータベースレイヤーの両方に単一のEC2インスタンスを使用し、分離のためにVirtual Private Cloud（VPC）を介して接続することはマルチティアアーキテクチャを提供しません。また、変動するワークロードを処理するためのメカニズムやトラフィックパターンに基づいて自動的にスケールするためのメカニズムについても言及されていません。"
        ]
    },
    {
        "Question Number": "36",
        "Situation": "医療アプリケーションは患者記録を安全に保存する必要があります。記録は頻繁に更新されるためアクセスされる必要があり、ファイル階層とメタデータを維持する必要があります。アプリケーションチームはストレージコストを最適化したいと考えていますが、一貫した低遅延アクセスも必要です。",
        "Question": "これらの要件を最もよく満たすストレージタイプはどれですか？",
        "Options": {
            "1": "オブジェクトストレージ（Amazon S3）",
            "2": "ファイルストレージ（Amazon EFS）",
            "3": "ブロックストレージ（Amazon EBS）",
            "4": "コールドストレージ（Amazon S3 Glacier）"
        },
        "Correct Answer": "ファイルストレージ（Amazon EFS）",
        "Explanation": "ファイルストレージ、例えばAmazon EFS（Elastic File System）は、ファイル階層とメタデータを必要とするユースケース向けに設計されており、患者記録の保存に最適です。EFSは低遅延アクセスを提供し、複数のインスタンスが同じデータに同時にアクセスできるため、患者記録を頻繁に更新する必要があるアプリケーションにとって不可欠です。さらに、EFSは自動的にスケールでき、パフォーマンスを維持しながらストレージコストを最適化します。",
        "Other Options": [
            "オブジェクトストレージ（Amazon S3）は、このシナリオには適していません。なぜなら、非構造化データ向けに設計されており、ファイル階層を維持せず、患者記録を効果的に管理するために必要な従来のファイルシステムセマンティクスをサポートしていないからです。",
            "ブロックストレージ（Amazon EBS）は、通常、データベースや仮想マシンのための高性能ストレージを必要とするアプリケーションに使用されます。低遅延アクセスを提供しますが、ファイル階層や複数のインスタンス間でのファイルの簡単な共有を提供しないため、医療アプリケーションには必要です。",
            "コールドストレージ（Amazon S3 Glacier）は、頻繁にアクセスされないデータ向けに設計されており、頻繁な更新と低遅延アクセスを必要とするアプリケーションには適していません。主にデータのアーカイブに使用され、アクティブなデータ管理には不向きです。"
        ]
    },
    {
        "Question Number": "37",
        "Situation": "ある企業が、特定のIAMロールが複数のAWSアカウントにまたがってアクセスできる機密データを含むS3バケットを持っています。この企業は、複雑なIAMユーザー設定を避けながら、これらのロールのみがアクセスできるように管理を簡素化したいと考えています。",
        "Question": "このアクセス制御を実装する最も適切な方法は何ですか？（2つ選択してください）",
        "Options": {
            "1": "各アカウントにS3バケットへのアクセスを許可するIAMポリシーを作成し、必要なロールにアタッチします。",
            "2": "S3バケットにバケットポリシーをアタッチし、各アカウントの必要なIAMロールに明示的にアクセスを許可します。",
            "3": "AWS Secrets Managerを使用して、バケットにアクセスする必要がある各IAMロールのアクセス資格情報を保存および管理します。",
            "4": "各アカウントにVPCエンドポイントを設定し、VPCネットワーク構成に基づいてS3バケットへのアクセスを制御します。",
            "5": "Amazon S3 Access Pointsを使用し、複数のアカウントにわたる許可されたIAMロールを指定するポリシーを設定します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "各アカウントにS3バケットへのアクセスを許可するIAMポリシーを作成し、必要なロールにアタッチします。",
            "S3バケットにバケットポリシーをアタッチし、各アカウントの必要なIAMロールに明示的にアクセスを許可します。"
        ],
        "Explanation": "各アカウントにS3バケットへのアクセスを許可するIAMポリシーを作成し、必要なロールにアタッチすることは正しい答えです。なぜなら、IAMポリシーは複数のAWSアカウントの権限を管理する方法だからです。このアプローチにより、企業は各アカウントのどのロールがS3バケットにアクセスできるかを指定できます。また、S3バケットにバケットポリシーをアタッチして、各アカウントの必要なIAMロールに明示的にアクセスを許可することも正しいです。バケットポリシーはそのバケット内のすべてのオブジェクトに適用され、S3バケットへのクロスアカウントアクセスを許可するために使用できます。これは企業が望んでいることです。",
        "Other Options": [
            "AWS Secrets Managerを使用して、バケットにアクセスする必要がある各IAMロールのアクセス資格情報を保存および管理することは最良の選択肢ではありません。なぜなら、アクセス資格情報の管理に不必要な複雑さを加えるからです。企業は複雑なIAMユーザー設定を避けたいと考えており、Secrets Managerを使用することはS3バケットへのアクセス管理を簡素化しません。",
            "各アカウントにVPCエンドポイントを設定して、VPCネットワーク構成に基づいてS3バケットへのアクセスを制御することは最良の選択肢ではありません。なぜなら、どのIAMロールがS3バケットにアクセスできるかを直接制御するものではないからです。VPCエンドポイントは、VPCをサポートされているAWSサービスにプライベートに接続するために使用され、IAMロールレベルでのS3バケットへのアクセス管理には使用されません。",
            "Amazon S3 Access Pointsを使用し、複数のアカウントにわたる許可されたIAMロールを指定するポリシーを設定することは最良の選択肢ではありません。なぜなら、S3 Access Pointsは共有データセットを使用するアプリケーションのためにデータアクセスをスケールで管理することを簡素化するために使用され、複数のアカウントにわたるIAMロールレベルでのS3バケットへのアクセス管理の方法を提供しないからです。"
        ]
    },
    {
        "Question Number": "38",
        "Situation": "ある企業が、地域内のインフラストラクチャの障害に耐え、複数の場所のユーザーに低遅延でアクセスを提供できる高可用性のウェブアプリケーションを設計したいと考えています。",
        "Question": "この企業は、複数のアベイラビリティゾーンにわたるトラフィック分配を管理するためにどのAWSサービスを使用すべきで、どのような利点がありますか？",
        "Options": {
            "1": "Amazon Route 53",
            "2": "AWS Direct Connect",
            "3": "Amazon S3",
            "4": "Amazon DynamoDB"
        },
        "Correct Answer": "Amazon Route 53",
        "Explanation": "Amazon Route 53は、スケーラブルなドメインネームシステム（DNS）ウェブサービスであり、高い信頼性とコスト効率の良いドメイン名登録、DNSルーティング、リソースのヘルスチェックを提供します。ユーザーのリクエストを最寄りの健全なエンドポイントにルーティングすることで、複数のアベイラビリティゾーンにわたるトラフィック分配を管理でき、低遅延のアクセスと高可用性を確保します。これにより、インフラストラクチャの障害に耐え、異なる地理的場所でのパフォーマンスを維持する必要があるアプリケーションに最適な選択肢となります。",
        "Other Options": [
            "AWS Direct Connectは、あなたの施設からAWSへの専用ネットワーク接続を提供するクラウドサービスです。ネットワークパフォーマンスを向上させることはできますが、アベイラビリティゾーン間のトラフィック分配を管理するものではありません。",
            "Amazon S3（Simple Storage Service）は、データのための高スケーラブルなストレージを提供するオブジェクトストレージサービスです。ウェブアプリケーションのトラフィック分配やルーティングを処理するものではありません。",
            "Amazon DynamoDBは、迅速で予測可能なパフォーマンスを提供し、シームレスなスケーラビリティを持つ完全管理型のNoSQLデータベースサービスです。トラフィック分配や複数のアベイラビリティゾーンにわたるユーザーリクエストの管理には設計されていません。"
        ]
    },
    {
        "Question Number": "39",
        "Situation": "ある企業が、AWS Lambda関数をDynamoDBおよびS3と安全に統合したいと考えています。Lambda関数がこれらのサービスに対して特定のアクションのみを実行できるようにし、他のAWSサービスやアカウントが関数を呼び出すことを制限する必要があります。",
        "Question": "これを達成するためにどのアプローチを取るべきですか？",
        "Options": {
            "1": "DynamoDBおよびS3に対する許可されたアクションを指定するインラインポリシーをLambda関数にアタッチし、Lambda関数を呼び出すことができるサービスとアカウントを制限するリソースポリシーを適用します。",
            "2": "DynamoDBおよびS3に対する必要なアクションの権限を付与するLambda実行ロールを使用し、呼び出し権限を制御するためにLambdaリソースポリシーを追加します。",
            "3": "DynamoDBおよびS3にアクセスするための管理されたIAMポリシーをLambda関数にアタッチし、呼び出しを制限するためにLambda権限境界を設定します。",
            "4": "DynamoDBおよびS3にアクセスするためのサービスリンクロールをLambda関数に作成し、呼び出しを制限するためにS3バケットポリシーを使用します。"
        },
        "Correct Answer": "DynamoDBおよびS3に対する必要なアクションの権限を付与するLambda実行ロールを使用し、呼び出し権限を制御するためにLambdaリソースポリシーを追加します。",
        "Explanation": "Lambda実行ロールを使用することは、AWS Lambda関数に権限を付与するためのベストプラクティスです。このロールにより、関数はDynamoDBおよびS3に対して特定のアクションを実行できるようになり、必要な権限のみが付与されます。さらに、Lambdaリソースポリシーを適用することで、どのAWSサービスやアカウントがLambda関数を呼び出すことができるかを制御でき、安全で柔軟なアクセス管理が可能になります。",
        "Other Options": [
            "Lambda関数にインラインポリシーをアタッチすることは推奨されません。なぜなら、インラインポリシーは特定のリソースに結びついており、管理が難しくなる可能性があるからです。Lambda実行ロールは、よりスケーラブルで管理しやすいアプローチです。リソースポリシーは重要ですが、実行ロールが他のAWSサービスへのアクセス権限を付与するための主要な方法です。",
            "Lambda関数に管理されたIAMポリシーをアタッチすることは最良のアプローチではありません。なぜなら、管理されたポリシーは広範であり、必要以上の権限を付与する可能性があるからです。さらに、権限境界は権限を制限するのに役立ちますが、呼び出し権限を制御するための主要な方法ではなく、リソースポリシーによってより適切に管理されます。",
            "Lambda関数のためにサービスリンクロールを作成することは、この場合には適用できません。サービスリンクロールは、AWSサービスがあなたの代わりにアクションを実行するために使用する事前定義されたロールです。DynamoDBおよびS3へのアクセスを制御するための必要な粒度を提供しません。S3バケットポリシーもLambdaの呼び出し権限を制御するには適しておらず、S3に特化しており、Lambda関数には適用されません。"
        ]
    },
    {
        "Question Number": "40",
        "Situation": "グローバルな金融取引プラットフォームは、世界の異なる地域にいるユーザーのためにレイテンシを最小限に抑える必要があります。このプラットフォームは、遅延やパケットロスのリスクを減らすために、最小限のホップで一貫した高速データ転送を必要としています。さらに、さまざまなリアルタイムアプリケーションのためにTCPおよびUDPトラフィックをサポートする必要があります。",
        "Question": "これらの要件を最も満たすAWSサービスはどれですか？",
        "Options": {
            "1": "Amazon CloudFront with edge caching",
            "2": "AWS Direct Connect for dedicated connections",
            "3": "AWS Global Accelerator with Anycast IP addresses",
            "4": "Amazon Route 53 with latency-based routing"
        },
        "Correct Answer": "AWS Global Accelerator with Anycast IP addresses",
        "Explanation": "AWS Global Acceleratorは、グローバルに分散したユーザーを持つアプリケーションの可用性とパフォーマンスを向上させるために特別に設計されています。Anycast IPアドレスを使用してユーザートラフィックを最寄りのAWSエッジロケーションにルーティングし、レイテンシを最小限に抑え、一貫したデータ転送経路を提供します。このサービスはTCPおよびUDPトラフィックの両方をサポートしており、低レイテンシと高速データ転送を必要とするリアルタイムアプリケーションに最適です。さらに、ユーザーとアプリケーションの間のホップ数を減らすことで、遅延やパケットロスを最小限に抑えるのに役立ちます。",
        "Other Options": [
            "Amazon CloudFront with edge cachingは、静的コンテンツ配信のレイテンシを減らすためにエッジロケーションでコンテンツをキャッシュする主にコンテンツ配信ネットワーク（CDN）です。特定のタイプのアプリケーションのパフォーマンスを向上させることはできますが、一貫した高速データ転送とTCPおよびUDPトラフィックのサポートを必要とするリアルタイムアプリケーションには最適化されていません。",
            "AWS Direct Connectは、あなたの施設からAWSへの専用ネットワーク接続を提供し、データ転送のレイテンシを減少させることができます。しかし、これはハイブリッドクラウドアーキテクチャにより適しており、複数のリージョンにわたるグローバルルーティングやTCPおよびUDPトラフィックのサポートを本質的に提供しないため、グローバルな金融取引プラットフォームにはあまり適していません。",
            "Amazon Route 53 with latency-based routingは、レイテンシに基づいてユーザーリクエストを最寄りのAWSリージョンに誘導するDNSサービスです。パフォーマンスを向上させるのに役立つことはありますが、AWS Global Acceleratorと同じレベルの一貫した高速データ転送や最小ホップを提供せず、TCPおよびUDPトラフィックを同じ方法で直接サポートすることもありません。"
        ]
    },
    {
        "Question Number": "41",
        "Situation": "IAM管理者は、AWSリソースへの長期アクセスが必要な開発者チームのためにアクセスを設定しています。管理オーバーヘッドを減らすために、管理者は複数のチームメンバーにわたって同じ権限を適用し、ポリシーが再利用可能で簡単に更新できることを確保したいと考えています。",
        "Question": "管理者はこれらの要件を実装するためにどのアプローチを取るべきですか？",
        "Options": {
            "1": "特定の権限を持つ各IAMユーザーに個別のインラインポリシーを添付する。",
            "2": "カスタマー管理ポリシーを作成し、それをIAMグループに添付し、ユーザーをそのグループに追加する。",
            "3": "AWS管理ポリシーを使用し、それを各IAMユーザーに直接添付する。",
            "4": "必要な権限を持つリソースポリシーを定義し、それをリソースに直接適用する。"
        },
        "Correct Answer": "カスタマー管理ポリシーを作成し、それをIAMグループに添付し、ユーザーをそのグループに追加する。",
        "Explanation": "カスタマー管理ポリシーを作成することで、IAM管理者は複数のユーザーにわたって再利用可能な権限のセットを定義できます。このポリシーをIAMグループに添付することで、そのグループ内のすべてのユーザーがポリシーで定義された権限を継承します。このアプローチは管理オーバーヘッドを減少させ、権限を更新する必要がある場合、管理者は各ユーザーを個別に更新するのではなく、1か所でポリシーを修正するだけで済みます。この方法は、すべてのチームメンバーにわたって権限が一貫していることを保証します。",
        "Other Options": [
            "各IAMユーザーに個別のインラインポリシーを添付すると、各ユーザーにユニークなポリシーが作成され、管理オーバーヘッドが増加し、チーム全体で一貫した権限を維持することが難しくなります。インラインポリシーは再利用できず、各ユーザーごとに個別に更新する必要があります。",
            "AWS管理ポリシーを使用し、それを各IAMユーザーに直接添付すると、権限の管理に課題が生じる可能性があります。AWS管理ポリシーは事前定義されており、開発者チームの特定のニーズを満たさない場合があります。さらに、変更が必要な場合、各ユーザーを個別に更新する必要があり、管理オーバーヘッドが増加します。",
            "必要な権限を持つリソースポリシーを定義し、それをリソースに直接適用することは、ユーザー権限の管理には適していません。リソースポリシーは、複数のユーザーにわたってユーザー権限を管理するのではなく、特定のAWSリソースへのアクセスを制御するために設計されています。このアプローチは、ユーザーのチームに対して再利用可能で簡単に更新可能な権限の要件に対処していません。"
        ]
    },
    {
        "Question Number": "42",
        "Situation": "ある企業はAWSに重要なビジネスデータを保存しており、災害復旧のために高い耐久性と複数のリージョンにわたるレプリケーションを提供するストレージソリューションを選択する必要があります。",
        "Question": "耐久性とデータレプリケーションを確保するために、企業はどのストレージオプションを選択すべきですか？",
        "Options": {
            "1": "バックアップとレプリケーションのためにスナップショットを使用したAmazon EBS（Elastic Block Store）を使用し、データが別のアベイラビリティゾーンにレプリケートされることを確保する。",
            "2": "バージョン管理を有効にし、データの耐久性とグローバルレプリケーションを確保するためにAmazon S3を使用する。",
            "3": "共有アクセスのためにAmazon EFS（Elastic File System）を使用する。これは自動レプリケーションを提供しますが、リージョン間でのデータ耐久性を保証しません。",
            "4": "アーカイブストレージのためにAmazon Glacierを使用します。これは低コストの耐久性を提供しますが、リージョン間のレプリケーションをサポートしていません。"
        },
        "Correct Answer": "バージョン管理を有効にし、データの耐久性とグローバルレプリケーションを確保するためにAmazon S3を使用する。",
        "Explanation": "Amazon S3は高い耐久性と可用性のために設計されており、99.999999999%（11桁）の耐久性のSLAを持っています。バージョン管理を有効にすることで、企業はオブジェクトの複数のバージョンを保持でき、偶発的な削除や上書きからの回復に役立ちます。クロスリージョンレプリケーション（CRR）により、企業は異なるAWSリージョン間でデータを自動的にレプリケートでき、災害復旧の追加レイヤーを提供し、1つのリージョンが障害を経験しても重要なデータが利用可能であることを保証します。これにより、S3は複数のリージョンにわたる耐久性とレプリケーションのニーズに最適な選択となります。",
        "Other Options": [
            "Amazon EBSをスナップショットと共に使用すると、耐久性とバックアップを作成する能力が提供されますが、主に同じアベイラビリティゾーン内でデータをレプリケートするか、別のリージョンに手動でコピーされることになります。EBSは自動的なクロスリージョンレプリケーションのために設計されていないため、複数のリージョンにわたる災害復旧にはあまり適していません。",
            "Amazon EFSは、複数のインスタンスからアクセスできる管理されたファイルシステムを提供し、ある程度の冗長性と可用性を提供します。しかし、リージョン間でデータを自動的にレプリケートすることはなく、このシナリオでの災害復旧のための重要な要件を満たしていません。",
            "Amazon Glacierは主に長期アーカイブストレージのために設計されており、低コストの耐久性を提供します。非常に耐久性がありますが、リージョン間の自動レプリケーションをサポートしていないため、企業の即時アクセスと災害復旧機能のニーズには適していません。"
        ]
    },
    {
        "Question Number": "43",
        "Situation": "ある企業は、Amazon RDSデータベースのために、障害発生時にデータを復旧するための堅牢なバックアップ戦略を確保したいと考えています。彼らは、バックアップが自動的に作成され、最大35日間保持されることを要求しており、必要に応じて特定の時点に復元できる能力を求めています。",
        "Question": "これらの要件を満たすためにどの設定を使用すべきか、また主要な機能は何ですか？（2つ選択してください）",
        "Options": {
            "1": "自動バックアップを設定し、初回のフルスナップショット後に増分バックアップを行い、データを最大35日間保持します。自動バックアップは、保持期間内の任意の5分間隔にポイントインタイムリカバリを可能にします。",
            "2": "毎日手動スナップショットを使用し、各スナップショットを無期限に保持してデータ復旧を確保します。自動バックアップはポイントインタイムリカバリをサポートしていません。",
            "3": "バックアップのためにクロスリージョンレプリケーションを設定し、複数のリージョンにわたって堅牢性を確保しますが、コスト削減のために保持期間を7日間に制限します。",
            "4": "1回のフルバックアップを実施し、ポイントインタイムリカバリの要件を満たすために5分ごとに自動RDSスナップショットを有効にします。",
            "5": "バージョニングを有効にしたAmazon S3への継続的バックアップを有効にし、35日間内の任意の以前の状態に復元できるようにします。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "自動バックアップを設定し、初回のフルスナップショット後に増分バックアップを行い、データを最大35日間保持します。自動バックアップは、保持期間内の任意の5分間隔にポイントインタイムリカバリを可能にします。",
            "バージョニングを有効にしたAmazon S3への継続的バックアップを有効にし、35日間内の任意の以前の状態に復元できるようにします。"
        ],
        "Explanation": "Amazon RDSの自動バックアップは、データベースのバックアップを自動的に作成し、これらのバックアップを最大35日間保持する機能です。また、ポイントインタイムリカバリを可能にし、保持期間内の任意の特定の時間にデータベースを復元できます。これは、バックアップの自動作成と保持、特定の時点への復元能力という企業の要件を満たしています。バージョニングを有効にしたAmazon S3への継続的バックアップもこれらの要件を満たしており、保持期間内の任意の以前の状態に復元できるようにします。",
        "Other Options": [
            "手動スナップショットはバックアップの自動作成の要件を満たしていません。また、無期限に保持できるものの、ポイントインタイムリカバリをサポートしていないため、要件を満たしていません。",
            "バックアップのためのクロスリージョンレプリケーションは堅牢性を提供しますが、保持期間を7日間に制限することは最大35日間の保持要件を満たしていません。",
            "1回のフルバックアップを実施し、5分ごとに自動RDSスナップショットを有効にすることは、これらのスナップショットがどのくらいの期間保持されるかを指定していないため、最大35日間の保持要件を満たしていません。"
        ]
    },
    {
        "Question Number": "44",
        "Situation": "あるeコマース企業は、大量のトランザクションデータを処理しており、地域間でのデータの耐久性と可用性を確保したいと考えています。彼らは、災害やデータの破損が発生した場合に迅速にデータを復元できる信頼性の高いバックアップおよびレプリケーション戦略を必要としています。これらの要件を満たすために、企業はバックアップとクロスリージョンレプリケーションを実装するために最も適切なAWSサービスと設定を決定する必要があります。",
        "Question": "このバックアップおよびレプリケーション戦略を設定する際に考慮すべきことは何ですか？",
        "Options": {
            "1": "Amazon S3を使用し、クロスリージョンレプリケーションを有効にして、異なるリージョン間でデータを自動的に複製し、バックアップを管理するためのライフサイクルポリシーを設定します。",
            "2": "Amazon EC2スナップショットに依存し、各インスタンスのバックアップファイルを手動でリージョン間で転送します。",
            "3": "災害が発生した場合にデータを複製して保護するためにAWS Shield Advancedを有効にします。",
            "4": "コストを抑えるために、バックアップをAmazon Glacierのみに保存し、緊急時に取得します。"
        },
        "Correct Answer": "Amazon S3を使用し、クロスリージョンレプリケーションを有効にして、異なるリージョン間でデータを自動的に複製し、バックアップを管理するためのライフサイクルポリシーを設定します。",
        "Explanation": "Amazon S3を使用し、クロスリージョンレプリケーション（CRR）を有効にすることは、地域間でのデータの耐久性と可用性を確保するための最も効果的な戦略です。CRRは、S3バケット内のオブジェクトを異なるAWSリージョンに自動的に複製し、データ損失や破損が発生した場合の冗長性と迅速な回復オプションを提供します。さらに、ライフサイクルポリシーを設定することで、企業はデータの保持を管理し、古いデータを低コストのストレージクラスに移行することができ、コストを最適化しながら適切にバックアップを確保します。",
        "Other Options": [
            "Amazon EC2スナップショットに依存し、手動でバックアップファイルをリージョン間で転送することは、大量のトランザクションデータには理想的ではありません。スナップショットは個々のEC2インスタンスに結びついており、S3とCRRのような自動化と効率性を提供しません。この方法は人為的なエラーのリスクを高め、一貫性のないバックアップにつながる可能性があります。",
            "AWS Shield Advancedを有効にすることは、主にDDoS保護に焦点を当てており、バックアップやレプリケーション機能を提供しません。セキュリティにとって重要ですが、地域間でのデータの耐久性と可用性という企業のニーズには応えません。",
            "バックアップをAmazon Glacierのみに保存することは、迅速な回復ニーズには適していません。Glacierは長期的なアーカイブストレージ用に設計されており、取得時間は数時間かかることがあり、即時のデータアクセスが必要な災害復旧シナリオには理想的ではありません。このオプションはクロスリージョンレプリケーションも提供しません。"
        ]
    },
    {
        "Question Number": "45",
        "Situation": "ある企業は、AWSでElastic Load Balancer（ELB）を設定し、異なるアベイラビリティゾーン（AZ）にある複数のEC2インスタンスに対して受信トラフィックを分散させたいと考えています。彼らは、ロードバランサーがインターネット経由でアクセス可能であることを望んでいますが、同時にVPC内のパブリックおよびプライベートインスタンスへのアクセスを制御したいと考えています。",
        "Question": "どの設定を選択すべきか、またこの設定がスケールでトラフィックを処理するのにどのように有益であるかを説明してください。",
        "Options": {
            "1": "インターネット向けのELBを設定し、ノードにパブリックIPを割り当て、VPC内のパブリックおよびプライベートEC2インスタンスにトラフィックをルーティングできるようにします。この設定はAZ間でのスケーリングをサポートし、高可用性を提供します。",
            "2": "プライベートIPを持つ内部ロードバランサーを使用し、VPCへのアクセスを制限し、内部トラフィックのみをインスタンス間でバランスさせます。",
            "3": "プライベートEC2インスタンスのみを使用したインターネット向けのELBを設定し、パブリックアクセスを制限しながらスケーラビリティを維持します。",
            "4": "リソースの利用を最適化し、複数のAZ間でのスケーリングを制限するために、ロードバランサーを1ノードの設定として構成します。"
        },
        "Correct Answer": "インターネット向けのELBを設定し、ノードにパブリックIPを割り当て、VPC内のパブリックおよびプライベートEC2インスタンスにトラフィックをルーティングできるようにします。この設定はAZ間でのスケーリングをサポートし、高可用性を提供します。",
        "Explanation": "インターネット向けのElastic Load Balancer（ELB）は、インターネットからの受信トラフィックを処理するように設計されており、パブリックおよびプライベートEC2インスタンスの両方にリクエストをルーティングできます。ELBにパブリックIPを割り当てることで、外部ソースからのトラフィックを直接受信しながら、プライベートインスタンスへの内部トラフィックを管理できます。この設定は、異なるアベイラビリティゾーン（AZ）にある複数のEC2インスタンスにトラフィックを分散させることにより、高可用性とフォールトトレランスを実現します。AZの1つがダウンしても、他のAZが負荷を処理できるため、スケールでトラフィックを処理するのに有益です。この設定は、需要に応じてリソースをシームレスにスケーリングしながら、インスタンスへのアクセスを制御することを可能にします。",
        "Other Options": [
            "プライベートIPを持つ内部ロードバランサーを使用すると、VPC内の内部トラフィックのみにアクセスが制限され、インターネット経由でのアクセス要件を満たしません。このオプションでは、外部ユーザーがEC2インスタンス上でホストされているサービスにアクセスできません。",
            "プライベートEC2インスタンスのみを使用したインターネット向けのELBを設定することは機能しません。プライベートインスタンスはインターネットから直接アクセスできないため、この設定ではELBがトラフィックを効果的にルーティングできません。受信リクエストを処理するためのパブリック向けインスタンスがないためです。",
            "ロードバランサーを1ノードの設定として構成すると、高可用性やフォールトトレランスなどの負荷分散の利点が制限されます。この設定では、複数のAZ間でトラフィックを分散させる利点を活用できず、スケールでトラフィックを処理するためには重要です。"
        ]
    },
    {
        "Question Number": "46",
        "Situation": "スタートアップは、AWS上の月次ネットワークコストを厳密に監視し、支出が予算を超えた場合にアラートを受け取りたいと考えています。また、地域間のデータ転送コストを時間の経過とともに分析したいと考えています。",
        "Question": "これらの目標を達成するために、どのAWSコスト管理ツールを使用すべきですか？",
        "Options": {
            "1": "AWS Cost and Usage ReportとAWS Trusted Advisor",
            "2": "AWS BudgetsとAWS Cost Explorer",
            "3": "AWS Trusted AdvisorとAWS Budgets",
            "4": "AWS SupportとAWS Cost Explorer"
        },
        "Correct Answer": "AWS BudgetsとAWS Cost Explorer",
        "Explanation": "AWS Budgetsは、支出が定義された閾値を超えた場合にアラートをトリガーするカスタムコストおよび使用予算を設定できる機能を提供します。これは、スタートアップが月次ネットワークコストを監視し、アラートを受け取るために不可欠です。AWS Cost Explorerは、時間の経過に伴うコストと使用パターンに関する詳細な洞察を提供し、地域間のデータ転送コストを分析するのに役立ちます。これらのツールは、スタートアップの予算監視とコスト分析の要件を効果的に満たします。",
        "Other Options": [
            "AWS Cost and Usage Reportは詳細な請求情報を提供しますが、アラート機能はありません。AWS Trusted Advisorはベストプラクティスの推奨を提供しますが、予算監視や詳細なコスト分析のために特に設計されているわけではありません。",
            "AWS Budgetsは予算監視に正しく特定されていますが、AWS Trusted Advisorはコスト管理ではなくリソース最適化に焦点を当てているため、時間の経過に伴うコスト分析にはAWS Cost Explorerの方が適しています。",
            "AWS Supportは技術支援のためのサービスであり、コスト管理機能を提供しません。AWS Cost Explorerはコスト分析に役立ちますが、AWS Budgetsがなければ、スタートアップは予算監視に必要なアラート機能を欠いてしまいます。"
        ]
    },
    {
        "Question Number": "47",
        "Situation": "eコマースアプリケーションは、Amazon DynamoDBを使用して商品カタログデータを保存し、フラッシュセール中に高いボリュームの読み取りリクエストを処理する必要があります。アプリケーションチームは、ユーザーがほぼ瞬時に商品詳細にアクセスできるように、読み取りリクエストのレイテンシを減らしたいと考えています。ただし、強い整合性のある読み取りは必要ありません。",
        "Question": "これらの要件を最もよく満たすソリューションはどれですか？",
        "Options": {
            "1": "フラッシュセール中の負荷増加に対応するためにDynamoDB Auto Scalingを有効にする",
            "2": "DynamoDBをAmazon ElastiCache for Redisと統合して、より高速な読み取りアクセスを実現する",
            "3": "DynamoDB Accelerator (DAX)を有効にして、読み取りが多いワークロードのためのインメモリキャッシュを提供する",
            "4": "DynamoDBグローバルテーブルを使用して、商品カタログを複数の地域にレプリケートする"
        },
        "Correct Answer": "DynamoDB Accelerator (DAX)を有効にして、読み取りが多いワークロードのためのインメモリキャッシュを提供する",
        "Explanation": "DynamoDB Accelerator (DAX)は、DynamoDBのために特別に設計された高速インメモリキャッシングを提供し、読み取りレイテンシを大幅に削減します。アプリケーションが強い整合性のある読み取りを必要としないため、DAXは非常に低いレイテンシで最終的な整合性のある読み取りを提供でき、フラッシュセール中の高い読み取りリクエストを処理するのに最適です。DAXはトラフィックの急増に対応し、読み取りが多いワークロードのパフォーマンスを向上させ、ユーザーがほぼ瞬時に商品詳細にアクセスできるようにします。",
        "Other Options": [
            "DynamoDB Auto Scalingを有効にすると、トラフィックパターンに基づいて読み取りおよび書き込み容量を自動的に調整することで、負荷の増加を管理できます。ただし、フラッシュセール中に重要な読み取りリクエストのレイテンシの問題には直接対処しません。",
            "DynamoDBをAmazon ElastiCache for Redisと統合すると、頻繁にアクセスされるデータをキャッシュすることで読み取りパフォーマンスが向上する可能性があります。ただし、アーキテクチャに複雑さを加え、DAXほどDynamoDBと密接に統合されていない可能性があります。",
            "DynamoDBグローバルテーブルを使用すると、商品カタログを複数の地域にレプリケートでき、異なる地理的場所にいるユーザーの可用性を向上させ、レイテンシを減少させることができます。ただし、このソリューションは高い読み取り需要の際のレイテンシを減少させる必要には直接対処しておらず、データの可用性と冗長性に重点を置いています。"
        ]
    },
    {
        "Question Number": "48",
        "Situation": "オンラインゲーム会社は、プレイヤーデータ（プロフィール、ゲーム状態、インベントリアイテムなど）を保存する必要があります。このデータは高い可用性と耐久性を持ち、毎秒何百万もの読み取りおよび書き込みリクエストを処理できる必要があります。会社は急速な成長を見込んでおり、パフォーマンスを損なうことなく増加する需要にシームレスに対応できるストレージソリューションが必要です。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのストレージソリューションを推奨すべきですか？",
        "Options": {
            "1": "Amazon RDS for MySQL",
            "2": "Amazon DynamoDB",
            "3": "Amazon S3 Intelligent-Tiering",
            "4": "Amazon Redshift"
        },
        "Correct Answer": "Amazon DynamoDB",
        "Explanation": "Amazon DynamoDBは、完全に管理されたNoSQLデータベースサービスであり、高い可用性と耐久性を提供します。毎秒何百万もの読み取りおよび書き込みリクエストを処理するように設計されており、オンラインゲームのような高スループット要件を持つアプリケーションに最適です。DynamoDBは、パフォーマンスを損なうことなく増加する需要に対応するために自動的にスケールします。これは、プレイヤーベースが拡大するにつれて急速に成長できるストレージソリューションを必要とする会社のニーズに完全に一致します。さらに、自動バックアップやグローバルレプリケーションなどの機能を提供し、データの耐久性と可用性を確保します。",
        "Other Options": [
            "Amazon RDS for MySQLは、構造化データに適したリレーショナルデータベースサービスであり、SQLクエリをサポートします。ただし、DynamoDBと同じレベルのスループットを処理できない可能性があり、スケーリングにはより多くの管理が必要なため、急速に成長し高い可用性を必要とするオンラインゲームプラットフォームにはあまり適していません。",
            "Amazon S3 Intelligent-Tieringは、大量の非構造化データを保存するために設計されたオブジェクトストレージサービスです。耐久性と可用性を提供しますが、オンラインゲームの文脈で必要とされるプレイヤーデータのような高頻度の読み取りおよび書き込み操作には最適化されていないため、このシナリオには不適切です。",
            "Amazon Redshiftは、分析クエリとレポート用に最適化されたデータウェアハウジングサービスです。リアルタイムのプレイヤーデータ管理に必要な高速度のトランザクションワークロードには設計されていないため、要件に対して不適切な選択となります。"
        ]
    },
    {
        "Question Number": "49",
        "Situation": "ある企業がAWS上でのアプリケーションのために安全なVPCアーキテクチャを設計しています。彼らは、特定のインスタンスへのサブネット内の入出力トラフィックを制御し、サブネットレベルで追加のセキュリティ制御を適用する必要があります。",
        "Question": "この目的のためにNACLとセキュリティグループの使用と違いを正しく説明しているのはどれですか？（2つ選択してください）",
        "Options": {
            "1": "NACLはインスタンスレベルで動作し、ステートフルなトラフィックフィルタリングを提供しますが、セキュリティグループはサブネットレベルで動作し、各リクエストに対してステートレスな制御を提供します。",
            "2": "セキュリティグループはインスタンスレベルで適用され、特定のIPアドレスを許可または拒否するステートフルな制御を提供しますが、NACLはサブネットレベルで適用され、特定のIPレンジをステートレスな方法で許可または拒否するように構成できます。",
            "3": "NACLはサブネットレベルでの入出力トラフィックにのみ適用され、セキュリティグループは入出力トラフィックの両方を制御し、デフォルトでステートフルです。",
            "4": "セキュリティグループとNACLはどちらもインスタンスレベルで動作しますが、NACLはステートフルであり、複数のインスタンス間で動的なパケットフィルタリングを可能にします。",
            "5": "NACLは、セキュリティグループとは独立して、1つ以上のサブネットへのトラフィックを制御するファイアウォールとして機能することにより、追加のセキュリティ層を提供します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "セキュリティグループはインスタンスレベルで適用され、特定のIPアドレスを許可または拒否するステートフルな制御を提供しますが、NACLはサブネットレベルで適用され、特定のIPレンジをステートレスな方法で許可または拒否するように構成できます。",
            "NACLは、セキュリティグループとは独立して、1つ以上のサブネットへのトラフィックを制御するファイアウォールとして機能することにより、追加のセキュリティ層を提供します。"
        ],
        "Explanation": "AWSのセキュリティグループはインスタンスレベルで適用され、ステートフルな制御を提供します。これは、ネットワーク接続の状態を追跡し、許可されたアウトバウンド接続に対して自動的に戻りトラフィックを許可します。特定のIPアドレスを許可または拒否するように構成できます。一方、ネットワークアクセスコントロールリスト（NACL）はサブネットレベルで適用され、ステートレスな制御を提供します。これは、既存の接続を考慮せずに各パケットを個別に評価します。特定のIPレンジを許可または拒否するように構成できます。NACLはまた、セキュリティグループとは独立して、1つ以上のサブネットへのトラフィックを制御するファイアウォールとして機能することにより、追加のセキュリティ層を提供します。",
        "Other Options": [
            "NACLはサブネットレベルで動作し、インスタンスレベルではなくステートレスなトラフィックフィルタリングを提供します。また、セキュリティグループはインスタンスレベルで動作し、サブネットレベルではなくステートフルな制御を提供します。",
            "NACLはサブネットレベルでの入出力トラフィックの両方に適用され、入出力トラフィックにのみ適用されるわけではありません。",
            "セキュリティグループとNACLはどちらもインスタンスレベルで動作するわけではありません。セキュリティグループはインスタンスレベルで動作し、NACLはサブネットレベルで動作します。また、NACLはステートレスであり、ステートフルではありません。"
        ]
    },
    {
        "Question Number": "50",
        "Situation": "あるメディア企業が、ユーザーからのホリデー動画アップロードの急増に対応するためにサーバーレスアーキテクチャを設定しています。彼らは、セットアップが完全に管理され、自動的に予測不可能なトラフィックに対応でき、ユーザーがシームレスに認証できることを望んでいます。理想的なワークフローは、動画のアップロード、複数フォーマットへの処理、ストレージを含み、すべて最小限のオーバーヘッドで行われるべきです。",
        "Question": "このシナリオに基づいて、どのAWSサービスの組み合わせがこのアーキテクチャを最もサポートし、なぜそれが最適な選択なのかを説明してください。",
        "Options": {
            "1": "Amazon Cognitoを利用してユーザー認証を行い、アイデンティティプロバイダートークンをAWSの一時的な認証情報と安全に交換し、S3バケットへの直接アップロードを可能にします。各アップロード時にAWS Lambda関数をトリガーして動画処理パイプラインを開始します。",
            "2": "ユーザー認証、動画アップロード、トランスコーディングのためにAmazon EC2インスタンスのフリートを利用し、動画ファイルを接続されたEBSボリュームに保存します。需要のピークに合わせて手動でインスタンスをスケールします。",
            "3": "動画ストレージのためにAmazon S3を設定し、各動画アップロードごとにAWS Lambda関数を起動して処理を行い、処理ジョブの詳細をAmazon RDSデータベースに記録して耐障害性を確保します。",
            "4": "IAMロールを使用してユーザーを認証し、DynamoDBに動画を保存し、EC2インスタンスを使用して処理タスクを処理し、最終的に処理された動画をS3に保存して取得します。"
        },
        "Correct Answer": "Amazon Cognitoを利用してユーザー認証を行い、アイデンティティプロバイダートークンをAWSの一時的な認証情報と安全に交換し、S3バケットへの直接アップロードを可能にします。各アップロード時にAWS Lambda関数をトリガーして動画処理パイプラインを開始します。",
        "Explanation": "このオプションは、完全に管理されたサービスを利用し、自動的にスケールし、最小限の運用オーバーヘッドを必要とするため最適です。Amazon Cognitoはシームレスなユーザー認証を提供し、ユーザーが直接S3バケットに動画をアップロードできるようにします。S3は高い可用性と耐久性を持つように設計されています。アップロード時にAWS Lambdaを使用して動画処理をトリガーすることで、アップロード数に応じて処理が自動的にスケールし、予測不可能なトラフィックに効率的に対応できます。このアーキテクチャは、サーバーレスで完全に管理された要件に完全に合致しています。",
        "Other Options": [
            "ユーザー認証、動画アップロード、トランスコーディングのためにAmazon EC2インスタンスのフリートを利用することは、管理オーバーヘッドを大幅に増加させ、自動スケーリングを提供しません。EC2インスタンスはスケールするために手動の介入が必要であり、予測不可能なトラフィックパターンには理想的ではないため、このオプションは適していません。",
            "動画ストレージのためにAmazon S3を設定し、各動画アップロードごとにAWS Lambda関数を起動して処理を行うのは良いアプローチですが、処理ジョブの詳細をAmazon RDSデータベースに記録することは不必要な複雑さと管理オーバーヘッドを追加します。オーバーヘッドを最小限に抑えることに焦点を当てるべきであり、この目的のためにデータベースを使用する必要はないかもしれません。",
            "IAMロールを使用してユーザーを認証することは、この文脈でのユーザー認証には適していません。IAMロールは通常、ユーザー認証ではなくAWSサービスの権限に使用されます。動画をDynamoDBに保存することも、大きな動画ファイルには理想的ではなく、S3はそのような使用ケースのために特に設計されています。さらに、処理タスクにEC2インスタンスを使用することは、サーバーレスアーキテクチャの要件に矛盾します。"
        ]
    },
    {
        "Question Number": "51",
        "Situation": "ある企業が、us-east-1リージョン内の単一のアベイラビリティゾーン（AZ）にあるEC2インスタンスに接続されたデータを保存するためにAmazon Elastic Block Store（EBS）を使用しています。データの耐久性と回復力を高めるために、企業はAZの障害が発生した場合でもデータが安全であることを確保したいと考えています。",
        "Question": "彼らのEBSデータに最も良い回復力を提供する戦略はどれですか？",
        "Options": {
            "1": "Amazon S3に保存されたEBSスナップショットを使用し、異なるリージョンにコピーしてクロスリージョンのディザスタリカバリーを可能にします。",
            "2": "冗長性のために、同じリージョン内の異なるAZに複数のEC2インスタンスにEBSボリュームを接続します。",
            "3": "EBSボリュームをリージョン内のすべてのアベイラビリティゾーンに自動的にレプリケートするように構成します。",
            "4": "EBSの代わりにS3を使用してデータを直接保存します。S3はAZ間での耐久性と可用性が高いためです。"
        },
        "Correct Answer": "Amazon S3に保存されたEBSスナップショットを使用し、異なるリージョンにコピーしてクロスリージョンのディザスタリカバリーを可能にします。",
        "Explanation": "Amazon S3に保存されたEBSスナップショットを使用し、異なるリージョンにコピーすることで、EBSデータに最も良い回復力を提供します。これにより、データがバックアップされるだけでなく、異なる地理的な場所に保存されることが保証されます。これにより、アベイラビリティゾーン全体の障害によるデータ損失から保護され、スナップショットは別のリージョンで復元できます。この戦略は、Amazon S3の耐久性とクロスリージョンの機能を活用して、ディザスタリカバリーオプションを強化します。",
        "Other Options": [
            "同じリージョン内の異なるAZに複数のEC2インスタンスにEBSボリュームを接続することは、AZの障害に対する回復力を提供しません。なぜなら、EBSボリュームは一度に1つのインスタンスにしか接続できないからです。ある程度の冗長性を提供するかもしれませんが、全体のAZの損失からは保護されません。",
            "EBSボリュームをリージョン内のすべてのアベイラビリティゾーンに自動的にレプリケートするように構成することは、EBSが提供する機能ではありません。EBSボリュームは特定のAZに結びついており、スナップショットを作成することはできますが、AZ間での自動レプリケーションはありません。したがって、このオプションはAZの障害に対する回復力を高めるものではありません。",
            "EBSの代わりにS3を使用してデータを直接保存することは、AZ間での耐久性と可用性が高いですが、すべての使用ケースに適しているわけではありません。特にブロックストレージを必要とする使用ケースには適していません。さらに、EC2インスタンスの文脈でEBSデータの回復力の必要性に直接対処していないため、異なるストレージパラダイムが関与しています。"
        ]
    },
    {
        "Question Number": "52",
        "Situation": "金融サービス会社がオンプレミスのデータウェアハウスをAWSに移行しています。このデータウェアハウスは大量のトランザクションデータを処理し、ETL操作に高いスループットを必要とします。会社はコストを最小限に抑えつつ、スケーラビリティとパフォーマンスを確保することを目指しています。",
        "Question": "データウェアハウスのストレージに対して、ソリューションアーキテクトはどのAWSサービスを推奨すべきですか？",
        "Options": {
            "1": "Amazon RDS for PostgreSQL",
            "2": "Amazon Redshift",
            "3": "Amazon DynamoDB",
            "4": "Amazon Aurora"
        },
        "Correct Answer": "Amazon Redshift",
        "Explanation": "Amazon Redshiftは、分析ワークロード専用に設計された完全管理型のペタバイトスケールのデータウェアハウスサービスです。高いスループットに最適化されており、大量のトランザクションデータを効率的に処理できるため、ETL操作に最適です。Redshiftのカラムストレージと並列処理機能により、高速なクエリパフォーマンスとスケーラビリティが実現され、データウェアハウスをAWSに移行する際のパフォーマンスとコスト効率の要件に合致します。",
        "Other Options": [
            "Amazon RDS for PostgreSQLはトランザクションワークロードに適したリレーショナルデータベースサービスですが、Redshiftのような大規模データウェアハウスや分析には最適化されていません。大規模データセットに対するETL操作のパフォーマンスとスケーラビリティは同じレベルでは提供されない可能性があります。",
            "Amazon DynamoDBは、高可用性と低レイテンシのキー・バリューおよびドキュメントデータへのアクセスを目的としたNoSQLデータベースサービスです。特定のアプリケーションには優れていますが、特に大規模データセットに対する複雑なクエリや分析には従来のデータウェアハウスのニーズには適していません。",
            "Amazon Auroraは高いパフォーマンスと可用性を提供するリレーショナルデータベースサービスですが、RDSと同様にデータウェアハウス専用に設計されておらず、分析クエリやETL操作においてAmazon Redshiftと同じレベルのパフォーマンスを提供しない可能性があります。"
        ]
    },
    {
        "Question Number": "53",
        "Situation": "メディア制作会社は、ビデオ編集のための高性能ストレージを必要としていますが、コストを低く抑えたいと考えています。高性能と低性能のワークロードが混在しており、適切なブロックストレージの種類を選択する必要があります。",
        "Question": "コストを最適化しつつ、パフォーマンス要件を満たすために、会社はどのブロックストレージオプションの組み合わせを使用すべきですか？",
        "Options": {
            "1": "すべてのボリュームに対してProvisioned IOPS SSD (io2)",
            "2": "高性能タスクに対してGeneral Purpose SSD (gp3)、低性能タスクに対してThroughput Optimized HDD (st1)",
            "3": "すべてのボリュームに対してCold HDD (sc1)",
            "4": "すべてのデータに対してブロックストレージの代わりにAmazon S3を使用"
        },
        "Correct Answer": "高性能タスクに対してGeneral Purpose SSD (gp3)、低性能タスクに対してThroughput Optimized HDD (st1)",
        "Explanation": "この組み合わせにより、メディア制作会社はパフォーマンスとコストを効果的にバランスさせることができます。General Purpose SSD (gp3)は、ビデオ編集のような高性能ワークロードに対して価格とパフォーマンスの良いバランスを提供し、低レイテンシと高スループットが不可欠です。一方、Throughput Optimized HDD (st1)は、あまり頻繁にアクセスされないビデオファイルやバックアップの保存など、低性能タスクに対してよりコスト効果的です。このハイブリッドアプローチは、両方のタイプのワークロードに対するパフォーマンス要件を満たしつつ、コストを最適化します。",
        "Other Options": [
            "すべてのボリュームに対してProvisioned IOPS SSD (io2)を使用することは、低性能タスクには不必要に高価であり、高IOPSワークロード向けに設計されているため、そのようなパフォーマンスを必要としないタスクに対してコスト効率を提供しません。",
            "すべてのボリュームに対してCold HDD (sc1)を使用することは、ビデオ編集のような高性能タスクのパフォーマンス要件を満たさないでしょう。sc1はアクセス頻度が低いことを目的としており、SSDオプションに比べてパフォーマンスが大幅に低いためです。",
            "すべてのデータに対してブロックストレージの代わりにAmazon S3を使用することは、低レイテンシと高スループットを必要とするビデオ編集ワークロードには適していない可能性があります。S3はオブジェクトストレージであり、高性能アプリケーションに必要なブロックレベルのアクセスに最適化されていません。"
        ]
    },
    {
        "Question Number": "54",
        "Situation": "ある会社が、共有AWSアカウントでプロジェクトに取り組む開発者チームのために安全なアクセスを設定したいと考えています。チームはアカウント内の特定のAWSリソースへの柔軟なアクセスを必要としており、そのアクセスはユーザーごとに取り消し可能でなければなりません。",
        "Question": "これらのリソースへのアクセスを付与するための最も安全で柔軟なアプローチはどれですか？",
        "Options": {
            "1": "各開発者に特定の権限とポリシーを持つIAMユーザーを作成する",
            "2": "開発者間で共有されるアクセスキーを持つ単一のIAMユーザーを作成する",
            "3": "AWS IAM Identity Center (AWS Single Sign-On)を使用して各開発者に役割を割り当てる",
            "4": "共有リソースにIAMロールを割り当て、開発者を含むIAMグループに権限を付与する"
        },
        "Correct Answer": "AWS IAM Identity Center (AWS Single Sign-On)を使用して各開発者に役割を割り当てる",
        "Explanation": "AWS IAM Identity Center (AWS Single Sign-On)を使用することで、AWSアカウントやアプリケーション全体でのユーザーアクセスの集中管理が可能になります。個々の開発者に役割を柔軟かつ安全に割り当てることができ、必要なリソースにのみアクセスできるようになります。このアプローチは、ユーザーごとにアクセスを簡単に取り消すことも可能であり、共有環境でのセキュリティを維持するために不可欠です。さらに、IAM Identity Centerは既存のアイデンティティプロバイダーとの統合をサポートし、セキュリティとユーザー管理を強化します。",
        "Other Options": [
            "各開発者に特定の権限とポリシーを持つIAMユーザーを作成することは有効なアプローチですが、チームが成長するにつれて管理が煩雑になる可能性があります。各ユーザーを個別に管理する必要があり、アクセスを取り消すには各ユーザーの権限を変更する必要があるため、IAM Identity Centerを使用するよりも効率が悪くなります。",
            "開発者間で共有されるアクセスキーを持つ単一のIAMユーザーを作成することは非常に安全ではありません。このアプローチは最小権限の原則に反し、個々のユーザーの行動を追跡するのが難しくなります。アクセスキーが侵害された場合、すべての開発者のアクセスが危険にさらされ、1人のユーザーのアクセスを取り消すには、全員のキーを変更する必要があります。",
            "共有リソースにIAMロールを割り当て、開発者を含むIAMグループに権限を付与することは合理的なアプローチですが、AWS IAM Identity Centerが提供する柔軟性と管理の容易さには欠けています。ある程度のアクセス制御は可能ですが、IAM Identity Centerと同じレベルの個別ユーザー管理や取り消し機能は提供されません。"
        ]
    },
    {
        "Question Number": "55",
        "Situation": "多国籍のeコマース企業は、世界中のユーザーが注文情報に迅速にアクセスできる必要があります。このアプリケーションは、異なる大陸にいるユーザーのために高可用性と低遅延を確保するために、データのマルチリージョンレプリケーションを必要とします。さらに、システムは、異なるリージョンで同時に更新が発生した場合に、潜在的な競合を優雅に処理する必要があります。",
        "Question": "これらの要件を最も満たすDynamoDB Global Tablesの機能はどれですか？",
        "Options": {
            "1": "「最後の書き込みが勝つ」競合解決を伴うマルチマスターレプリケーション",
            "2": "データの整合性を確保するためのシングルマスターレプリケーション",
            "3": "リージョン間のすべての読み取りおよび書き込みに対するグローバル強整合性",
            "4": "リージョン間の厳密なFIFO（先入れ先出し）競合解決"
        },
        "Correct Answer": "「最後の書き込みが勝つ」競合解決を伴うマルチマスターレプリケーション",
        "Explanation": "DynamoDB Global Tablesはマルチマスターレプリケーションを利用しており、これにより複数のリージョンで同時に更新を行うことができます。これは、異なる大陸で注文情報への迅速なアクセスを提供する必要がある多国籍のeコマース企業にとって重要です。「最後の書き込みが勝つ」競合解決戦略は、異なるリージョンで同時に更新が発生した場合に、最も最近の更新（タイムスタンプに基づく）を保持することを保証し、潜在的な競合を優雅に処理できるようにします。この機能は高可用性と低遅延をサポートし、アプリケーションの要件を効果的に満たします。",
        "Other Options": [
            "シングルマスターレプリケーションは、更新を単一のリージョンに制限するため、複数のリージョンでの高可用性と低遅延の要件を満たすことができず、他のリージョンのユーザーに遅延を引き起こす可能性があります。",
            "リージョン間のすべての読み取りおよび書き込みに対するグローバル強整合性はDynamoDB Global Tablesではサポートされておらず、これは遅延を引き起こし可用性を低下させる可能性のある調整を必要とするため、迅速なアクセスと低遅延の必要性に矛盾します。",
            "厳密なFIFO（先入れ先出し）競合解決はDynamoDB Global Tablesの機能ではありません。このアプローチは、同時に更新が発生するマルチリージョン設定には適しておらず、遅延やデータの可用性の不整合を引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "56",
        "Situation": "ある企業が新しいAWS環境を設定しており、特定のAWSリージョン内にプライベートで孤立したネットワークが必要です。彼らはこのネットワークのIPアドレス範囲を制御し、高可用性のために異なるアベイラビリティゾーン（AZ）内に複数のサブネットを持ちたいと考えています。また、同じリージョン内に複数のVPCを持つことができるか、デフォルトVPCを使用した場合のデフォルト設定についても知りたいと考えています。",
        "Question": "これらの要件に従ってネットワークを構成するために、企業はどのアプローチを取るべきですか？",
        "Options": {
            "1": "デフォルトVPCを作成します。これにより、リージョン内の各アベイラビリティゾーンにサブネットが自動的に提供されます。デフォルトVPCは固定CIDR範囲172.31.0.0/16を持ち、同じリージョン内に追加のカスタムVPCを作成することはできません。",
            "2": "カスタムVPCを作成します。これにより、企業は独自のCIDR範囲を指定し、各アベイラビリティゾーンに複数のサブネットを作成できます。デフォルトVPCもデフォルトで利用可能であり、必要に応じて削除または再作成できます。",
            "3": "AWSが提供するデフォルトVPCを使用します。これによりカスタムCIDR範囲が許可され、サブネットのIPアドレス割り当てを完全に制御できます。デフォルトVPCは各アベイラビリティゾーンごとに1つのサブネットのみを許可します。",
            "4": "VPCはデフォルトでグローバルであるため、複数のリージョンにわたって単一のVPCを設定します。この設定により、企業は異なるリージョンにわたって単一のVPC内に複数のアベイラビリティゾーンを持つことができ、冗長性と高可用性を提供します。"
        },
        "Correct Answer": "カスタムVPCを作成します。これにより、企業は独自のCIDR範囲を指定し、各アベイラビリティゾーンに複数のサブネットを作成できます。デフォルトVPCもデフォルトで利用可能であり、必要に応じて削除または再作成できます。",
        "Explanation": "カスタムVPCを作成することで、企業は独自のIPアドレス範囲（CIDRブロック）を定義し、高可用性のために異なるアベイラビリティゾーン（AZ）にわたって複数のサブネットを作成できます。この設定は、IPアドレス範囲を制御したプライベートで孤立したネットワークの要件を満たします。さらに、AWSは同じリージョン内に複数のVPCを作成することを許可しており、デフォルトVPCはデフォルトで利用可能であり、必要に応じて削除または再作成できます。",
        "Other Options": [
            "デフォルトVPCを作成すると、企業は独自のCIDR範囲を指定することができません。これは固定CIDR範囲172.31.0.0/16を持っています。さらに、同じリージョン内に複数のカスタムVPCを作成することは実際に可能であるため、このオプションは不正確です。",
            "デフォルトVPCはカスタムCIDR範囲を許可しません。これは固定CIDR範囲を持っています。さらに、デフォルトVPCは各AZにサブネットを提供しますが、カスタムVPCのようにサブネットのIPアドレス割り当てを完全に制御することはできません。このオプションはしたがって不正確です。",
            "VPCはグローバルではなく、リージョンに限定されています。各VPCは単一のリージョンに制限されており、VPCはそのリージョン内の複数のAZにまたがることができますが、複数のリージョンにまたがることはできません。このオプションはAWSにおけるVPCの動作を誤って表現しているため不正確です。"
        ]
    },
    {
        "Question Number": "57",
        "Situation": "あなたは、S3バケットとアプリケーションロードバランサー（ALB）から安全なコンテンツを提供するために、Amazon CloudFrontを使用してコンテンツ配信システムを設定しています。暗号化された通信を確保するために、SSL証明書を設定することに決めました。",
        "Question": "SSL要件を考慮した場合、ビューワーとCloudFrontディストリビューション間で安全なHTTPS接続を有効にするために重要なことはどれですか？",
        "Options": {
            "1": "us-east-1リージョンのACM（Amazon Certificate Manager）で有効な公開証明書を生成またはインポートし、ドメインのDNS名と一致させる。",
            "2": "コストを節約するために、起源（S3およびALB）で自己署名証明書を使用します。CloudFrontがSSLターミネーションを処理します。",
            "3": "各CloudFrontエッジロケーションでSSLサポートのために専用IPを割り当てます。これは、最新のブラウザがHTTPS接続を確立するために必須です。",
            "4": "CloudFrontディストリビューションでのみSSLを有効にし、起源サーバーでは無効にします。CloudFrontは自動的にビューワーとのすべてのトラフィックを暗号化します。"
        },
        "Correct Answer": "us-east-1リージョンのACM（Amazon Certificate Manager）で有効な公開証明書を生成またはインポートし、ドメインのDNS名と一致させる。",
        "Explanation": "ビューワーとCloudFrontディストリビューション間で安全なHTTPS接続を有効にするためには、有効なSSL証明書が必要です。Amazon Certificate Manager（ACM）を使用すると、安全な接続を確立するために必要なSSL証明書を生成またはインポートできます。証明書はus-east-1リージョンに存在する必要があります。なぜなら、CloudFrontはディストリビューションで使用するためにこのリージョンから発行されたSSL証明書を必要とするからです。さらに、証明書はCloudFrontディストリビューションで使用されるドメイン名と一致する必要があり、SSLハンドシェイク中の適切な検証を保証します。",
        "Other Options": [
            "起源（S3およびALB）で自己署名証明書を使用することは、クライアントに信頼されていないため、プロダクション環境では推奨されません。自己署名証明書に対してCloudFrontはSSLターミネーションを処理せず、クライアントは信頼できる証明書なしでは安全な接続を確立しません。",
            "各CloudFrontエッジロケーションでSSLサポートのために専用IPを割り当てる必要はありません。CloudFrontはSSLターミネーションのために共有インフラストラクチャを使用し、最新のブラウザはHTTPS接続のために専用IPを必要としません。代わりに、彼らは安全な接続を確立するためにSSL証明書に依存します。",
            "CloudFrontディストリビューションでのみSSLを有効にし、起源サーバーでは無効にすることは推奨されません。CloudFrontは自らとビューワー間のトラフィックを暗号化できますが、CloudFrontと起源サーバー（S3およびALB）間の接続も保護することが重要です。これにより、CloudFrontから起源へのデータ転送中の潜在的な脆弱性を防ぎます。"
        ]
    },
    {
        "Question Number": "58",
        "Situation": "機械学習会社が、高性能コンピューティング（HPC）シミュレーションを実行しています。これには、インスタンス間で非常に低いネットワーク遅延と高いパケット毎秒（PPS）性能が必要です。シミュレーションは計算集約型であり、インスタンスが最小限の遅延で直接通信する必要があります。",
        "Question": "これらの要件を満たすために、ソリューションアーキテクトはどのEC2配置グループの構成を選択すべきですか？",
        "Options": {
            "1": "複数のアベイラビリティゾーンにわたるスプレッド配置グループ",
            "2": "単一のアベイラビリティゾーン内のクラスター配置グループ",
            "3": "複数のラックにわたるパーティション配置グループ",
            "4": "専用ホスト配置"
        },
        "Correct Answer": "単一のアベイラビリティゾーン内のクラスター配置グループ",
        "Explanation": "クラスター配置グループは、インスタンスを同じアベイラビリティゾーン内に物理的に近接させることで、低遅延と高スループットを提供するように設計されています。この構成は、インスタンス間の迅速な通信を必要とする計算集約型アプリケーションに最適であり、ネットワーク遅延を最小限に抑え、パケット毎秒の性能を最大化します。シミュレーションが計算集約型であり、最小限の遅延で直接通信する必要があるため、クラスター配置グループが最良の選択です。",
        "Other Options": [
            "複数のアベイラビリティゾーンにわたるスプレッド配置グループは、異なる物理ハードウェアにインスタンスを分散させて同時障害のリスクを減らすように設計されています。高可用性を提供しますが、インスタンスが近接していないため、計算集約型シミュレーションに必要な低遅延と高PPS性能を提供しません。",
            "複数のラックにわたるパーティション配置グループは、高可用性とフォールトトレランスを必要とするアプリケーションに役立ちますが、インスタンス間の直接通信に必要な低遅延と高スループットを保証しないため、与えられたシナリオには適していません。",
            "専用ホスト配置は、使用のために専用の物理サーバーであり、インスタンスの配置やライセンスに対するより多くの制御を可能にします。しかし、HPCシミュレーションに必要な低遅延と高パケット毎秒性能を本質的に提供するものではなく、ネットワーク性能よりもコンプライアンスと制御に重点を置いています。"
        ]
    },
    {
        "Question Number": "59",
        "Situation": "医療機関は、規制要件を遵守するために、オンプレミスのデータセンターとAWS環境の間に安全で信頼性の高い接続を確立する必要があります。この接続は、高帯域幅をサポートし、リアルタイムデータ処理のために低遅延を提供する必要があります。",
        "Question": "ソリューションアーキテクトはどのネットワーク接続オプションを推奨すべきですか？",
        "Options": {
            "1": "動的ルーティングを使用したAWS Site-to-Site VPN",
            "2": "専用接続を使用したAWS Direct Connect",
            "3": "VPCピアリングを使用したAWS Transit Gateway",
            "4": "AWSサービスにプライベートにアクセスするためのAWS PrivateLink"
        },
        "Correct Answer": "専用接続を使用したAWS Direct Connect",
        "Explanation": "AWS Direct Connectは、オンプレミスのデータセンターとAWSの間に専用の高帯域幅、低遅延の接続を提供します。このオプションは、特にリアルタイムデータ処理のために規制遵守を満たすために、安全で信頼性の高い接続を必要とする組織に最適です。Direct Connectは公共のインターネットをバイパスし、遅延を減少させ、性能を向上させるため、高スループットアプリケーションに適しています。",
        "Other Options": [
            "動的ルーティングを使用したAWS Site-to-Site VPNは、公共のインターネットを使用して安全な接続を確立しますが、遅延や帯域幅に変動をもたらす可能性があります。安全なオプションではありますが、リアルタイムデータ処理に必要な高帯域幅と低遅延の要件を満たさない可能性があります。",
            "VPCピアリングを使用したAWS Transit Gatewayは、主に複数のVPCとオンプレミスネットワークを接続するために使用されます。さまざまなネットワーク間の通信を促進できますが、専用接続を提供せず、Direct Connectほど高帯域幅と低遅延の要件を効果的に満たさない可能性があります。",
            "AWS PrivateLinkは、トラフィックを公共のインターネットにさらさずにAWSサービスにプライベートにアクセスするために設計されています。しかし、オンプレミスのデータセンターとAWSの間に直接接続を確立しないため、高帯域幅と低遅延のための安全で信頼性の高い接続の特定の要件には適していません。"
        ]
    },
    {
        "Question Number": "60",
        "Situation": "金融サービス会社は、単一のAWSアカウントを使用して異なる部門間のコストを追跡したいと考えています。彼らは、部門ごとにリソースを分類し、詳細なコストレポートを生成する方法を必要としています。",
        "Question": "彼らがこれを達成するために最も役立つAWSコスト管理機能はどれですか？",
        "Options": {
            "1": "マルチアカウント請求を有効にする",
            "2": "コスト配分タグを使用する",
            "3": "各部門のためにAWS Budgetsを設定する",
            "4": "部門特有のストレージのためにS3リクエスターペイを有効にする"
        },
        "Correct Answer": "コスト配分タグを使用する",
        "Explanation": "コスト配分タグを使用すると、AWSリソースを部門や他の任意の基準で分類できます。これらのタグをリソースに適用することで、金融サービス会社は各部門に関連するコストを追跡し、これらのタグに基づいて詳細なコストレポートを生成できます。この機能は、コストの追跡と報告のために特に設計されており、彼らのニーズに最適なオプションです。",
        "Other Options": [
            "マルチアカウント請求を有効にすることは、コストを分離するために複数のAWSアカウントを使用することを含むため、会社が求めている単一のAWSアカウント内でコストを追跡するという要件には適していません。",
            "各部門のためにAWS Budgetsを設定することは、支出を監視し、アラートを設定するのに役立ちますが、詳細なコスト報告に必要なリソースの分類を提供しません。予算は、コストを追跡し制御することに関するものであり、分類することではありません。",
            "部門特有のストレージのためにS3リクエスターペイを有効にすることは、この文脈では関連性がありません。この機能は、S3データアクセスのリクエスターに料金を請求することを可能にしますが、部門間のコストを分類したり、詳細なコストレポートを生成したりするのには役立ちません。"
        ]
    },
    {
        "Question Number": "61",
        "Situation": "あるeコマース企業は、マーケティング、営業、開発などのさまざまなビジネスユニットにわたって複数のAWSアカウントを運営しており、部門ごとにAWSコストを正確に追跡および監視したいと考えています。彼らは、データベースやコンピューティングリソースなどの共有リソースを各部門の予算に割り当て、各ビジネスユニットのコスト追跡を透明にする方法を必要としています。",
        "Question": "これらの要件を満たすために、どのAWSコスト管理機能を使用すべきですか？",
        "Options": {
            "1": "すべてのアカウントで統合請求を使用し、コスト配分タグを適用して特定の部門にコストを割り当てる",
            "2": "すべての部門のために単一のAWSアカウントを作成し、内部請求慣行を使用してコストを割り当てる",
            "3": "各部門のリソースに対してS3リクエスターペイを有効にし、各部門内の個々のユーザーにコストを転送する",
            "4": "各部門のために別々の請求アラートを設定し、コストを独立して追跡する"
        },
        "Correct Answer": "すべてのアカウントで統合請求を使用し、コスト配分タグを適用して特定の部門にコストを割り当てる",
        "Explanation": "統合請求を使用することで、eコマース企業は単一の請求アカウントの下で複数のAWSアカウントを管理でき、支払いプロセスが簡素化されます。コスト配分タグを適用することで、各部門が使用する特定のリソースに関連するコストを分類および追跡できます。この方法はコスト配分の透明性を提供し、各ビジネスユニットの予算追跡を正確に行うことができ、AWSコストを効果的に監視する要件を満たします。",
        "Other Options": [
            "すべての部門のために単一のAWSアカウントを作成すると、すべてのリソースが1つのアカウントに集約されるため、コスト追跡が複雑になります。このアプローチは、個々の部門に正確にコストを割り当てるために必要な粒度を欠いており、予算を効果的に管理することが困難です。",
            "S3リクエスターペイを有効にすることは、コストを部門間で追跡するには適していません。これはAmazon S3リソースにのみ適用されます。この機能は、データのリクエスターがデータ転送コストを支払うことを可能にしますが、さまざまなAWSサービスや部門間でコストを追跡および割り当てるための包括的なソリューションを提供しません。",
            "各部門のために別々の請求アラートを設定することはコストを監視するのに役立ちますが、共有リソースを割り当てたり、部門の予算に対してコストを正確に追跡する方法を提供しません。アラートは反応的であり、積極的ではなく、詳細なコスト管理や配分を促進しません。"
        ]
    },
    {
        "Question Number": "62",
        "Situation": "ある金融会社は、オンプレミス環境とAWS間のデータを転送中に暗号化したいと考えています。データはTLS証明書を使用して暗号化される必要があります。",
        "Question": "会社はTLS証明書を管理および展開するためにどのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "AWS Key Management Service (AWS KMS)",
            "2": "AWS Secrets Manager",
            "3": "AWS Certificate Manager (ACM)",
            "4": "Amazon S3"
        },
        "Correct Answer": "AWS Certificate Manager (ACM)",
        "Explanation": "AWS Certificate Manager (ACM)は、AWSサービスおよびアプリケーションで使用するTLS/SSL証明書を管理および展開するために特別に設計されています。証明書のプロビジョニング、管理、および展開のプロセスを簡素化し、金融会社がオンプレミス環境とAWS間のデータを簡単に暗号化できるようにします。ACMは証明書の更新も自動的に処理し、手動での介入なしに暗号化が有効であることを保証します。",
        "Other Options": [
            "AWS Key Management Service (AWS KMS)は、アプリケーションやサービスの暗号鍵を管理するために主に使用されます。暗号化および復号化プロセスにおいて重要な役割を果たしますが、TLS証明書を直接管理することはありません。",
            "AWS Secrets Managerは、データベースの資格情報、APIキー、その他の機密情報などの秘密を管理するために使用されます。TLS証明書を管理する機能は提供しておらず、この特定の要件には適していません。",
            "Amazon S3は、任意の量のデータをいつでも保存および取得できるストレージサービスです。TLS証明書を管理または展開する機能はなく、したがってデータ転送中の暗号化のタスクには関連しません。"
        ]
    },
    {
        "Question Number": "63",
        "Situation": "ある企業は、AWS上で安全なユーザー認証とDDoS攻撃やSQLインジェクションなどの外部脅威からの保護を必要とするWebアプリケーションを開発しています。アプリケーションはまた、ユーザーの資格情報が安全に管理され、ユーザーが役割に基づいて制限されたアクセスを持つことを保証する必要があります。",
        "Question": "このセキュリティ要件を満たすために、企業はどのAWSサービスの組み合わせを使用すべきですか？",
        "Options": {
            "1": "DDoS保護のためにAWS Shieldを使用し、ユーザー認証のためにAmazon Cognitoを使用し、SQLインジェクション攻撃をブロックするためにAWS WAFを使用する。",
            "2": "DDoS保護のためにAmazon GuardDutyを使用し、ユーザー認証のためにIAMロールを使用し、SQLインジェクション保護のためにAWS CloudFrontを使用する。",
            "3": "ユーザー認証のためにAWS Identity Center (AWS SSO)を使用し、DDoS保護のためにAWS WAFを使用し、SQLインジェクション防止のためにAmazon Macieを使用する。",
            "4": "ユーザー認証のためにAWS Secrets Managerを使用し、DDoS保護のためにAWS Shieldを使用し、SQLインジェクション保護のためにAWS Lambdaを使用する。"
        },
        "Correct Answer": "DDoS保護のためにAWS Shieldを使用し、ユーザー認証のためにAmazon Cognitoを使用し、SQLインジェクション攻撃をブロックするためにAWS WAFを使用する。",
        "Explanation": "このサービスの組み合わせは、シナリオで示されたすべてのセキュリティ要件に効果的に対処します。AWS Shieldは、外部脅威からWebアプリケーションを保護するために不可欠な堅牢なDDoS保護を提供します。Amazon Cognitoはユーザー認証のために特別に設計されており、ユーザー資格情報の安全な管理を可能にし、役割に基づくアクセス制御を有効にします。AWS WAF（Web Application Firewall）は、SQLインジェクション攻撃を含む一般的なWebの脅威からWebアプリケーションを保護するために特別に調整されており、そのような悪意のあるリクエストをブロックするルールを作成できます。",
        "Other Options": [
            "DDoS保護のためにAmazon GuardDutyを使用するのは誤りです。GuardDutyは主に悪意のある活動や不正行為を監視する脅威検出サービスであり、直接的なDDoS保護を提供するものではありません。IAMロールはユーザー認証サービスではなく、AWSリソースへの権限を付与するために使用されます。AWS CloudFrontはコンテンツ配信ネットワークであり、直接的なSQLインジェクション保護を提供しません。",
            "AWS Identity Center (AWS SSO)はシングルサインオンおよびユーザー認証のためのサービスですが、AWS WAFはDDoS保護のために設計されていません。Webアプリケーションのセキュリティのためのものです。Amazon Macieはデータセキュリティおよびプライバシーサービスであり、機密データを発見し保護するのに役立ちますが、SQLインジェクション攻撃を防ぐことはできません。",
            "AWS Secrets ManagerはAPIキーやデータベースの資格情報などの秘密を管理するために使用されますが、認証サービスではありません。AWS ShieldはDDoS保護に適していますが、AWS Lambdaは本質的にSQLインジェクション保護を提供するものではなく、イベントに応じてコードを実行できる計算サービスであり、Webアプリケーションのセキュリティに直接対処するものではありません。"
        ]
    },
    {
        "Question Number": "64",
        "Situation": "ある企業が仮想プライベートクラウド（VPC）を設定しており、複数のアベイラビリティゾーン（AZ）に展開されるアプリケーションのために複数のサブネットを設計する必要があります。彼らは、各サブネット内のIPアドレスが正しく割り当てられ、ネットワーク内の特定の機能のために予約されることを確実にしたいと考えています。",
        "Question": "次のうち、VPCサブネットの設定および予約IPアドレスの取り扱いに関するルールを最もよく説明しているのはどれですか？",
        "Options": {
            "1": "単一のサブネットは、VPC CIDRブロック内のIPアドレスの利用を最大化するために、複数のアベイラビリティゾーンにまたがることができます。",
            "2": "各サブネットにはIPアドレスの範囲があり、各サブネット内の5つの特定のIPアドレスは、DNSやVPCルーティングなどのネットワーク機能のためにAWSによって自動的に予約されます。",
            "3": "サブネットに割り当てられたIPv4 CIDRブロックは、特にサブネットが異なるAZにある場合、互いに重複することができます。",
            "4": "AWSのDHCPオプションセットでは、各サブネット内の自動的に割り当てられたIPアドレスの編集や削除が可能です。"
        },
        "Correct Answer": "各サブネットにはIPアドレスの範囲があり、各サブネット内の5つの特定のIPアドレスは、DNSやVPCルーティングなどのネットワーク機能のためにAWSによって自動的に予約されます。",
        "Explanation": "AWSでは、各サブネットはVPCのCIDRブロックからIPアドレスの範囲を割り当てられ、AWSは特定のネットワーク機能のために各サブネット内で5つのIPアドレスを自動的に予約します。これらの予約されたアドレスは、VPCルーター、DNS、およびその他の重要なサービスに使用され、インスタンスに割り当てられないようにします。このルールは、VPCとそのサブネットの機能を維持するために重要です。",
        "Other Options": [
            "単一のサブネットは複数のアベイラビリティゾーンにまたがることはできません。各サブネットは完全に1つのアベイラビリティゾーン内に存在する必要があります。この設計により、異なるAZのリソースが分離され、高可用性とフォールトトレランスを提供できます。",
            "サブネットに割り当てられたIPv4 CIDRブロックは互いに重複することはできません。各サブネットは、競合を避け、VPC内での適切なルーティングを確保するために、ユニークなIPアドレスの範囲を持つ必要があります。重複するCIDRブロックは、ルーティングの問題や接続の問題を引き起こします。",
            "AWSのDHCPオプションセットでは、各サブネット内の自動的に割り当てられたIPアドレスの編集や削除はできません。DHCPオプションセットは、インスタンスのためのDHCP設定を構成するために使用されますが、サブネット内の予約されたIPアドレスには影響しません。"
        ]
    },
    {
        "Question Number": "65",
        "Situation": "ある企業がグローバルなウェブアプリケーションを展開しており、世界中のユーザーに高可用性と低遅延のアクセスを確保したいと考えています。企業はAmazon Route 53をDNS管理に使用しており、フォールトトレランスを確保するために、複数のAWSリージョン内の複数のアベイラビリティゾーン（AZ）にアプリケーションを展開することを検討しています。",
        "Question": "次のうち、企業の高可用性と災害復旧の要件を最もよく満たすアプローチはどれですか？",
        "Options": {
            "1": "Route 53を使用して地理的位置ルーティングを行い、ユーザーを最寄りのリージョンに誘導し、これらのリージョン内の複数のアベイラビリティゾーンにアプリケーションを展開して高可用性を確保します。",
            "2": "Route 53を使用してフェイルオーバールーティングポリシーを設定し、プライマリリージョンで障害が発生した場合にトラフィックがバックアップリージョンにルーティングされるようにします。",
            "3": "管理を簡素化し、運用の複雑さを減らすために、1つのリージョンの単一のアベイラビリティゾーンにアプリケーションを展開します。",
            "4": "Route 53を使用して重み付けルーティングを行い、可用性や遅延に関係なくすべてのリージョンにトラフィックを均等に誘導し、よりバランスの取れたトラフィック分配を実現します。"
        },
        "Correct Answer": "Route 53を使用して地理的位置ルーティングを行い、ユーザーを最寄りのリージョンに誘導し、これらのリージョン内の複数のアベイラビリティゾーンにアプリケーションを展開して高可用性を確保します。",
        "Explanation": "Route 53を使用して地理的位置ルーティングを行うことで、企業はユーザーを最寄りのAWSリージョンに誘導でき、遅延を最小限に抑え、ユーザー体験を向上させます。アプリケーションをこれらのリージョン内の複数のアベイラビリティゾーン（AZ）に展開することで、障害が発生した場合にトラフィックが異なるAZの健全なインスタンスに自動的にルーティングされるため、高可用性を確保できます。このアプローチは、複数のAZとリージョンの冗長性を活用することで、フォールトトレランスと災害復旧機能も提供します。",
        "Other Options": [
            "Route 53を使用してフェイルオーバールーティングポリシーを設定することは、災害復旧に役立ちますが、主にプライマリリージョンが障害を起こした場合にのみバックアップリージョンにトラフィックをルーティングすることに焦点を当てています。これは、最適なパフォーマンスのためにユーザーを最寄りのリージョンに誘導しない可能性があるため、世界中のユーザーに低遅延アクセスを提供する必要には対応していません。",
            "1つのリージョンの単一のアベイラビリティゾーンにアプリケーションを展開すると、ダウンタイムのリスクが大幅に増加し、高可用性やフォールトトレランスを提供しません。その単一のAZが障害を経験した場合、アプリケーション全体が利用できなくなり、企業の高可用性の要件に反します。",
            "Route 53を使用して重み付けルーティングを行い、すべてのリージョンにトラフィックを均等に誘導することは、これらのリージョンの可用性や遅延を無視します。これにより、ユーザーにとって最適でないパフォーマンスが生じる可能性があり、トラフィックが遠くのリージョンや問題が発生しているリージョンに送信される可能性があるため、企業の低遅延アクセスと高可用性の目標を達成できません。"
        ]
    }
]