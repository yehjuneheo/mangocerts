[
    {
        "Question Number": "1",
        "Situation": "ある企業がデータウェアハウジングソリューションとして Amazon Redshift を使用しています。SysOps 管理者は、コンプライアンスおよびセキュリティ監査のためにデータベースユーザーの活動と接続試行を監視するためのログ設定を行う必要があります。",
        "Question": "データベースで実行された各クエリを追跡するために、管理者が有効にすべきログタイプはどれですか？",
        "Options": {
            "1": "ユーザーログ",
            "2": "接続ログ",
            "3": "監査ログ",
            "4": "ユーザー活動ログ"
        },
        "Correct Answer": "ユーザー活動ログ",
        "Explanation": "ユーザー活動ログは、データベースで実行された各クエリを記録するために特別に設計されています。このログはユーザーのクエリ活動に関する洞察を提供し、監視および監査の目的に不可欠です。",
        "Other Options": [
            "ユーザーログは、ユーザーアカウントの作成や変更など、データベースユーザー定義の変更を追跡しますが、クエリ実行の詳細は記録しません。",
            "接続ログは、データベースへの認証試行、接続、および切断を記録しますが、クエリ実行データは含まれていません。",
            "監査ログは Amazon Redshift の標準ログタイプではないため、Redshift のログオプションの文脈では存在しません。"
        ]
    },
    {
        "Question Number": "2",
        "Situation": "ある組織が、キー管理ソリューションを導入することでデータセキュリティを強化しようとしています。彼らは、機密データが暗号化され、暗号化キーが AWS 内で適切に管理され保護されることを確実にしたいと考えています。",
        "Question": "アプリケーションのために暗号化キーを作成、管理、保護するための安全で集中管理された方法を提供する AWS サービスはどれですか？",
        "Options": {
            "1": "AWS Identity and Access Management (IAM)",
            "2": "AWS Secrets Manager",
            "3": "AWS Certificate Manager",
            "4": "AWS Key Management Service (KMS)"
        },
        "Correct Answer": "AWS Key Management Service (KMS)",
        "Explanation": "AWS Key Management Service (KMS) は、データを暗号化するために使用される暗号化キーを作成、管理、保護するために特別に設計されています。キーを集中管理する方法を提供し、他の AWS サービスと統合されているため、データの安全性を確保します。",
        "Other Options": [
            "AWS Secrets Manager は、API キーやデータベースの資格情報などのシークレットを管理するために主に使用されますが、暗号化キーの管理機能は提供していません。",
            "AWS Certificate Manager は、ウェブサイトのセキュリティを確保するための SSL/TLS 証明書のプロビジョニングと管理に使用されますが、データ暗号化のための暗号化キーを管理することはありません。",
            "AWS Identity and Access Management (IAM) は、AWS サービスへのユーザー権限とアクセスを管理することに焦点を当てており、暗号化キーの作成や管理には関与していません。"
        ]
    },
    {
        "Question Number": "3",
        "Situation": "ある金融機関は、DDoS 攻撃がそのウェブアプリケーションやサービスに与える潜在的な影響を懸念しています。SysOps 管理者は AWS Shield Standard を実装しましたが、機関は重要なリソースを保護し、潜在的な攻撃中のダウンタイムを最小限に抑えるために、より高度な保護が必要です。",
        "Question": "SysOps 管理者が機関の重要なリソースに対して強化された DDoS 保護を提供するために実装すべきソリューションはどれですか？",
        "Options": {
            "1": "AWS Firewall Manager を実装して、アカウント全体のネットワークセキュリティポリシーを管理する。",
            "2": "悪意のあるトラフィックをフィルタリングするために Amazon CloudFront と AWS WAF を使用する。",
            "3": "追加の保護とコスト監視のために AWS Shield Advanced を有効にする。",
            "4": "AWS リソースの前にサードパーティの DDoS 保護サービスを展開する。"
        },
        "Correct Answer": "追加の保護とコスト監視のために AWS Shield Advanced を有効にする。",
        "Explanation": "AWS Shield Advanced は、EC2 インスタンス、ELB ロードバランサー、CloudFront ディストリビューション、Route 53 ホストゾーンなどの重要な AWS リソース向けに特別に設計された強化された DDoS 保護を提供します。また、DDoS 攻撃によるスケーリング料金からのコスト保護も提供し、機関のニーズに最も適したソリューションです。",
        "Other Options": [
            "AWS Firewall Manager は複数のアカウントにわたるセキュリティポリシーの管理に役立ちますが、AWS Shield Advanced が提供する特定の DDoS 保護は提供しません。",
            "Amazon CloudFront と AWS WAF を使用することで、一部の悪意のあるトラフィックをフィルタリングできますが、AWS Shield Advanced が提供する包括的な DDoS 保護は提供しません。",
            "サードパーティの DDoS 保護サービスを展開すると、追加の複雑さが生じる可能性があり、AWS Shield Advanced のように AWS リソースとシームレスに統合されるわけではありません。"
        ]
    },
    {
        "Question Number": "4",
        "Situation": "ある企業がウェブアプリケーションを実行している複数のEC2インスタンスを展開しました。彼らは、インスタンスのパフォーマンスとそれら上で実行されているアプリケーションの可視性を確保したいと考えています。SysOps管理者は、CloudWatchエージェントを使用してこれらのEC2インスタンスから詳細なメトリクスとログを収集する必要があります。",
        "Question": "Windowsイベントログを収集するために、CloudWatchエージェントの設定ファイルで指定しなければならない構成オプションはどれですか？",
        "Options": {
            "1": "logs_collected",
            "2": "logs_config",
            "3": "service",
            "4": "metrics_collected"
        },
        "Correct Answer": "logs_config",
        "Explanation": "'logs_config'セクションは、Windowsイベントログを含むログを収集するための詳細を指定するために使用されます。このセクションでは、管理者が監視するログファイルまたはロググループを定義できます。",
        "Other Options": [
            "'logs_collected'は有効な構成セクションではなく、'logs_config'セクション内で収集するログの種類を指定するために使用されるキーです。",
            "'metrics_collected'はパフォーマンスメトリクスの収集に関連しており、ログではありません。システムとアプリケーションのメトリクスを収集するために重要ですが、ログ収集の構成には関与しません。",
            "'service'はCloudWatchエージェントの設定ファイルで認識されている構成セクションではありません。ログやメトリクスの収集には関係ありません。"
        ]
    },
    {
        "Question Number": "5",
        "Situation": "ある企業がEC2インスタンス上に新しいアプリケーションを展開しており、システムパフォーマンスとアプリケーションログを効率的に監視できるようにしたいと考えています。彼らはこの目的のためにCloudWatchエージェントを使用することに決めました。",
        "Question": "SysOps管理者は、メトリクスとログの両方を収集するためにEC2インスタンスにCloudWatchエージェントをインストールして構成するためにどのステップを踏むべきですか？",
        "Options": {
            "1": "AWS Systems Manager Run Commandを使用して、SSMドキュメントからCloudWatchエージェントをインストールし、JSON設定ファイルを使用して構成します。",
            "2": "CloudFormationテンプレートを利用してEC2インスタンスにCloudWatchエージェントを展開し、テンプレート内で構成を指定します。",
            "3": "コマンドラインを使用して各EC2インスタンスにCloudWatchエージェントを手動でインストールし、AWS Management Consoleを通じて構成します。",
            "4": "EC2インスタンスにCloudWatchエージェントをインストールし、インスタンス起動後に関数を呼び出して構成するLambda関数を作成します。"
        },
        "Correct Answer": "AWS Systems Manager Run Commandを使用して、SSMドキュメントからCloudWatchエージェントをインストールし、JSON設定ファイルを使用して構成します。",
        "Explanation": "AWS Systems Manager Run Commandを使用することで、複数のインスタンスにわたるCloudWatchエージェントのインストールと構成プロセスが効率化され、一貫性が保たれ、手動作業が削減されます。",
        "Other Options": [
            "CloudWatchエージェントを手動でインストールすることは、複数のインスタンスに対して効率的ではなく、構成エラーのリスクを高めます。また、自動化のベストプラクティスを活用していません。",
            "CloudFormationテンプレートを使用することは効果的ですが、テンプレート自体の事前構成と展開が必要です。この方法は、変更なしで既存のインスタンスにはあまり簡単ではありません。",
            "CloudWatchエージェントをインストールするためにLambda関数を作成することは、不必要な複雑さを加えます。Lambda関数は通常、EC2インスタンスにソフトウェアをインストールするためではなく、イベント駆動のタスクに使用されます。"
        ]
    },
    {
        "Question Number": "6",
        "Situation": "ある企業がAmazon S3を利用して大量のデータを保存しており、コンプライアンス目的でオブジェクトの状態を監視し報告するソリューションを実装する必要があります。彼らは、ピーク使用時にパフォーマンスに影響を与えずにスケジュールされたレポートを提供できるツールを使用したいと考えています。",
        "Question": "パフォーマンスに影響を与えずにオブジェクトの状態を監査および報告するために、Amazon S3のどの機能が企業の要件を最もよく満たしますか？",
        "Options": {
            "1": "Amazon S3ライフサイクルポリシー",
            "2": "Amazon S3 Select",
            "3": "Amazon S3インベントリ",
            "4": "Amazon S3イベント通知"
        },
        "Correct Answer": "Amazon S3インベントリ",
        "Explanation": "Amazon S3インベントリは、S3内のオブジェクトの状態に関するスケジュールされたレポートを提供するために特別に設計されています。これには、レプリケーションおよび暗号化の状態が含まれます。この機能により、ピーク時のS3操作のパフォーマンスに影響を与えることなく、効率的な監査とコンプライアンス報告が可能になります。",
        "Other Options": [
            "Amazon S3ライフサイクルポリシーは、オブジェクトのライフサイクルを管理するために使用され、異なるストレージクラスに移行したり削除したりしますが、報告機能は提供しません。",
            "Amazon S3イベント通知は、バケット内で特定のイベントが発生した際に通知をトリガーするために設計されていますが、スケジュールされた報告機能は提供しません。",
            "Amazon S3 Selectは、アプリケーションがS3オブジェクトからデータのサブセットのみを取得できるようにし、転送されるデータ量を削減しますが、インベントリや報告機能は提供しません。"
        ]
    },
    {
        "Question Number": "7",
        "Situation": "ある企業が、VPC内のインスタンスからS3やDynamoDBなどのさまざまなAWSサービスにアクセスする必要があるアプリケーションを展開しています。企業はセキュリティを強化し、インターネット接続の管理の複雑さを最小限に抑えることを目指しています。",
        "Question": "インスタンスにパブリックIPアドレスを必要とせずに、これらのサービスへの安全でプライベートな接続を可能にするために、企業はどのAWS機能を実装すべきですか？",
        "Options": {
            "1": "VPN接続を使用してAWSサービスに安全に接続する。",
            "2": "必要なAWSサービスのためにVPCエンドポイントを作成してプライベートアクセスを有効にする。",
            "3": "NATゲートウェイを展開してプライベートインスタンスがインターネット経由でサービスにアクセスできるようにする。",
            "4": "パブリックアクセスのある別のVPCとのVPCピアリング接続を設定する。"
        },
        "Correct Answer": "必要なAWSサービスのためにVPCエンドポイントを作成してプライベートアクセスを有効にする。",
        "Explanation": "VPCエンドポイントを作成することで、VPC内のインスタンスがパブリックIPアドレスを必要とせずにサポートされているAWSサービスに直接接続できるようになり、セキュリティが強化され、トラフィックがAWSネットワーク内に留まることが保証されます。",
        "Other Options": [
            "VPN接続を使用すると追加の複雑さが生じ、パブリックIPなしでAWSサービスに直接アクセスすることはできないため、このシナリオでは必要ありません。",
            "VPCピアリング接続を設定することは、AWSサービスに直接アクセスするためには不要であり、ピアリングはVPCエンドポイントと同じレベルのプライベートアクセスを提供しません。",
            "NATゲートウェイを展開すると、インスタンスがインターネットにアクセスできるようになり、パブリックIPアドレスを避けるという要件に矛盾し、トラフィックがパブリックインターネットにさらされます。"
        ]
    },
    {
        "Question Number": "8",
        "Situation": "システム管理者は、組織のAmazon RDSデータベースインスタンスが定期的にバックアップされ、復旧時間目標（RTO）および復旧ポイント目標（RPO）が満たされるようにする任務を負っています。管理者は、会社のデータ保持ポリシーに従いながらバックアッププロセスを自動化したいと考えています。",
        "Question": "管理者はRDSスナップショットを自動化し、バックアップおよび保持要件を満たすために、次のどのサービスまたは機能を使用すべきですか？",
        "Options": {
            "1": "AWS Backup",
            "2": "Amazon Data Lifecycle Manager",
            "3": "AWS Lambda",
            "4": "Amazon RDS自動バックアップ"
        },
        "Correct Answer": "AWS Backup",
        "Explanation": "AWS Backupは、Amazon RDSを含むAWSリソースのバックアップを自動化する完全管理型バックアップサービスです。バックアップの頻度と保持ポリシーを定義するバックアッププランを作成できるため、RTOおよびRPO要件を満たすのに最適です。",
        "Other Options": [
            "Amazon Data Lifecycle Managerは主にEBSボリュームのスナップショットを自動化するために使用され、RDSバックアップを直接管理するものではありません。",
            "Amazon RDS自動バックアップはRDSインスタンスのバックアップを自動化する方法を提供しますが、AWS Backupが提供するバックアッププランと保持ポリシーの包括的な管理は行いません。",
            "AWS Lambdaはイベントに応じてコードを実行するために使用できるサーバーレスコンピューティングサービスですが、RDSのバックアップ機能や保持ポリシーの管理は提供しません。"
        ]
    },
    {
        "Question Number": "9",
        "Situation": "ある企業がAWS Key Management Service (KMS)を使用して暗号鍵を管理しています。削除予定のカスタマーマスターキー（CMK）があり、SysOps管理者はこのアクションが鍵管理および暗号操作に与える影響を理解する必要があります。",
        "Question": "削除待ちのCMKに関して正しいのは次のうちどれですか？（2つ選択）",
        "Options": {
            "1": "削除待ちのCMKは、いかなる暗号操作にも使用できません。",
            "2": "AWS KMSは、削除のためにマークされた後もCMKのライフサイクルを管理し続けます。",
            "3": "CMKは削除のためにマークされた後、暗号操作には利用できなくなります。",
            "4": "削除待ちのCMKは、暗号操作のためにそのバックキーへのアクセスを許可します。",
            "5": "AWS KMSは、削除待ちのCMKのバックキーを自動的にローテーションします。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "削除待ちのCMKは、いかなる暗号操作にも使用できません。",
            "CMKは削除のためにマークされた後、暗号操作には利用できなくなります。"
        ],
        "Explanation": "削除待ちのCMKは、いかなる暗号操作にも使用できず、一度削除のためにマークされると、いかなる操作にも利用できなくなります。AWS KMSは、削除待ちのCMKのバックキーをローテーションせず、猶予期間中にこれらのキーがさらなる使用をされないことを保証します。",
        "Other Options": [
            "AWS KMSは、削除待ちのCMKのバックキーを自動的にローテーションします。これは不正確で、AWS KMSは削除待ちの状態にあるCMKのキーのローテーションを行いません。",
            "削除待ちのCMKは、暗号操作のためにそのバックキーへのアクセスを許可します。これは不正確で、削除待ちのCMKはすべての暗号活動に対して完全に無効です。",
            "AWS KMSは、削除のためにマークされた後もCMKのライフサイクルを管理し続けます。これは誤解を招く表現で、AWS KMSはメタデータを維持しますが、削除のためにマークされた後はキー自体は使用できません。"
        ]
    },
    {
        "Question Number": "10",
        "Situation": "SysOps管理者が、オンプレミスリソースとのシームレスな統合を必要とする企業アプリケーションのDNS設定を構成しています。彼らは、オンプレミスネットワークからのDNSクエリがAmazon Route 53にホストされているDNS名を解決できることを確認する必要があります。",
        "Question": "次のうち、これを達成するのに役立つ構成はどれですか？（2つ選択）",
        "Options": {
            "1": "Route 53 Resolverで条件付き転送ルールを設定する。",
            "2": "オンプレミスDNSサーバーにRoute 53ヘルスチェックを実装する。",
            "3": "Amazon CloudFrontを使用してDNSクエリをキャッシュする。",
            "4": "Route 53 Resolverのインバウンドエンドポイントを作成する。",
            "5": "オンプレミスネットワークとVPC間でVPCピアリングを構成する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Route 53 Resolverのインバウンドエンドポイントを作成する。",
            "Route 53 Resolverで条件付き転送ルールを設定する。"
        ],
        "Explanation": "Route 53 Resolverのインバウンドエンドポイントを作成することで、オンプレミスネットワークからのDNSクエリをRoute 53に送信でき、ホストされているDNS名の解決が可能になります。条件付き転送ルールを設定することで、特定のDNSクエリを適切なリゾルバに転送でき、オンプレミスリソースとのシームレスな統合が確保されます。",
        "Other Options": [
            "Amazon CloudFrontを使用してDNSクエリをキャッシュすることは、DNS名の解決には関連していません。CloudFrontはコンテンツ配信ネットワークであり、DNS解決を直接処理しません。",
            "VPCピアリングを構成することは、オンプレミスリソースからRoute 53へのDNS解決を直接促進するものではなく、VPC間の通信を可能にするだけです。",
            "オンプレミスDNSサーバーにRoute 53ヘルスチェックを実装することは、Route 53にホストされているDNS名の解決には役立たず、クエリ解決プロセスとは無関係です。"
        ]
    },
    {
        "Question Number": "11",
        "Situation": "ある企業は、災害が発生した場合に重要なアプリケーションを迅速に復旧できるようにする必要があります。彼らは、ダウンタイムとデータ損失を最小限に抑える災害復旧計画を実装するためのさまざまなオプションを検討しています。",
        "Question": "重要なアプリケーションに対して、最小限のデータ損失で最も迅速な復旧時間を提供する災害復旧戦略はどれですか？",
        "Options": {
            "1": "日次データ複製を伴うウォームスタンバイ戦略を採用する",
            "2": "頻繁でないデータバックアップを伴うコールドスタンバイ戦略を利用する",
            "3": "リアルタイムデータ複製を伴うホットスタンバイ戦略を実装する",
            "4": "週次スナップショットを使用したバックアップと復元戦略を利用する"
        },
        "Correct Answer": "リアルタイムデータ複製を伴うホットスタンバイ戦略を実装する",
        "Explanation": "ホットスタンバイ戦略は、リアルタイムデータ複製で継続的に更新される完全に運用可能なバックアップ環境を維持することを含みます。このアプローチは、ダウンタイムとデータ損失を最小限に抑え、最も迅速な復旧オプションとなります。",
        "Other Options": [
            "週次スナップショットを使用したバックアップと復元戦略は、最新の変更が最新のスナップショットに含まれない可能性があるため、復旧時間が長くなり、データ損失の可能性があります。",
            "日次データ複製を伴うウォームスタンバイ戦略は、コールドスタンバイよりも迅速な復旧を提供しますが、ホットスタンバイの即時性は提供せず、データに潜在的なギャップを残します。",
            "コールドスタンバイ戦略は、頻繁でないバックアップに依存し、災害後にシステムをオンラインにするためにかなりの時間を要するため、迅速な復旧が重要なシナリオには不適切です。"
        ]
    },
    {
        "Question Number": "12",
        "Situation": "システム管理者がAWSで仮想プライベートクラウド（VPC）を構成しています。VPCには複数のサブネットがあり、管理者は1つのサブネット内のインスタンスが別のサブネット内のインスタンスと通信できるようにしたいと考えています。また、管理者はセキュリティのベストプラクティスを使用して、インスタンスへの入出力トラフィックを制御する必要があります。",
        "Question": "異なるサブネット内のインスタンス間の通信を許可しながら、安全なアクセスを維持するために、管理者は次のうちどれを構成すべきですか？",
        "Options": {
            "1": "ネットワークACL",
            "2": "ルートテーブル",
            "3": "VPN接続",
            "4": "セキュリティグループ"
        },
        "Correct Answer": "ルートテーブル",
        "Explanation": "ルートテーブルは、VPC内のトラフィックを指示するために不可欠です。異なるサブネット内のインスタンス間の通信を可能にするためには、それらのサブネットに関連付けられたルートテーブルに正しいルーティングルールが必要です。適切に構成されたルートテーブルは、必要に応じてサブネット間でトラフィックが流れることを保証します。",
        "Other Options": [
            "ネットワークACLはステートレスであり、サブネットレベルでトラフィックを制御することによってセキュリティの層を提供しますが、サブネット間の通信のためのルーティングを確立するものではありません。サブネット間通信を許可するための主要なメカニズムではありません。",
            "セキュリティグループはEC2インスタンスのための仮想ファイアウォールとして機能し、インスタンスレベルでの入出力トラフィックを制御します。インスタンスのセキュリティにおいて役割を果たしますが、サブネット間のルーティングを直接管理するものではありません。",
            "VPN接続は、オンプレミスネットワークをVPCに安全に接続するために使用されますが、同じVPC内のインスタンス間の通信を促進するものではありません。VPC内のサブネット間トラフィックとは無関係です。"
        ]
    },
    {
        "Question Number": "13",
        "Situation": "ある企業がAWS Elastic Beanstalkを使用してウェブアプリケーションの新しいバージョンを展開しています。アプリケーションは展開プロセス中にユーザーに対して利用可能でなければならず、チームはダウンタイムを最小限に抑えつつ、環境が負荷に対応できることを確保したいと考えています。彼らはElastic Beanstalkが提供するさまざまな展開ポリシーを検討しています。",
        "Question": "チームは、展開プロセス中にフルキャパシティを維持しながらダウンタイムを最小限に抑えるために、Elastic Beanstalkアプリケーションにどの展開ポリシーを選択すべきですか？",
        "Options": {
            "1": "一括展開: 新しいバージョンをすべてのインスタンスに同時に展開し、短いダウンタイムを引き起こします。",
            "2": "追加バッチによるローリング展開: 新しいバージョンをバッチで展開しますが、まず新しいバッチのインスタンスを起動して、展開プロセス中にフルキャパシティを確保します。",
            "3": "ローリング展開: 新しいバージョンをバッチで展開し、展開フェーズ中にキャパシティを減少させます。",
            "4": "イミュータブル展開: 新しいインスタンスのグループに新しいバージョンを展開することで、イミュータブルアップデートを実行します。"
        },
        "Correct Answer": "追加バッチによるローリング展開: 新しいバージョンをバッチで展開しますが、まず新しいバッチのインスタンスを起動して、展開プロセス中にフルキャパシティを確保します。",
        "Explanation": "'追加バッチによるローリング展開'ポリシーは、チームがバッチで更新を展開しながら新しいインスタンスを起動してフルキャパシティを維持できるため、ダウンタイムを最小限に抑え、展開プロセス中にアプリケーションがユーザーに利用可能であることを確保します。",
        "Other Options": [
            "'一括展開'ポリシーは新しいバージョンをすべてのインスタンスに同時に展開し、短いダウンタイムを引き起こすため、高可用性を必要とする環境には適していません。",
            "'ローリング展開'ポリシーは、展開フェーズ中にインスタンスをサービスから外すことで環境のキャパシティを減少させるため、ユーザートラフィックを処理するためのリソースが不足する可能性があります。",
            "'イミュータブル展開'ポリシーは、新しいインスタンスのセットに更新を展開することを保証しますが、展開中に既存のキャパシティを維持しないため、ダウンタイムを引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "14",
        "Situation": "ある企業がAWSのさまざまなセキュリティサービスを利用して、クラウドインフラストラクチャ全体の監視とコンプライアンスの維持を行っています。セキュリティチームは、古いソフトウェアを実行しているEC2インスタンスに関連するAmazon Inspectorから報告されたいくつかの高リスクの発見を確認しました。彼らは、タイムリーな是正を確保するためにこれらの発見をレビューしています。",
        "Question": "セキュリティチームは、Amazon Inspectorからのセキュリティ発見と他のセキュリティ発見を1つの集中ダッシュボードで視覚化、優先順位付け、管理するためにどのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "AWS Config",
            "2": "Amazon GuardDuty",
            "3": "AWS Security Hub",
            "4": "AWS Trusted Advisor"
        },
        "Correct Answer": "AWS Security Hub",
        "Explanation": "AWS Security Hubは、AWSアカウント全体のセキュリティアラートとコンプライアンス状況の集中ビューを提供します。Amazon Inspectorを含むさまざまなAWSセキュリティサービスからの発見を統合し、セキュリティチームが効果的にセキュリティポスチャーを視覚化および管理できるようにします。",
        "Other Options": [
            "AWS Configは主にAWSリソースの構成変更とコンプライアンスの追跡に使用され、セキュリティ発見を集中化するためには使用されません。",
            "Amazon GuardDutyはAWSアカウントとワークロードの継続的な監視を通じて脅威検出に焦点を当てていますが、Amazon Inspectorのようなサービスからの発見を集約することはありません。",
            "AWS Trusted AdvisorはAWSの使用に関するベストプラクティスに関連する推奨事項を提供しますが、セキュリティ発見のための集中ダッシュボードとしては機能しません。"
        ]
    },
    {
        "Question Number": "15",
        "Situation": "ある企業がAmazon S3に機密の顧客データを保存しており、このデータが静止時に暗号化されていることを確保する必要があります。SysOps管理者は、暗号化キーを管理するためにAWS Key Management Service (AWS KMS)を利用するソリューションを実装しなければなりません。",
        "Question": "管理者は、AWS KMSを使用してS3に保存されているデータが静止時に暗号化されることを確保するために何をすべきですか？",
        "Options": {
            "1": "S3バケットのAWS KMSキーを使用したサーバーサイド暗号化（SSE-KMS）を有効にします。",
            "2": "AWS Lambdaを使用してファイルをS3にアップロードする前に暗号化します。",
            "3": "サードパーティの暗号化ツールを使用してファイルを手動で暗号化し、S3にアップロードします。",
            "4": "コンプライアンスのためにS3バケットへのアクセスをログに記録するためにAmazon CloudTrailを設定します。"
        },
        "Correct Answer": "S3バケットのAWS KMSキーを使用したサーバーサイド暗号化（SSE-KMS）を有効にします。",
        "Explanation": "S3バケットのAWS KMSキーを使用したサーバーサイド暗号化（SSE-KMS）を有効にすることで、S3バケットに保存されているすべてのデータがAWS管理のキーを使用して自動的に静止時に暗号化されることが保証されます。このアプローチはキー管理を簡素化し、セキュリティのベストプラクティスに準拠することを確保します。",
        "Other Options": [
            "AWS Lambdaを使用してファイルをアップロードする前に暗号化することは有効な方法ですが、追加のコーディングと管理の手間が必要であり、SSE-KMSを直接使用するよりも効率が劣ります。",
            "サードパーティの暗号化ツールを使用してファイルを手動で暗号化することは複雑さを増し、暗号化キーが適切に管理されない場合にコンプライアンスの問題を引き起こす可能性があります。",
            "Amazon CloudTrailを設定してS3バケットへのアクセスをログに記録することは監査とコンプライアンスにとって重要ですが、静止時のデータの暗号化を提供するものではありません。"
        ]
    },
    {
        "Question Number": "16",
        "Situation": "SysOps管理者は、複数のAWSアカウントとリージョンにわたるパフォーマンスメトリクスを監視および分析する任務を負っています。管理者は、CloudWatchの機能を活用して、数学的表現を通じて新しいメトリクスを作成し、ダッシュボードでの洞察と視覚化を向上させたいと考えています。",
        "Question": "複数のアカウントとリージョンからメトリクスを集約および変換するために利用できるCloudWatchの機能はどれですか？（2つ選択してください）",
        "Options": {
            "1": "メトリクスの組み合わせにCloudWatchコンポジットアラームを使用する",
            "2": "メトリクスマスで複数のCloudWatchメトリクスをクエリする",
            "3": "メトリクスを視覚化するためにCloudWatchダッシュボードを作成する",
            "4": "メトリクスの変更を通知するためにCloudWatchアラームを活用する",
            "5": "CloudWatchメトリクスマスを使用して新しい時系列を作成する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "CloudWatchメトリクスマスを使用して新しい時系列を作成する",
            "メトリクスマスで複数のCloudWatchメトリクスをクエリする"
        ],
        "Explanation": "CloudWatchメトリクスマスを使用すると、さまざまなソースからメトリクスを集約および変換でき、既存のメトリクスから新しい時系列データを作成できます。この機能は、複数のアカウントとリージョンにわたる洞察を得るために不可欠です。",
        "Other Options": [
            "CloudWatchアラームはしきい値を監視し、ユーザーに変更を通知するために使用されますが、複数のアカウントやリージョンからメトリクスを集約または変換することはありません。",
            "CloudWatchダッシュボードを作成することはメトリクスを視覚化する方法ですが、メトリクスマスによって提供される集約または変換機能を含んでいません。",
            "CloudWatchのコンポジットアラームは複数のアラームを1つにまとめることができますが、メトリクスに対して数学的操作を行ったり、異なるアカウントやリージョン間での変換を許可したりすることはありません。"
        ]
    },
    {
        "Question Number": "17",
        "Situation": "ある会社がセキュリティ対策を強化するためにIAM設定を見直しています。彼らは、AWSリソースにアクセスするすべてのユーザーが安全に、かつ会社のポリシーに準拠していることを確認したいと考えています。セキュリティチームは、多要素認証（MFA）の実装と、強力なパスワードを要求するパスワードポリシーの強制を推奨しています。",
        "Question": "これらのセキュリティ要件を満たすためにSysOps管理者が取るべき行動はどれですか？",
        "Options": {
            "1": "IAMユーザーのアクセスをAWS Management Consoleのみに制限し、すべてのユーザーのAPIアクセスを無効にする。",
            "2": "管理アクセスを付与する新しいIAMロールを作成し、すべてのユーザーに割り当てて管理を容易にする。",
            "3": "すべてのIAMユーザーに対してMFAを有効にし、12文字以上の大文字と小文字のアルファベット、数字、記号の組み合わせを要求するパスワードポリシーを強制する。",
            "4": "すべてのIAMユーザーに一時的なセキュリティ認証情報を使用し、S3バケットポリシーを設定して無制限のアクセスを許可する。"
        },
        "Correct Answer": "すべてのIAMユーザーに対してMFAを有効にし、12文字以上の大文字と小文字のアルファベット、数字、記号の組み合わせを要求するパスワードポリシーを強制する。",
        "Explanation": "すべてのIAMユーザーに対してMFAを有効にし、強力なパスワードポリシーを強制することで、認証の追加層を追加し、パスワードが複雑さの要件を満たすことを保証することで、セキュリティが大幅に強化されます。",
        "Other Options": [
            "IAMユーザーのアクセスをAWS Management Consoleのみに制限すると、ユーザーの機能が制限され、強力なパスワードやMFAの必要性に対処しません。",
            "管理アクセスを持つ新しいIAMロールを作成すると、過剰な権限を与えることになり、セキュリティリスクとなります。MFAやパスワード管理の必要性には対処していません。",
            "一時的なセキュリティ認証情報を使用することでセキュリティを強化できますが、MFAや強力なパスワードポリシーの必要性を置き換えるものではなく、S3バケットへの無制限のアクセスを許可することは重大なセキュリティの脆弱性です。"
        ]
    },
    {
        "Question Number": "18",
        "Situation": "AWS環境を管理しており、AWS CloudFormationを使用してEC2インスタンスのデプロイを自動化する必要があります。CloudFormationテンプレートには、インスタンスタイプとキーペア名のパラメータが含まれています。スタックをデプロイした後、インスタンスが期待通りに起動しないことに気付きました。インスタンスが正しくプロビジョニングされるように問題をトラブルシューティングしたいと考えています。",
        "Question": "EC2インスタンスが正常に起動するのを妨げる可能性のある問題はどれですか？",
        "Options": {
            "1": "パラメータで指定されたインスタンスタイプが選択したリージョンに存在しない。",
            "2": "パラメータで提供されたキーペア名が指定されたリージョンに関連付けられていない。",
            "3": "CloudFormationテンプレートに'Resources'セクションが欠けている。",
            "4": "CloudFormationスタックにEC2インスタンスを起動するための十分なIAM権限がない。"
        },
        "Correct Answer": "パラメータで指定されたインスタンスタイプが選択したリージョンに存在しない。",
        "Explanation": "パラメータで指定されたインスタンスタイプが選択したAWSリージョンで無効または利用できない場合、EC2インスタンスは起動に失敗し、スタックの作成が失敗します。",
        "Other Options": [
            "IAM権限が不十分であることは問題を引き起こす可能性がありますが、テンプレートがEC2インスタンスの作成を許可する場合、起動を妨げることはありません。権限が正しく設定されていることを確認してくださいが、これはここでの主な問題ではありません。",
            "キーペア名が指定されたリージョンに関連付けられていない場合、インスタンスが起動した後のSSHアクセスに問題を引き起こす可能性がありますが、最初にインスタンスが作成されるのを妨げることはありません。",
            "CloudFormationテンプレートに'Resources'セクションが欠けているとスタックが失敗しますが、質問はテンプレートが正しく構成されていることを前提としているため、パラメータに焦点を当てています。"
        ]
    },
    {
        "Question Number": "19",
        "Situation": "ある組織がオンプレミスネットワークをAWSクラウドに拡張する計画を立てています。彼らは、パブリックインターネットを経由せずにプライベートな通信を可能にするVPCへの安全な接続を必要としています。また、VPCがパブリック向けサービスのためにインターネットに接続できることも確保したいと考えています。",
        "Question": "この要件を満たすために、組織はどのゲートウェイの組み合わせを実装すべきですか？",
        "Options": {
            "1": "安全なオンプレミス接続のためにのみVirtual Private Gatewayを使用する。",
            "2": "インターネットゲートウェイとVirtual Private Gatewayを展開する。",
            "3": "VPCへのパブリックアクセスを許可するためにのみインターネットゲートウェイを設定する。",
            "4": "インターネット接続とVPN接続の両方のためにTransit Gatewayを実装する。"
        },
        "Correct Answer": "インターネットゲートウェイとVirtual Private Gatewayを展開する。",
        "Explanation": "組織の要件を満たすためには、VPC内でホストされているサービスへのパブリックアクセスのためのインターネットゲートウェイと、オンプレミスからVPCへの安全でプライベートな接続のためのVirtual Private Gatewayの両方が必要です。",
        "Other Options": [
            "Virtual Private Gatewayのみを使用すると、VPC内でホストされているサービスのために必要なパブリックインターネット接続が提供されません。",
            "インターネットゲートウェイのみを設定すると、パブリックアクセスは許可されますが、オンプレミスネットワークへの安全なVPN接続は提供されません。",
            "Transit Gatewayを実装する必要はなく、要件はインターネットゲートウェイとVirtual Private Gatewayで満たすことができます。"
        ]
    },
    {
        "Question Number": "20",
        "Situation": "SysOps管理者がAmazon CloudFrontをコンテンツ配信ネットワークとして使用するアプリケーションを展開しました。最近、ユーザーからアプリケーションにアクセスした際に古いコンテンツが表示されるとの報告がありました。管理者は、CloudFront内のコンテンツが更新され、ユーザーが最新のバージョンを受け取ることを確実にする必要があります。",
        "Question": "SysOps管理者はCloudFrontのキャッシュ問題を解決するためにどのアクションを取るべきですか？",
        "Options": {
            "1": "CloudFrontに対して、古くなった特定のファイルのキャッシュオブジェクトを無効化するよう指示する。",
            "2": "CloudFrontの配信全体を削除し、最新の設定で再作成する。",
            "3": "CloudFrontの配信のTTL（生存時間）設定を減らして、コンテンツがより頻繁に更新されるようにする。",
            "4": "オリジンサーバーを更新してファイル名にバージョン番号を含め、それをアプリケーションで参照する。"
        },
        "Correct Answer": "CloudFrontに対して、古くなった特定のファイルのキャッシュオブジェクトを無効化するよう指示する。",
        "Explanation": "CloudFrontに対して古くなった特定のファイルのキャッシュオブジェクトを無効化するよう指示することは、古いコンテンツをキャッシュから削除し、ユーザーが最新のバージョンを即座に受け取ることを確実にするための直接的な解決策です。",
        "Other Options": [
            "オリジンサーバーを更新してファイル名にバージョン番号を含めることはキャッシュバスティングのための有効な戦略ですが、現在のCloudFront配信の即時のキャッシュ問題を解決するものではありません。",
            "TTL設定を減らすことは長期的には役立つかもしれませんが、ユーザーが経験している古いコンテンツの問題に対する即時の解決策を提供するものではありません。",
            "CloudFrontの配信全体を削除して再作成することは極端で不必要なステップであり、ダウンタイムやデータ損失の可能性を引き起こします。無効化はより効率的なアプローチです。"
        ]
    },
    {
        "Question Number": "21",
        "Situation": "ある会社がAWSで厳格なアクセス制御を実施し、割り当てられた権限が組織内の特定のユーザーロールに密接に関連付けられるようにしています。SysOps管理者として、あなたはこの目的のためにインラインポリシーの使用を推奨します。",
        "Question": "AWS IAMの文脈において、インラインポリシーに関する以下のどの文が正しいですか？",
        "Options": {
            "1": "インラインポリシーは、主体エンティティが削除された後でも自動的に保持されます。",
            "2": "インラインポリシーはグループに添付でき、すべてのメンバー間で権限を共有できます。",
            "3": "インラインポリシーは複数の主体エンティティ間で権限を共有する方法を提供します。",
            "4": "インラインポリシーはポリシーと主体エンティティの間に厳格な1対1の関係を許可します。"
        },
        "Correct Answer": "インラインポリシーはポリシーと主体エンティティの間に厳格な1対1の関係を許可します。",
        "Explanation": "インラインポリシーは単一の主体エンティティに直接関連付けられるように設計されており、付与された権限が他のエンティティと共有されたり、不注意に割り当てられたりしないことを保証します。これにより、個々のユーザーや役割に特有の厳格なアクセス制御を維持するのに理想的です。",
        "Other Options": [
            "インラインポリシーは複数の主体エンティティ間で共有することはできません。これは再利用のために設計された管理ポリシーの特徴です。",
            "インラインポリシーは関連付けられた主体エンティティが削除されると削除され、保持されるのは管理ポリシーの機能です。",
            "インラインポリシーはグループに添付することはできず、個々のユーザーや役割にのみ適用され、管理ポリシーはグループに使用できます。"
        ]
    },
    {
        "Question Number": "22",
        "Situation": "SysOps管理者は、Amazon RDSを使用して読み取りが多いアプリケーションのパフォーマンスを向上させる任務を負っています。アプリケーションは現在、単一のデータベースインスタンスで実行されており、ピーク使用時にパフォーマンスのボトルネックが発生しています。管理者は、アプリケーションアーキテクチャに大きな変更を加えることなく、読み取りトラフィックをスケールアウトして分散させるソリューションを実装する必要があります。",
        "Question": "管理者がデータベースの読み取りパフォーマンスを向上させ、単一の真実のソースを維持するために実装すべき機能はどれですか？",
        "Options": {
            "1": "Amazon RDS Multi-AZデプロイメント",
            "2": "Amazon DynamoDB",
            "3": "Amazon RDSリードレプリカ",
            "4": "Amazon ElastiCache"
        },
        "Correct Answer": "Amazon RDSリードレプリカ",
        "Explanation": "Amazon RDSリードレプリカは、複数のデータベースインスタンスにわたって読み取りトラフィックを分散させることを可能にし、読み取りが多いワークロードのために読み取りスループットとパフォーマンスを向上させます。この機能は、既存のアプリケーション構造を変更することなく要件に効果的に対処します。",
        "Other Options": [
            "Amazon RDS Multi-AZデプロイメントは高可用性とフェイルオーバーのために設計されていますが、読み取りのためにプライマリインスタンスで動作するため、読み取りトラフィックをスケールする能力は提供しません。",
            "Amazon ElastiCacheは読み取りパフォーマンスを向上させるためのキャッシングサービスですが、リードレプリカのようにRDSと直接統合されていません。また、キャッシング戦略を利用するためにアプリケーションの変更が必要です。",
            "Amazon DynamoDBはNoSQLデータベースサービスであり、既存のRDS構成と互換性がなく、これに切り替えるにはアプリケーションアーキテクチャに大きな変更が必要です。"
        ]
    },
    {
        "Question Number": "23",
        "Situation": "SysOps管理者は、DNS管理にRoute 53を使用する高可用性のウェブアプリケーションを設定する任務を負っています。アプリケーションは、異なる地域の複数のリソースにわたってトラフィックを効率的に処理する必要があります。管理者は、プライマリ地域が利用できなくなった場合に自動的にヘルスチェックとフェイルオーバーを行うRoute 53の構成を作成する必要があります。",
        "Question": "管理者がウェブアプリケーションの高可用性と自動フェイルオーバーを実現するために実装すべきRoute 53の機能はどれですか？",
        "Options": {
            "1": "ウェイト付きルーティング",
            "2": "レイテンシベースのルーティング",
            "3": "ジオロケーションルーティング",
            "4": "フェイルオーバールーティング"
        },
        "Correct Answer": "フェイルオーバールーティング",
        "Explanation": "フェイルオーバールーティングは、Route 53がリソースのヘルスを監視し、プライマリリソースが失敗した場合に自動的にトラフィックをセカンダリリソースにリダイレクトできるように特別に設計されています。このアプローチは、ヘルスの問題が発生した場合にトラフィックを再ルーティングできることを保証することで、高可用性の要件を満たします。",
        "Other Options": [
            "レイテンシベースのルーティングは、ユーザーを最もレイテンシの低いエンドポイントに誘導しますが、ヘルスチェックやフェイルオーバー機能は提供しません。",
            "ウェイト付きルーティングは、割り当てられたウェイトに基づいてトラフィックを複数のリソースに分配できますが、ヘルス監視や自動フェイルオーバー機能は欠けています。",
            "ジオロケーションルーティングは、ユーザーの地理的位置に基づいてトラフィックを誘導しますが、ヘルスチェックや自動フェイルオーバーの必要性には対処していません。"
        ]
    },
    {
        "Question Number": "24",
        "Situation": "金融サービス会社は、AWS環境でのコスト削減を目指しています。SysOps管理者は、現在のEC2インスタンスの使用状況を評価し、パフォーマンスに影響を与えることなくEC2スポットインスタンスに移行できるワークロードを特定する任務を負っています。",
        "Question": "SysOps管理者がEC2スポットインスタンスに適格なワークロードを特定するために考慮すべき戦略はどれですか？（2つ選択）",
        "Options": {
            "1": "コスト削減を最大化するためにすべてのワークロードをEC2スポットインスタンスに移行する。",
            "2": "スポットインスタンスが中断された場合に自動的に置き換えるためにオートスケーリンググループを構成する。",
            "3": "中断に耐えられ、迅速に再起動できるワークロードを特定する。",
            "4": "一貫した使用パターンを特定するために、時間にわたる平均CPU使用率を評価する。",
            "5": "各ワークロードのオンデマンドインスタンスとスポットインスタンスのコスト差を分析する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "中断に耐えられ、迅速に再起動できるワークロードを特定する。",
            "一貫した使用パターンを特定するために、時間にわたる平均CPU使用率を評価する。"
        ],
        "Explanation": "中断に耐えられるワークロードはEC2スポットインスタンスの理想的な候補であり、ユーザーに大きな影響を与えることなく一時停止および再開できます。さらに、CPU使用率を評価することで、変動する使用パターンを持つワークロードを特定でき、低コストで容量が利用可能な場合にスポットインスタンスに適しています。",
        "Other Options": [
            "このオプションは広すぎます。コスト評価は重要ですが、中断に対する耐性に基づいて個々のワークロードの適合性を具体的に扱っていません。",
            "オートスケーリンググループを構成することは中断の管理に役立ちますが、このアプローチだけではワークロードをスポットインスタンスに適格にすることはできません。中断された場合のインスタンスを処理する方法を提供するだけです。",
            "すべてのワークロードをEC2スポットインスタンスに移行することは健全な戦略ではありません。すべてのワークロードが中断の可能性があるため、スポット価格に適しているわけではなく、パフォーマンスの問題を引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "25",
        "Situation": "あなたの会社は、規制要件を遵守するためにデータ分類スキームを実施しました。この分類スキームをすべてのAWSリソースに適用し、特にAmazon S3に保存されている機密データに焦点を当てる必要があります。あなたは、アプローチが効果的であり、業界標準に準拠していることを確認したいと考えています。",
        "Question": "データ分類スキームを強制するために、次のうちどのアクションを取ることができますか？（2つ選択してください）",
        "Options": {
            "1": "S3バケットへのすべてのアクセスイベントをキャプチャする中央集約型のログメカニズムを作成し、データ分類スキームへの準拠を手動で確認します。",
            "2": "すべてのS3バケットを手動でレビューし、データ分類スキームに準拠していることを確認し、それに応じて更新します。",
            "3": "S3バケットがデータ分類スキームに準拠しているか評価し、非準拠が検出された場合にアラートを出すAWS Configルールを実装します。",
            "4": "AWS Lambda関数を使用して、分類レベルに基づいてS3オブジェクトを自動的に暗号化し、すべての機密データが静止状態で暗号化されるようにします。",
            "5": "Amazon S3オブジェクトタグ付けを利用して、オブジェクトをその分類レベルに基づいて分類します。これらのタグに基づいてアクセスを制限するIAMポリシーを適用します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3オブジェクトタグ付けを利用して、オブジェクトをその分類レベルに基づいて分類します。これらのタグに基づいてアクセスを制限するIAMポリシーを適用します。",
            "S3バケットがデータ分類スキームに準拠しているか評価し、非準拠が検出された場合にアラートを出すAWS Configルールを実装します。"
        ],
        "Explanation": "Amazon S3オブジェクトタグ付けを使用することで、オブジェクトをその分類に基づいて分類し、アクセスを管理できます。一方、AWS Configルールはデータ分類スキームへの準拠を継続的に監視し、非準拠に対してアラートを提供します。",
        "Other Options": [
            "S3バケットの手動レビューをスケジュールすることはスケーラブルな解決策ではなく、分類スキームのリアルタイム監視や強制を提供しません。",
            "暗号化のためにAWS Lambdaを使用することは良いプラクティスですが、分類スキーム自体を強制するものではなく、分類に基づいてアクセスを管理することなく暗号化層を追加するだけです。",
            "中央集約型のログメカニズムを作成することはアクセスの監視に役立ちますが、データ分類スキームへの準拠を積極的に強制するものではありません。"
        ]
    },
    {
        "Question Number": "26",
        "Situation": "Elastic Load Balancer (ELB) の背後にホストされているEC2インスタンス上のWebアプリケーションが断続的なダウンタイムを経験しています。SysOps管理者として、ELBがEC2インスタンスの健康状態を正確に判断し、トラフィックが健康なインスタンスにのみルーティングされるようにする必要があります。",
        "Question": "ELBのヘルスチェックがEC2インスタンスの健康状態を正確に評価することを保証するための構成はどれですか？",
        "Options": {
            "1": "ELBのヘルスチェックをデフォルトのHTTPプロトコルを使用するように設定し、pingパスをアプリケーションのルートに設定します。",
            "2": "ELBのヘルスチェックをカスタムポートでTCPプロトコルを使用するように設定し、健康な閾値を5に設定します。",
            "3": "アプリケーションが健康なときに200 OKレスポンスを返す特定のパスを持つHTTPヘルスチェックを使用し、タイムアウトを10秒に設定します。",
            "4": "HTTPSプロトコルを使用してヘルスチェックを実装し、非健康な閾値を3に設定して、より迅速な障害検出を可能にします。"
        },
        "Correct Answer": "アプリケーションが健康なときに200 OKレスポンスを返す特定のパスを持つHTTPヘルスチェックを使用し、タイムアウトを10秒に設定します。",
        "Explanation": "特定のパスを持つHTTPヘルスチェックを使用することで、アプリケーションが正常に機能していることを示す200 OKレスポンスを確実に返します。適切なタイムアウトを設定することで、ELBが一時的な問題のためにインスタンスを早期に非健康と見なさないようにします。",
        "Other Options": [
            "ELBのヘルスチェックをデフォルトのHTTPプロトコルを使用し、pingパスをアプリケーションのルートに設定することは、ルートパスが一貫して200 OKレスポンスを返さない場合、アプリケーションの健康状態を正確に評価できない可能性があります。",
            "ELBのヘルスチェックをカスタムポートでTCPプロトコルを使用するように設定すると、アプリケーションレベルの健康状態を判断する能力が欠けてしまいます。これは、ネットワーク接続のみをチェックし、そのポートで実行されているアプリケーションの実際の状態を確認しないためです。",
            "HTTPSプロトコルを使用してヘルスチェックを実装し、低い非健康な閾値を設定すると、一時的な問題のためにインスタンスが早すぎる段階で非健康と見なされ、アプリケーションの全体的な可用性に影響を与える可能性があります。"
        ]
    },
    {
        "Question Number": "27",
        "Situation": "ある会社が、TCPを使用してフロントエンドとバックエンドの接続を行うElastic Load Balancer (ELB) の背後でWebアプリケーションを運営しています。開発チームは、バックエンドインスタンスに対して受信リクエストのソースIPアドレスを提供するようELBに要求しており、より良いログ記録とセキュリティの目的でProxy Protocolを有効にすることを検討しています。",
        "Question": "このシナリオにおけるElastic Load BalancerでProxy Protocolを有効にする主な利点は何ですか？",
        "Options": {
            "1": "ELBがクライアントとバックエンドインスタンス間のトラフィックを暗号化できるようにします。",
            "2": "リクエストに元のソースIPアドレスとポート情報を含む人間が読めるヘッダーを追加します。",
            "3": "ELBがバックエンドインスタンスに対してより頻繁にヘルスチェックを実行できるようにします。",
            "4": "リクエストデータをバックエンドインスタンスに送信する前に圧縮することで、ELBのスループットを増加させます。"
        },
        "Correct Answer": "リクエストに元のソースIPアドレスとポート情報を含む人間が読めるヘッダーを追加します。",
        "Explanation": "Proxy Protocolを有効にすることで、Elastic Load Balancerはバックエンドインスタンスに元のクライアントのIPアドレスとポートを含む追加の接続情報を送信できます。これは、リクエストライフサイクル全体を通じてクライアントのアイデンティティを維持するために重要です。",
        "Other Options": [
            "このオプションは不正確です。Proxy Protocolを有効にしてもトラフィックの暗号化は行われず、単に接続情報をリクエストヘッダーに追加するだけです。",
            "このオプションは不正確です。Proxy Protocolがデータを圧縮することでスループットを増加させるという提案は誤りです。Proxy Protocolは接続情報の伝達に焦点を当てています。",
            "このオプションは不正確です。Proxy Protocolはヘルスチェックの頻度に影響を与えず、ヘルスチェックは別途設定され、Proxy Protocolの設定とは独立しています。"
        ]
    },
    {
        "Question Number": "28",
        "Situation": "ある企業が、VPC内の複数のAmazon EC2インスタンスからアクセス可能な共有ファイルシステムを必要とするアプリケーションを展開しています。彼らは、スケーラビリティと可用性の機能からAmazon EFSを使用することに決めました。",
        "Question": "Amazon EFSをEC2インスタンスと共に使用する際、次のうちどの文が正しいですか？",
        "Options": {
            "1": "Amazon EFSは、ファイルシステムをマウントするためにEC2インスタンスが同じアベイラビリティゾーンにある必要があります。",
            "2": "Amazon EFSは、複数のEC2インスタンスで同時にマウントできます。",
            "3": "Amazon EFSは、ファイルシステムアクセスのためにNFSv4およびNFSv3プロトコルの両方をサポートしています。",
            "4": "Amazon EFSは、一度に1つのEC2インスタンスにのみマウントできます。"
        },
        "Correct Answer": "Amazon EFSは、複数のEC2インスタンスで同時にマウントできます。",
        "Explanation": "Amazon EFSは、複数のEC2インスタンスが同じファイルシステムを同時にマウントできるため、EFSに保存されたファイルへの共有アクセスを可能にし、データへの同時アクセスを必要とするアプリケーションに最適です。",
        "Other Options": [
            "これは不正解です。なぜなら、Amazon EFSは複数のEC2インスタンスに同時にマウントできるため、1つだけではありません。",
            "これは不正解です。Amazon EFSはNFSバージョン4.0および4.1プロトコルのみをサポートしており、NFSv3はサポートしていません。",
            "これは不正解です。Amazon EFSは複数のアベイラビリティゾーンでアクセス可能になるように設計されており、異なるゾーンのインスタンスが同じファイルシステムをマウントできるようにします。"
        ]
    },
    {
        "Question Number": "29",
        "Situation": "SysOps管理者は、AWS上でホストされているWebアプリケーションのネットワーキング機能と接続性を改善する任務を負っています。アプリケーションは現在、単一のVPC内のAmazon EC2インスタンスを使用しており、ピークトラフィック時のレイテンシと可用性に関する懸念があります。",
        "Question": "ネットワーキングと接続性を向上させるために、管理者が実装できる次のオプションの組み合わせはどれですか？（2つ選択）",
        "Options": {
            "1": "DNS解決を改善するために、Amazon Route 53のヘルスチェックとフェイルオーバールーティングポリシーを実装する",
            "2": "複数のEC2インスタンスに対して受信トラフィックを分散するためにElastic Load Balancerを展開する",
            "3": "オンプレミスデータセンターから専用ネットワーク接続を確立するためにAWS Direct Connectを設定する",
            "4": "異なるリージョンの2つのVPC間で通信を可能にするためにVPCピアリング接続を作成する",
            "5": "アプリケーションの可用性とパフォーマンスを向上させるためにAWS Global Acceleratorを構成する"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "アプリケーションの可用性とパフォーマンスを向上させるためにAWS Global Acceleratorを構成する",
            "DNS解決を改善するために、Amazon Route 53のヘルスチェックとフェイルオーバールーティングポリシーを実装する"
        ],
        "Explanation": "AWS Global Acceleratorを実装することで、アプリケーションへの経路を最適化し、AWSのグローバルネットワークを利用してレイテンシを減少させ、可用性を向上させます。Route 53のヘルスチェックとフェイルオーバールーティングと組み合わせることで、トラフィックが効率的にルーティングされ、障害に対する耐性が提供されます。",
        "Other Options": [
            "AWS Direct Connectは主にオンプレミスデータセンターとAWS間の専用ネットワーク接続を確立するために使用され、クラウドにのみホストされているWebアプリケーションの接続性を直接向上させるものではありません。",
            "Elastic Load Balancerを展開することでEC2インスタンス間のトラフィック分散が改善されますが、Global AcceleratorやRoute 53ほど効果的にネットワーキング機能や接続性を広範囲に向上させるものではありません。",
            "VPCピアリング接続を作成することで2つのVPC間で通信が可能になりますが、単一のVPCにホストされているアプリケーションのレイテンシや可用性には対処しません。"
        ]
    },
    {
        "Question Number": "30",
        "Situation": "ある企業は、リソース全体のコンプライアンスを監視するためにAWS Configを実装しました。SysOps管理者は、特定のコンプライアンス違反が発生した際に修正アクションを自動化したいと考えています。管理者はこの目的のためにAWS Systems Manager Automationのランブックを使用する計画です。",
        "Question": "AWS Configルールに基づいてコンプライアンス違反の修正を自動化するために、SysOps管理者が取るべきステップの組み合わせはどれですか？（2つ選択）",
        "Options": {
            "1": "AWS ConfigをAWS Systems Manager State Managerと統合して、リソース構成への変更を自動的に適用する。",
            "2": "AWS Configによって検出されたコンプライアンス違反についてチームに通知するためにAmazon SNSトピックを設定する。",
            "3": "各ルールに必要な修正アクションを概説するAWS Systems Manager Automationのランブックを定義する。",
            "4": "必要な修正ステップを実行するAWS Lambda関数を作成し、AWS Configでトリガーする。",
            "5": "AWS Systems Manager Automationのランブックを毎日呼び出すためにCloudWatch Eventsルールをスケジュールする。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "各ルールに必要な修正アクションを概説するAWS Systems Manager Automationのランブックを定義する。",
            "必要な修正ステップを実行するAWS Lambda関数を作成し、AWS Configでトリガーする。"
        ],
        "Explanation": "AWS Systems Manager Automationのランブックを定義することで、コンプライアンス違反が検出された際の修正手順を詳細に指定できます。さらに、AWS Lambda関数を作成することで、AWS Configの違反に応じてこれらの修正アクションをプログラム的に実行する方法を提供します。",
        "Other Options": [
            "Amazon SNSトピックを設定することは、違反についてチームに通知するだけであり、修正を自動化しないため、目的には効果的ではありません。",
            "AWS ConfigをAWS Systems Manager State Managerと統合することは、コンプライアンス違反に応じた特定の修正アクションを実行することには無関係です。",
            "CloudWatch EventsルールをスケジュールしてAWS Systems Manager Automationのランブックを毎日呼び出すことは、AWS Configの違反に基づくリアルタイムの修正の必要性には直接対処しません。"
        ]
    },
    {
        "Question Number": "31",
        "Situation": "ある企業がAPIキーやデータベースの認証情報などの機密情報を安全に管理し、アクセスする必要があります。彼らは、これらの秘密を保存および取得しながら、セキュリティのベストプラクティスに準拠するのに役立つさまざまなAWSサービスを評価しています。SysOps管理者として、あなたはこの目的に最適なAWSサービスを推奨する必要があります。",
        "Question": "管理者は秘密を安全に保存するためにどのAWSサービスを使用すべきですか？（2つ選択してください）",
        "Options": {
            "1": "AWS Systems Manager Parameter Storeを使用して、構成データと秘密を保存および取得します。",
            "2": "AWS S3をサーバー側の暗号化で使用して、秘密をプレーンテキストファイルとして保存します。",
            "3": "AWS CloudFormationを使用して、スタックテンプレート内で秘密を管理および保存します。",
            "4": "AWS Secrets Managerを使用して、秘密の自動ローテーションと細かいアクセス制御を行います。",
            "5": "AWS IAMを使用して、秘密アクセスに関連するユーザー権限を管理します。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Secrets Managerを使用して、秘密の自動ローテーションと細かいアクセス制御を行います。",
            "AWS Systems Manager Parameter Storeを使用して、構成データと秘密を保存および取得します。"
        ],
        "Explanation": "AWS Secrets Managerは自動ローテーションを可能にし、時間の経過とともにセキュリティを維持するために重要であり、細かいアクセス制御を提供します。同様に、AWS Systems Manager Parameter Storeはパラメータと秘密を安全に保存するために設計されており、機密データの管理に適しています。",
        "Other Options": [
            "AWS S3は秘密管理のために設計されていません。プレーンテキストファイルを保存するために使用することは、サーバー側の暗号化があっても重大なセキュリティリスクを伴います。自動ローテーションや秘密に特化したアクセス制御の機能を提供しません。",
            "AWS CloudFormationは主にリソース管理ツールであり、秘密を安全に保存する機能を提供しません。セキュリティ上の懸念から、秘密をスタックテンプレートにハードコーディングすべきではありません。",
            "AWS IAMはAWSリソースへのアクセスと権限を管理するために使用されますが、秘密を保存することはありません。誰が秘密にアクセスできるかを制御するために重要ですが、秘密を保存するためのソリューションは提供しません。"
        ]
    },
    {
        "Question Number": "32",
        "Situation": "ある企業がAmazon CloudFrontを通じて静的ウェブサイトコンテンツを提供したいと考えていますが、CloudFrontのみがウェブサイトコンテンツを保存するS3バケットにアクセスできるようにしたいと考えています。企業はCloudFrontのS3オリジンに対してOrigin Access Control (OAC)を有効にしました。",
        "Question": "OACを使用してCloudFrontのみにアクセスを制限するために、S3バケットポリシーを構成する最良のアプローチは何ですか？",
        "Options": {
            "1": "OACを使用してCloudFrontへのアクセスを許可し、特定のIPアドレスからのアクセスを許可するバケットポリシーを実装します。",
            "2": "CloudFrontへのアクセスを許可し、AWSアカウント内のすべてのIAMユーザーにバケットアクセスを付与するS3バケットポリシーを設定します。",
            "3": "バケットへの公開アクセスを許可するようにS3バケットポリシーを構成しますが、ユーザーエージェントヘッダーに基づいてアクセスを制限します。",
            "4": "CloudFrontオリジンアクセスID（OAI）へのアクセスを許可し、他のすべてのリクエストを拒否するS3バケットポリシーを作成します。"
        },
        "Correct Answer": "CloudFrontオリジンアクセスID（OAI）へのアクセスを許可し、他のすべてのリクエストを拒否するS3バケットポリシーを作成します。",
        "Explanation": "最良のアプローチは、CloudFront OAIへのアクセスを特に許可するS3バケットポリシーを作成することです。これにより、CloudFrontのみがS3バケットからオブジェクトを取得でき、他のすべてのリクエストが拒否されるため、S3バケットのコンテンツが保護されます。",
        "Other Options": [
            "このオプションは不正解です。S3バケットへの公開アクセスを許可することは、CloudFrontのみにアクセスを制限する目的に反します。",
            "このオプションは不正解です。AWSアカウント内のすべてのIAMユーザーにアクセスを付与することは、CloudFrontのみにアクセスを制限せず、バケットの内容を不正なユーザーにさらす可能性があります。",
            "このオプションは不正解です。特定のIPアドレスからのアクセスを許可することは、OACの使用を強制するものではなく、CloudFrontのみにアクセスを制限するために必要です。"
        ]
    },
    {
        "Question Number": "33",
        "Situation": "ある企業がオンプレミスのデータセンターとVPCにホストされているAWSリソースとの間で断続的なネットワーク接続の問題を経験しています。オペレーションチームは、アプリケーションへの信頼できるアクセスを確保するために、接続の問題の根本原因を特定する必要があります。",
        "Question": "オペレーションチームはネットワーク接続の問題をトラブルシューティングするために最初にどのステップを取るべきですか？",
        "Options": {
            "1": "AWS CloudTrailを使用して、未承認の変更がないかAPIコールログを確認します。",
            "2": "AWS Direct Connect接続のステータスを確認します。",
            "3": "VPC内のリソースに関連付けられたセキュリティグループルールを確認します。",
            "4": "VPCサブネットのルートテーブル構成を確認します。"
        },
        "Correct Answer": "VPC内のリソースに関連付けられたセキュリティグループルールを確認します。",
        "Explanation": "ネットワーク接続の問題をトラブルシューティングする最初のステップは、セキュリティグループルールを確認することです。これらはAWSリソースへのインバウンドおよびアウトバウンドトラフィックを制御します。誤って構成されたルールは接続の問題を引き起こす可能性があるため、必要なトラフィックを許可することを確認することが重要です。",
        "Other Options": [
            "ルートテーブルの構成を確認することは重要ですが、セキュリティグループを確認した後に行うべきです。セキュリティグループは、ルートが正しく設定されていてもトラフィックをブロックする可能性があります。",
            "AWS CloudTrailはAPIコールの監査や追跡に役立ちますが、ネットワーク接続の問題に対する即時の洞察を提供するものではありません。",
            "AWS Direct Connect接続のステータスを確認することは、企業がDirect Connectを使用している場合にのみ関連があります。使用していない場合、接続の問題の根本原因に対処しない可能性があります。"
        ]
    },
    {
        "Question Number": "34",
        "Situation": "ある会社が、毎日午前2時（UTC）にAmazon RDSインスタンスのバックアップを自動化したいと考えています。システム管理者は、このバックアッププロセスを手動で介入せずにトリガーするソリューションを作成する必要があります。",
        "Question": "Amazon RDSインスタンスの毎日のバックアップを自動化する要件を満たすソリューションはどれですか？",
        "Options": {
            "1": "Amazon EventBridgeルールを作成し、AWS Lambda関数をトリガーして、毎日午前2時（UTC）にRDSインスタンスのバックアップを開始します。",
            "2": "AWS Systems Managerを使用して、毎日午前2時（UTC）にRDSインスタンスのバックアップをトリガーするメンテナンスウィンドウを作成します。",
            "3": "AWS CloudFormationテンプレートを使用して、毎日午前2時（UTC）にRDSスナップショットの作成をスケジュールします。",
            "4": "EC2インスタンス上にcronジョブを設定し、毎日午前2時（UTC）にRDSインスタンスのスナップショットを作成するためにRDS APIを呼び出します。"
        },
        "Correct Answer": "Amazon EventBridgeルールを作成し、AWS Lambda関数をトリガーして、毎日午前2時（UTC）にRDSインスタンスのバックアップを開始します。",
        "Explanation": "Amazon EventBridgeルールを使用してAWS Lambda関数をトリガーすることは、バックアッププロセスを自動化する最も効率的な方法です。このソリューションはサーバーレスアーキテクチャを可能にし、タスクのスケジューリングのためにEC2インスタンスや他のリソースを管理する必要を回避します。",
        "Other Options": [
            "AWS CloudFormationは主にインフラストラクチャをコードとして管理するために使用され、バックアップを作成するためのスケジュールされたタスクを直接サポートしていません。",
            "EC2インスタンス上にcronジョブを使用すると、バックアップのスケジューリングのためだけにEC2インスタンスを維持する必要があるため、不必要な複雑さと管理のオーバーヘッドが追加されます。",
            "AWS Systems Managerのメンテナンスウィンドウは運用タスクに使用されますが、EventBridgeやLambdaのようにRDSインスタンスの自動バックアップを開始するために特に設計されているわけではありません。"
        ]
    },
    {
        "Question Number": "35",
        "Situation": "金融サービス会社がアプリケーションをAWSに移行しており、アーキテクチャがダウンタイムなしで突然の負荷増加に対応できることを確認する必要があります。アプリケーションは、サービス間でデータの整合性を維持しながら、独立したスケーリングとデプロイメントを可能にするために、緩やかに結合されている必要があります。",
        "Question": "これらの要件を満たすために、SysOps管理者はどのアーキテクチャ設計パターンを実装すべきですか？",
        "Options": {
            "1": "AWS Elastic Beanstalkを使用して、緊密に結合されたアプリケーションをデプロイします。",
            "2": "Amazon EC2インスタンスを使用して、モノリシックアプリケーションアーキテクチャを実装します。",
            "3": "データベースの信頼性のためにAmazon RDS Multi-AZデプロイメントを展開します。",
            "4": "AWS Lambda関数を利用して、Amazon SQSキューからのイベントを処理します。"
        },
        "Correct Answer": "AWS Lambda関数を利用して、Amazon SQSキューからのイベントを処理します。",
        "Explanation": "AWS Lambda関数はAmazon SQSからのイベントによってトリガーされるため、負荷に基づいて自動的にスケールする緩やかに結合されたアーキテクチャを実現します。この設計パターンは信頼性を高め、各コンポーネントが独立して動作できることを保証し、突然の負荷変動に対応するのに理想的です。",
        "Other Options": [
            "モノリシックアプリケーションアーキテクチャは、個々のコンポーネントを独立してスケールするために必要な柔軟性を提供せず、負荷が増加した際にダウンタイムを引き起こす可能性があります。",
            "Amazon RDS Multi-AZデプロイメントはデータベースの信頼性を高めますが、アプリケーションスタック全体にわたる緩やかに結合されたアーキテクチャの必要性には対処していません。",
            "AWS Elastic Beanstalkを使用して緊密に結合されたアプリケーションをデプロイすることは、緩やかに結合するという要件に反し、個々のサービスの独立したスケーリングとデプロイメントを制限します。"
        ]
    },
    {
        "Question Number": "36",
        "Situation": "ある企業が、Amazon Elastic Block Store (EBS) に依存するアプリケーションのレイテンシー問題に直面しています。このアプリケーションは EC2 インスタンス上で動作しており、チームは不要なコストをかけずに EBS のパフォーマンスを最適化したいと考えています。",
        "Question": "チームは EBS ボリュームのパフォーマンス効率を向上させるためにどのような行動を取るべきですか？",
        "Options": {
            "1": "EBS ボリュームのタイプを Provisioned IOPS SSD (io1 または io2) に変更する。",
            "2": "EBS ボリュームを Throughput Optimized HDD (st1) タイプに変更する。",
            "3": "EBS ボリュームのサイズを最大許容限界まで増加させる。",
            "4": "ボリュームに EBS Multi-Attach 機能を有効にする。"
        },
        "Correct Answer": "EBS ボリュームのタイプを Provisioned IOPS SSD (io1 または io2) に変更する。",
        "Explanation": "EBS ボリュームのタイプを Provisioned IOPS SSD (io1 または io2) に変更することで、より高く一貫したパフォーマンスが提供され、これは高い入力/出力操作数 (IOPS) を必要とするレイテンシーに敏感なアプリケーションに最適です。この行動は、信頼性を損なうことなくパフォーマンスの問題に直接対処します。",
        "Other Options": [
            "EBS ボリュームのサイズを増加させることは、必ずしもパフォーマンスを改善するわけではなく、レイテンシーの問題を解決することなく不要なコストを招く可能性があります。",
            "EBS Multi-Attach を有効にしても、1 つのインスタンスに接続された単一のボリュームのパフォーマンスは向上しません。これは複数のインスタンスが同じボリュームにアクセスできるようにするものであり、単一のアプリケーションのパフォーマンス向上には適していません。",
            "Throughput Optimized HDD (st1) に切り替えることは、低レイテンシーアクセスを必要とするアプリケーションには適切ではありません。これらのボリュームは IOPS ではなくスループットの最適化が行われています。"
        ]
    },
    {
        "Question Number": "37",
        "Situation": "ある金融サービス会社が、オンプレミスのアプリケーションをAWSに移行しています。彼らはEC2インスタンスを使用してワークロードを実行しており、コストとパフォーマンスの最適化が必要です。高スループットを必要とするアプリケーションのネットワークパフォーマンスを向上させ、レイテンシを減少させるために、最新のEC2機能を活用したいと考えています。",
        "Question": "次の選択肢のうち、同じアベイラビリティゾーン内のEC2インスタンス間で最良のネットワークパフォーマンスと低レイテンシの通信を提供するものはどれですか？",
        "Options": {
            "1": "高スループットと低レイテンシのためにElastic Network Adapter (ENA)を使用します。",
            "2": "最適なパフォーマンスのためにvCPU数に基づいてインスタンスタイプを選択します。",
            "3": "冗長性を高めるために、異なるアベイラビリティゾーンにEC2インスタンスを展開します。",
            "4": "アプリケーションのIOPSを増加させるためにインスタンスストアボリュームを利用します。"
        },
        "Correct Answer": "高スループットと低レイテンシのためにElastic Network Adapter (ENA)を使用します。",
        "Explanation": "Elastic Network Adapter (ENA)を使用することで、インスタンスはより高い帯域幅と低いレイテンシを達成でき、これは最適なネットワークパフォーマンスを必要とするアプリケーションにとって不可欠です。ENAは、高パフォーマンスのワークロードにとって重要な強化されたネットワーキングなどの高度な機能もサポートしています。",
        "Other Options": [
            "異なるアベイラビリティゾーンにEC2インスタンスを展開することは可用性とフォールトトレランスを向上させるかもしれませんが、同じゾーン内のインスタンス間のネットワークパフォーマンスやレイテンシを直接向上させるものではありません。",
            "vCPU数に基づいてインスタンスタイプを選択することは、最適なネットワークパフォーマンスを保証するものではなく、ネットワークパフォーマンスはENAのような高度なネットワーキング機能の使用により密接に関連しています。",
            "インスタンスストアボリュームを利用することは主にストレージのIOPSを改善しますが、EC2インスタンス間の通信におけるネットワークパフォーマンスやレイテンシに直接的な影響を与えるものではありません。"
        ]
    },
    {
        "Question Number": "38",
        "Situation": "ある会社がAWS上でウェブアプリケーションを運営しており、日中のトラフィックのレベルが変動しています。システム管理者は、アプリケーションがダウンタイムなしで突然のトラフィックの急増に対応できるようにする責任があります。管理者は、高トラフィック時に容量を増やし、低トラフィック時にコストを管理できるスケーリング戦略を選択する必要があります。",
        "Question": "パフォーマンスとコストを最適化するために、管理者は次のうちどのスケーリング戦略を選択すべきですか？",
        "Options": {
            "1": "トラフィックの増加に対応するために、インスタンスを追加して水平スケーリングを実装します。",
            "2": "コストを効果的に管理するために、ピーク時間のみ垂直スケーリングを選択します。",
            "3": "最適なリソース利用を確保するために、水平スケーリングと垂直スケーリングの組み合わせを実装します。",
            "4": "パフォーマンスを向上させるために、既存のインスタンスのサイズを増加させるために垂直スケーリングを使用します。"
        },
        "Correct Answer": "トラフィックの増加に対応するために、インスタンスを追加して水平スケーリングを実装します。",
        "Explanation": "水平スケーリングは、クラウド環境での変動するトラフィックレベルを管理するための推奨方法です。負荷を分散するためにインスタンスを追加できるため、ピーク時にアプリケーションが応答性を保ちながら、オフピーク時間にスケールダウンする柔軟性を提供し、コストを最適化します。",
        "Other Options": [
            "垂直スケーリングは既存のインスタンスのリソースを増加させることを含み、ダウンタイムを引き起こす可能性があり、水平スケーリングと同じレベルの冗長性と柔軟性を提供しません。",
            "水平スケーリングと垂直スケーリングの組み合わせは有益ですが、このアプローチはリソース管理を複雑にし、トラフィックの急増時に迅速なスケーリングとコスト効率のニーズに完全に対応できない可能性があります。",
            "ピーク時間のみの垂直スケーリングは、トラフィックの急増時の潜在的なダウンタイムやパフォーマンスの問題に対処せず、単一のインスタンスに依存するため、突然の負荷の増加に対応できない可能性があります。"
        ]
    },
    {
        "Question Number": "39",
        "Situation": "SysOps管理者がAmazon CloudWatchからアラートを受信し、EC2インスタンスのCPU使用率が過去10分間で85%を超えたことを示しています。管理者は、問題を迅速に診断し、インスタンス上で実行されているアプリケーションがパフォーマンスを維持できるように修正措置を講じる必要があります。",
        "Question": "SysOps管理者は、高CPU使用率のアラートに対処するために最初に何をすべきですか？",
        "Options": {
            "1": "ワークロードに対応するためにEC2インスタンスをより大きなインスタンスタイプにスケールアップします。",
            "2": "CPU使用率に加えてディスクI/Oを監視するためにCloudWatchアラームを追加します。",
            "3": "アプリケーションログを分析して、長時間実行されているプロセスを特定します。",
            "4": "潜在的なソフトウェアの問題を解消するためにEC2インスタンスを再起動します。"
        },
        "Correct Answer": "アプリケーションログを分析して、長時間実行されているプロセスを特定します。",
        "Explanation": "高CPU使用率に対処する最初のステップは、アプリケーションログを分析して、過剰なリソースを消費している特定のプロセスや機能があるかどうかを確認することです。これにより、問題がアプリケーションコードに起因するのか、インスタンスをスケールする必要があるのかを特定できます。ログからの洞察に基づいて修正措置を講じることで、より効果的な解決策につながります。",
        "Other Options": [
            "EC2インスタンスを再起動することは一時的に問題を解決するかもしれませんが、高CPU使用率の根本原因には対処しません。そうした行動を取る前に、スパイクの原因を理解することが重要です。",
            "EC2インスタンスをスケールアップすることは長期的な解決策として有効ですが、まず問題を診断することが重要です。問題が非効率なアプリケーションコードに起因する場合、スケーリングは最終的な最適化の必要性を遅らせるだけかもしれません。",
            "ディスクI/OのCloudWatchアラームを追加することは追加の監視を提供するかもしれませんが、高CPU使用率の即時の問題には対処しません。管理者は、監視範囲を広げる前に、現在のアラートを理解し解決することに集中すべきです。"
        ]
    },
    {
        "Question Number": "40",
        "Situation": "ある企業が、Amazon Elastic Container Service (ECS)を使用してマイクロサービスベースのアプリケーションをAWSに移行する計画を立てています。このアプリケーションは需要に応じてスケールするように設計されており、Dockerコンテナのシームレスなオーケストレーションが必要です。SysOps管理者は、デプロイメントが高可用性とフォールトトレランスの要件を満たすことを確認したいと考えています。",
        "Question": "SysOps管理者がECSアプリケーションの高可用性を確保するために実装すべき構成はどれですか？",
        "Options": {
            "1": "単一のVPC内の複数のアベイラビリティゾーンにECSサービスをデプロイする。",
            "2": "レイテンシを最小限に抑えるために単一のアベイラビリティゾーン内のEC2インスタンスを使用する。",
            "3": "複数のクラスターで単一のタスク定義を使用するようにECSサービスを構成する。",
            "4": "コストを削減するためにすべてのコンテナを単一のEC2インスタンスで実行する。"
        },
        "Correct Answer": "単一のVPC内の複数のアベイラビリティゾーンにECSサービスをデプロイする。",
        "Explanation": "複数のアベイラビリティゾーンにECSサービスをデプロイすることで、1つのアベイラビリティゾーンで障害が発生してもアプリケーションが利用可能であり続け、高可用性とフォールトトレランスを向上させることができます。",
        "Other Options": [
            "単一のアベイラビリティゾーン内のEC2インスタンスを使用すると、そのゾーンで障害が発生した場合、すべてのインスタンスに影響を与え、アプリケーションが利用できなくなるため、ダウンタイムのリスクが増加します。",
            "すべてのコンテナを単一のEC2インスタンスで実行することはコストを削減するかもしれませんが、高可用性に対して重大なリスクをもたらします。そのインスタンスが故障すると、アプリケーション全体がダウンします。",
            "複数のクラスターで単一のタスク定義を使用するようにECSサービスを構成することは、高可用性を本質的に提供するものではありません。単一のクラスター内で複数のアベイラビリティゾーンにタスクを分散させる方が効果的です。"
        ]
    },
    {
        "Question Number": "41",
        "Situation": "SysOps管理者は、Amazon S3バケットに保存されている機密データが不正アクセスから保護されるようにする任務を負っています。管理者は、データを静止状態で保護するだけでなく、ユーザーロールに基づいたアクセス制御を可能にするソリューションを実装したいと考えています。",
        "Question": "S3バケットのセキュリティ要件を満たすアプローチはどれですか？",
        "Options": {
            "1": "S3用のVPCエンドポイントを実装し、バケットアクセスをVPC内のインスタンスに制限する。",
            "2": "S3バケットのロギングを構成し、アクセスリクエストに対するアラートを設定する。",
            "3": "S3バケットのサーバーサイド暗号化を有効にし、アクセス制御のためのバケットポリシーを構成する。",
            "4": "ユーザータグに基づいてS3バケットへのアクセスを許可するIAMポリシーを使用し、バージョニングを有効にする。"
        },
        "Correct Answer": "S3バケットのサーバーサイド暗号化を有効にし、アクセス制御のためのバケットポリシーを構成する。",
        "Explanation": "サーバーサイド暗号化を有効にすることで、データが静止状態で暗号化され、バケットポリシーを構成することで管理者がユーザーロールに基づいてアクセスを制御できるため、データ保護とアクセス制御の両方の要件を満たすことができます。",
        "Other Options": [
            "ユーザータグに基づくIAMポリシーを使用しても、静止状態のデータが暗号化されることは保証されず、バージョニングはセキュリティ機能ではありません。",
            "VPCエンドポイントを実装すると、VPC内からのS3バケットへのアクセスが制限されますが、静止状態のデータの暗号化は提供されません。",
            "S3バケットのロギングを構成し、アラートを設定することでアクセスを監視できますが、静止状態のデータを保護したり、効果的にアクセスを制御したりすることはできません。"
        ]
    },
    {
        "Question Number": "42",
        "Situation": "SysOps管理者は、AWS上でホストされているWebアプリケーションのパフォーマンスを最適化する任務を負っています。このアプリケーションは、ユーザーに近い場所でコンテンツをキャッシュするためにAmazon CloudFrontをコンテンツ配信ネットワーク（CDN）として使用しています。しかし、管理者はキャッシュヒット率が低いことに気づいており、これがアプリケーションのパフォーマンスに影響を与えています。目標は、オリジンサーバーではなくCloudFrontエッジキャッシュから提供されるリクエストの数を最大化することです。",
        "Question": "CloudFrontディストリビューションのキャッシュヒット率を改善するために、管理者はどのようなアクションを取るべきですか？",
        "Options": {
            "1": "オリジンから不要なリクエストヘッダーを削除する。",
            "2": "すべてのメディアコンテンツの圧縮を有効にする。",
            "3": "オブジェクトのTTLを増やす。",
            "4": "ディストリビューションを構成してすべてのクエリ文字列パラメータを転送する。"
        },
        "Correct Answer": "オブジェクトのTTLを増やす。",
        "Explanation": "オブジェクトのTTL（Time to Live）を増やすことで、CloudFrontはコンテンツをより長い期間キャッシュでき、オリジンサーバーへのリクエスト数を減少させ、キャッシュヒット率を改善します。",
        "Other Options": [
            "すべてのクエリ文字列パラメータを転送すると、パラメータの組み合わせごとにユニークなキャッシュが作成され、キャッシュ可能なオブジェクトが増えるため、キャッシュヒット率が低下する可能性があります。",
            "すべてのメディアコンテンツの圧縮を有効にしても、キャッシュヒット率に直接影響を与えるわけではありません。転送時間が改善されるかもしれませんが、オリジンへのリクエスト数を必ずしも減少させるわけではありません。",
            "不要なリクエストヘッダーを削除することでユニークなキャッシュエントリの数を減らすことができますが、このアクションだけではTTLを増やすほど効果的にキャッシュヒット率を改善することはできません。"
        ]
    },
    {
        "Question Number": "43",
        "Situation": "ある企業が、AWS Storage Gatewayを使用してハイブリッドクラウドストレージソリューションを実装する計画を立てています。彼らは、アプリケーションの低遅延アクセスを確保するために、頻繁にアクセスされるデータをローカルに保持しながら、Amazon S3を主要なデータストレージとして使用したいと考えています。彼らは、要件を満たすためにStorage Gatewayのさまざまな構成を評価しています。",
        "Question": "ストレージ戦略を最適化するために、企業が選択すべき2つの構成はどれですか？（2つ選択）",
        "Options": {
            "1": "全データセットへの低遅延アクセスのためにStored Volume Gatewayを使用する。",
            "2": "オンプレミスのストレージニーズを最小限に抑えるためにCached Volume Gatewayを使用する。",
            "3": "頻繁にアクセスされるデータへの低遅延アクセスのためにCached Volume Gatewayを使用する。",
            "4": "全データセットへのアクセスのためにCached Volume Gatewayを使用する。",
            "5": "頻繁なデータアクセスのためにStored Volume Gatewayを使用する。"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "頻繁にアクセスされるデータへの低遅延アクセスのためにCached Volume Gatewayを使用する。",
            "全データセットへの低遅延アクセスのためにStored Volume Gatewayを使用する。"
        ],
        "Explanation": "Cached Volume Gatewayは、Amazon S3を主要なストレージとして使用しながら、頻繁にアクセスされるデータをローカルに保存するように設計されており、低遅延アクセスを提供します。一方、Stored Volume Gatewayは、全データセットへの低遅延アクセスが必要なシナリオに適しており、どちらのオプションも企業の戦略にとって最適です。",
        "Other Options": [
            "このオプションは不正解です。Cached Volume Gatewayは、全データセットではなく、頻繁にアクセスされるデータ専用です。",
            "このオプションは不正解です。Stored Volume Gatewayは、頻繁なアクセスのためではなく、完全なデータセットを対象としています。",
            "このオプションは不正解です。Cached Volume Gatewayは頻繁にアクセスされるデータに最適であり、全データセットへのアクセス要件をサポートしていません。"
        ]
    },
    {
        "Question Number": "44",
        "Situation": "小売企業が、ホリデーセール中のトラフィックの急増により、DynamoDBテーブルへのアクセス時に高い遅延を経験しています。システム管理者として、アプリケーションアーキテクチャを再設計することなく、DynamoDB操作のパフォーマンスを向上させる必要があります。",
        "Question": "DynamoDBのアクセスパターンのパフォーマンスを最も改善するための解決策はどれですか？",
        "Options": {
            "1": "Amazon DynamoDB Accelerator (DAX)を実装して、頻繁にアクセスされるデータをメモリにキャッシュする。",
            "2": "アプリケーションを修正して、DynamoDBテーブルの読み取りキャパシティユニットを増加させる。",
            "3": "DynamoDBテーブルのプライマリキー構造を最適化して、アクセス速度を向上させる。",
            "4": "Amazon Elasticache for Redisを使用して、DynamoDBの外部でデータのキャッシングを処理する。"
        },
        "Correct Answer": "Amazon DynamoDB Accelerator (DAX)を実装して、頻繁にアクセスされるデータをメモリにキャッシュする。",
        "Explanation": "Amazon DynamoDB Accelerator (DAX)は、DynamoDB用に特別に設計されており、メモリ内キャッシングを提供し、読み取り操作の遅延を大幅に削減し、毎秒何百万ものリクエストを処理します。これは、アプリケーションアーキテクチャの変更を必要とせず、問題に直接対処するため、このシナリオでのパフォーマンス向上に最適なオプションです。",
        "Other Options": [
            "読み取りキャパシティユニットを増加させることはある程度役立つかもしれませんが、遅延の問題を効果的に解決することはできず、重要な改善を保証することなくコストが増加する可能性があります。",
            "Amazon Elasticache for Redisを使用すると、追加の管理と複雑さが必要になります。これは、DAXのようにDynamoDBとネイティブに統合されていない外部キャッシングソリューションです。",
            "プライマリキー構造を最適化することはアクセス速度を向上させるかもしれませんが、特に高トラフィック条件下ではDAXを実装するのと同じレベルのパフォーマンス向上を提供しません。"
        ]
    },
    {
        "Question Number": "45",
        "Situation": "ある企業が、インスタンス間での低遅延通信を必要とする高性能コンピューティング（HPC）アプリケーションをAWS上に展開しています。SysOps管理者は、このアプリケーションのネットワークパフォーマンスを最適化するために最も適切な配置戦略を選択する必要があります。",
        "Question": "インスタンスが最適な低遅延ネットワークパフォーマンスのために密接に配置されることを保証するために、SysOps管理者が選択すべき配置戦略はどれですか？",
        "Options": {
            "1": "クラスター配置グループを使用して、インスタンスをアベイラビリティゾーン内に密接に配置する。",
            "2": "専用配置グループを使用して、物理ハードウェア上にインスタンスを予約する。",
            "3": "パーティション配置グループを使用して、インスタンスを複数の論理パーティションに分散させる。",
            "4": "スプレッド配置グループを使用して、異なる基盤ハードウェアにインスタンスを配置する。"
        },
        "Correct Answer": "クラスター配置グループを使用して、インスタンスをアベイラビリティゾーン内に密接に配置する。",
        "Explanation": "クラスター配置グループは、HPCアプリケーションに選択されるべきであり、アベイラビリティゾーン内でインスタンスを密接に配置し、ノード間の通信に必要な低遅延ネットワークパフォーマンスを確保します。",
        "Other Options": [
            "パーティション配置グループを使用することは、論理パーティションにインスタンスを分散させるため、低遅延通信には適していません。これにより、ノード間の遅延が発生する可能性があります。",
            "スプレッド配置グループを使用することは、異なるハードウェアにインスタンスを分散させることで相関故障を減らすことを目的としていますが、HPCワークロードに必要な低遅延通信を最適化するものではありません。",
            "専用配置グループを使用することは、物理ハードウェア上にインスタンスを予約することを目的としており、HPCアプリケーションの低遅延要件に特に対処するものではありません。"
        ]
    },
    {
        "Question Number": "46",
        "Situation": "ある企業が、定期的なアプリケーションの更新とセキュリティパッチが必要なAmazon EC2インスタンスのフリートを管理しています。SysOps管理者は、ダウンタイムを最小限に抑え、企業のポリシーに準拠しながら、パッチ管理プロセスを自動化するソリューションを実装する必要があります。",
        "Question": "SysOps管理者は、EC2インスタンス全体のパッチ管理プロセスを自動化するためにどのソリューションを実装すべきですか？",
        "Options": {
            "1": "AWS Systems Manager Patch Managerを使用して、EC2インスタンスのパッチ適用を自動化します。",
            "2": "すべてのEC2インスタンスに対して手動でパッチを適用するための週次ダウンタイムウィンドウをスケジュールします。",
            "3": "Amazon CloudWatch Eventsを利用して手動のパッチ適用プロセスをトリガーします。",
            "4": "各EC2インスタンスでパッチを確認し適用するカスタムスクリプトを作成します。"
        },
        "Correct Answer": "AWS Systems Manager Patch Managerを使用して、EC2インスタンスのパッチ適用を自動化します。",
        "Explanation": "AWS Systems Manager Patch Managerは、EC2インスタンスのパッチ適用プロセスを自動化するための集中管理された方法を提供し、最新のパッチと更新に準拠していることを確認しながらダウンタイムを最小限に抑えます。パッチのベースラインとスケジュールを定義して、自動的にパッチを適用することができます。",
        "Other Options": [
            "各EC2インスタンスにカスタムスクリプトを作成することは、かなりのメンテナンスを必要とし、集中管理が欠如しているため、Patch Managerのような管理サービスを使用するよりも効率が悪くなります。",
            "Amazon CloudWatch Eventsを使用して手動のパッチ適用プロセスをトリガーすることは、自動化されたパッチ適用を行わず、手動の介入を促進するだけであり、不整合や管理オーバーヘッドの増加を招く可能性があります。",
            "手動パッチ適用のために週次ダウンタイムウィンドウをスケジュールすることは非効率的であり、人間の介入に依存するため、ビジネスオペレーションを妨げる可能性があり、タイムリーなパッチ適用を保証する自動化されたソリューションを提供しません。"
        ]
    },
    {
        "Question Number": "47",
        "Situation": "ある企業の財務チームが、AWSのコストと使用状況を分析して節約の余地を特定しようとしています。彼らは、コスト最適化のために分析できる詳細な請求レポートを受け取るプロセスを自動化したいと考えています。企業は、マスターアカウントといくつかのメンバーアカウントを持つAWS Organizationsを設定しています。",
        "Question": "財務チームは、組織構造に準拠した詳細なAWSコストと使用状況レポートを受け取るために何をすべきですか？",
        "Options": {
            "1": "コストと使用状況レポートを、個別分析のために組織内のすべてのメンバーアカウントに直接配信されるように設定します。",
            "2": "コストと使用状況レポートを、組織内の任意のメンバーアカウントが所有するAmazon S3バケットに保存されるように設定します。",
            "3": "AWSサポートに依頼して、コストと使用状況レポートをサードパーティの請求管理ツールに直接送信してもらいます。",
            "4": "コストと使用状況レポートを、AWS Organizations内のマスターアカウントが所有するAmazon S3バケットに公開するように設定します。"
        },
        "Correct Answer": "コストと使用状況レポートを、AWS Organizations内のマスターアカウントが所有するAmazon S3バケットに公開するように設定します。",
        "Explanation": "財務チームは、コストと使用状況レポートがAWS Organizations内のマスターアカウントが所有するAmazon S3バケットに配信されるように設定する必要があります。これらのレポートを受け取るためのS3バケットはマスターアカウントのみが所有でき、統合請求機能に準拠することを保証します。",
        "Other Options": [
            "このオプションは不正解です。AWSは、コストと使用状況レポートを受け取るS3バケットはマスターアカウントが所有する必要があり、メンバーアカウントが所有することはできません。",
            "このオプションは実行可能ではありません。AWSは、コストと使用状況レポートをメンバーアカウントに直接配信することを許可しておらず、マスターアカウントのバケットに配信する必要があります。",
            "このオプションは不正解です。AWSはコストと使用状況レポートをサードパーティツールに直接送信する機能を提供しておらず、レポートはマスターアカウントが所有するS3バケットに保存する必要があります。"
        ]
    },
    {
        "Question Number": "48",
        "Situation": "データ分析チームは、データのロードおよびアンロード操作のためにAmazon Redshiftクラスターのネットワークトラフィックを最適化しようとしています。彼らは、すべてのCOPYおよびUNLOAD操作がAmazon VPCを通過するようにして、セキュリティと制御を強化したいと考えています。",
        "Question": "SysOps管理者は、Amazon RedshiftクラスターからのすべてのCOPYおよびUNLOADトラフィックがAmazon VPCを通過するようにするために、どの機能を有効にすべきですか？",
        "Options": {
            "1": "PrivateLink",
            "2": "Direct Connect",
            "3": "Enhanced VPC Routing",
            "4": "VPC Peering"
        },
        "Correct Answer": "Enhanced VPC Routing",
        "Explanation": "Enhanced VPC Routingは、Amazon Redshiftクラスターとデータリポジトリ間のすべてのCOPYおよびUNLOADトラフィックがAmazon VPCを通過するように強制します。これにより、セキュリティが強化され、セキュリティグループやネットワークACLなどの標準VPC機能を使用できるようになります。",
        "Other Options": [
            "PrivateLinkは、サービスを公開インターネットにさらすことなく、安全にプライベートに接続するために使用されますが、COPYおよびUNLOADトラフィックがVPCを通過することを特に保証するものではありません。",
            "VPC Peeringは、2つのVPCをプライベートに接続することを可能にしますが、Amazon RedshiftからのCOPYおよびUNLOADトラフィックのルーティングに特に関連しているわけではありません。",
            "Direct Connectは、オンプレミスからAWSへの専用ネットワーク接続を提供しますが、COPYおよびUNLOADトラフィックがVPCを通過するルーティングを制御するものではありません。"
        ]
    },
    {
        "Question Number": "49",
        "Situation": "あなたはハイブリッドクラウド環境を管理しており、一部のリソースはオンプレミスでホストされ、他のリソースはAWSにあります。オンプレミスネットワークからのDNSクエリがAWS環境内のリソースの名前を効率的に解決できるようにする必要があります。この機能を有効にするために、Amazon Route 53 Resolverを使用したいと考えています。",
        "Question": "どの構成があなたのオンプレミスネットワークがRoute 53 Resolverを使用してAWSリソースのDNSクエリを解決できるようにしますか？",
        "Options": {
            "1": "AWSへのVPN接続を設定し、オンプレミスのDNSサーバーをRoute 53 Resolverを使用せずにAWSのDNSサーバーにリクエストを転送するように構成します。",
            "2": "Route 53 Resolverにインバウンドエンドポイントを作成し、オンプレミスのDNSサーバーからのクエリを受け入れ、DNS解決のためのルールを構成します。",
            "3": "VPC内にDNSサービスを実行するEC2インスタンスをデプロイし、オンプレミスのDNSクエリのフォワーダーとして機能するように構成します。",
            "4": "AWSリソースのためにRoute 53のパブリックホステッドゾーンを使用し、オンプレミスのDNSサーバーをホステッドゾーンのパブリックIPアドレスにポイントします。"
        },
        "Correct Answer": "Route 53 Resolverにインバウンドエンドポイントを作成し、オンプレミスのDNSサーバーからのクエリを受け入れ、DNS解決のためのルールを構成します。",
        "Explanation": "Route 53 Resolverにインバウンドエンドポイントを作成することで、オンプレミスネットワークからのDNSクエリをAWSリソース専用に処理できます。この設定はハイブリッドクラウド環境向けに設計されており、AWSリソース名の効率的な解決を確保します。",
        "Other Options": [
            "VPN接続を設定し、DNSリクエストを直接AWSのDNSサーバーに転送することは、ハイブリッドDNS解決を管理するために特に意図されたRoute 53 Resolverをバイパスします。",
            "パブリックホステッドゾーンを使用すると、内部AWSリソースの安全で効率的な解決が提供されず、DNSレコードが公開され、プライベートDNSクエリには適していません。",
            "EC2インスタンスをDNSフォワーダーとしてデプロイすると、不必要な複雑さとメンテナンスのオーバーヘッドが発生しますが、Route 53 ResolverはDNSクエリ処理を簡素化する管理されたソリューションです。"
        ]
    },
    {
        "Question Number": "50",
        "Situation": "ある会社がAmazon Route 53にドメインをホストしており、パフォーマンスと信頼性を向上させるためにDNSレコードを最適化しようとしています。",
        "Question": "SysOps管理者は、ユーザーの地理的位置に基づいてトラフィックをルーティングするために、どのタイプのRoute 53レコードを使用すべきですか？",
        "Options": {
            "1": "加重ルーティングポリシー",
            "2": "フェイルオーバールーティングポリシー",
            "3": "レイテンシールーティングポリシー",
            "4": "地理位置ルーティングポリシー"
        },
        "Correct Answer": "地理位置ルーティングポリシー",
        "Explanation": "地理位置ルーティングポリシーを使用すると、ユーザーの地理的位置に基づいてトラフィックをルーティングできます。これにより、ユーザーを最寄りのエンドポイントに誘導し、レイテンシーとユーザーエクスペリエンスを向上させます。",
        "Other Options": [
            "レイテンシールーティングポリシーは、ユーザーにとって最も低いレイテンシーを提供するAWSリージョンにトラフィックをルーティングしますが、ユーザーの地理的位置に基づいて特にターゲットを絞るわけではありません。",
            "加重ルーティングポリシーは、事前に定義された重みに基づいて複数のリソースにトラフィックを分配しますが、ユーザーの地理的位置は考慮されません。",
            "フェイルオーバールーティングポリシーは、プライマリリソースにトラフィックをルーティングし、プライマリが利用できない場合にセカンダリリソースにフェイルオーバーするために使用され、ユーザーの位置に基づくルーティングには対応していません。"
        ]
    },
    {
        "Question Number": "51",
        "Situation": "ある会社がAmazon S3を使用してアプリケーションデータを保存しています。特定のユーザーが新しいファイルをアップロードするだけでなく、既存のファイルを上書きまたは削除することができるようにしたいと考えています。さらに、S3バケットのアクセス制御リスト（ACL）を管理する必要があるユーザーもいます。セキュリティチームは、これらのユーザーに付与する必要のある権限を確認しています。",
        "Question": "S3バケット内のオブジェクトを作成、上書き、削除し、ACLを管理できるようにするために、ユーザーにどのACL権限を付与すべきですか？",
        "Options": {
            "1": "WRITEおよびWRITE_ACP権限",
            "2": "READおよびWRITE_ACP権限",
            "3": "READおよびWRITE権限",
            "4": "WRITEおよびREAD権限"
        },
        "Correct Answer": "WRITEおよびWRITE_ACP権限",
        "Explanation": "WRITE権限は、ユーザーがバケット内のオブジェクトを作成、上書き、削除できるようにし、WRITE_ACP権限はバケットのACLを変更できるようにします。したがって、WRITEおよびWRITE_ACP権限の両方を付与することで、オブジェクトとACLの管理要件を満たすことができます。",
        "Other Options": [
            "READ権限は、ユーザーがバケット内のオブジェクトを表示することのみを許可し、変更やACLの管理はできないため、この組み合わせは不十分です。",
            "READ権限はオブジェクトを作成または削除する能力を付与しないため、この組み合わせはオブジェクトライフサイクルを管理する要件を満たしません。",
            "READ権限はオブジェクトの変更やACLの管理を許可しないため、要件に対して不適切な選択肢となります。"
        ]
    },
    {
        "Question Number": "52",
        "Situation": "SysOps管理者は、世界中のユーザーに高可用性と低遅延を確保するために、複数のAWSリージョンにホストされた新しいウェブアプリケーションを構成しています。管理者は、地理的位置に基づいてユーザーを最寄りのリージョンに誘導し、すべてのリージョンでドメイン名が正しく解決されるようにする必要があります。",
        "Question": "管理者がドメイン名の解決を効果的に管理し、ユーザーを最寄りのリージョンにルーティングするために使用すべきAWSサービスはどれですか？",
        "Options": {
            "1": "AWS Direct Connect with public virtual interface",
            "2": "Amazon CloudFront with geo-restriction",
            "3": "Amazon Route 53 with latency-based routing",
            "4": "AWS Global Accelerator with static IP addresses"
        },
        "Correct Answer": "Amazon Route 53 with latency-based routing",
        "Explanation": "Amazon Route 53 with latency-based routingを使用すると、ユーザーにとって最も低遅延のリージョンにトラフィックをルーティングでき、ウェブアプリケーションのパフォーマンスが向上します。ドメイン名を効果的に解決し、ユーザーを最寄りのAWSリージョンに誘導します。",
        "Other Options": [
            "AWS Global Acceleratorは静的IPアドレスを提供し、可用性とパフォーマンスを向上させますが、ドメイン名の解決や遅延に基づくルーティングを直接管理するものではありません。",
            "Amazon CloudFrontはコンテンツ配信ネットワークで、ユーザーの近くにコンテンツをキャッシュしますが、異なるリージョンに対するドメイン名の解決や遅延に基づくルーティングの同じレベルを提供しません。",
            "AWS Direct Connectは、オンプレミスからAWSへの専用ネットワーク接続を確立するために使用されますが、地理的位置に基づくドメイン名の解決やトラフィックのルーティングを目的としたサービスではありません。"
        ]
    },
    {
        "Question Number": "53",
        "Situation": "ある企業は、オンプレミスのデータセンターからAWSに大量のデータを転送する必要があります。データ転送は効率的かつコスト効果が高くなければならず、特にこの作業に利用できる帯域幅が限られているためです。企業はこの目的のためにAWS Snowballを使用することに決めました。",
        "Question": "次のうち、AWS Snowballの主な使用ケースを最もよく説明している行動はどれですか？",
        "Options": {
            "1": "災害復旧のためにAWSサービスのバックアップを作成する。",
            "2": "オンプレミスとAWS間でリアルタイムデータ同期を行う。",
            "3": "AWSでのデータ処理のための一時的なストレージソリューションを提供する。",
            "4": "インターネットに依存せずにAWSに大量のデータを安全に転送する。"
        },
        "Correct Answer": "インターネットに依存せずにAWSに大量のデータを安全に転送する。",
        "Explanation": "AWS Snowballは、特にインターネットの帯域幅が限られているか高価な場合に、大量のデータを安全かつコスト効果的にAWSに転送するために特別に設計されています。物理デバイスを使用してインターネット転送の必要性を回避します。",
        "Other Options": [
            "このオプションは不正解です。AWS Snowballはリアルタイムデータ同期を目的としていません。これは、大量転送に焦点を当てた物理データ輸送ソリューションです。",
            "このオプションは不正解です。AWS SnowballはAWSサービスのバックアップを作成するために主に設計されていません。その主な機能はデータ転送であり、バックアップソリューションではありません。",
            "このオプションは不正解です。AWS Snowballはデータ処理のための一時的なストレージを提供することを目的としていません。これはAWSへのデータ移動を支援するデータ転送サービスですが、ストレージソリューションとしては機能しません。"
        ]
    },
    {
        "Question Number": "54",
        "Situation": "ある企業は、AWS上でのインフラストラクチャの展開を自動化し、一貫性とスピードを確保したいと考えています。チームは、コードを通じてインフラストラクチャを管理し、バージョン管理を可能にするInfrastructure as Code (IaC)アプローチを使用したいと考えています。また、他のAWSサービスと良好に統合できるソリューションが必要です。",
        "Question": "SysOps管理者がインフラストラクチャの展開を効率的に自動化するために使用すべきAWSサービスはどれですか？",
        "Options": {
            "1": "AWS CloudFormationを使用してインフラストラクチャをコードとして定義し、リソースの展開を自動化する。",
            "2": "AWS OpsWorksを実装して、ChefまたはPuppetを使用してアプリケーションスタックを構成および管理する。",
            "3": "AWS CodeDeployを活用して、EC2インスタンス間でのコード展開プロセスを自動化する。",
            "4": "AWS Elastic Beanstalkを利用して、アプリケーションを展開し、基盤となるリソースを自動的に管理する。"
        },
        "Correct Answer": "AWS CloudFormationを使用してインフラストラクチャをコードとして定義し、リソースの展開を自動化する。",
        "Explanation": "AWS CloudFormationを使用すると、テンプレートを使用してインフラストラクチャをコードとして定義でき、一貫して信頼性の高いAWSリソースの展開、変更、およびバージョン管理を自動化することが容易になります。",
        "Other Options": [
            "AWS Elastic Beanstalkは主にアプリケーションの展開と管理に焦点を当てていますが、CloudFormationと同じレベルの基盤となるインフラストラクチャの制御を提供しません。",
            "AWS OpsWorksはアプリケーションの構成管理と展開のために設計されていますが、CloudFormationと比較してインフラストラクチャのプロビジョニングにはあまり焦点を当てていません。",
            "AWS CodeDeployはEC2インスタンスへのコード展開を自動化するために使用され、インフラストラクチャリソースのプロビジョニングを処理しないため、このシナリオには不可欠です。"
        ]
    },
    {
        "Question Number": "55",
        "Situation": "ある企業がAmazon S3に保存された大規模データセットを分析するためにAmazon Athenaを使用しています。データは頻繁に更新されており、企業は不要なコストをかけずに最新のデータをクエリしていることを確認したいと考えています。",
        "Question": "Amazon Athenaを使用する際に、SysOps管理者がクエリパフォーマンスを最適化し、コストを最小限に抑えるために実施すべき戦略はどれですか？",
        "Options": {
            "1": "すべてのクエリをSELECT *ステートメントで実行する",
            "2": "関連するキーに基づいてS3内のデータをパーティション分割する",
            "3": "AWS Glueを使用してすべてのデータセットのデータカタログを作成する",
            "4": "将来の使用のためにクエリ結果を別のS3バケットに保存する"
        },
        "Correct Answer": "関連するキーに基づいてS3内のデータをパーティション分割する",
        "Explanation": "S3内のデータをパーティション分割することで、Athenaは全データセットではなく関連するパーティションのみをスキャンできるため、クエリパフォーマンスが大幅に向上し、処理されるデータ量を最小限に抑えることでコストが削減されます。",
        "Other Options": [
            "AWS Glueを使用してデータカタログを作成することはメタデータの管理に役立ちますが、Athenaでのデータスキャンに関連するクエリパフォーマンスの最適化やコストの最小化には直接的には寄与しません。",
            "SELECT *ステートメントでクエリを実行すると、全データセットをスキャンする必要があるため、高コストでパフォーマンスが低下する可能性があります。特に大規模データセットでは非効率的です。",
            "クエリ結果を別のS3バケットに保存することは結果のキャッシュに役立ちますが、Athenaで元のデータセットをクエリする際のパフォーマンス最適化やコスト削減には対処していません。"
        ]
    },
    {
        "Question Number": "56",
        "Situation": "ある企業が需要の増加により、Amazon ElastiCache for Memcachedクラスターでパフォーマンスの問題を経験しています。SysOps管理者として、ダウンタイムなしで新しい負荷に対応できるようにクラスターをスケールする最も効果的な方法を決定する必要があります。",
        "Question": "Amazon ElastiCache for Memcachedクラスターを効果的に水平スケールするために、どの戦略を実施しますか？",
        "Options": {
            "1": "既存のMemcachedクラスターに追加ノードを追加する。",
            "2": "同じ数のノードを持つ新しいMemcachedクラスターを作成する。",
            "3": "パフォーマンスを向上させるためにクラスター内のノード数を減らす。",
            "4": "既存のノードをより大きなインスタンスタイプにアップグレードする。"
        },
        "Correct Answer": "既存のMemcachedクラスターに追加ノードを追加する。",
        "Explanation": "Memcachedクラスターを効果的に水平スケールするためには、追加ノードを追加することで負荷を分散し、キャッシュ容量を増やすことができます。このアプローチは、ダウンタイムなしで増加した需要に対応し、パフォーマンスを向上させます。",
        "Other Options": [
            "既存のノードを垂直にアップグレードすることは、より高い負荷に対応するための容量の増加には対処せず、現在のノードのパフォーマンスを向上させるだけです。",
            "ノード数を減らすと、クラスターのリクエスト処理能力に悪影響を及ぼし、パフォーマンスの低下や潜在的なダウンタイムを引き起こす可能性があります。",
            "新しいMemcachedクラスターを作成することは、既存のクラスターをスケールするための即効性のある利点を提供せず、追加の設定が必要であり、データの整合性の問題を引き起こす可能性があります。"
        ]
    },
    {
        "Question Number": "57",
        "Situation": "ある企業が、構成管理ツールを使用して複数の環境にわたるアプリケーションサーバーのデプロイと構成を自動化しようとしています。彼らは、インスタンスがクラウド上であろうとオンプレミスであろうと、一貫して構成され、管理されることを確保したいと考えています。",
        "Question": "ChefまたはPuppetを使用してサーバー構成を自動化するという目標を達成するために、企業はどのAWSサービスを利用すべきですか？",
        "Options": {
            "1": "AWS CodeDeploy",
            "2": "AWS CloudFormation",
            "3": "AWS OpsWorks",
            "4": "AWS Systems Manager"
        },
        "Correct Answer": "AWS OpsWorks",
        "Explanation": "AWS OpsWorksは構成管理のために特別に設計されており、ChefとPuppetの管理インスタンスを提供し、さまざまな環境でサーバーがどのように構成、デプロイ、管理されるかを自動化することを可能にします。",
        "Other Options": [
            "AWS CodeDeployは主にアプリケーションのデプロイを自動化するために使用され、サーバーの構成管理には使用されません。",
            "AWS CloudFormationはインフラストラクチャをコードとして定義およびプロビジョニングするためのサービスですが、ChefやPuppetの構成管理機能は提供していません。",
            "AWS Systems Managerは複数のAWSサービスからの運用データを提供してAWSリソース全体でタスクを自動化しますが、ChefやPuppetを使用した構成管理に特化していません。"
        ]
    },
    {
        "Question Number": "58",
        "Situation": "システム管理者は、複数のAWSアカウントを持つ組織のAWSコストを監視する任務を負っています。管理者は、予期しない支出の増加について通知を受けるためのアラートを設定したいと考えています。しかし、アラームを設定する前に、AWS Management Consoleで請求アラートが有効になっていることを確認する必要があります。",
        "Question": "AWSコストを監視するために、システム管理者は請求アラートを有効にするために何をする必要がありますか？",
        "Options": {
            "1": "AWS Budgetsサービスで予想される料金を追跡するための予算を設定する。",
            "2": "AWS Management Consoleのアカウント設定セクションで請求アラートを有効にする。",
            "3": "組織内のすべてのユーザーに請求アクセスを許可する新しいIAMポリシーを作成する。",
            "4": "Billing and Cost Managementダッシュボードで詳細な請求レポートを有効にする。"
        },
        "Correct Answer": "AWS Management Consoleのアカウント設定セクションで請求アラートを有効にする。",
        "Explanation": "AWSコストを監視するために請求アラートを有効にするには、システム管理者はAWS Management Consoleのアカウント設定セクションで請求アラートを有効にする必要があります。このステップは、予想される料金に基づいてアラームを作成する前に必要です。",
        "Other Options": [
            "新しいIAMポリシーを作成することは請求アラートを直接有効にするものではなく、請求情報へのアクセスを提供するかもしれませんが、アラート自体を設定することはありません。",
            "詳細な請求レポートを有効にすることはコストを追跡するのに役立ちますが、予想される料金のアラートを設定することには直接関係ありません。",
            "AWS Budgetsで予算を設定することはコスト管理の良い実践ですが、請求アラートを有効にすることとは異なり、まずアカウント設定で有効にする必要があります。"
        ]
    },
    {
        "Question Number": "59",
        "Situation": "SysOps管理者は、変動する負荷パターンを持つアプリケーションの現在のAWSリソース使用状況とコストをレビューしています。このアプリケーションは、複数のEC2インスタンス、RDSデータベース、およびS3ストレージで構成されています。コストを最適化しつつパフォーマンスを確保するために、管理者はいくつかの戦略を検討しています。管理者は、アプリケーションのパフォーマンスを損なうことなく効果的にコストを削減するためにどの戦略を実施すべきですか？",
        "Question": "パフォーマンスを維持しながら経費を最小限に抑えるために、管理者はどのコスト最適化戦略を優先すべきですか？",
        "Options": {
            "1": "使用状況メトリクスに基づいて既存のEC2インスタンスを分析し、適切なサイズに調整する。",
            "2": "将来の成長を考慮してS3ストレージのサイズを増やす。",
            "3": "RDSデータベースをMulti-AZデプロイメントに移行して可用性を向上させる。",
            "4": "すべてのEC2インスタンスをオンデマンド料金に切り替えて最大の柔軟性を確保する。"
        },
        "Correct Answer": "使用状況メトリクスに基づいて既存のEC2インスタンスを分析し、適切なサイズに調整する。",
        "Explanation": "実際の使用状況メトリクスに基づいてEC2インスタンスのサイズを調整することで、管理者はインスタンスが過剰にプロビジョニングされず、または過小利用されないようにし、アプリケーションに必要なパフォーマンスを維持しながらコストを効果的に削減できます。",
        "Other Options": [
            "すべてのEC2インスタンスをオンデマンド料金に切り替えることは柔軟性を提供するかもしれませんが、特にインスタンスが継続的に稼働している場合、コストが大幅に増加する可能性があります。",
            "RDSデータベースをMulti-AZデプロイメントに移行することは可用性を向上させますが、コスト最適化には直接関係せず、この設定は通常追加料金が発生します。",
            "現在の使用状況を分析せずにS3ストレージのサイズを増やすことは、不必要な費用を招く可能性があります。これは、現在のニーズを検証せずに将来の成長を仮定するからです。"
        ]
    },
    {
        "Question Number": "60",
        "Situation": "ある企業は、変動するトラフィックパターンを持つウェブアプリケーションをAWSに展開しています。ピーク負荷時にアプリケーションが最適に機能し、トラフィックが少ない期間にコストを最小限に抑えるために、SysOps管理者はパフォーマンス最適化戦略の実施を任されています。",
        "Question": "SysOps管理者はウェブアプリケーションのパフォーマンスとコストを最適化するためにどのアプローチを取るべきですか？",
        "Options": {
            "1": "アプリケーションをAWS Lambdaに移行し、サーバーレスアーキテクチャを採用して需要に基づいて自動的にスケールさせ、EC2インスタンスを必要なくする。",
            "2": "Auto Scalingを実装してトラフィックパターンに基づいてEC2インスタンスの数を動的に調整し、基本的なパフォーマンスを確保するための最小インスタンス数を設定する。",
            "3": "ピーク負荷を処理するためにより大きなEC2インスタンスタイプを展開し、高トラフィック期間中にアプリケーションに十分なリソースを確保する。",
            "4": "Amazon CloudFrontを利用して静的コンテンツをユーザーに近い場所にキャッシュし、レイテンシを減少させ、オリジンサーバーからのトラフィックをオフロードする。"
        },
        "Correct Answer": "Auto Scalingを実装してトラフィックパターンに基づいてEC2インスタンスの数を動的に調整し、基本的なパフォーマンスを確保するための最小インスタンス数を設定する。",
        "Explanation": "Auto Scalingを実装することで、アプリケーションはリアルタイムのトラフィック需要に基づいて自動的に容量を調整でき、ピーク負荷時に最適なパフォーマンスを確保し、トラフィックが少ない期間にコストを最小限に抑えることができます。このアプローチは、パフォーマンスとコスト効率のバランスを維持します。",
        "Other Options": [
            "AWS Lambdaに移行することは、アプリケーションがサーバーレスアーキテクチャ用に設計されていない場合、実現不可能である可能性があり、コードのリファクタリングや状態管理において課題を引き起こす可能性があります。",
            "Amazon CloudFrontを利用してキャッシュを行うことは静的コンテンツのパフォーマンスを向上させるかもしれませんが、変動するトラフィックパターンにおける基盤となるEC2インスタンスの動的スケーリングニーズには対応していません。",
            "より大きなEC2インスタンスタイプを展開すると、トラフィックが少ない期間に過小利用が発生し、コストが増加する可能性があり、必ずしもピーク時のパフォーマンスを向上させるわけではありません。"
        ]
    },
    {
        "Question Number": "61",
        "Situation": "SysOps管理者は、AWSリソースに対して行われる特定のAPIコールを監視し、これらのコールに基づいてアラームを作成する必要があります。管理者は、この機能を実現するためにCloudWatchメトリックフィルターを実装することに決めました。",
        "Question": "SysOps管理者は、CloudWatch Logsで特定のAPIコールを追跡するためのメトリックフィルターを作成するにはどうすればよいですか？",
        "Options": {
            "1": "AWS Configを使用してAPIコールのコンプライアンスを監視し、CloudWatchに報告します。",
            "2": "ログデータ内の特定のAPIコールパターンをキャッチするメトリックフィルターを定義します。",
            "3": "ログファイルを解析し、CloudWatchメトリックにデータをプッシュするためのLambda関数を設定します。",
            "4": "ロググループ内のログイベントの数に基づいてCloudWatchアラームを作成します。"
        },
        "Correct Answer": "ログデータ内の特定のAPIコールパターンをキャッチするメトリックフィルターを定義します。",
        "Explanation": "ログデータ内の特定のAPIコールパターンをキャッチするメトリックフィルターを作成することで、管理者はこれらのAPIコールの発生を直接追跡でき、さらなる監視とアラートのために必要なデータを提供します。",
        "Other Options": [
            "ログイベントの数に基づいてCloudWatchアラームを作成することは、APIコールを特定的にフィルタリングするものではなく、無関係なアラートを引き起こす可能性があります。",
            "ログファイルを解析するためにLambda関数を設定することは、メトリックフィルターがCloudWatch Logsから必要な情報を直接抽出して監視できるため、不要です。",
            "APIコールのコンプライアンスを監視するためにAWS Configを使用することは、リソースの構成に焦点を当てており、特定のAPIコールの詳細なメトリックやアラームを提供するものではありません。"
        ]
    },
    {
        "Question Number": "62",
        "Situation": "ある会社は、AWS Organizationの下に整理された複数のAWSアカウントを持っています。セキュリティチームは、サービスコントロールポリシー（SCP）が正しく実装されていることを確認し、組織全体で特定のアクションを制限する任務を負っています。チームは、特定のアカウントに適用されているSCPがコンプライアンス要件に合致しているかを検証する必要があります。",
        "Question": "SysOps管理者は、組織内のアカウントに適用されているサービスコントロールポリシー（SCP）を効果的に検証するために、どのようなアクションを取るべきですか？",
        "Options": {
            "1": "AWS CLIを使用してSCPと特定のアカウントへの影響をリストします。",
            "2": "AWS Configルールを確認して、リソースがSCPに準拠していることを確認します。",
            "3": "各アカウントにログインし、各ユーザーの権限を手動で確認します。",
            "4": "アカウント内のIAMロールに添付されたIAMポリシーを確認して、準拠していることを確認します。"
        },
        "Correct Answer": "AWS CLIを使用してSCPと特定のアカウントへの影響をリストします。",
        "Explanation": "AWS CLIを使用してSCPをリストすることで、アカウントに適用されているポリシーとその影響を直接確認する方法が提供されます。この方法により、管理者はポリシーが意図した通りにアクションを制限または許可しているかを確認し、コンプライアンスを確保できます。",
        "Other Options": [
            "IAMロールに添付されたIAMポリシーを確認することは、SCPを直接検証するものではありません。IAMポリシーはSCPとは独立して機能し、アカウントレベルで適用されます。",
            "AWS Configルールを確認することは、SCPを特に検証するものではなく、AWSリソースと構成が定義されたルールに対して準拠しているかを評価するものであり、セキュリティの異なる側面です。",
            "各ユーザーの権限を手動で確認することは非効率的でエラーが発生しやすく、組織レベルで適用されているSCPの包括的なビューを提供しません。"
        ]
    },
    {
        "Question Number": "63",
        "Situation": "SysOps管理者は、異なる地理的地域にいるユーザーからAmazon S3バケットへの効率的なファイルアップロードを確保する任務を負っています。管理者は、特に長距離で転送される大きなファイルのために、これらのユーザーのアップロード速度を加速する機能を活用したいと考えています。アップロードパフォーマンスを向上させるために、管理者は何を有効にすべきですか？",
        "Question": "長距離のユーザー向けにファイル転送を最適化するために、管理者はAmazon S3のどの機能を有効にすべきですか？",
        "Options": {
            "1": "S3ライフサイクルポリシーを設定して、ファイルストレージをより効率的に管理します。",
            "2": "S3 Transfer Accelerationを有効にして、S3バケットへのアップロードを高速化します。",
            "3": "S3クロスリージョンレプリケーションを有効にして、複数のリージョンにファイルのコピーを維持します。",
            "4": "AWS Direct Connectを使用して、AWSへの専用ネットワーク接続を確立します。"
        },
        "Correct Answer": "S3 Transfer Accelerationを有効にして、S3バケットへのアップロードを高速化します。",
        "Explanation": "S3 Transfer Accelerationは、世界中のクライアントからS3へのコンテンツアップロードを加速するために特別に設計されており、CloudFrontのグローバルに分散されたエッジロケーションを活用して、長距離でのデータ転送を促進します。",
        "Other Options": [
            "クロスリージョンレプリケーションはアップロード速度を向上させるものではなく、冗長性と可用性のために異なるリージョン間でデータを複製します。",
            "S3ライフサイクルポリシーはデータストレージコストと移行を管理することを目的としていますが、ファイルアップロードの速度には影響しません。",
            "AWS Direct Connectは専用ネットワーク接続を提供しますが、S3アップロードの最適化のために特別に設計されているわけではなく、すべてのユースケースに対してコスト効果が高いとは限りません。"
        ]
    },
    {
        "Question Number": "64",
        "Situation": "データエンジニアリングチームは、AWSサービスを使用してデータの移動と処理を日々自動化する必要があります。彼らは、専用のネットワーク回線に依存せずに、これらのタスクのスケジューリングと実行を管理するのに役立つサービスを利用したいと考えています。",
        "Question": "チームはデータ処理活動のために効率的にパイプラインを作成するために、どのAWSサービスを使用すべきですか？",
        "Options": {
            "1": "AWS Lambdaを使用してトリガーに応じてコードを実行し、イベント駆動型ワークフローを管理します。",
            "2": "AWS Data Pipelineを使用して活動、データノード、およびスケジューリングを定義します。",
            "3": "AWS Glueを使用して、さまざまなソースに保存されたデータに対してETL操作を実行します。",
            "4": "Amazon Kinesisを使用して、リアルタイムのストリーミングデータを継続的に処理します。"
        },
        "Correct Answer": "AWS Data Pipelineを使用して活動、データノード、およびスケジューリングを定義します。",
        "Explanation": "AWS Data Pipelineは、データの移動と処理活動のスケジューリングのために特別に設計されています。ユーザーは活動とデータノードを含むパイプラインを定義できるため、チームの要件に適した選択肢となります。",
        "Other Options": [
            "AWS Lambdaは、定期的なデータ移動のスケジューリングには理想的ではなく、時間をかけたデータワークフローの管理よりもイベント駆動型の実行に焦点を当てています。",
            "Amazon Kinesisは主にリアルタイムデータのストリーミングと処理に使用され、スケジュールされたデータ移動やバッチ処理タスクには使用されません。",
            "AWS Glueはデータ変換を実行できる管理されたETLサービスですが、AWS Data Pipelineのようにデータ移動のスケジューリングを本質的に処理することはできません。"
        ]
    },
    {
        "Question Number": "65",
        "Situation": "ある企業は最近、さまざまなAWSサービスからのセキュリティの発見を集約するためにAWS Security Hubを展開しました。セキュリティチームは、Amazon GuardDutyからの重要な発見のいくつかがSecurity Hubに表示されていないことに気付きました。チームは、すべての関連する発見が報告されることを確認したいと考えています。",
        "Question": "セキュリティチームは、GuardDutyからのすべての発見がAWS Security Hubに適切に統合されることを確保するために何をすべきですか？",
        "Options": {
            "1": "Security Hubの設定でGuardDutyの統合を有効にします。",
            "2": "AWS CLIを使用してGuardDutyの発見をSecurity Hubに手動でインポートします。",
            "3": "GuardDutyの設定で検出頻度を増加させます。",
            "4": "AWS Lambda関数を作成して、GuardDutyからSecurity Hubに発見をプッシュします。"
        },
        "Correct Answer": "Security Hubの設定でGuardDutyの統合を有効にします。",
        "Explanation": "GuardDutyからのすべての発見がAWS Security Hubに報告されることを確保するためには、これら二つのサービス間の統合を有効にする必要があります。これにより、Security HubはGuardDutyからの発見を自動的に受信し、表示できるようになります。",
        "Other Options": [
            "GuardDutyの発見は手動でSecurity Hubにインポートすることはできず、直接統合する必要があります。",
            "発見をプッシュするためにLambda関数を作成することは不要であり、ネイティブ統合が存在する場合は複雑さを増すだけです。",
            "GuardDutyの検出頻度を増加させても、Security Hubとの統合には影響を与えず、GuardDutyがデータを分析する頻度のみを変更します。"
        ]
    }
]