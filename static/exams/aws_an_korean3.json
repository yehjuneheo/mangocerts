[
    {
        "Question Number": "1",
        "Situation": "한 금융 서비스 회사가 민감한 고객 데이터를 처리하는 애플리케이션을 호스팅하기 위해 Amazon VPC를 활용하고 있습니다. 업계 규정을 준수하기 위해 보안 팀은 네트워크 트래픽 패턴을 모니터링하고 분석해야 합니다. 그들은 애플리케이션이 위치한 특정 서브넷에 대해 VPC 흐름 로그를 활성화하기로 결정했습니다. 팀은 포렌식 분석 및 준수 감사에 도움이 되는 트래픽에 대한 자세한 정보를 캡처하고자 합니다.",
        "Question": "기본 및 확장 필드가 모두 활성화된 VPC 흐름 로그를 생성하고 분석하기 위한 요구 사항을 가장 잘 충족하는 구성은 무엇입니까?",
        "Options": {
            "1": "VPC 흐름 로그를 Amazon S3 버킷으로 데이터를 전송하도록 구성합니다. 저장 비용을 최소화하고 데이터 관리를 단순화하기 위해 기본 필드만 사용합니다.",
            "2": "VPC 흐름 로그를 Amazon Athena에 게시하여 쿼리할 수 있도록 활성화합니다. 데이터 보존 정책 준수를 보장하기 위해 기본 필드만 캡처하는 데 집중합니다.",
            "3": "CloudWatch Logs 그룹을 생성하고 서브넷에 대한 VPC 흐름 로그를 설정합니다. 흐름 로그 구성에서 기본 및 확장 필드를 모두 활성화합니다.",
            "4": "VPC 흐름 로그를 설정하여 트래픽을 캡처하고 AWS Lambda와 통합하여 실시간 분석을 수행합니다. 트래픽 패턴에 대한 가시성을 높이기 위해 확장 필드를 선택합니다."
        },
        "Correct Answer": "CloudWatch Logs 그룹을 생성하고 서브넷에 대한 VPC 흐름 로그를 설정합니다. 흐름 로그 구성에서 기본 및 확장 필드를 모두 활성화합니다.",
        "Explanation": "이 옵션은 VPC 흐름 로그에서 기본 및 확장 필드가 모두 캡처되도록 하여 준수 및 포렌식 분석에 필요한 포괄적인 트래픽 세부정보를 제공합니다. 로그를 CloudWatch Logs 그룹으로 전송하면 모니터링 및 경고가 더 용이해집니다.",
        "Other Options": [
            "VPC 흐름 로그를 S3 버킷으로 전송하는 것은 유효한 옵션이지만, 기본 필드만 사용하는 것은 준수 감사 및 포렌식 분석에 필요한 자세한 트래픽 정보를 제공하지 않습니다.",
            "기본 필드만으로 Amazon Athena에 게시하도록 VPC 흐름 로그를 활성화하면 철저한 트래픽 분석에 필요한 가시성이 제한되며, 확장 필드 정보에 대한 요구 사항을 충족하지 않습니다.",
            "AWS Lambda와 함께 VPC 흐름 로그를 설정하면 실시간 분석을 향상시킬 수 있지만, 기본 필드 없이 확장 필드만 캡처하면 트래픽에 대한 완전한 그림을 제공하지 못할 수 있으며, 이는 준수에 필요합니다."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "한 금융 서비스 회사가 AWS 환경에서 사용자 활동, 네트워크 트래픽 패턴 및 업계 규정 준수를 추적하기 위한 종합적인 네트워크 모니터링 솔루션을 구현해야 합니다. 이 솔루션은 전송 중인 데이터와 AWS 리소스에 대한 사용자 행동 모두에 대한 가시성을 제공해야 합니다.",
        "Question": "회사가 준수 목적을 위해 네트워크 트래픽 및 사용자 활동을 효과적으로 모니터링하기 위해 배포해야 할 AWS 서비스 조합은 무엇입니까?",
        "Options": {
            "1": "API 활동 로깅을 위해 AWS CloudTrail을 활성화하고 VPC 흐름 로그를 구성하여 VPC의 모든 트래픽을 캡처합니다.",
            "2": "실시간 애플리케이션 모니터링을 위해 Amazon CloudWatch를 활용하고 운영 통찰력을 위해 AWS Systems Manager를 활성화합니다.",
            "3": "DDoS 보호를 위해 AWS Shield를 구현하고 중앙 집중식 보안 관리를 위해 AWS Firewall Manager를 활용합니다.",
            "4": "네트워크 구성 변경을 추적하기 위해 AWS Config를 사용하고 취약성 평가를 위해 Amazon Inspector를 활성화합니다."
        },
        "Correct Answer": "API 활동 로깅을 위해 AWS CloudTrail을 활성화하고 VPC 흐름 로그를 구성하여 VPC의 모든 트래픽을 캡처합니다.",
        "Explanation": "AWS CloudTrail을 사용하면 회사가 AWS 계정에서 수행된 모든 API 요청을 기록하고 모니터링할 수 있어 준수 및 감사에 매우 중요합니다. VPC 흐름 로그를 구성하면 VPC의 네트워크 인터페이스 간의 트래픽에 대한 가시성을 제공하여 회사가 트래픽 패턴을 분석하고 이상 징후를 감지할 수 있습니다.",
        "Other Options": [
            "AWS Config는 리소스 변경을 추적할 수 있지만 API 활동에 대한 포괄적인 로깅을 제공하지 않습니다. Amazon Inspector는 실시간 네트워크 모니터링보다는 보안 평가에 중점을 둡니다.",
            "AWS Shield는 주로 DDoS 보호를 위한 것이며 AWS Firewall Manager는 보안 정책을 지원하지만, 둘 다 네트워크 트래픽이나 사용자 활동에 대한 자세한 로깅이나 통찰력을 제공하지 않으며, 이는 준수에 필수적입니다.",
            "Amazon CloudWatch는 애플리케이션 메트릭에 유용하지만 API 요청이나 네트워크 트래픽을 로깅하지 않으며, AWS Systems Manager는 준수 모니터링보다는 운영 관리에 더 중점을 둡니다."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "한 회사가 온프레미스 데이터 센터를 AWS로 전환하고 AWS Direct Connect 및 VPN 연결을 사용하여 하이브리드 아키텍처를 구축하고 있습니다. 네트워크 엔지니어는 온프레미스 환경과 AWS 리소스 간의 효율적인 통신을 보장하기 위해 라우팅 프로토콜을 최적화하는 임무를 맡고 있습니다. 엔지니어는 또한 기본 연결이 실패할 경우 장애 조치 메커니즘을 고려해야 합니다. 이 요구 사항을 충족하기 위해 엔지니어는 어떤 접근 방식을 취해야 합니까?",
        "Question": "하이브리드 AWS 아키텍처에서 Direct Connect 및 VPN 연결을 위한 라우팅을 구성하는 가장 좋은 방법은 무엇입니까?",
        "Options": {
            "1": "Direct Connect 연결에 대해서만 가상 프라이빗 게이트웨이에서 경로 전파를 활성화하고, VPN 연결에 대해서는 정적 경로를 사용하여 라우팅 설정을 단순화합니다.",
            "2": "Direct Connect 및 VPN 연결 모두에서 BGP를 구성하여 자동 장애 조치 및 경로 우선 순위를 허용하여 온프레미스 리소스가 VPC 서브넷과 효과적으로 통신할 수 있도록 합니다.",
            "3": "Direct Connect 및 VPN 연결 모두에 대해 정적 경로를 설정하고, 모든 트래픽에 대해 VPN을 우선시하여 Direct Connect 실패 시 수동 장애 조치를 허용합니다.",
            "4": "Direct Connect에 대해 단일 정적 경로를 사용하고 VPN 연결에 대해 수동 장애 조치 프로세스를 구성하여 라우팅 관리의 복잡성을 최소화합니다."
        },
        "Correct Answer": "Direct Connect 및 VPN 연결 모두에서 BGP를 구성하여 자동 장애 조치 및 경로 우선 순위를 허용하여 온프레미스 리소스가 VPC 서브넷과 효과적으로 통신할 수 있도록 합니다.",
        "Explanation": "Direct Connect 및 VPN 연결 모두에서 BGP(경계 게이트웨이 프로토콜)를 사용하면 동적 라우팅이 가능해져 두 연결 간의 자동 장애 조치를 허용합니다. 이는 하나의 연결이 실패할 경우 트래픽이 수동 개입 없이 다른 쪽으로 원활하게 전환될 수 있도록 하여 네트워크 신뢰성과 성능을 최적화합니다.",
        "Other Options": [
            "정적 경로는 자동 장애 조치 기능을 제공하지 않으며 경로 변경을 위해 수동 개입이 필요하므로 장애 조치 시 다운타임과 복잡성이 증가할 수 있습니다.",
            "Direct Connect에 대해 단일 정적 경로를 사용하는 것은 하이브리드 환경에서 효율적인 장애 조치 및 경로 관리를 위해 필수적인 동적 라우팅의 이점을 활용하지 않습니다.",
            "Direct Connect에 대해서만 경로 전파를 활성화하면 VPN 연결이 무시되어 비효율적인 라우팅 및 중복성 부족으로 이어질 수 있으며, Direct Connect가 실패할 경우 VPN이 자동으로 인계받지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "조직이 공용 및 사설 서브넷을 사용하는 Amazon VPC에 웹 애플리케이션을 배포했습니다. 이 애플리케이션은 공용 서브넷에 로드 밸런서를 두고 사설 서브넷에 EC2 인스턴스를 운영하고 있습니다. 보안이 최우선 과제이며, 조직은 트래픽 필터링을 위해 AWS Network Firewall을 구현했습니다. 그러나 최근 업데이트 이후 애플리케이션이 외부 API와의 연결 문제를 겪고 있습니다. 필요한 트래픽만 허용하면서 보안을 유지해야 합니다.",
        "Question": "애플리케이션이 보안을 해치지 않으면서 외부 API에 접근할 수 있도록 AWS Network Firewall 규칙을 구성하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "AWS WAF를 활용하여 Network Firewall에 도달하기 전에 트래픽을 필터링하여 보안을 강화합니다.",
            "2": "DNS 트래픽을 허용하고 사설 서브넷에서 모든 다른 아웃바운드 트래픽을 제한하는 Network Firewall 규칙 그룹을 설정합니다.",
            "3": "외부 API의 특정 IP 주소에서만 트래픽을 허용하는 규칙 그룹을 생성하고 이를 Network Firewall에 연결합니다.",
            "4": "Network Firewall에서 기본 허용 규칙을 구현하여 사설 서브넷에서 외부 IP로의 모든 아웃바운드 트래픽을 활성화합니다."
        },
        "Correct Answer": "외부 API의 특정 IP 주소에서만 트래픽을 허용하는 규칙 그룹을 생성하고 이를 Network Firewall에 연결합니다.",
        "Explanation": "외부 API의 특정 IP 주소에서만 트래픽을 허용하는 규칙 그룹을 생성하면 필요한 트래픽만 허용되어 보안 환경을 유지하면서 애플리케이션이 올바르게 작동할 수 있습니다. 이 접근 방식은 원치 않는 트래픽과 잠재적 위협에 대한 노출을 최소화합니다.",
        "Other Options": [
            "기본 허용 규칙을 구현하면 모든 아웃바운드 트래픽을 허용하여 애플리케이션을 불필요한 위험에 노출시키므로 보안 요구 사항에 위배됩니다.",
            "AWS WAF를 사용하는 것은 Network Firewall의 아웃바운드 트래픽 필터링 요구 사항을 직접적으로 해결하지 않으며, WAF는 주로 웹 애플리케이션 보호를 위해 설계되었습니다.",
            "DNS 트래픽만 허용하는 규칙 그룹을 설정하면 DNS 쿼리를 제외한 모든 아웃바운드 트래픽이 차단되므로 애플리케이션이 외부 API에 도달하지 못할 가능성이 높습니다."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "네트워크 엔지니어가 AWS 네트워킹 리소스의 프로비저닝을 자동화하기 위해 Infrastructure as Code (IaC)를 사용하고 있습니다. 그러나 그들은 템플릿에서 하드코딩된 지침을 사용함으로써 여러 가지 문제가 발생하고 있음을 발견했습니다.",
        "Question": "클라우드 네트워킹 리소스를 프로비저닝할 때 IaC 템플릿에서 하드코딩된 지침과 관련된 일반적인 문제는 무엇입니까?",
        "Options": {
            "1": "하드코딩된 지침은 리소스 업데이트 및 확장 작업을 단순화합니다.",
            "2": "하드코딩된 지침은 배포 프로세스를 더 빠르고 효율적으로 만듭니다.",
            "3": "하드코딩된 값은 민감한 구성에 대한 무단 접근을 방지하여 보안을 강화합니다.",
            "4": "하드코딩된 값은 구성 드리프트를 초래하고 여러 환경의 관리 복잡성을 증가시킬 수 있습니다."
        },
        "Correct Answer": "하드코딩된 값은 구성 드리프트를 초래하고 여러 환경의 관리 복잡성을 증가시킬 수 있습니다.",
        "Explanation": "IaC 템플릿에서 하드코딩된 지침을 사용하면 한 환경에서의 변경 사항이 다른 환경에 반영되지 않아 구성 드리프트가 발생할 수 있으며, 이는 여러 환경 간의 관리 및 일관성을 복잡하게 만듭니다.",
        "Other Options": [
            "하드코딩된 지침은 업데이트를 단순화하지 않으며, 사실 수동 업데이트가 자주 필요하기 때문에 서로 다른 환경 간의 변경 관리를 더 어렵게 만들 수 있습니다.",
            "하드코딩된 값은 템플릿에서 민감한 구성을 노출시켜 보안을 실제로 위협할 수 있으며, 템플릿이 공유되거나 손상될 경우 무단 접근에 더 취약해질 수 있습니다.",
            "하드코딩된 지침이 배포 프로세스를 가속화하는 것처럼 보일 수 있지만, 실제로는 템플릿에 경직성을 도입하여 변경에 적응하거나 리소스를 효과적으로 확장하는 것을 더 어렵게 만듭니다."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "금융 서비스 회사가 AWS 환경에 대한 상세한 로깅 및 모니터링을 요구하는 새로운 보안 정책을 구현하고 있습니다. 그들은 모든 네트워크 트래픽이 준수 및 감사 목적으로 캡처되도록 하기를 원합니다. 네트워크 관리자는 적절한 모니터링 및 로깅 메커니즘을 설정하는 임무를 맡고 있습니다.",
        "Question": "준수 및 감사 목적으로 모든 네트워크 트래픽을 캡처하고 로깅하기 위해 관리자가 구성해야 하는 AWS 서비스는 무엇입니까?",
        "Options": {
            "1": "Amazon VPC Flow Logs",
            "2": "AWS CloudTrail",
            "3": "Amazon GuardDuty",
            "4": "AWS Config"
        },
        "Correct Answer": "Amazon VPC Flow Logs",
        "Explanation": "Amazon VPC Flow Logs는 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처하도록 특별히 설계되었습니다. 이는 준수 및 감사 요구 사항에 필수적인 네트워크 트래픽에 대한 가시성을 제공합니다.",
        "Other Options": [
            "AWS CloudTrail은 AWS 계정에서 수행된 API 호출에 대한 로깅을 제공하지만 네트워크 트래픽 데이터를 캡처하지 않으므로 이 특정 요구 사항에 적합하지 않습니다.",
            "AWS Config는 AWS 리소스의 구성 변경 및 준수 상태를 추적하지만, 이 시나리오에서의 주요 요구 사항인 네트워크 트래픽을 캡처하지 않습니다.",
            "Amazon GuardDuty는 악의적인 활동 및 무단 행동을 지속적으로 모니터링하는 위협 탐지 서비스이지만 모든 네트워크 트래픽에 대한 상세한 로깅을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "한 금융 서비스 회사가 온프레미스 데이터 센터와 AWS 환경을 연결하기 위해 소프트웨어 정의 광역 네트워크(SD-WAN) 솔루션을 구현하려고 합니다. 이 회사는 높은 가용성과 중복성을 목표로 하며 지연 시간을 최소화하려고 합니다. 그들은 네트워크 트래픽을 최적화하기 위해 Transit Gateway Connect를 사용하여 SD-WAN을 AWS와 통합하는 옵션을 고려하고 있습니다. 회사가 원활한 통합과 효율적인 트래픽 관리를 보장하기 위해 어떤 솔루션을 구현해야 할까요?",
        "Question": "Transit Gateway Connect를 활용하여 AWS와 SD-WAN 솔루션을 통합하는 최선의 접근 방식은 무엇인가요?",
        "Options": {
            "1": "온프레미스 데이터 센터에서 AWS Transit Gateway로의 Direct Connect 연결을 설정하고 Transit Gateway Connect를 사용하여 SD-WAN 트래픽을 관리합니다.",
            "2": "AWS Site-to-Site VPN을 사용하여 SD-WAN을 AWS에 직접 연결하고 Transit Gateway Connect를 활용하여 연결의 중앙 집중식 관리를 수행합니다.",
            "3": "SD-WAN과 Transit Gateway 간에 VPC 피어링 연결을 설정하여 SD-WAN이 추가 구성 없이 트래픽을 관리할 수 있도록 합니다.",
            "4": "AWS Transit Gateway를 배포하고 각 온프레미스 위치에서 Transit Gateway로의 VPN 연결을 구성한 다음, Transit Gateway Connect를 사용하여 SD-WAN 트래픽을 라우팅합니다."
        },
        "Correct Answer": "온프레미스 데이터 센터에서 AWS Transit Gateway로의 Direct Connect 연결을 설정하고 Transit Gateway Connect를 사용하여 SD-WAN 트래픽을 관리합니다.",
        "Explanation": "Direct Connect 연결을 설정하면 온프레미스 데이터 센터와 AWS 간에 전용, 고대역폭, 저지연 링크가 제공되어 SD-WAN 솔루션 통합에 이상적입니다. Transit Gateway Connect를 활용하면 SD-WAN 트래픽의 효율적인 라우팅이 가능하여 성능과 신뢰성을 향상시킵니다.",
        "Other Options": [
            "AWS Transit Gateway를 배포하고 VPN 연결을 사용하는 것은 Direct Connect에 비해 추가적인 지연 시간과 관리 오버헤드를 초래할 수 있으며, 이는 고성능 요구 사항에 더 적합합니다.",
            "VPC 피어링은 Transit Gateway Connect를 통한 SD-WAN 트래픽 관리를 허용하지 않으며, Direct Connect가 제공하는 필요한 대역폭과 성능 최적화 기능이 부족합니다.",
            "AWS Site-to-Site VPN을 사용하는 것은 특히 높은 가용성을 요구하는 금융 서비스 맥락에서 SD-WAN 트래픽에 필요한 성능과 신뢰성을 제공하지 못할 수 있습니다."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "한 조직이 온프레미스 데이터 센터와 AWS를 통합하는 하이브리드 클라우드 아키텍처를 설정할 계획입니다. 그들은 높은 가용성과 낮은 지연 시간을 보장하기 위해 다양한 연결 옵션을 고려하고 있습니다. 그들은 온프레미스 환경과 AWS 간의 안전하고 신뢰할 수 있는 연결을 위한 요구 사항을 충족하는 적절한 솔루션을 선택해야 합니다.",
        "Question": "다음 연결 옵션 중 어느 것이 온프레미스 데이터 센터와 AWS 간의 하이브리드 연결에 대한 조직의 요구 사항을 가장 잘 충족합니까?",
        "Options": {
            "1": "전용 연결 없이 AWS Transit Gateway를 사용하여 상호 연결성을 관리하고, 공용 인터넷 접근에만 의존합니다.",
            "2": "Direct Connect 게이트웨이를 설정하여 추가 구성 없이 여러 AWS 리전을 온프레미스 리소스와 연결합니다.",
            "3": "인터넷을 통해 VPN 연결을 설정하여 AWS 리소스에 대한 암호화 및 안전한 접근을 보장합니다.",
            "4": "전용 네트워크 연결을 위해 AWS Direct Connect를 구현하고, 백업 장애 조치를 위해 VPN을 결합합니다."
        },
        "Correct Answer": "전용 네트워크 연결을 위해 AWS Direct Connect를 구현하고, 백업 장애 조치를 위해 VPN을 결합합니다.",
        "Explanation": "AWS Direct Connect를 구현하면 저지연 및 신뢰할 수 있는 AWS 연결을 보장하는 전용 고대역폭 연결이 제공됩니다. 이를 VPN과 결합하면 중복성과 안전한 인터넷 연결이 가능하여 조직의 높은 가용성과 보안 요구 사항을 충족합니다.",
        "Other Options": [
            "인터넷을 통해 VPN 연결을 설정하는 것은 하이브리드 연결에 필요한 대역폭과 신뢰성을 제공하지 못할 수 있습니다. 암호화를 보장하지만 인터넷 변동성에 취약합니다.",
            "AWS Transit Gateway를 사용하는 것은 연결을 위해 공용 인터넷 접근에 의존하므로 조직의 낮은 지연 시간과 높은 가용성 요구 사항을 충족하지 못할 수 있습니다. 전용 연결을 제공하지 않습니다.",
            "Direct Connect 게이트웨이를 설정하는 것은 주로 여러 AWS 리전을 연결하는 데 중점을 두며 온프레미스 리소스에 대한 직접 연결을 제공하지 않습니다. 이 옵션은 하이브리드 연결 요구 사항을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "한 금융 기관이 데이터 전송 요구 사항을 위해 AWS에 대한 전용 연결이 필요합니다. 그들은 호스팅된 연결로 AWS Direct Connect를 사용하고 있으며, 설정이 모범 사례를 준수하는지 확인하고자 합니다. 그들은 VPC에 연결하기 위해 개인 가상 인터페이스를 설정하고, 여러 AWS 리전에서 청구 및 연결을 효율적으로 관리할 수 있도록 하기를 원합니다.",
        "Question": "AWS Direct Connect 및 그 구성에 대한 다음 진술 중 어떤 것이 사실입니까?",
        "Options": {
            "1": "각 Direct Connect 연결은 서로 다른 데이터 센터에 대해 여러 개의 승인서(LOA)를 가질 수 있습니다.",
            "2": "Direct Connect Gateway는 단일 연결을 통해 서로 다른 리전의 여러 VPC에 접근할 수 있게 합니다.",
            "3": "1Gbps 미만의 Direct Connect 연결은 여러 연결의 대역폭을 결합하기 위해 링크 집합(LAG)을 사용할 수 있습니다.",
            "4": "가상 인터페이스를 제거하면 Direct Connect 연결에 대한 청구를 중지하고 연결을 유지할 수 있습니다."
        },
        "Correct Answer": "Direct Connect Gateway는 단일 연결을 통해 서로 다른 리전의 여러 VPC에 접근할 수 있게 합니다.",
        "Explanation": "Direct Connect Gateway는 단일 Direct Connect 연결을 사용하여 서로 다른 AWS 리전의 여러 VPC를 연결할 수 있는 기능을 제공하여 다중 리전 아키텍처에 유연한 솔루션이 됩니다.",
        "Other Options": [
            "가상 인터페이스를 제거해도 Direct Connect 연결에 대한 청구를 중지할 수 없으며, 청구를 중지하는 유일한 방법은 전체 Direct Connect 연결을 삭제하는 것입니다.",
            "각 Direct Connect 연결은 데이터 센터당 하나의 LOA만 가질 수 있으며, 단일 연결에 대해 여러 LOA는 허용되지 않습니다.",
            "LAG는 여러 연결을 결합할 수 있지만, 청구 목적상 단일 논리적 연결로 간주되므로 개별 연결 한도를 초과하는 추가 전용 대역폭을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "한 회사가 AWS 리전의 여러 가용 영역에 걸쳐 다계층 애플리케이션을 배포하고 있습니다. 높은 가용성과 애플리케이션 인스턴스 간의 효율적인 트래픽 분배를 보장하기 위해 네트워크 엔지니어는 들어오는 트래픽을 처리할 Elastic Load Balancer (ELB)를 구성하는 임무를 맡고 있습니다. 엔지니어는 ELB가 인스턴스의 상태에 따라 들어오는 요청을 고르게 분배하고 애플리케이션에 접근하는 사용자에 대한 세션 친화성을 유지하도록 해야 합니다.",
        "Question": "어떤 구성이 이러한 요구 사항을 충족합니까? (두 가지 선택)",
        "Options": {
            "1": "인스턴스 수준의 상태 검사를 사용하여 ELB를 구현하고 지속 시간에 따라 스티키 세션을 활성화합니다.",
            "2": "ELB에 대해 경로 수준에서 상태 검사를 활성화하고 애플리케이션 쿠키를 기반으로 세션 친화성을 구성합니다.",
            "3": "ELB를 IP 주소 기반 라우팅을 사용하도록 설정하고 네트워크 로드 밸런서를 기반으로 세션 친화성을 활성화합니다.",
            "4": "인스턴스 수준의 상태 검사를 사용하는 대상 그룹으로 ELB를 구성하고 스티키 세션을 비활성화합니다.",
            "5": "ELB에 대해 크로스 존 로드 밸런싱을 활성화하고 애플리케이션 쿠키를 기반으로 스티키 세션을 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "ELB에 대해 크로스 존 로드 밸런싱을 활성화하고 애플리케이션 쿠키를 기반으로 스티키 세션을 구성합니다.",
            "인스턴스 수준의 상태 검사를 사용하여 ELB를 구현하고 지속 시간에 따라 스티키 세션을 활성화합니다."
        ],
        "Explanation": "크로스 존 로드 밸런싱을 활성화하면 ELB가 모든 가용 영역의 모든 건강한 인스턴스에 트래픽을 고르게 분배하여 가용성을 향상시킵니다. 애플리케이션 쿠키를 기반으로 스티키 세션을 구성하면 ELB가 세션 친화성을 유지하여 동일한 클라이언트의 요청을 동일한 인스턴스로 유도할 수 있어 다계층 애플리케이션에서 사용자 경험에 필수적입니다.",
        "Other Options": [
            "이 옵션은 스티키 세션을 비활성화하여 사용자의 세션 친화성을 유지해야 한다는 요구 사항과 모순됩니다. 크로스 존 로드 밸런싱은 유익하지만 세션 관리의 부족은 큰 단점입니다.",
            "이 옵션은 IP 주소 기반 라우팅을 사용하지만 이는 클래식 ELB 구성에 적용되지 않습니다. 또한 네트워크 로드 밸런서를 기반으로 세션 친화성을 활성화하는 것은 애플리케이션 로드 밸런서 설정의 요구 사항과 일치하지 않습니다.",
            "이 옵션은 인스턴스 수준의 상태 검사를 포함하지만 사용자를 위한 세션 친화성을 활성화하는 메커니즘을 명시하지 않기 때문에 잘못된 것입니다. 이는 원활한 사용자 경험에 필수적입니다."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "한 금융 서비스 회사가 여러 Amazon VPC를 다양한 리전에 배포하여 인프라를 확장하고 있습니다. 다양한 VPC가 서로 통신하고 높은 가용성을 유지할 수 있도록 하기 위해 회사는 트래픽을 효율적으로 관리할 수 있는 라우팅 전략이 필요합니다. 이 솔루션은 경로 변경이나 중단 시 자동 장애 조치를 지원해야 합니다. 회사는 이 구현을 위해 정적 및 동적 라우팅 프로토콜을 모두 고려하고 있습니다.",
        "Question": "이 시나리오에서 VPC 간 통신을 위한 관리 용이성과 복원력 간의 최상의 균형을 제공하는 라우팅 전략은 무엇입니까?",
        "Options": {
            "1": "각 연결에 대해 정의된 정적 경로를 사용하여 VPC 피어링 연결을 활용하여 모든 트래픽에 대한 전용 경로를 보장합니다.",
            "2": "AWS Transit Gateway를 구현하고 동적 라우팅을 활성화하여 VPC 간의 자동 경로 전파 및 중복성을 허용합니다.",
            "3": "모든 연결된 VPC 간의 라우팅을 관리하기 위해 정적 경계 게이트웨이 프로토콜(BGP)을 사용하는 전용 VPC 내에 가상 라우터를 설정합니다.",
            "4": "각 VPC에서 정적 경로를 설정하여 네트워크를 직접 연결하고 필요에 따라 수동으로 경로를 조정합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하고 동적 라우팅을 활성화하여 VPC 간의 자동 경로 전파 및 중복성을 허용합니다.",
        "Explanation": "AWS Transit Gateway를 사용하여 동적 라우팅을 활성화하면 관리 용이성과 복원력 간의 최상의 균형을 제공합니다. 여러 VPC가 단일 게이트웨이를 통해 연결되도록 하여 라우팅 아키텍처를 단순화하고 경로를 동적으로 전파합니다. 이는 하나의 경로가 실패할 경우 트래픽이 자동으로 재라우팅되어 수동 개입 없이도 높은 가용성을 지원합니다.",
        "Other Options": [
            "정적 경로를 설정하면 수동 구성 및 업데이트가 필요하여 네트워크가 확장됨에 따라 번거롭고 오류가 발생하기 쉬워집니다. 이 접근 방식은 동적 라우팅이 제공하는 복원력이 부족하여 높은 가용성 환경에 적합하지 않습니다.",
            "정적 경로가 있는 VPC 피어링 연결은 효과적일 수 있지만 확장성이 좋지 않습니다. 각 피어링 연결은 수동 경로 구성이 필요하며 추가 VPC가 추가되면 복잡성이 크게 증가합니다. 이는 경로 관리 문제와 경로가 제대로 유지되지 않을 경우 잠재적인 중단을 초래할 수 있습니다.",
            "정적 BGP를 사용하는 가상 라우터를 설정하면 불필요한 복잡성이 도입될 수 있습니다. BGP는 동적 라우팅을 위한 강력한 프로토콜이지만, 이 목적을 위해 가상 라우터를 사용하는 것은 AWS Transit Gateway를 활용하는 것보다 효율적이지 않습니다. AWS Transit Gateway는 원활한 VPC 간 통신을 위해 설계되었으며 동적 라우팅을 기본적으로 지원합니다."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "클라우드 아키텍트가 다양한 VPC 간의 사설 IP 주소를 사용한 통신이 필요한 다수의 VPC 아키텍처를 설계하고 있습니다. 아키텍트는 온프레미스 네트워크와의 연결을 위해 AWS Direct Connect를 사용하면서 VPC에 대한 안전하고 효율적인 접근을 보장해야 합니다. 아키텍트는 VPC 간 트래픽을 위해 VPN이나 VPC 피어링에 의존하지 않는 설계를 보장하고자 합니다.",
        "Question": "사설 IP를 사용하여 VPC 간 최적의 통신을 가능하게 하고 AWS Direct Connect를 통합하는 옵션 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "각 VPC에 대해 전용 VPN 터널을 가진 전이 VPC 아키텍처를 사용하여 VPC를 연결합니다.",
            "2": "AWS Transit Gateway를 활용하여 AWS Direct Connect를 통해 VPC 간의 통신을 촉진합니다.",
            "3": "VPC 내에서 AWS 서비스에 사적으로 연결하기 위해 VPC 엔드포인트를 구성합니다.",
            "4": "사설 IP를 통해 VPC를 서비스에 연결하기 위해 AWS PrivateLink 엔드포인트를 설정합니다.",
            "5": "모든 VPC 간의 사설 IP 통신을 가능하게 하기 위해 VPC 피어링 연결을 구현합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Transit Gateway를 활용하여 AWS Direct Connect를 통해 VPC 간의 통신을 촉진합니다.",
            "AWS PrivateLink 엔드포인트를 설정하여 VPC를 서비스에 사적으로 연결합니다."
        ],
        "Explanation": "AWS Transit Gateway를 활용하면 여러 VPC 간의 원활한 연결이 가능하고 네트워크 트래픽 관리가 간소화되어 VPC 간 통신을 위한 최적의 선택이 됩니다. 또한 AWS PrivateLink는 VPC가 사설 IP 주소를 사용하여 서비스를 사적으로 연결할 수 있도록 하여 공용 IP에 의존하지 않고 안전한 연결 요구 사항을 충족합니다.",
        "Other Options": [
            "VPC 엔드포인트를 구성하는 것은 여러 VPC 간의 통신을 직접 촉진하지 않으며, VPC 내에서 AWS 서비스에 대한 사적 접근만 허용합니다.",
            "VPC 피어링 연결은 이 시나리오에 적합하지 않으며, 요구 사항에서 VPC 간 통신을 위해 VPC 피어링을 사용하지 않도록 지정하고 있습니다.",
            "전이 VPC 아키텍처를 사용하여 전용 VPN 터널로 VPC를 연결하는 것은 비효율적이며, 저지연 및 고대역폭 연결을 선호하는 Direct Connect의 사용과 일치하지 않습니다."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "한 회사는 온프레미스 데이터 센터와 AWS 리소스 간에 교환되는 모든 데이터가 산업 규정을 준수하기 위해 암호화되어야 합니다. 이 회사는 AWS에서 사용할 수 있는 다양한 네트워크 암호화 옵션을 고려하고 있습니다.",
        "Question": "온프레미스 데이터 센터와 AWS 리소스 간에 안전한 암호화된 연결을 제공하기 위해 네트워크 엔지니어가 구현해야 할 AWS 기능은 무엇입니까?",
        "Options": {
            "1": "MACsec 암호화가 적용된 AWS Direct Connect를 구현합니다.",
            "2": "IPsec 암호화가 적용된 AWS Site-to-Site VPN을 사용합니다.",
            "3": "TLS 암호화가 적용된 Transit Gateway를 설정합니다.",
            "4": "SSL 암호화가 적용된 AWS Client VPN을 배포합니다."
        },
        "Correct Answer": "IPsec 암호화가 적용된 AWS Site-to-Site VPN을 사용합니다.",
        "Explanation": "AWS Site-to-Site VPN은 IPsec을 사용하여 온프레미스 네트워크와 AWS를 연결하는 안전한 암호화 터널을 제공하여 전송 중인 데이터가 보호되고 규정을 준수하도록 합니다.",
        "Other Options": [
            "MACsec 암호화가 적용된 AWS Direct Connect를 구현하는 것은 잘못된 선택입니다. MACsec은 온프레미스 데이터 센터와 AWS 리소스 간의 트래픽을 암호화하기 위해 AWS Direct Connect에서 직접 지원되지 않기 때문입니다. Direct Connect는 일반적으로 개인 연결을 사용합니다.",
            "TLS 암호화가 적용된 Transit Gateway를 설정하는 것은 잘못된 선택입니다. Transit Gateway는 TLS 암호화를 제공하지 않으며, 주로 VPC와 온프레미스 네트워크 간의 상호 연결을 암호화 없이 가능하게 합니다.",
            "SSL 암호화가 적용된 AWS Client VPN을 배포하는 것은 잘못된 선택입니다. 이는 주로 개별 클라이언트 장치에 대한 클라이언트-사이트 VPN 연결을 위해 설계되었으며, 온프레미스 데이터 센터와 AWS 리소스 간의 안전한 연결을 위한 것이 아닙니다."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "조직은 서로 다른 AWS 계정에 여러 VPC를 보유하고 있으며, 애플리케이션이 제대로 작동할 수 있도록 이러한 VPC 간의 통신을 활성화해야 합니다. VPC는 직접적인 인터넷 접근이 필요하지 않으며, 조직은 비용을 최소화하면서 안전한 연결을 유지하고자 합니다. 조직이 성장함에 따라 이 연결을 쉽게 관리하고 확장할 수 있는 솔루션을 설계하는 임무를 맡았습니다.",
        "Question": "비용을 최소화하고 최대한의 보안을 유지하면서 서로 다른 AWS 계정 간에 여러 VPC를 연결하기 위한 조직의 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "각 VPC에 대해 AWS PrivateLink 엔드포인트를 생성하여 서비스를 안전하게 연결하고 공개 인터넷에 노출되지 않도록 합니다.",
            "2": "서로 다른 계정의 각 VPC 간에 VPC 피어링 연결을 설정하여 직접 통신을 허용합니다.",
            "3": "각 VPC에서 중앙 온프레미스 네트워크로 VPN 연결을 설정하고 거기서 라우팅을 관리합니다.",
            "4": "모든 VPC를 연결하기 위해 AWS Transit Gateway를 구현하여 VPC 간 트래픽 라우팅을 위한 중앙 허브를 제공합니다."
        },
        "Correct Answer": "모든 VPC를 연결하기 위해 AWS Transit Gateway를 구현하여 VPC 간 트래픽 라우팅을 위한 중앙 허브를 제공합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 서로 다른 AWS 계정 간에 여러 VPC를 연결하기 위한 확장 가능하고 비용 효율적인 솔루션을 제공합니다. 이는 라우팅을 위한 단일 지점을 제공하여 관리가 간소화되며, 여러 VPC 피어링 연결을 관리하는 복잡성 없이 많은 수의 VPC를 처리할 수 있습니다.",
        "Other Options": [
            "VPC 피어링 연결을 설정하려면 각 VPC에 대해 별도의 피어링 연결이 필요하며, VPC 수가 증가함에 따라 복잡해지고 관리하기 어려워질 수 있습니다.",
            "중앙 온프레미스 네트워크로 VPN 연결을 설정하면 불필요한 지연과 복잡성이 발생하며, Transit Gateway를 사용하는 것에 비해 데이터 전송 비용이 더 높아질 수 있습니다.",
            "PrivateLink 엔드포인트를 생성하는 것은 특정 서비스에 연결하는 데 유용하지만, 여러 계정 간의 VPC 간 통신을 위한 포괄적인 솔루션을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "조직은 Amazon EKS를 사용하여 컨테이너화된 애플리케이션을 위한 마이크로서비스 아키텍처를 배포하고 있습니다. 그들은 애플리케이션이 여러 서비스에 대한 트래픽을 관리하면서 효율적으로 확장될 수 있도록 하기를 원합니다. 팀은 로드 밸런서를 관리하기 위해 AWS Load Balancer Controller를 사용하기로 결정했습니다. 이 환경에서 Load Balancer Controller를 구성하기 위한 모범 사례를 이해해야 합니다.",
        "Question": "EKS 클러스터에서 트래픽 수요에 따라 AWS Load Balancer Controller가 자동으로 확장되도록 보장하는 가장 효과적인 방법은 무엇입니까?",
        "Options": {
            "1": "Kubernetes Cluster Autoscaler를 구현하여 실행 중인 파드의 리소스 요구 사항에 따라 EKS 클러스터의 크기를 동적으로 조정합니다.",
            "2": "Kubernetes Horizontal Pod Autoscaler를 구성하여 CPU 사용률 메트릭에 따라 자동으로 파드 수를 조정합니다.",
            "3": "트래픽이 증가할 때 Auto Scaling Groups를 사용하여 클러스터의 EC2 인스턴스 수를 수동으로 증가시킵니다.",
            "4": "CloudWatch 알람에 따라 트리거되는 AWS Lambda 함수를 설정하여 EKS 클러스터의 서비스 복제본 수를 수정합니다."
        },
        "Correct Answer": "Kubernetes Cluster Autoscaler를 구현하여 실행 중인 파드의 리소스 요구 사항에 따라 EKS 클러스터의 크기를 동적으로 조정합니다.",
        "Explanation": "Kubernetes Cluster Autoscaler는 파드의 리소스 요청에 따라 EC2 인스턴스를 추가하거나 제거하여 EKS 클러스터의 크기를 자동으로 조정할 수 있습니다. 이는 애플리케이션이 수동 개입 없이 다양한 트래픽 부하를 처리할 수 있도록 보장하여 수요에 따라 확장하는 가장 효과적인 방법입니다.",
        "Other Options": [
            "Kubernetes Horizontal Pod Autoscaler를 구성하는 것은 CPU 사용률에 따라 애플리케이션 파드 수를 확장하는 좋은 방법이지만, 증가된 트래픽을 처리하기 위해 필요한 기본 EC2 인프라의 확장을 다루지 않습니다.",
            "Auto Scaling Groups를 통해 EC2 인스턴스 수를 수동으로 증가시키는 것은 비효율적이고 반응적입니다. 이는 수동 개입이 필요하며, 동적 트래픽 패턴에 필요한 자동 확장 이점을 제공하지 않습니다.",
            "AWS Lambda 함수를 설정하여 서비스 복제본을 수정하는 것은 확장 프로세스에 복잡성과 지연을 초래할 수 있으며, 파드 확장을 직접 처리하기 위해 내장된 Kubernetes 기능을 사용하는 것보다 덜 효율적입니다."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "회사가 온프레미스 데이터 센터와 AWS 간의 데이터 트래픽을 위해 정적 및 동적 라우팅 프로토콜을 모두 사용하는 하이브리드 네트워크 환경을 관리하고 있습니다. 네트워크 아키텍트는 불필요한 오버헤드나 라우팅 문제를 일으키지 않으면서 효율적인 데이터 전송을 보장하기 위해 라우팅을 최적화해야 합니다.",
        "Question": "이 하이브리드 환경에서 라우팅을 최적화하기 위해 네트워크 아키텍트가 취해야 할 조치는 무엇입니까?",
        "Options": {
            "1": "BGP를 구성하여 특정 프리픽스만 AWS에 광고하여 불필요한 경로 전파를 피합니다.",
            "2": "모든 내부 트래픽에 대해 RIP v2를 기본 라우팅 프로토콜로 사용합니다.",
            "3": "모든 라우팅 결정을 동적으로 내리기 위해 기본 경로와 함께 OSPF를 활성화합니다.",
            "4": "정적 경로에 대한 경로 요약을 구현하여 광고되는 경로 수를 줄입니다."
        },
        "Correct Answer": "정적 경로에 대한 경로 요약을 구현하여 광고되는 경로 수를 줄입니다.",
        "Explanation": "경로 요약은 여러 경로를 단일 경로로 결합하여 라우팅 테이블을 단순화하며, 이는 라우팅 테이블의 크기를 줄이고 라우팅 효율성을 개선하여 하이브리드 환경에서 정적 경로를 최적화하는 데 이상적입니다.",
        "Other Options": [
            "기본 경로와 함께 OSPF를 활성화하면 라우팅 결정에 대한 제어가 줄어들 수 있으며, 최적의 경로 선택을 보장하지 못할 수 있습니다. 이는 동적 업데이트에 의존하여 최상의 라우팅 경로를 반영하지 않을 수 있습니다.",
            "BGP를 구성하여 특정 프리픽스만 광고하면 연결성이 제한될 수 있으며, 하이브리드 환경에서 최적의 경로 선택에 필요한 동적 라우팅의 잠재력을 충분히 활용하지 못할 수 있습니다.",
            "RIP v2를 기본 라우팅 프로토콜로 사용하는 것은 확장성과 수렴 시간의 한계로 인해 더 크거나 하이브리드 환경에 적합하지 않으며, OSPF나 BGP와 같은 다른 프로토콜에 비해 효과적이지 않습니다."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "회사가 여러 AWS 리전에서 고가용성 웹 애플리케이션을 배포하고 있습니다. 그들은 Amazon Elastic Load Balancer (ELB)를 사용할 계획이며, 애플리케이션이 전 세계에서 접근 가능하고 DDoS 공격으로부터 보호되기를 원합니다.",
        "Question": "글로벌 접근성과 보안을 향상시키기 위해 ELB와 통합해야 할 서비스는 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "Amazon RDS",
            "2": "AWS Global Accelerator",
            "3": "Amazon CloudFront",
            "4": "AWS WAF",
            "5": "Amazon S3"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Global Accelerator",
            "AWS WAF"
        ],
        "Explanation": "AWS Global Accelerator를 ELB와 통합하면 사용자 트래픽을 건강 상태, 지리 및 라우팅 정책에 따라 최적의 엔드포인트로 유도하여 애플리케이션의 가용성과 성능을 향상시킵니다. AWS WAF는 ELB와 통합하여 일반적인 웹 공격 및 DDoS 공격으로부터 보호를 제공하여 애플리케이션의 보안을 강화할 수 있습니다.",
        "Other Options": [
            "Amazon S3는 주로 저장 서비스이며, 접근성이나 보안 향상을 위해 ELB와 직접 통합되지 않습니다.",
            "Amazon RDS는 관리형 데이터베이스 서비스이며, 백엔드 작업에 필수적이지만, 글로벌 접근성이나 보안을 향상시키는 방식으로 ELB와 상호작용하지 않습니다.",
            "Amazon CloudFront는 웹 콘텐츠를 캐시하고 제공할 수 있는 콘텐츠 전송 네트워크(CDN) 서비스이지만, AWS WAF와 같은 보안 기능이나 AWS Global Accelerator와 같은 글로벌 라우팅 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "금융 기관이 온프레미스 데이터 센터와 AWS VPC 간의 안전한 데이터 전송을 요구하는 하이브리드 클라우드 아키텍처를 구현하고 있습니다. 그들은 전용 네트워크 연결을 위해 AWS Direct Connect를 사용하는 것을 고려하고 있으며, 모든 트래픽이 전송 중에 암호화되도록 하기를 원합니다. 또한, 중복성을 위해 VPN 연결을 백업으로 활용하고자 합니다.",
        "Question": "네트워크 관리자가 중복성 요구 사항을 충족하면서 안전하고 규정 준수하는 연결을 보장하기 위해 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "프라이빗 VIF와 공용 인터넷을 통한 VPN 연결로 Direct Connect 연결을 설정합니다.",
            "2": "Direct Connect를 사용하지 않고 온프레미스 데이터 센터에 직접 VPN 연결을 구성합니다.",
            "3": "공용 VIF와 중복성을 위한 별도의 VPN 연결을 사용하는 Direct Connect 연결을 사용합니다.",
            "4": "같은 Direct Connect 링크를 통해 VPN 백업과 함께 Direct Connect 연결을 설정합니다."
        },
        "Correct Answer": "프라이빗 VIF와 공용 인터넷을 통한 VPN 연결로 Direct Connect 연결을 설정합니다.",
        "Explanation": "이 구성은 기본 연결이 안전하고 지연 시간이 짧은 연결을 위해 프라이빗 VIF를 사용하는 Direct Connect를 사용하도록 보장하며, VPN 연결은 공용 인터넷을 통한 백업 역할을 하여 중복성과 암호화를 통한 추가 보안을 제공합니다.",
        "Other Options": [
            "이 옵션은 Direct Connect가 같은 링크를 통한 VPN 백업을 지원하지 않기 때문에 잘못된 것입니다. 중복성을 보장하기 위해서는 별도의 연결이 필요합니다.",
            "이 옵션은 Direct Connect와 함께 공용 VIF를 사용하는 것이 민감한 데이터 전송에 필요한 보안을 제공하지 않기 때문에 비준수입니다.",
            "이 옵션은 Direct Connect 없이 VPN 연결에만 의존하는 것이 전용 연결의 이점(예: 낮은 지연 시간 및 높은 처리량)을 활용하지 않기 때문에 잘못된 것입니다."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "한 금융 서비스 회사가 웹 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션은 산업 규정을 준수하기 위해 인터넷을 통해 전송되는 모든 데이터가 암호화되도록 해야 합니다. 이 회사는 콘텐츠 전송 네트워크로 Amazon CloudFront를 사용하고 있으며, 웹 서버 앞에 Application Load Balancer (ALB)를 두고 있습니다. 회사가 전송 중인 데이터를 효과적으로 보호하기 위해 어떤 구성을 구현해야 할까요?",
        "Question": "Amazon CloudFront와 Application Load Balancer를 사용할 때 전송 중인 모든 데이터가 암호화되도록 보장하는 최선의 접근 방식은 무엇인가요?",
        "Options": {
            "1": "CloudFront를 HTTPS를 사용하도록 구성하고 Application Load Balancer에서 SSL 종료를 활성화합니다.",
            "2": "HTTP 트래픽만 허용하도록 구성된 사용자 지정 오리진 서버와 함께 CloudFront를 배포합니다.",
            "3": "HTTP 오리진과 함께 CloudFront를 활용하고 DDoS 공격으로부터 보호하기 위해 AWS Shield를 구현합니다.",
            "4": "CloudFront를 설정하여 모든 요청을 HTTP를 사용하여 오리진으로 전달하고 Application Load Balancer에서만 암호화를 활성화합니다."
        },
        "Correct Answer": "CloudFront를 HTTPS를 사용하도록 구성하고 Application Load Balancer에서 SSL 종료를 활성화합니다.",
        "Explanation": "CloudFront를 HTTPS를 사용하도록 구성하면 최종 사용자와 CloudFront 간에 전송되는 모든 데이터가 암호화됩니다. 또한 Application Load Balancer에서 SSL 종료를 활성화하면 CloudFront와 ALB 간의 트래픽도 암호화되어 보안 규정을 준수하게 됩니다.",
        "Other Options": [
            "CloudFront를 설정하여 모든 요청을 HTTP를 사용하여 오리진으로 전달하면 CloudFront와 클라이언트 간의 통신에 대한 암호화를 제공하지 않으므로 전송 중인 데이터의 보안이 저하됩니다.",
            "HTTP 오리진과 함께 CloudFront를 활용하고 AWS Shield를 구현하는 것은 전송 중인 데이터 암호화 요구 사항을 해결하지 않으며, HTTP는 암호화를 제공하지 않습니다.",
            "HTTP 트래픽만 허용하도록 구성된 사용자 지정 오리진 서버와 함께 CloudFront를 배포하는 것은 전송 중인 데이터 암호화의 목적을 완전히 무효화합니다. HTTP는 클라이언트와 서버 간의 데이터를 보호하지 않습니다."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "한 회사가 Amazon VPC 아키텍처를 최적화하여 더 나은 리소스 할당 및 서브넷 활용을 도모하고 있습니다. 네트워크 팀은 서브넷이 효율적으로 크기가 조정되고 구성되어 향후 확장 요구 사항을 수용할 수 있도록 하여 IP 주소 공간을 낭비하지 않도록 하기를 원합니다.",
        "Question": "팀이 VPC 서브넷 구성을 최적화하기 위해 어떤 조치를 취해야 할까요? (두 가지 선택)",
        "Options": {
            "1": "공통 작업을 공유하는 여러 VPC를 연결하기 위해 VPC 피어링을 구현합니다.",
            "2": "기능별로 논리적으로 그룹화할 수 있도록 계층적 서브넷 설계를 채택합니다.",
            "3": "애플리케이션 유형에 따라 리소스를 분리하기 위해 더 작은 서브넷을 생성합니다.",
            "4": "모든 리소스에 대해 단일 대형 서브넷을 할당하여 관리를 단순화합니다.",
            "5": "중요한 애플리케이션을 호스팅하는 서브넷에 대해 /28의 CIDR 블록을 사용합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "애플리케이션 유형에 따라 리소스를 분리하기 위해 더 작은 서브넷을 생성합니다.",
            "기능별로 논리적으로 그룹화할 수 있도록 계층적 서브넷 설계를 채택합니다."
        ],
        "Explanation": "더 작은 서브넷을 생성하면 리소스를 더 잘 분리할 수 있어 보안과 성능이 향상될 수 있습니다. 또한 계층적 서브넷 설계를 채택하면 리소스의 논리적 조직과 관리를 용이하게 하여 VPC를 장기적으로 확장하고 유지 관리하는 데 도움이 됩니다.",
        "Other Options": [
            "중요한 애플리케이션을 호스팅하는 서브넷에 대해 /28의 CIDR 블록을 사용하는 것은 바람직하지 않습니다. 이는 16개의 IP 주소만 제공하며, 그 중 14개만 사용 가능합니다. 애플리케이션이 성장하면 IP 고갈이 빠르게 발생할 수 있습니다.",
            "VPC 피어링을 구현하면 연결성을 향상시킬 수 있지만 서브넷 구성을 직접 최적화하지는 않습니다. 이는 서브넷 최적화 전략이라기보다는 연결성 솔루션입니다.",
            "모든 리소스에 대해 단일 대형 서브넷을 할당하는 것은 비효율적입니다. 이는 IP 주소 낭비를 초래하고 관리가 복잡해져 보안 및 라우팅 정책을 효과적으로 적용하기 어렵게 만듭니다."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "한 회사가 AWS로 인프라를 마이그레이션하고 있으며 개발, 테스트 및 프로덕션 환경을 위한 다중 계정 전략을 구현하고 있습니다. 네트워크 아키텍트는 이러한 계정이 VPC 리소스를 공유할 수 있도록 하면서 보안과 격리를 보장하는 네트워크 아키텍처를 설계하는 임무를 맡고 있습니다. 아키텍트는 계정 간 여러 VPC를 관리하는 복잡성을 최소화해야 합니다.",
        "Question": "이 다중 계정 설정에서 환경 간의 안전한 격리를 유지하면서 VPC 공유를 가장 잘 촉진할 수 있는 설계 접근 방식은 무엇인가요?",
        "Options": {
            "1": "모든 계정에 대해 각 환경에 대해 별도의 VPC를 배포하고 상호 통신을 위해 VPC 피어링을 사용합니다.",
            "2": "한 계정에 공유 VPC를 생성하고 AWS Resource Access Manager (RAM)를 통해 리소스 공유를 활성화하여 다른 계정이 공유 VPC에 연결할 수 있도록 합니다.",
            "3": "AWS Transit Gateway를 활용하여 계정 간 여러 VPC를 상호 연결하면서 각 환경에 대해 별도의 VPC를 유지합니다.",
            "4": "한 계정에 단일 VPC를 사용하고 개발, 테스트 및 프로덕션을 위한 여러 서브넷을 설정하여 접근을 격리하기 위해 엄격한 IAM 정책을 보장합니다."
        },
        "Correct Answer": "한 계정에 공유 VPC를 생성하고 AWS Resource Access Manager (RAM)를 통해 리소스 공유를 활성화하여 다른 계정이 공유 VPC에 연결할 수 있도록 합니다.",
        "Explanation": "한 계정에 공유 VPC를 생성하고 AWS RAM을 통해 리소스 공유를 활성화하면 VPC 리소스를 중앙 집중식으로 관리하면서 다양한 환경에 필요한 보안과 격리를 제공할 수 있습니다. 이 설계는 여러 계정이 광범위한 VPC 간 통신 설정 없이 공유 리소스에 접근할 수 있도록 하여 복잡성을 최소화합니다.",
        "Other Options": [
            "각 환경에 대해 별도의 VPC를 배포하고 VPC 피어링을 사용하는 것은 복잡성과 관리 오버헤드를 증가시킵니다. 이는 여러 연결과 라우팅 정책을 관리해야 하므로 복잡해집니다.",
            "여러 서브넷이 있는 단일 VPC를 사용하는 것은 관리 및 보안 문제를 초래할 수 있습니다. 공유 라우팅 및 접근 정책으로 인해 환경 간의 엄격한 격리를 시행하기 어려워집니다.",
            "여러 VPC를 상호 연결하기 위해 AWS Transit Gateway를 사용하는 것은 이 시나리오에서 불필요한 복잡성을 추가합니다. 목표는 VPC 공유를 활용하고 다중 계정 아키텍처에서 VPC 수를 최소화하는 것이기 때문입니다."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "네트워크 아키텍트가 여러 EC2 인스턴스에서 실행되는 애플리케이션을 위해 고가용성과 확장성이 필요한 가상 사설 클라우드(VPC)를 설계하고 있습니다. 아키텍트는 애플리케이션이 트래픽을 효율적으로 처리하면서 결함 허용성을 유지할 수 있도록 올바른 유형의 네트워크 인터페이스를 선택해야 합니다. 아키텍트는 어떤 유형의 네트워크 인터페이스를 사용해야 합니까?",
        "Question": "아키텍트가 애플리케이션의 고가용성과 확장성을 보장하기 위해 어떤 유형의 네트워크 인터페이스를 사용해야 합니까?",
        "Options": {
            "1": "VPC의 각 EC2 인스턴스에 대해 여러 개의 Elastic Network Interface(ENI)를 배포합니다.",
            "2": "향상된 네트워크 인터페이스 기능을 위해 Virtual Private Gateway(VGW)를 활용합니다.",
            "3": "애플리케이션의 네트워크 경로를 최적화하기 위해 AWS Global Accelerator를 구현합니다.",
            "4": "모든 EC2 인스턴스에 대해 단일 Elastic Network Interface(ENI)를 사용합니다."
        },
        "Correct Answer": "VPC의 각 EC2 인스턴스에 대해 여러 개의 Elastic Network Interface(ENI)를 배포합니다.",
        "Explanation": "여러 개의 Elastic Network Interface(ENI)를 사용하면 각 EC2 인스턴스가 서로 다른 IP 주소와 보안 그룹을 유지할 수 있어 결함 허용성이 향상되고 고트래픽 애플리케이션에 대한 더 나은 부하 분산이 가능합니다. 이 설정은 확장성을 지원하며, 실패 시 트래픽을 원활하게 재배치할 수 있도록 보장합니다.",
        "Other Options": [
            "모든 EC2 인스턴스에 대해 단일 Elastic Network Interface(ENI)를 사용하는 것은 유연성과 중복성을 제한하여 고가용성과 확장성 요구 사항에 덜 적합합니다.",
            "Virtual Private Gateway(VGW)는 주로 VPC를 온프레미스 네트워크에 VPN을 통해 연결하는 데 사용되며, 네트워크 인터페이스의 기능을 직접 향상시키기 위한 것이 아닙니다.",
            "AWS Global Accelerator는 애플리케이션의 가용성과 성능을 향상시키기 위해 트래픽을 최적의 엔드포인트로 라우팅하지만, 개별 EC2 인스턴스의 네트워크 인터페이스를 직접 관리하지는 않습니다."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "한 금융 서비스 회사는 데이터 유출 및 민감한 정보에 대한 무단 접근에 대해 점점 더 우려하고 있습니다. 그들은 일반적인 보안 위협을 식별하고 대응하기 위해 강력한 보안 조치를 구현하고자 합니다. 보안 팀은 네트워크의 잠재적 취약성을 평가하고 산업 규정을 준수하도록 하는 임무를 맡고 있습니다.",
        "Question": "다음 보안 위협 중 회사의 민감한 데이터에 가장 큰 위험을 초래하는 것은 무엇입니까?",
        "Options": {
            "1": "네트워크를 압도하고 서비스 가용성을 방해하는 DDoS 공격.",
            "2": "직원들을 대상으로 자격 증명과 민감한 정보를 훔치는 피싱 공격.",
            "3": "네트워크 취약점을 악용하여 무단 접근을 얻는 악성 소프트웨어 공격.",
            "4": "직원들이 자신의 접근 권한을 남용하여 민감한 데이터를 손상시키는 내부 위협."
        },
        "Correct Answer": "직원들이 자신의 접근 권한을 남용하여 민감한 데이터를 손상시키는 내부 위협.",
        "Explanation": "내부 위협은 이미 네트워크와 민감한 정보에 합법적인 접근 권한을 가진 개인이 관련되어 있기 때문에 가장 큰 위험을 초래합니다. 이는 그들이 즉각적인 의심을 일으키지 않고 악의적인 목적으로 접근 권한을 악용하기 쉽게 만들어, 상당한 데이터 유출 및 규정 준수 문제로 이어질 수 있습니다.",
        "Other Options": [
            "악성 소프트웨어 공격은 위험하지만 일반적으로 시스템 취약점을 외부에서 악용해야 하며, 이는 종종 안티바이러스 소프트웨어 및 방화벽과 같은 적절한 보안 조치로 완화될 수 있습니다.",
            "피싱 공격은 실제로 자격 증명 도용으로 이어질 수 있지만, 이는 직원의 취약성에 의존하며 교육 및 인식 프로그램으로 대응할 수 있습니다.",
            "DDoS 공격은 주로 가용성을 방해하지만 민감한 데이터를 직접 손상시키지 않으므로 내부 위협에 비해 데이터 무결성과 기밀성에 대한 위험이 적습니다."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "한 금융 서비스 회사는 AWS Direct Connect를 사용하여 온프레미스 데이터 센터와 AWS VPC를 연결하는 하이브리드 클라우드 아키텍처를 사용하고 있습니다. 그들은 AWS 환경에서 실행되는 애플리케이션이 성능과 보안을 최적화하도록 보장하고자 합니다. 이를 달성하기 위해 네트워크 운영 팀은 네트워크 트래픽을 효과적으로 모니터링하고 분석하여 불규칙성이나 잠재적인 문제를 식별해야 합니다. VPC에 대한 흐름 로그는 이미 활성화되어 있습니다.",
        "Question": "연결 패턴을 문제 해결하기 위해 네트워크 트래픽을 모니터링하고 분석하는 가장 효과적인 방법을 제공할 수 있는 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "EC2 인스턴스에 Amazon CloudWatch Agent를 배포하여 메트릭 및 로그를 수집하고 하이브리드 아키텍처 전반에 걸쳐 네트워크 성능 및 애플리케이션 동작을 상세히 모니터링합니다.",
            "2": "Amazon Inspector를 통합하여 네트워크 구성을 평가하고 EC2 인스턴스 및 그 네트워크 인터페이스의 잠재적 취약성을 식별하여 보안 태세를 강화합니다.",
            "3": "AWS Config를 활용하여 네트워크 리소스의 구성을 실시간으로 모니터링하고 정의된 정책에 대한 준수를 평가하여 최적의 네트워크 관리를 보장합니다.",
            "4": "전용 Amazon Kinesis Data Firehose를 설정하여 VPC 흐름 로그를 Amazon S3 버킷으로 직접 스트리밍합니다. Amazon QuickSight를 사용하여 대시보드를 생성하고 분석 목적으로 흐름 로그 데이터를 시각화합니다.",
            "5": "AWS Network Manager를 구현하여 온프레미스 및 AWS 리소스를 포함한 전체 네트워크 토폴로지를 시각화하고 모니터링하여 연결 및 성능 문제에 대한 더 나은 통찰력을 제공합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "EC2 인스턴스에 Amazon CloudWatch Agent를 배포하여 메트릭 및 로그를 수집하고 하이브리드 아키텍처 전반에 걸쳐 네트워크 성능 및 애플리케이션 동작을 상세히 모니터링합니다.",
            "AWS Network Manager를 구현하여 온프레미스 및 AWS 리소스를 포함한 전체 네트워크 토폴로지를 시각화하고 모니터링하여 연결 및 성능 문제에 대한 더 나은 통찰력을 제공합니다."
        ],
        "Explanation": "Amazon CloudWatch Agent를 배포하면 EC2 인스턴스에서 메트릭과 로그를 포괄적으로 모니터링할 수 있어 애플리케이션 성능을 이해하고 네트워크 문제를 식별하는 데 중요합니다. AWS Network Manager는 네트워크 토폴지의 중앙 집중식 뷰를 제공하여 연결을 시각화하고 하이브리드 환경 전반에 걸쳐 연결 문제를 해결하는 데 용이합니다.",
        "Other Options": [
            "전용 Amazon Kinesis Data Firehose를 설정하여 VPC 흐름 로그를 S3로 스트리밍하는 것은 저장에 유용하지만 성능 문제에 대한 즉각적인 실시간 분석이나 가시성을 제공하지 않습니다. 추가 분석을 지원할 수 있지만, 올바른 옵션이 제공하는 즉각적인 모니터링 기능이 부족합니다.",
            "Amazon Inspector를 통합하는 것은 주로 보안 취약성을 평가하는 데 초점을 맞추며, 트래픽 패턴 모니터링에는 적합하지 않습니다. 보안을 강화하는 것이 중요하지만, 이 옵션은 트래픽 모니터링 및 성능 최적화의 즉각적인 필요를 해결하지 않습니다.",
            "AWS Config를 활용하면 준수 모니터링 및 리소스 구성을 도와주지만, 네트워크 트래픽이나 성능을 직접 분석하지는 않습니다. 이 옵션은 적극적인 성능 문제 해결보다는 거버넌스 및 준수에 더 적합합니다."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "한 금융 서비스 회사가 온프레미스 애플리케이션을 AWS로 마이그레이션하고 있으며 데이터 보안 및 개인 정보 보호와 관련된 산업 규정을 준수해야 합니다. 이 회사는 모든 전송 중 및 저장된 데이터에 대한 암호화, 모니터링 및 접근 제어를 지원하는 안전한 네트워크 아키텍처를 구축해야 하며, 높은 가용성과 성능을 유지해야 합니다.",
        "Question": "다음 중 이러한 요구 사항을 충족하기 위해 구현해야 할 구성은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Shield Advanced를 구성하여 DDoS 공격으로부터 보호하고 트래픽 급증 동안 애플리케이션 가용성을 보장합니다.",
            "2": "온프레미스 데이터 센터와 AWS 간의 모든 트래픽을 암호화하기 위해 가상 사설망(VPN) 연결을 설정합니다.",
            "3": "VPC에 AWS Network Firewall을 배포하여 미리 정의된 규칙 및 정책에 따라 트래픽을 검사하고 필터링합니다.",
            "4": "AWS PrivateLink를 구현하여 공용 인터넷에 리소스를 노출하지 않고 AWS 서비스에 비공식적으로 접근합니다.",
            "5": "Amazon CloudWatch를 사용하여 네트워크 트래픽을 모니터링하고 무단 접근 시도에 대한 경고를 설정합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "VPC에 AWS Network Firewall을 배포하여 미리 정의된 규칙 및 정책에 따라 트래픽을 검사하고 필터링합니다.",
            "온프레미스 데이터 센터와 AWS 간의 모든 트래픽을 암호화하기 위해 가상 사설망(VPN) 연결을 설정합니다."
        ],
        "Explanation": "AWS Network Firewall을 배포하면 네트워크 트래픽에 대한 세밀한 제어가 가능하며 모든 수신 및 발신 통신이 보안 정책을 준수하도록 보장합니다. VPN 연결을 설정하면 전송 중인 데이터가 암호화되어 온프레미스 데이터 센터와 AWS 간의 민감한 정보가 보호되며, 이는 규정 준수에 매우 중요합니다.",
        "Other Options": [
            "AWS PrivateLink를 구현하면 AWS 서비스에 대한 안전한 접근을 제공하지만, VPC 내의 모든 네트워크 트래픽을 모니터링하고 필터링하는 데 필요한 포괄적인 보안 아키텍처를 해결하지는 않습니다.",
            "Amazon CloudWatch를 사용하여 모니터링하는 것은 유용하지만, 데이터 개인 정보 보호 규정을 준수하는 데 필수적인 능동적인 트래픽 필터링이나 암호화를 제공하지 않습니다.",
            "AWS Shield Advanced를 구성하는 것은 DDoS 보호에 중점을 두고 있으며, 이는 가용성에 중요하지만 전체 네트워크 보안 및 규정 준수 아키텍처에 직접적으로 기여하지 않습니다."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "한 금융 서비스 회사가 애플리케이션을 AWS로 마이그레이션하고 있으며 모든 통신 및 저장된 데이터가 암호화되어 산업 규정을 준수해야 합니다. 보안 팀은 민감한 데이터를 전송 중 및 저장 중에 암호화하면서 승인된 사용자가 쉽게 접근할 수 있는 솔루션을 구현하는 임무를 맡고 있습니다. 그들은 암호화 키를 효과적으로 관리하기 위한 옵션을 평가하고 있습니다.",
        "Question": "다음 중 회사의 기밀성과 전송 중 및 저장 중 데이터 암호화에 대한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "온프레미스 보안 금고에 암호화 키를 저장하고 VPN 연결을 사용하여 전송 중 데이터를 암호화하며, 저장된 데이터에 대해서는 데이터베이스 암호화 기능에 의존합니다.",
            "2": "애플리케이션 계층에서 암호화를 구현하기 위해 애플리케이션 코드를 수정하여 민감한 데이터의 암호화 및 복호화를 처리하며, 암호화 키 관리를 위해 타사 라이브러리에 의존합니다.",
            "3": "AWS CloudHSM을 사용하여 암호화 키를 관리하고 모든 암호화 및 복호화 작업을 전용 하드웨어 보안 모듈에서 수행하며, 전송 중 데이터 암호화를 위해 자체 서명된 인증서를 사용합니다.",
            "4": "AWS Key Management Service (KMS)를 사용하여 암호화 키를 생성 및 관리하고, Amazon S3 및 Amazon RDS에 대한 서버 측 암호화를 활성화하여 저장된 데이터를 암호화합니다. AWS Certificate Manager를 사용하여 전송 중 데이터를 암호화하기 위한 SSL/TLS 인증서를 관리합니다."
        },
        "Correct Answer": "AWS Key Management Service (KMS)를 사용하여 암호화 키를 생성 및 관리하고, Amazon S3 및 Amazon RDS에 대한 서버 측 암호화를 활성화하여 저장된 데이터를 암호화합니다. AWS Certificate Manager를 사용하여 전송 중 데이터를 암호화하기 위한 SSL/TLS 인증서를 관리합니다.",
        "Explanation": "AWS Key Management Service (KMS)를 사용하면 AWS 서비스와 원활하게 통합되는 중앙 집중식 키 관리가 가능합니다. Amazon S3 및 Amazon RDS에 대한 서버 측 암호화는 저장된 데이터가 자동으로 암호화되도록 보장하며, AWS Certificate Manager는 전송 중 데이터를 암호화하기 위한 SSL/TLS 인증서 관리를 간소화하여 효과적으로 규정 준수 요구 사항을 충족합니다.",
        "Other Options": [
            "애플리케이션 계층에서 암호화를 구현하는 것은 애플리케이션 코드에 상당한 변경이 필요하며, 키 관리의 복잡성을 초래할 수 있어 산업 규정 준수를 보장하는 데 적합하지 않습니다.",
            "AWS CloudHSM을 사용하는 것은 전용 하드웨어 보안을 제공하지만 많은 사용 사례에 과도할 수 있으며, 자체 서명된 인증서는 AWS Certificate Manager만큼 신뢰성과 관리 수준을 제공하지 않습니다.",
            "온프레미스에 암호화 키를 저장하는 것은 키 노출의 위험을 초래하고 AWS 서비스 전반에 걸친 암호화 관리의 복잡성을 증가시킵니다. 전송 중 데이터 암호화를 위해 VPN 연결에만 의존하는 것은 AWS 관리 서비스를 사용하는 것만큼 강력한 솔루션을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "한 회사가 AWS Lambda 함수를 사용하여 Amazon S3 버킷 및 Amazon DynamoDB 스트림의 이벤트에 응답하는 서버리스 아키텍처를 배포하고 있습니다. 이 아키텍처는 수신 이벤트의 양에 따라 자동으로 확장할 수 있는 기능이 필요하며, 함수가 안전하고 신뢰할 수 있는 방식으로 실행되도록 보장해야 합니다.",
        "Question": "다음 중 설명된 아키텍처에 이벤트 기반 네트워킹 기능을 통합하는 데 가장 적합한 솔루션은 무엇입니까?",
        "Options": {
            "1": "AWS Step Functions를 사용하여 Lambda 함수를 조정하고 S3와 DynamoDB 간의 이벤트 흐름을 관리합니다.",
            "2": "AWS AppSync를 배포하여 S3, DynamoDB 및 Lambda 함수 간의 실시간 데이터 동기화를 촉진합니다.",
            "3": "Amazon EventBridge를 구현하여 S3 및 DynamoDB에서 Lambda 함수로 이벤트를 라우팅하고 적절한 IAM 역할을 사용합니다.",
            "4": "Amazon SNS 주제를 생성하여 S3 및 DynamoDB에서 메시지를 게시한 후 Lambda 함수를 주제에 구독시킵니다."
        },
        "Correct Answer": "Amazon EventBridge를 구현하여 S3 및 DynamoDB에서 Lambda 함수로 이벤트를 라우팅하고 적절한 IAM 역할을 사용합니다.",
        "Explanation": "Amazon EventBridge는 이벤트 기반 아키텍처를 위해 설계되었으며 S3 및 DynamoDB를 포함한 다양한 AWS 서비스와 쉽게 통합될 수 있습니다. 유연한 이벤트 라우팅을 허용하며, 이벤트가 해당 Lambda 함수를 안전하고 효율적으로 트리거하도록 보장합니다.",
        "Other Options": [
            "AWS Step Functions는 주로 워크플로를 조정하고 정의된 순서로 작업을 실행하는 데 사용됩니다. Lambda 함수를 포함한 복잡한 워크플로를 관리하는 데 사용할 수 있지만, S3 및 DynamoDB와 같은 이벤트 소스를 직접 통합하는 데 가장 효율적인 솔루션은 아닙니다.",
            "Amazon SNS는 pub/sub 메시징 패턴에 유용하지만, S3 및 DynamoDB에서 이벤트를 라우팅하는 데 사용하면 추가적인 복잡성과 지연이 발생하며, 이는 EventBridge의 직접 이벤트 라우팅 기능을 고려할 때 불필요합니다.",
            "AWS AppSync는 GraphQL API 및 실시간 데이터 동기화 제공에 중점을 두고 있습니다. S3 및 DynamoDB와 관련된 이벤트 기반 아키텍처의 본질을 직접적으로 다루지 않으며, Lambda 함수로 이벤트를 라우팅하는 데 가장 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "한 회사가 애플리케이션을 위해 AWS 서비스를 활용하고 있으며, AWS CloudTrail 및 VPC Flow Logs를 활성화하여 활동을 모니터링하고 기록하고 있습니다. 보안 팀은 규제 요구 사항 준수를 보장하고 이러한 로그를 상관 분석하여 잠재적인 보안 사고를 식별하는 임무를 맡고 있습니다. 그들은 이러한 로그 소스의 분석을 자동화하기 위해 다양한 도구를 고려하고 있습니다.",
        "Question": "여러 AWS 소스의 로그를 효과적으로 분석하고 상관 분석하기 위해 어떤 솔루션을 구현할 수 있습니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Config 규칙을 구현하여 리소스의 준수를 평가하고 CloudTrail 로그 이벤트를 기반으로 경고를 생성합니다.",
            "2": "Amazon GuardDuty를 통합하여 CloudTrail 및 VPC Flow Logs를 자동으로 분석하고 잠재적인 위협을 식별합니다.",
            "3": "Amazon S3에 저장된 CloudTrail 로그에 대해 SQL 쿼리를 실행하기 위해 Amazon Athena를 사용합니다.",
            "4": "여러 AWS 서비스의 로그에 대한 실시간 쿼리 및 시각화를 위해 Amazon CloudWatch Logs Insights를 배포합니다.",
            "5": "AWS Lambda를 활용하여 VPC Flow Logs를 처리하고 특정 트래픽 패턴에 대한 알림을 트리거합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon S3에 저장된 CloudTrail 로그에 대해 SQL 쿼리를 실행하기 위해 Amazon Athena를 사용합니다.",
            "Amazon GuardDuty를 통합하여 CloudTrail 및 VPC Flow Logs를 자동으로 분석하고 잠재적인 위협을 식별합니다."
        ],
        "Explanation": "Amazon Athena는 사용자가 Amazon S3에 저장된 데이터, 즉 CloudTrail 로그에 대해 직접 SQL 쿼리를 실행할 수 있게 하여 로그 데이터의 상세 분석 및 상관 분석을 가능하게 합니다. Amazon GuardDuty는 CloudTrail 및 VPC Flow Logs를 자동으로 분석하여 보안 위협을 감지하며, 잠재적인 사고를 식별하고 보안 태세를 강화하는 효과적인 솔루션을 제공합니다.",
        "Other Options": [
            "AWS Config 규칙을 구현하는 것은 준수 검사를 위해 유용하지만 로그의 직접 분석을 제공하지 않습니다. 이는 로그 상관 분석보다는 리소스 준수에 중점을 둡니다.",
            "VPC Flow Logs를 처리하기 위해 AWS Lambda를 사용하는 것은 실시간 알림에 유용할 수 있지만, 여러 소스에 걸쳐 포괄적인 로그 분석을 제공하지 않습니다.",
            "Amazon CloudWatch Logs Insights는 로그를 쿼리할 수 있지만, 추가 구성 없이는 CloudTrail 및 VPC Flow Logs와 같은 서로 다른 소스의 데이터를 본질적으로 상관 분석하지 않습니다."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "한 금융 기관이 온프레미스 데이터 센터에 두 개의 AWS Direct Connect (DX) 연결을 가지고 있습니다. 또한 이중화를 위해 두 개의 VPN 연결을 설정했습니다. 회사는 한 DX 연결이 다른 연결보다 우선하도록 보장해야 하며, VPN 연결이 백업 역할을 할 수 있도록 해야 합니다. 네트워크 엔지니어는 서비스 중단 없이 이 요구 사항을 유지하는 솔루션을 구현해야 합니다.",
        "Question": "네트워크 엔지니어가 Direct Connect 연결에 대한 우선 라우팅을 보장하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "우선하는 Direct Connect 연결에 AS_PATH prepending을 설정하여 우선 순위를 높입니다.",
            "2": "수동 Direct Connect 연결의 MED 값을 조정하여 덜 선호하도록 만듭니다.",
            "3": "VPN 연결을 통해 더 구체적인 경로를 광고하여 VPN을 Direct Connect보다 우선하도록 합니다.",
            "4": "수동 Direct Connect 연결에 AS_PATH prepending을 설정하여 덜 선호하도록 만듭니다."
        },
        "Correct Answer": "수동 Direct Connect 연결에 AS_PATH prepending을 설정하여 덜 선호하도록 만듭니다.",
        "Explanation": "수동 Direct Connect 연결에 AS_PATH prepending을 설정하면 활성 연결에 비해 덜 선호하게 됩니다. 이는 효과적으로 트래픽이 활성 경로를 선호하도록 강제하며, 수동 경로는 장애 조치를 위해 사용할 수 있도록 유지하여 중단 없이 이중화를 유지합니다.",
        "Other Options": [
            "우선하는 Direct Connect 연결에 AS_PATH prepending을 설정하면 실제로 우선 순위가 감소하므로, 이를 우선 경로로 설정하려는 경우 원하는 결과가 아닙니다.",
            "VPN 연결을 통해 더 구체적인 경로를 광고하면 VPN이 Direct Connect보다 우선하게 되어, 기본 트래픽에 대해 Direct Connect를 선호해야 하는 요구 사항과 모순됩니다.",
            "수동 Direct Connect 연결의 MED 값을 조정하여 덜 선호하도록 만드는 것은 간접적인 방법이며, 경로 선호를 제어하는 데 더 일반적인 방법인 AS_PATH prepending을 사용하는 것에 비해 덜 효과적입니다."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "한 회사가 DNS 관리를 AWS Route 53으로 전환하고 있으며, 도메인이 DNS 스푸핑 및 캐시 오염 공격으로부터 보호되도록 하고자 합니다. 네트워크 관리자는 Route 53에 호스팅된 도메인에 대해 DNS 보안 확장(DNSSEC)을 구현하는 임무를 맡고 있습니다. 관리자는 필요한 설정을 구성하고 DNSSEC가 올바르게 활성화되었는지 확인해야 합니다.",
        "Question": "Route 53에서 도메인에 대해 DNSSEC를 활성화하기 위해 필요한 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "Route 53에서 새 공용 DNS 영역을 생성하고 기존 도메인에 연결합니다.",
            "2": "KSK를 사용하여 영역에 서명하고 DS 레코드를 상위 영역에 게시합니다.",
            "3": "호스팅된 영역에 대해 DNSSEC를 활성화하고 Route 53에 DNSKEY 레코드를 게시합니다.",
            "4": "도메인에 대한 키 서명 키(KSK)와 영역 서명 키(ZSK)를 생성합니다.",
            "5": "호스팅된 영역에 대한 DNSSEC 검증을 처리하기 위해 제3자 DNS 리졸버를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "호스팅된 영역에 대해 DNSSEC를 활성화하고 Route 53에 DNSKEY 레코드를 게시합니다.",
            "KSK를 사용하여 영역에 서명하고 DS 레코드를 상위 영역에 게시합니다."
        ],
        "Explanation": "Route 53에서 호스팅된 영역에 대해 DNSSEC를 활성화하면 도메인이 DNS 스푸핑과 같은 공격으로부터 보호됩니다. 또한 KSK로 영역에 서명하고 DS 레코드를 상위 영역에 게시하는 것은 DNS 리졸버가 DNS 레코드의 진위를 검증하는 데 필수적입니다.",
        "Other Options": [
            "Route 53에서 DNSSEC를 활성화하기 위해 새 공용 DNS 영역을 생성하는 것은 불필요하며, 기존 호스팅된 영역을 사용해야 합니다.",
            "KSK와 ZSK를 생성하는 것은 DNSSEC 프로세스의 일부이지만, 이러한 키를 생성하는 것만으로는 영역에 서명하고 DS 레코드를 게시하는 요구 사항을 충족하지 않습니다.",
            "Route 53에서 DNSSEC를 활성화하기 위해 제3자 DNS 리졸버를 구성하는 것은 필요하지 않으며, Route 53이 DNSSEC를 직접 처리합니다."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "한 회사가 동일한 Amazon VPC 내의 서로 다른 가용 영역에 있는 EC2 인스턴스 간의 간헐적인 연결 문제를 겪고 있습니다. 조사 후, 네트워크 팀은 패킷 단편화가 최대 전송 단위(MTU)가 일치하지 않아 문제를 일으키고 있다고 의심하고 있습니다. 팀은 인스턴스 간의 적절한 통신을 보장하기 위해 이 문제를 해결해야 합니다.",
        "Question": "네트워크 팀은 VPC에서 패킷 크기 불일치 문제를 해결하기 위해 무엇을 해야 합니까?",
        "Options": {
            "1": "VPC에서 MTU 크기를 9001 바이트로 설정하여 점보 프레임을 활성화합니다.",
            "2": "EC2 인스턴스의 MTU 설정을 기본값보다 높은 값으로 증가시킵니다.",
            "3": "보안 그룹과 네트워크 ACL이 패킷 크기에 따라 필터링하지 않는지 확인합니다.",
            "4": "EC2 인스턴스를 기본 MTU 크기인 1500 바이트로 구성합니다."
        },
        "Correct Answer": "보안 그룹과 네트워크 ACL이 패킷 크기에 따라 필터링하지 않는지 확인합니다.",
        "Explanation": "보안 그룹과 네트워크 ACL을 확인하면 패킷 크기에 따라 규칙이 우연히 차단되거나 필터링되지 않도록 보장할 수 있으며, 이는 EC2 인스턴스 간의 연결 문제를 일으킬 수 있습니다.",
        "Other Options": [
            "EC2 인스턴스의 MTU 설정을 증가시키는 것은 다른 요인이 작용하는 경우 단편화 문제를 해결하지 못할 수 있으며, 네트워크 경로가 증가된 MTU를 지원하지 않으면 새로운 문제를 일으킬 수 있습니다.",
            "EC2 인스턴스를 기본 MTU 크기인 1500 바이트로 구성하는 것은 네트워크 경로의 MTU가 더 낮은 경우 단편화의 근본적인 문제를 해결하지 못할 수 있으며, 연결 문제 해결에도 도움이 되지 않을 수 있습니다.",
            "VPC에서 MTU 크기를 9001 바이트로 설정하여 점보 프레임을 활성화하는 것은 VPC의 모든 구성 요소에서 지원되지 않을 수 있으며, 중간 장치가 점보 프레임을 지원하지 않으면 연결 문제를 일으킬 수 있습니다."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "한 회사가 전 세계적으로 운영되는 애플리케이션을 운영하고 있으며, 특히 애플리케이션의 주요 AWS 리전에서 멀리 떨어진 사용자에게 간헐적인 지연 및 가용성 문제를 겪고 있습니다. 네트워크 운영 팀은 전 세계 사용자에게 네트워크 성능을 개선하고 높은 가용성을 보장하는 임무를 맡고 있습니다.",
        "Question": "네트워크 운영 팀이 AWS Global Accelerator를 사용하여 네트워크 연결을 최적화하기 위해 어떤 단계 조합을 취해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "DNS 관리를 위해 Amazon Route 53을 Global Accelerator와 통합합니다.",
            "2": "Global Accelerator를 사용하여 지연 시간에 따라 가장 가까운 AWS 리전으로 트래픽을 라우팅합니다.",
            "3": "CloudFront를 설정하여 전 세계적으로 정적 콘텐츠를 캐시하여 더 빠르게 접근합니다.",
            "4": "모든 AWS 리전에 추가 EC2 인스턴스를 배포하여 로컬에서 트래픽을 처리합니다.",
            "5": "애플리케이션을 위해 정적 IP 주소로 Global Accelerator를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "애플리케이션을 위해 정적 IP 주소로 Global Accelerator를 구성합니다.",
            "Global Accelerator를 사용하여 지연 시간에 따라 가장 가까운 AWS 리전으로 트래픽을 라우팅합니다."
        ],
        "Explanation": "정적 IP 주소로 Global Accelerator를 구성하면 애플리케이션이 안정적인 진입점을 가지게 되어 신뢰성이 향상됩니다. 지연 시간에 따라 가장 가까운 AWS 리전으로 트래픽을 라우팅하면 사용자가 지리적 위치에 따라 최상의 성능을 경험할 수 있습니다.",
        "Other Options": [
            "모든 AWS 리전에 추가 EC2 인스턴스를 배포하는 것은 비용과 복잡성을 증가시키며, 반드시 지연 문제를 해결하지는 않으므로 Global Accelerator의 기능을 활용하지 않습니다.",
            "Amazon Route 53을 Global Accelerator와 통합하는 것은 중복적입니다. Global Accelerator는 이미 건강 및 지연 시간에 따라 개선된 라우팅을 제공하므로 최적화 요구 사항에 직접 기여하지 않습니다.",
            "CloudFront를 설정하여 정적 콘텐츠를 캐시하는 것은 성능에 도움이 될 수 있지만, Global Accelerator가 관리하는 동적 애플리케이션 트래픽의 지연 및 가용성 문제를 해결하지는 않습니다."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "한 회사가 여러 AWS 리전 간에 여러 VPC를 안전하게 연결하기 위해 오버레이 네트워크를 요구하는 클라우드 기반 네트워크 아키텍처를 설계하고 있습니다. 네트워크 엔지니어는 오버레이 네트워크가 동적 트래픽 패턴을 처리하면서 낮은 지연 시간과 높은 가용성을 유지할 수 있도록 하고 싶어합니다. 엔지니어는 오버레이 네트워크를 효과적으로 구현하기 위한 다양한 옵션을 평가하고 있습니다.",
        "Question": "네트워크 엔지니어가 오버레이 네트워크를 설계하기 위해 어떤 방법 조합을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Transit Gateway를 사용하여 VPC 간 통신을 설정하고 리전 간 트래픽을 라우팅합니다.",
            "2": "모든 VPC 간에 VPC 피어링 연결을 구현하여 직접 라우팅을 용이하게 합니다.",
            "3": "AWS Global Accelerator를 채택하여 여러 리전에서 오버레이 네트워크의 성능을 최적화합니다.",
            "4": "AWS VPN을 활용하여 인터넷을 통한 VPC 간 트래픽 라우팅을 위한 안전한 터널을 생성합니다.",
            "5": "AWS Direct Connect를 활용하여 온프레미스 네트워크와 오버레이 네트워크 간의 전용 연결을 생성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Transit Gateway를 사용하여 VPC 간 통신을 설정하고 리전 간 트래픽을 라우팅합니다.",
            "AWS Direct Connect를 활용하여 온프레미스 네트워크와 오버레이 네트워크 간의 전용 연결을 생성합니다."
        ],
        "Explanation": "AWS Transit Gateway를 사용하면 여러 VPC를 연결하고 그 사이의 라우팅을 효율적으로 관리할 수 있는 간단하고 확장 가능한 방법을 제공하므로 오버레이 네트워크 설계에 적합합니다. AWS Direct Connect는 전용 네트워크 연결을 제공하여 온프레미스 인프라와 AWS 간의 데이터 전송에 대해 낮은 지연 시간과 신뢰할 수 있는 성능을 보장하여 오버레이 아키텍처를 효과적으로 지원합니다.",
        "Other Options": [
            "VPC 피어링은 두 VPC를 연결할 수 있지만 여러 VPC 간에 여러 피어링 연결을 관리하는 것은 복잡해질 수 있으며 확장 가능한 오버레이 네트워크 아키텍처에 적합하지 않습니다.",
            "AWS VPN은 연결을 보호하는 데 유용하지만 공용 인터넷에 의존하므로 지연 시간이 발생할 수 있으며 오버레이 네트워크에 대한 Direct Connect와 같은 신뢰성을 제공하지 않습니다.",
            "AWS Global Accelerator는 사용자 트래픽을 애플리케이션으로 최적화하지만, 여러 VPC 간의 오버레이 네트워크 설계의 상호 연결성과 라우팅 요구 사항을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "여러 Amazon EC2 인스턴스에서 호스팅되는 고가용성 웹 애플리케이션을 설계하고 있습니다. 애플리케이션은 일관된 경험을 보장하기 위해 여러 요청 간에 사용자 세션을 유지해야 합니다. 또한 로드 밸런서가 서로 다른 가용 영역의 모든 등록된 인스턴스에 대해 수신 트래픽을 고르게 분산하도록 보장하고 싶습니다. 이러한 요구 사항을 충족하기 위해 어떤 구성 옵션을 구현해야 합니까?",
        "Question": "애플리케이션의 세션 친화성을 유지하면서 교차 영역 로드 밸런싱을 보장하기 위해 어떤 로드 밸런서 구성 옵션을 활성화해야 합니까?",
        "Options": {
            "1": "스티키 세션을 활성화하고 교차 영역 로드 밸런싱을 활성화합니다.",
            "2": "스티키 세션을 비활성화하고 교차 영역 로드 밸런싱을 활성화합니다.",
            "3": "스티키 세션을 활성화하고 교차 영역 로드 밸런싱을 비활성화합니다.",
            "4": "스티키 세션을 비활성화하고 교차 영역 로드 밸런싱을 비활성화합니다."
        },
        "Correct Answer": "스티키 세션을 활성화하고 교차 영역 로드 밸런싱을 활성화합니다.",
        "Explanation": "스티키 세션을 활성화하면 로드 밸런서가 동일한 클라이언트의 요청을 동일한 EC2 인스턴스로 라우팅하여 사용자 세션을 유지할 수 있습니다. 교차 영역 로드 밸런싱을 활성화하면 수신 트래픽이 모든 등록된 가용 영역의 모든 인스턴스에 고르게 분산되어 자원 활용도와 내결함성을 향상시킵니다.",
        "Other Options": [
            "스티키 세션을 활성화하고 교차 영역 로드 밸런싱을 비활성화하면 동일한 사용자로부터의 모든 요청이 단일 인스턴스로 라우팅되어 불균형한 부하 분산과 잠재적인 병목 현상이 발생할 수 있습니다.",
            "스티키 세션을 비활성화하고 교차 영역 로드 밸런싱을 비활성화하면 세션 일관성을 유지하지 못하고 트래픽이 무작위로 분산되어 세션 지속성이 필요한 애플리케이션에는 적합하지 않습니다.",
            "스티키 세션을 비활성화하고 교차 영역 로드 밸런싱을 활성화하면 트래픽이 고르게 분산되지만 사용자 세션을 유지하지 못해 사용자에게 일관되지 않은 애플리케이션 동작을 초래합니다."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "한 회사가 AWS에 호스팅된 웹 애플리케이션을 대상으로 하는 DDoS 공격이 증가하고 있습니다. 보안을 강화하기 위해 회사는 AWS Shield Advanced와 AWS WAF를 구현하는 것을 고려하고 있습니다. 특정 WAF 규칙을 적용하기 전에 애플리케이션의 정상 트래픽 패턴에 대한 정확한 기준선을 확보하고자 합니다. 보안 팀은 또한 AWS Shield Advanced와 관련된 비용에 대해 우려하고 있습니다.",
        "Question": "회사가 AWS WAF를 사용하여 웹 애플리케이션 트래픽의 기준선을 생성하기 위한 권장 초기 단계는 무엇입니까?",
        "Options": {
            "1": "규칙을 적용하기 전에 트래픽 패턴을 관찰하기 위해 WAF를 모니터 모드로 활성화합니다.",
            "2": "모든 의심스러운 트래픽을 차단하기 위해 즉시 WAF 규칙을 차단 모드로 적용합니다.",
            "3": "WAF 없이 모든 DDoS 공격을 자동으로 완화하도록 AWS Shield Advanced를 구성합니다.",
            "4": "응답을 캐시하고 공격 표면을 줄이기 위해 CloudFront 배포를 설정합니다."
        },
        "Correct Answer": "규칙을 적용하기 전에 트래픽 패턴을 관찰하기 위해 WAF를 모니터 모드로 활성화합니다.",
        "Explanation": "WAF를 모니터 모드로 활성화하면 회사가 규칙을 구현하기 전에 정상 트래픽 패턴을 분석하고 이해할 수 있습니다. 이는 효과적인 규칙 생성을 위해 중요하며 합법적인 트래픽을 우발적으로 차단할 위험을 최소화합니다.",
        "Other Options": [
            "트래픽 패턴을 이해하지 않고 차단 모드에서 WAF 규칙을 적용하면 합법적인 사용자가 차단될 수 있어 사용자 경험에 부정적인 영향을 미치고 비즈니스 손실로 이어질 수 있습니다.",
            "AWS Shield Advanced는 DDoS 공격에 대한 추가 보호를 제공하지만, 특정 애플리케이션 계층 위협을 필터링하기 위한 WAF 규칙의 필요성을 대체할 수는 없습니다. Shield Advanced에만 의존하는 것은 포괄적인 보안에 충분하지 않습니다.",
            "CloudFront 배포를 설정하면 콘텐츠를 캐시하여 DDoS 공격을 완화할 수 있지만, 트래픽 패턴에 대한 통찰력을 제공하거나 WAF 규칙의 기준선을 생성하지 않으므로 이 시나리오에서 우선 사항이 아닙니다."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "한 회사가 여러 서버 간의 로드 밸런싱을 포함하는 새로운 애플리케이션 아키텍처를 설계하고 있습니다. 네트워크 아키텍트는 애플리케이션에 가장 적합한 로드 밸런싱 솔루션을 선택하기 위해 OSI 모델의 다양한 계층에서 로드 밸런싱이 어떻게 작동하는지를 이해해야 합니다.",
        "Question": "다음 중 OSI 모델의 3계층, 4계층 및 7계층에서 로드 밸런싱이 어떻게 작동하는지를 정확하게 설명하는 것은 무엇입니까?",
        "Options": {
            "1": "3계층 로드 밸런싱은 수신 패킷의 IP 주소를 검사하여 포워딩 결정을 내립니다.",
            "2": "4계층 로드 밸런싱은 애플리케이션 계층 데이터를 분석하여 콘텐츠 유형에 따라 트래픽을 유도합니다.",
            "3": "7계층 로드 밸런싱은 HTTP 헤더와 애플리케이션 데이터의 내용을 기반으로 라우팅 결정을 내립니다.",
            "4": "4계층 로드 밸런싱은 TCP 및 UDP 연결의 출발지 및 목적지 포트에 따라 트래픽을 유도합니다."
        },
        "Correct Answer": "3계층 로드 밸런싱은 수신 패킷의 IP 주소를 검사하여 포워딩 결정을 내립니다.",
        "Explanation": "3계층 로드 밸런싱은 패킷의 IP 주소에 초점을 맞추어 네트워크 정보를 기반으로 효율적인 라우팅을 가능하게 합니다. 이 방법은 고급 프로토콜을 검사하지 않으며, 이는 4계층 및 7계층 로드 밸런싱의 주요 특징입니다.",
        "Other Options": [
            "4계층 로드 밸런싱은 애플리케이션 계층 데이터를 분석하지 않으며, 대신 TCP/UDP 포트 및 연결 정보를 관리하여 패킷의 내용을 검사하지 않고 트래픽을 관리합니다.",
            "7계층 로드 밸런싱은 4계층으로 정의되지 않으며, 애플리케이션 계층에서 작동하여 HTTP 헤더 및 기타 애플리케이션 데이터의 내용을 기반으로 라우팅 결정을 내립니다. 이는 4계층의 기능이 아닙니다.",
            "4계층 로드 밸런싱은 출발지 및 목적지 포트를 기반으로 트래픽을 유도하지만, TCP/UDP 세션 및 연결 상태도 고려하므로 로드 밸런싱 결정을 위해 포트에만 국한되지 않습니다."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "귀 조직은 AWS 리소스에서 생성된 모든 로그가 규정 준수 및 거버넌스를 위해 중앙 집중식 로깅 솔루션으로 안전하게 전달되도록 해야 합니다. 로그 무결성을 유지하고 감사 목적으로 쉽게 접근할 수 있는 로깅 전략을 구현하는 임무를 맡았습니다.",
        "Question": "안전한 로그 전달을 보장하기 위해 어떤 솔루션을 구현해야 합니까? (두 가지 선택)",
        "Options": {
            "1": "AWS Config를 구현하여 로깅 구성의 변경 사항을 추적하고 모든 편차에 대해 알림을 받습니다.",
            "2": "AWS Lambda를 사용하여 로그를 실시간으로 처리하고 DynamoDB에 저장합니다.",
            "3": "Amazon Kinesis Data Firehose를 설정하여 로그를 직접 제3자 분석 서비스로 스트리밍합니다.",
            "4": "Amazon S3 버킷 버전 관리를 활성화하여 규정 준수 요구 사항을 위한 역사적 로그를 유지합니다.",
            "5": "AWS CloudTrail을 구성하여 서버 측 암호화가 활성화된 S3 버킷으로 로그를 전달합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS CloudTrail을 구성하여 서버 측 암호화가 활성화된 S3 버킷으로 로그를 전달합니다.",
            "Amazon S3 버킷 버전 관리를 활성화하여 규정 준수 요구 사항을 위한 역사적 로그를 유지합니다."
        ],
        "Explanation": "AWS CloudTrail을 구성하여 서버 측 암호화가 활성화된 S3 버킷으로 로그를 전달하면 AWS 계정에서 수행된 모든 작업이 안전하게 기록됩니다. S3 버킷 버전 관리를 활성화하면 규정 준수 감사에 필요한 로그의 이력을 유지할 수 있으며, 필요 시 이전 로그 상태를 복구할 수 있습니다.",
        "Other Options": [
            "AWS Lambda를 사용한 로그 처리는 안전한 로그 전달에 주로 초점을 맞추지 않으며, 로그 무결성 요구 사항을 해결하지 않고 추가적인 복잡성을 초래할 수 있습니다.",
            "Amazon Kinesis Data Firehose를 설정하여 로그를 제3자 서비스로 스트리밍하는 것은 올바르게 구성되지 않으면 로그의 보안 및 무결성을 보장하지 않으며, 규정 준수를 위한 중앙 집중식 저장소를 제공하지 않습니다.",
            "AWS Config를 구현하는 것은 리소스 변경 사항을 추적하는 데 유용하지만 안전한 로그 전달 및 규정 준수 요구 사항을 직접적으로 해결하지 않습니다."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "한 회사가 AWS에서 웹 애플리케이션을 배포하고 있으며, 이 애플리케이션은 일반적인 웹 공격 및 분산 서비스 거부(DDoS) 공격으로부터 보호되어야 합니다. 애플리케이션은 또한 보안 표준 및 거버넌스 요구 사항을 준수해야 합니다.",
        "Question": "회사가 AWS로의 인바운드 트래픽 흐름을 최적의 보호를 보장하기 위해 어떤 서비스 조합을 구현해야 합니까?",
        "Options": {
            "1": "AWS Network Firewall을 구성하여 모든 트래픽을 허용하고 기본 DDoS 보호를 위해 AWS Shield Standard를 설정합니다.",
            "2": "애플리케이션 로드 밸런서 앞에 AWS WAF를 배포하고 DDoS 보호를 위해 AWS Shield Advanced를 활성화합니다.",
            "3": "AWS WAF 규칙을 구현하여 모든 트래픽을 차단하고 AWS Shield를 사용하여 트래픽 패턴을 모니터링합니다.",
            "4": "AWS Network Firewall을 투명 모드로 설정하고 AWS Shield Advanced에 연결하여 보안을 강화합니다."
        },
        "Correct Answer": "애플리케이션 로드 밸런서 앞에 AWS WAF를 배포하고 DDoS 보호를 위해 AWS Shield Advanced를 활성화합니다.",
        "Explanation": "AWS WAF를 사용하면 회사가 웹 애플리케이션을 겨냥한 악성 트래픽을 필터링하는 규칙을 생성할 수 있습니다. 이를 AWS Shield Advanced와 결합하면 정교한 DDoS 공격에 대한 추가적인 보호 계층을 제공하여 보안 표준을 준수할 수 있습니다.",
        "Other Options": [
            "AWS Network Firewall을 통해 모든 트래픽을 허용하는 것은 적절한 보안 조치를 제공하지 않습니다. AWS Shield Standard만 활성화하는 것은 포괄적인 DDoS 보호에 불충분하며 AWS WAF가 제공하는 세부 제어가 부족합니다.",
            "AWS WAF로 모든 트래픽을 차단하면 합법적인 사용자가 애플리케이션에 접근할 수 없게 됩니다. AWS Shield는 주로 모니터링을 위한 것이며, 트래픽이 완전히 차단되면 공격에 대한 능동적인 보호를 제공하지 않습니다.",
            "투명 모드에서 AWS Network Firewall을 사용하는 것은 깊은 패킷 검사를 위한 트래픽을 올바르게 필터링하지 못할 수 있습니다. 단순히 AWS Shield Advanced에 연결하는 것만으로는 인바운드 트래픽을 효과적으로 관리하기 위한 필요한 규칙과 제어를 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "한 회사가 AWS 인프라 전반에 걸쳐 과도한 데이터 전송으로 인해 높은 대역폭 비용과 느린 애플리케이션 성능을 경험하고 있습니다. 네트워크 아키텍트는 애플리케이션 성능을 유지하면서 대역폭 사용을 효과적으로 최소화할 수 있는 전략을 구현해야 합니다.",
        "Question": "네트워크 아키텍트가 대역폭 사용을 가장 효과적으로 줄이기 위해 어떤 방법을 구현해야 합니까?",
        "Options": {
            "1": "온프레미스 로드 밸런서를 사용하여 트래픽 분배를 관리합니다.",
            "2": "여러 클라이언트 간 데이터 분배를 위해 유니캐스트 통신을 사용합니다.",
            "3": "AWS Global Accelerator를 배포하여 애플리케이션 트래픽의 라우팅을 최적화합니다.",
            "4": "Amazon CloudFront를 구현하여 콘텐츠를 사용자에게 더 가깝게 캐시하고 전달합니다."
        },
        "Correct Answer": "Amazon CloudFront를 구현하여 콘텐츠를 사용자에게 더 가깝게 캐시하고 전달합니다.",
        "Explanation": "Amazon CloudFront를 사용하면 엣지 위치에서 콘텐츠를 캐시하여 원본 서버에서 전송해야 하는 데이터 양을 줄입니다. 이는 대역폭 사용을 최소화하면서 최종 사용자에게 콘텐츠를 더 가깝게 제공하여 성능을 향상시킵니다.",
        "Other Options": [
            "유니캐스트 통신은 각 수신자에게 데이터의 별도 복사본을 전송하므로 여러 클라이언트에 데이터를 분배할 때 대역폭 사용이 크게 증가할 수 있습니다. 이 방법은 멀티캐스트 또는 캐싱 솔루션에 비해 효율성이 떨어집니다.",
            "AWS Global Accelerator는 애플리케이션으로의 경로를 최적화하지만 전송되는 데이터 양을 본질적으로 줄이지는 않습니다. 성능과 가용성을 개선하지만 대역폭 사용 문제를 직접적으로 해결하지는 않을 수 있습니다.",
            "온프레미스 로드 밸런서는 트래픽 분배를 관리하지만 네트워크를 통해 전송되는 데이터 양을 줄이지 않습니다. 이는 요청과 응답을 단순히 지시할 뿐 클라우드에서 대역폭 사용을 최적화하지 않습니다."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "한 회사가 사용자 인증을 온프레미스 환경에서 AWS로 마이그레이션하고 있습니다. 이 마이그레이션을 위해 AWS Directory Service를 사용하는 것을 고려하고 있습니다. 팀은 각 솔루션의 제한 사항과 기능을 고려하여 Simple AD와 AD Connector 중에서 선택해야 합니다.",
        "Question": "이 마이그레이션을 위해 Simple AD 사용에 관한 다음 중 어떤 진술이 사실입니까?",
        "Options": {
            "1": "Simple AD를 사용하면 인증 트래픽이 크게 줄어듭니다.",
            "2": "Simple AD는 5,000명 이상의 사용자를 가진 대규모 조직에는 적합하지 않습니다.",
            "3": "Simple AD는 제한 없이 최대 5,000명의 사용자를 지원합니다.",
            "4": "Simple AD는 Microsoft 제품과 원활하게 통합될 수 있습니다."
        },
        "Correct Answer": "Simple AD는 5,000명 이상의 사용자를 가진 대규모 조직에는 적합하지 않습니다.",
        "Explanation": "Simple AD는 중소규모 조직을 위해 설계되었으며 5,000명 이상의 사용자를 지원하지 않습니다. 더 큰 규모가 필요한 조직에는 AD Connector 또는 AWS Managed Microsoft AD가 더 적합한 옵션일 수 있습니다.",
        "Other Options": [
            "Simple AD는 경량 디렉토리 서비스로서 전체 Active Directory의 많은 기능이 부족하여 Microsoft 제품과의 원활한 통합을 제공하지 않습니다.",
            "Simple AD는 최대 5,000명의 사용자를 지원하지만 무제한 사용자 지원을 제공하지 않으므로 이 진술은 부정확합니다.",
            "Simple AD를 사용하면 실제로 인증 트래픽이 더 증가할 수 있으며, 특히 조직이 이미 온프레미스 Active Directory를 사용자 관리에 사용하고 있는 경우에는 더욱 그렇습니다."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "글로벌 전자상거래 애플리케이션이 여러 AWS 리전에서 배포되고 있습니다. 이 애플리케이션은 지연 시간을 최소화하기 위해 사용자 요청을 가장 가까운 리전 엔드포인트로 효율적으로 라우팅해야 합니다. 회사는 또한 기존의 Elastic Load Balancers (ELB)와 Amazon API Gateway를 통합하여 더 나은 트래픽 관리를 원합니다. 이 요구 사항을 달성하기 위해 네트워크 엔지니어가 구현해야 할 설계 패턴은 무엇입니까?",
        "Question": "최적의 글로벌 트래픽 관리를 위해 콘텐츠 배포 네트워크를 ELB 및 API Gateway와 효과적으로 통합하는 솔루션은 무엇입니까?",
        "Options": {
            "1": "Amazon CloudFront를 구성하여 ELB 및 API Gateway의 응답을 캐시하여 사용자에게 더 가까운 콘텐츠를 제공합니다.",
            "2": "리전 간 VPN 연결을 설정하여 Route 53을 사용하지 않고 가장 가까운 ELB로 직접 트래픽 흐름을 촉진합니다.",
            "3": "AWS Global Accelerator를 구현하여 가장 낮은 지연 시간을 기준으로 트래픽을 라우팅하고 가장 가까운 ELB 또는 API Gateway로 직접 전달합니다.",
            "4": "Amazon Route 53을 사용하여 지연 시간 기반 라우팅으로 트래픽을 리전 ELB 및 API Gateway 엔드포인트로 유도합니다."
        },
        "Correct Answer": "AWS Global Accelerator를 구현하여 가장 낮은 지연 시간을 기준으로 트래픽을 라우팅하고 가장 가까운 ELB 또는 API Gateway로 직접 전달합니다.",
        "Explanation": "AWS Global Accelerator는 여러 AWS 리전에서 호스팅되는 애플리케이션에 대한 고정 진입점 역할을 하는 정적 IP 주소를 제공합니다. 지연 시간을 기준으로 가장 가까운 리전 엔드포인트로 트래픽을 라우팅함으로써 사용자 경험을 최적화하고 ELB 및 API Gateway와 원활하게 통합되어 효율적인 트래픽 관리를 가능하게 합니다.",
        "Other Options": [
            "지연 시간 기반 라우팅을 사용하는 Amazon Route 53은 가장 가까운 엔드포인트로 트래픽을 유도하는 데 도움을 주지만, AWS Global Accelerator가 제공하는 고급 라우팅 기능과 정적 IP 이점이 부족합니다.",
            "Amazon CloudFront는 응답을 캐시하고 정적 콘텐츠의 성능을 개선할 수 있지만, 동적 콘텐츠에 대해 가장 가까운 ELB 또는 API Gateway로의 트래픽 라우팅을 본질적으로 관리하지 않으므로 전체 트래픽 관리 요구 사항에 덜 적합합니다.",
            "리전 간 VPN 연결을 설정하는 것은 글로벌 애플리케이션에 필요한 라우팅 기능이나 지연 시간 기반 트래픽 관리를 제공하지 않으며, 아키텍처에 불필요한 복잡성을 추가합니다."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "한 금융 서비스 회사가 AWS 인프라를 확장할 계획입니다. 그들은 네트워크 아키텍처가 산업 규정을 준수하고 잠재적인 보안 위협을 완화할 수 있도록 해야 합니다. 이 아키텍처에는 여러 VPC가 포함되며, 그 중 일부는 민감한 고객 데이터를 처리합니다. 보안 태세를 효과적으로 관리하기 위해 회사는 잠재적인 위험과 적절한 완화 전략을 식별하는 포괄적인 위협 모델을 개발하는 것을 목표로 하고 있습니다.",
        "Question": "새로운 AWS 아키텍처에 대한 효과적인 위협 모델을 개발하기 위해 네트워크 보안 팀이 우선적으로 수행해야 할 작업은 무엇입니까?",
        "Options": {
            "1": "각 VPC에 방화벽을 구현하여 모든 수신 및 송신 트래픽을 차단합니다.",
            "2": "전체 아키텍처에서 취약점과 위협을 식별하기 위해 위험 평가를 수행합니다.",
            "3": "모든 AWS Management Console 접근을 위해 다중 인증 시스템을 배포합니다.",
            "4": "여러 VPC에 걸쳐 모든 리소스를 위한 단일 보안 그룹을 생성합니다."
        },
        "Correct Answer": "전체 아키텍처에서 취약점과 위협을 식별하기 위해 위험 평가를 수행합니다.",
        "Explanation": "위험 평가를 수행하는 것은 아키텍처의 각 구성 요소에 특정한 취약점과 위협을 식별하는 데 중요합니다. 이러한 정보에 기반한 접근 방식은 맞춤형 완화 전략을 개발할 수 있게 하여 준수 및 보안을 강화합니다.",
        "Other Options": [
            "각 VPC에 방화벽을 구현하여 모든 수신 및 송신 트래픽을 차단하는 것은 과도한 제한을 초래할 수 있으며, 합법적인 트래픽을 차단하고 애플리케이션 기능에 방해가 될 수 있습니다. 보다 세밀한 접근이 필요합니다.",
            "모든 AWS Management Console 접근을 위해 다중 인증 시스템을 배포하는 것은 좋은 보안 관행이지만, 아키텍처에 존재하는 더 넓은 네트워크 위협과 취약점을 해결하지는 않습니다.",
            "여러 VPC에 걸쳐 모든 리소스를 위한 단일 보안 그룹을 생성하는 것은 지나치게 허용적인 접근 정책을 초래할 수 있습니다. 각 VPC는 독립적으로 관리해야 하는 서로 다른 보안 요구 사항을 가질 수 있습니다."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "한 회사가 AWS에서 로드 밸런서를 사용하여 여러 백엔드 서비스에 트래픽을 분산시키는 새로운 아키텍처를 설계하고 있습니다. 솔루션 아키텍트는 지원할 애플리케이션의 다양한 유형에 따라 로드 밸런서에 적합한 대상 그룹 구성을 선택해야 합니다. 애플리케이션은 전통적인 HTTP 웹 서버부터 GENEVE 프로토콜을 사용하는 마이크로서비스까지 다양합니다. 아키텍트는 모든 서비스에서 높은 가용성과 성능을 보장해야 합니다.",
        "Question": "로드 밸런서의 HTTP 및 GENEVE 프로토콜 혼합을 가장 잘 지원하기 위해 솔루션 아키텍트가 선택해야 할 대상 그룹 구성은 무엇입니까?",
        "Options": {
            "1": "모든 대상 그룹에 대해 인스턴스 대상 유형을 사용하여 HTTP 및 GENEVE 프로토콜을 모두 지원합니다.",
            "2": "HTTP 및 GENEVE 트래픽을 처리하기 위해 인스턴스 대상 유형을 사용하는 네트워크 로드 밸런서를 사용합니다.",
            "3": "HTTP에 대해 IP 대상 유형을 사용하고 GENEVE에 대해 GENEVE 대상 유형을 사용하여 별도의 대상 그룹을 생성합니다.",
            "4": "HTTP 및 GENEVE 프로토콜 요청을 처리하기 위해 Lambda 함수를 대상 유형으로 활용합니다."
        },
        "Correct Answer": "HTTP에 대해 IP 대상 유형을 사용하고 GENEVE에 대해 GENEVE 대상 유형을 사용하여 별도의 대상 그룹을 생성합니다.",
        "Explanation": "별도의 대상 그룹을 생성하면 서로 다른 프로토콜을 최적화하여 처리할 수 있어 로드 밸런서가 각 애플리케이션 유형의 특정 요구 사항에 따라 트래픽을 효율적으로 관리할 수 있습니다. 이는 HTTP 및 GENEVE 트래픽이 올바르게 처리되고 높은 성능과 가용성을 유지하도록 보장합니다.",
        "Other Options": [
            "모든 대상 그룹에 대해 인스턴스 대상 유형을 사용하는 것은 특히 특정 요구 사항이 있는 GENEVE를 효과적으로 처리하는 데 필요한 유연성을 제공하지 않습니다.",
            "Lambda 함수를 활용하는 것은 높은 처리량 트래픽을 처리하는 데 적합하지 않을 수 있으며, HTTP 및 GENEVE 프로토콜을 모두 지원해야 하는 로드 밸런서에 대한 유효한 대상 유형이 아닙니다.",
            "인스턴스 대상 유형을 사용하는 네트워크 로드 밸런서를 사용하는 것은 GENEVE 프로토콜을 최적으로 지원하지 않을 수 있으며, 이는 전용 대상 그룹으로 더 잘 제공되는 특정 구성이 필요합니다."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "한 회사가 온프레미스 데이터 센터와 AWS VPC 간의 원활한 연결성을 요구하는 하이브리드 클라우드 솔루션을 구현하고 있습니다. 이 솔루션은 두 환경에서 DNS 쿼리가 올바른 리소스에 대한 이름을 해결할 수 있도록 보장해야 합니다. 네트워크 엔지니어는 이 요구 사항을 지원하는 DNS 솔루션을 구성해야 합니다.",
        "Question": "온프레미스 데이터 센터와 AWS VPC 간의 하이브리드 연결성을 허용하는 DNS 구성은 무엇입니까?",
        "Options": {
            "1": "온프레미스 리소스를 위해 Route 53 공개 호스팅 영역을 배포합니다.",
            "2": "Route 53에서 개인 호스팅 영역을 생성하고 이를 온프레미스 네트워크와 연결합니다.",
            "3": "온프레미스 DNS 서버로 포워딩 규칙을 사용하여 Route 53 Resolver를 구성합니다.",
            "4": "Amazon CloudFront를 사용하여 온프레미스와 AWS 리소스 간의 DNS 쿼리를 분산합니다."
        },
        "Correct Answer": "온프레미스 DNS 서버로 포워딩 규칙을 사용하여 Route 53 Resolver를 구성합니다.",
        "Explanation": "Route 53 Resolver를 포워딩 규칙으로 구성하면 AWS VPC의 DNS 쿼리를 온프레미스 DNS 서버로 전달할 수 있어 원활한 하이브리드 연결성을 달성하고 두 환경이 서로의 DNS 이름을 올바르게 해결할 수 있도록 보장합니다.",
        "Other Options": [
            "Route 53에서 개인 호스팅 영역을 생성하고 이를 온프레미스 네트워크와 연결하는 것은 온프레미스 DNS가 AWS 리소스를 해결할 수 있는 방법을 제공하지 않으며, 이는 하이브리드 연결성에 필수적입니다.",
            "Amazon CloudFront를 사용하여 DNS 쿼리를 분산하는 것은 DNS 해결을 위한 유효한 접근 방식이 아니며, 온프레미스와 AWS 리소스 간의 필요한 쿼리 포워딩을 촉진하지 않습니다.",
            "온프레미스 리소스를 위해 Route 53 공개 호스팅 영역을 배포하는 것은 적합하지 않으며, 공개 호스팅 영역은 공개적으로 접근 가능한 리소스를 위해 설계되었으며 하이브리드 연결성에 필요한 개인 해결을 지원하지 않습니다."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "한 회사가 각 부서에 대해 여러 AWS 계정을 보유하고 있으며, 각 계정마다 자체 VPC가 있습니다. 회사는 이러한 VPC 간의 원활한 통신을 가능하게 하면서 아키텍처가 확장 가능하고 안전하도록 하는 솔루션이 필요합니다. 이를 달성하기 위한 최선의 접근 방식은 무엇입니까?",
        "Question": "여러 AWS 계정, VPC 및 리전 간의 상호 연결성을 가능하게 하려면 무엇을 구현해야 합니까?",
        "Options": {
            "1": "각 계정에 AWS Transit Gateway를 생성하고 리전 간 피어링을 사용하여 연결하여 VPC 간에 안전하고 효율적으로 트래픽이 흐르도록 합니다.",
            "2": "각 계정에서 Amazon Route 53 Resolver 규칙을 구현하여 VPC 간에 DNS 쿼리를 직접 라우팅하여 계정 및 리전 간의 연결성을 보장합니다.",
            "3": "각 부서의 VPC 간에 VPC 피어링 연결을 활용하고 계정 및 리전 간의 트래픽을 라우팅하기 위해 별도의 전송 VPC를 설정합니다.",
            "4": "각 계정 및 리전의 VPC 간에 Site-to-Site VPN 연결을 설정하여 VPN 터널을 통해 트래픽을 안전하게 라우팅합니다."
        },
        "Correct Answer": "각 계정에 AWS Transit Gateway를 생성하고 리전 간 피어링을 사용하여 연결하여 VPC 간에 안전하고 효율적으로 트래픽이 흐르도록 합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 중앙 집중식 연결 관리가 가능하여 서로 다른 계정 및 리전의 여러 VPC가 서로 통신할 수 있습니다. 리전 간 피어링은 확장성을 높이고 여러 직접 VPC 피어링 연결을 관리하는 복잡성을 줄입니다.",
        "Other Options": [
            "VPC 피어링 연결을 활용하는 것은 직접 VPC 간 통신에 효과적일 수 있지만, VPC 수가 증가함에 따라 복잡해지고 관리하기 어려워집니다, 특히 여러 계정 및 리전 간에서는 더욱 그렇습니다.",
            "Route 53 Resolver 규칙을 구현하는 것은 DNS 해결에 중점을 두며, VPC 간의 원활한 통신 요구 사항을 충족하지 않습니다.",
            "Site-to-Site VPN 연결은 주로 온프레미스와 AWS 간의 연결을 위해 설계되었으며, 지연 시간과 관리 오버헤드를 초래할 수 있어 여러 VPC를 계정 및 리전 간에 연결하는 데 덜 이상적입니다."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "한 회사가 높은 네트워크 처리량을 요구하는 Amazon EC2 인스턴스에 새로운 애플리케이션을 배포하고 있습니다. 그들은 인스턴스에 Elastic Network Adapters (ENA)를 사용하는 것을 고려하고 있습니다. 팀은 인스턴스를 시작할 때 ENA가 올바르게 구성되었는지 확인해야 합니다. 또한 이 목적을 위해 사용자 지정 Amazon Machine Image (AMI)를 등록할 계획입니다.",
        "Question": "팀이 등록된 AMI에 대해 Elastic Network Adapter가 올바르게 활성화되도록 하려면 무엇을 해야 합니까?",
        "Options": {
            "1": "인스턴스 설정에서 향상된 네트워킹을 활성화하는 옵션을 선택합니다.",
            "2": "AMI 등록 시 ENA 지원을 지정합니다.",
            "3": "인스턴스 유형을 최대 10Gbps로 구성합니다.",
            "4": "Elastic IP 주소를 사용하여 ENA 지원을 활성화합니다."
        },
        "Correct Answer": "AMI 등록 시 ENA 지원을 지정합니다.",
        "Explanation": "AMI에 대한 Elastic Network Adapter 지원을 활성화하려면 등록 과정에서 ENA 지원을 명시적으로 표시하는 것이 필수적입니다. 이렇게 하면 AMI에서 시작된 인스턴스가 ENA의 높은 처리량 기능을 활용할 수 있습니다.",
        "Other Options": [
            "이 옵션은 인스턴스 유형을 최대 10Gbps로 구성하는 것이 AMI의 등록 과정과 관련이 없기 때문에 잘못되었습니다. ENA는 인스턴스 유형에 따라 최대 20Gbps의 속도를 지원할 수 있습니다.",
            "이 옵션은 Elastic IP 주소를 사용한다고 해서 ENA 지원이 활성화되지 않기 때문에 잘못되었습니다. ENA 지원은 AMI 등록 시 설정해야 하는 구성으로, Elastic IP 사용과는 무관합니다.",
            "이 옵션은 향상된 네트워킹을 인스턴스 설정에서 활성화할 수 있지만 AMI 등록 과정에서 ENA 지원을 표시해야 한다는 요구 사항을 다루지 않기 때문에 잘못되었습니다."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "당신은 Amazon VPC에 배포된 다계층 애플리케이션의 보안을 관리하고 있습니다. 이 애플리케이션은 공용 웹 서버 계층, 애플리케이션 서버 계층 및 데이터베이스 계층으로 구성되어 있습니다. 웹 서버 계층만 애플리케이션 서버 계층과 통신할 수 있고, 애플리케이션 서버 계층만 데이터베이스 계층과 통신할 수 있도록 해야 합니다. 또한 이러한 계층 간의 모든 다른 트래픽을 제한하고 싶습니다.",
        "Question": "VPC 내에서 계층 간의 이러한 수준의 보안을 달성하기 위해 어떤 구성을 구현해야 합니까?",
        "Options": {
            "1": "각 계층에 대해 IP 주소를 기반으로 트래픽을 허용하는 AWS Network Firewall 규칙을 구현합니다.",
            "2": "각 계층에 대해 지정된 소스 보안 그룹에서만 트래픽을 허용하는 보안 그룹을 생성합니다.",
            "3": "계층 간의 트래픽을 제한하여 지정된 경로만 허용되도록 라우팅 테이블을 설정합니다.",
            "4": "계층 간의 모든 트래픽을 허용하지만 외부 소스에서의 모든 수신 트래픽을 거부하는 네트워크 ACL을 사용합니다."
        },
        "Correct Answer": "각 계층에 대해 지정된 소스 보안 그룹에서만 트래픽을 허용하는 보안 그룹을 생성합니다.",
        "Explanation": "각 계층에 대해 지정된 소스 보안 그룹에서만 트래픽을 허용하는 보안 그룹을 생성하는 것은 VPC 내에서 계층 간의 트래픽을 제어하는 가장 효과적인 방법입니다. 이를 통해 인스턴스 수준에서 보안을 강화하여 지정된 계층만 서로 통신할 수 있도록 하고 모든 다른 트래픽을 차단할 수 있습니다.",
        "Other Options": [
            "계층 간의 모든 트래픽을 허용하는 네트워크 ACL을 사용하는 것은 잘못된 방법입니다. 네트워크 ACL은 서브넷 수준에서 적용되며 계층 간 통신을 효과적으로 제한하는 데 필요한 세분성을 제공하지 않습니다. 의도하지 않은 트래픽을 허용할 수 있습니다.",
            "IP 주소를 기반으로 AWS Network Firewall 규칙을 구현하는 것은 이 시나리오에서 가장 효율적인 방법이 아닙니다. 트래픽을 제어할 수 있지만 일반적으로 보안 그룹을 사용하는 것보다 더 복잡하고 유연성이 떨어집니다.",
            "계층 간의 트래픽을 제한하기 위해 라우팅 테이블을 설정하는 것은 관련이 없습니다. 라우팅 테이블은 트래픽 흐름의 방향을 제어하지만 보안을 직접 관리하지는 않습니다. 접근 제어를 위해서는 보안 그룹이나 네트워크 ACL이 필요합니다."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "한 미디어 스트리밍 회사가 실시간 비디오 배포를 지원하기 위해 온프레미스 데이터 센터에서 AWS VPC로 멀티캐스트 서비스를 확장하고자 합니다. 그들은 멀티캐스트 트래픽이 두 환경 간에 효율적으로 라우팅되고 관리되도록 해야 합니다.",
        "Question": "온프레미스 환경과 AWS VPC를 통합하는 멀티캐스트 기능을 구현하기 위한 최선의 접근 방식은 무엇입니까?",
        "Options": {
            "1": "AWS Direct Connect 연결을 설정하여 멀티캐스트 트래픽을 Amazon EC2 인스턴스로 직접 라우팅합니다.",
            "2": "AWS Transit Gateway를 멀티캐스트 지원으로 구성하고 온프레미스 멀티캐스트 지원 라우터에 연결합니다.",
            "3": "AWS와 온프레미스 간의 DNS 기반 멀티캐스트 트래픽 관리를 위해 Amazon Route 53을 구현합니다.",
            "4": "AWS VPN 연결을 사용하여 개인 IP 주소 범위를 통해 멀티캐스트 트래픽을 전송합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 멀티캐스트 지원으로 구성하고 온프레미스 멀티캐스트 지원 라우터에 연결합니다.",
        "Explanation": "AWS Transit Gateway를 멀티캐스트 지원으로 구성하면 AWS와 온프레미스 환경 간의 멀티캐스트 트래픽을 효율적으로 라우팅하고 관리할 수 있어 미디어 스트리밍 애플리케이션의 원활한 통합을 보장합니다.",
        "Other Options": [
            "VPN 연결을 사용하는 것은 멀티캐스트를 기본적으로 지원하지 않으며, 일반적으로 유니캐스트 트래픽을 캡슐화하므로 효율적인 멀티캐스트 라우팅에는 적합하지 않습니다.",
            "Direct Connect 연결은 신뢰할 수 있는 링크를 제공할 수 있지만, 이 옵션에서 명시된 적절한 라우팅 구성과 결합되지 않는 한 멀티캐스트 트래픽을 본질적으로 지원하지 않습니다.",
            "Amazon Route 53은 주로 DNS 서비스이며 멀티캐스트 트래픽 라우팅이나 관리를 처리하지 않으므로 이 시나리오에 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "한 회사가 AWS에서 모니터링 및 로깅 솔루션을 구현하여 네트워크 가시성을 향상시키고자 합니다. 이들은 네트워크 트래픽을 추적하고, 보안 사고에 대한 로그를 분석하며, 내부 정책 준수를 보장해야 합니다. 솔루션은 비용 효율적이고 확장 가능해야 합니다.",
        "Question": "회사가 자원의 네트워크 트래픽을 효과적으로 모니터링하고 기록하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "Amazon CloudWatch Metrics를 사용하여 네트워크 인터페이스의 성능 메트릭을 실시간으로 시각화합니다.",
            "2": "Amazon VPC Flow Logs를 사용하여 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처합니다.",
            "3": "AWS CloudTrail을 사용하여 네트워크 리소스와 관련된 AWS 계정의 모든 API 호출을 기록합니다.",
            "4": "AWS Config를 사용하여 VPC 구성의 변경 사항과 네트워크 정책 준수를 추적합니다."
        },
        "Correct Answer": "Amazon VPC Flow Logs를 사용하여 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처합니다.",
        "Explanation": "Amazon VPC Flow Logs는 VPC의 네트워크 인터페이스로 들어오고 나가는 IP 트래픽에 대한 정보를 캡처하도록 특별히 설계되었습니다. 이 서비스는 네트워크 트래픽에 대한 상세한 가시성을 제공하여 네트워크 로그를 모니터링하고 분석하는 데 이상적입니다.",
        "Other Options": [
            "AWS CloudTrail은 AWS 서비스 전반에 걸쳐 API 호출 및 사용자 활동을 기록하는 데 중점을 두며, 감사에는 유용하지만 상세한 네트워크 트래픽 정보를 제공하지 않습니다.",
            "Amazon CloudWatch Metrics는 주로 메트릭 및 성능 데이터를 모니터링하는 데 사용되지만 네트워크 트래픽 로그를 캡처하거나 네트워크 활동에 대한 상세한 분석을 제공하지 않습니다.",
            "AWS Config는 리소스 구성 변경 사항과 준수를 추적하는 데 사용되지만 네트워크 트래픽의 실시간 모니터링이나 로깅을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "한 회사가 Amazon CloudFront를 활용하여 S3 버킷에서 콘텐츠를 배포하여 성능과 보안을 향상시키고자 합니다. 이 회사는 CloudFront와 S3 버킷 간의 모든 통신이 안전하도록 하면서 최종 사용자에게 효율적인 접근을 유지하고자 합니다. 최선의 관행을 준수하면서 CloudFront 배포 설정을 적절하게 구성해야 합니다.",
        "Question": "CloudFront와 S3 버킷 간의 안전한 통신을 보장하면서 뷰어 요청에 맞는 구성 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "CloudFront Origin Protocol Policy를 설정하여 S3 버킷과 통신할 때 항상 HTTPS를 사용하도록 합니다.",
            "2": "AWS WAF를 사용하여 HTTPS를 사용하지 않는 CloudFront에 대한 요청을 차단하여 모든 트래픽이 암호화되도록 합니다.",
            "3": "S3 버킷 정책을 구성하여 HTTPS에서 시작되지 않는 한 CloudFront의 모든 요청을 거부합니다.",
            "4": "CloudFront Origin Protocol Policy를 설정하여 뷰어가 필요에 따라 HTTP 또는 HTTPS를 사용하도록 합니다.",
            "5": "S3 버킷에 도달하기 전에 HTTPS 요청을 처리하는 Application Load Balancer (ALB)와 함께 CloudFront를 배포합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "CloudFront Origin Protocol Policy를 설정하여 뷰어가 필요에 따라 HTTP 또는 HTTPS를 사용하도록 합니다.",
            "CloudFront Origin Protocol Policy를 설정하여 S3 버킷과 통신할 때 항상 HTTPS를 사용하도록 합니다."
        ],
        "Explanation": "CloudFront Origin Protocol Policy를 뷰어에 맞게 설정하면 CloudFront가 뷰어가 사용한 것과 동일한 프로토콜을 사용하여 S3 버킷에 요청을 전달합니다. 이는 통신의 유연성을 유지합니다. 또한, 정책을 항상 HTTPS를 사용하도록 구성하면 S3 버킷에 대한 모든 요청이 암호화되어 데이터 전송을 위한 안전한 채널을 제공합니다.",
        "Other Options": [
            "S3 버킷 정책을 구성하여 HTTPS에서 시작되지 않는 한 CloudFront의 모든 요청을 거부하는 것은 충분하지 않으며, 이는 CloudFront가 여전히 뷰어 요청에 따라 적절한 프로토콜로 S3와 통신할 수 있도록 보장하지 않습니다.",
            "HTTPS를 사용하지 않는 CloudFront에 대한 요청을 차단하기 위해 AWS WAF를 사용하는 것은 이 시나리오에서 중복적이며, Origin Protocol Policy가 이미 S3 버킷과 통신하는 데 사용되는 프로토콜을 관리하고 있습니다.",
            "S3 버킷에 도달하기 전에 HTTPS 요청을 처리하는 Application Load Balancer (ALB)와 함께 CloudFront를 배포하는 것은 불필요한 복잡성을 추가하며, CloudFront는 추가 계층 없이 적절한 프로토콜을 사용하여 S3와 직접 통신할 수 있습니다."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "네트워크 엔지니어가 온프레미스 데이터 센터와 AWS Direct Connect 간의 링크 집합 그룹(LAG)을 구성하는 임무를 맡았습니다. 엔지니어는 LAG가 네트워크 성능과 중복성을 향상시키기 위해 효과적으로 작동하도록 해야 합니다. 팀은 이를 달성하기 위해 여러 Direct Connect 연결을 활용하고 있습니다.",
        "Question": "AWS Direct Connect에서 링크 집합 그룹(LAG)의 구성 및 기능에 관한 다음 진술 중 어느 것이 사실입니까?",
        "Options": {
            "1": "각 LAG는 처리량을 증가시키기 위해 여러 BGP 세션을 포함할 수 있습니다.",
            "2": "LAG는 동일한 AWS 장치에서 구성해야 하며 여러 Direct Connect 연결을 포함할 수 있습니다.",
            "3": "LAG는 중복성을 제공하기 위해 대기 모드에서 작동할 수 있습니다.",
            "4": "LAG는 서로 다른 AWS 리전 간에 생성되어 교차 리전 트래픽을 촉진할 수 있습니다."
        },
        "Correct Answer": "LAG는 동일한 AWS 장치에서 구성해야 하며 여러 Direct Connect 연결을 포함할 수 있습니다.",
        "Explanation": "AWS Direct Connect의 링크 집합 그룹(LAG)은 Active/Active 모드에서 작동하도록 설계되었으며, 모든 연결이 동일한 AWS 장치에 있어야 합니다. 이 구성은 여러 연결의 집합을 통해 대역폭과 중복성을 증가시킵니다.",
        "Other Options": [
            "LAG는 대기 모드에서 작동하지 않으며, 모든 연결이 동시에 활용되도록 Active/Active 모드에서 작동합니다.",
            "LAG는 집합된 Direct Connect 연결의 수와 관계없이 각 가상 인터페이스(VIF)당 하나의 BGP 세션만 지원합니다.",
            "LAG는 동일한 AWS 리전으로 제한되며 서로 다른 리전 간에 걸칠 수 없으며, 동일한 AWS 장치에서 구성해야 합니다."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "글로벌 전자상거래 플랫폼은 웹사이트의 가용성과 성능에 크게 의존하고 있습니다. 이 플랫폼은 DNS 관리를 위해 Amazon Route 53을 사용하며, 트래픽 급증 시 최소한의 다운타임을 보장하기 위해 서비스의 신뢰성을 향상시킬 필요가 있습니다. 팀은 이 목표를 달성하기 위해 Route 53이 제공하는 최상의 옵션을 탐색하고 있습니다.",
        "Question": "트래픽 급증 시 웹사이트의 신뢰성과 가용성을 향상시키기 위해 어떤 Route 53 기능을 구현해야 합니까?",
        "Options": {
            "1": "가중 라우팅을 사용하여 여러 리소스 간에 트래픽을 분산시켜 부하를 보다 효과적으로 관리합니다.",
            "2": "지연 기반 라우팅을 구현하여 지연 측정을 기반으로 사용자에게 가장 가까운 애플리케이션 엔드포인트로 안내합니다.",
            "3": "헬스 체크를 활성화하고 기본 사이트가 비정상 상태가 되면 Route 53이 보조 사이트로 장애 조치를 수행하도록 구성합니다.",
            "4": "지리적 위치 라우팅을 설정하여 사용자가 가장 가까운 지역 데이터 센터로 안내되도록 합니다."
        },
        "Correct Answer": "헬스 체크를 활성화하고 기본 사이트가 비정상 상태가 되면 Route 53이 보조 사이트로 장애 조치를 수행하도록 구성합니다.",
        "Explanation": "헬스 체크를 활성화하고 장애 조치를 구성하면 기본 사이트가 비정상 상태가 될 경우 Route 53이 자동으로 트래픽을 보조 사이트로 리디렉션하여 웹사이트의 신뢰성과 가용성을 향상시킵니다.",
        "Other Options": [
            "지연 기반 라우팅은 사용자를 가장 가까운 엔드포인트로 안내하여 성능을 개선할 수 있지만, 장애 조치 기능을 제공하지 않기 때문에 트래픽 급증 시 신뢰성을 특별히 향상시키지는 않습니다.",
            "가중 라우팅은 부하 분산에 도움이 되지만, 중단 시 백업 솔루션으로의 장애 조치를 보장하지 않으므로 높은 가용성을 유지하는 데 중요합니다.",
            "지리적 위치 라우팅은 사용자를 지리적 위치에 따라 안내하지만, 트래픽 급증 시 신뢰성을 향상시키기 위한 필요한 중복성이나 장애 조치 기능을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "한 회사는 서로 다른 AWS 리전에서 여러 개의 Amazon VPC를 운영하고 있으며, 각 VPC는 독립적인 네트워킹 설정을 가지고 있습니다. 이 회사는 모든 VPC가 서로 및 온프레미스 리소스와 통신할 수 있도록 하면서 네트워크 인프라 배포를 자동화하고자 합니다. 네트워크 엔지니어는 인프라를 코드로서(IaC) 효율적으로 프로비저닝하는 임무를 맡고 있습니다.",
        "Question": "주어진 시나리오를 만족시키기 위해 네트워크 엔지니어가 구현해야 할 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "AWS CloudFormation을 사용하여 VPC, 서브넷 및 라우팅 테이블을 템플릿으로 정의합니다.",
            "2": "여러 계정에서 네트워크 리소스를 관리하기 위해 AWS Control Tower를 배포합니다.",
            "3": "Terraform을 활용하여 다중 리전 설정에서 VPC 및 그 구성을 프로비저닝합니다.",
            "4": "AWS CDK를 구현하여 자동 배포를 위한 인프라를 코드로서 프로그래밍적으로 정의합니다.",
            "5": "AWS OpsWorks를 활용하여 모든 VPC의 네트워크 구성을 관리합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS CloudFormation을 사용하여 VPC, 서브넷 및 라우팅 테이블을 템플릿으로 정의합니다.",
            "Terraform을 활용하여 다중 리전 설정에서 VPC 및 그 구성을 프로비저닝합니다."
        ],
        "Explanation": "AWS CloudFormation을 사용하면 네트워크 엔지니어가 VPC, 서브넷 및 라우팅 테이블을 템플릿으로 정의하여 생성 및 관리를 자동화할 수 있어 배포 간 일관성을 보장합니다. 또한 Terraform은 인프라를 코드로서 관리하는 훌륭한 도구로, 엔지니어가 여러 리전에서 리소스를 효과적으로 프로비저닝하고 관리할 수 있게 합니다.",
        "Other Options": [
            "AWS OpsWorks는 애플리케이션 관리 및 구성에 주로 사용되며, 직접적인 네트워크 인프라 자동화에는 적합하지 않습니다.",
            "AWS Control Tower는 거버넌스 및 계정 설정을 위해 설계되었으며, 직접적인 네트워크 리소스 프로비저닝이나 자동화와는 관련이 없어 네트워크 인프라 자동화 목표와 일치하지 않습니다.",
            "AWS CDK는 인프라를 정의하는 프로그래밍적 접근 방식을 제공하지만, 생산 환경에서 네트워킹에 대해 CloudFormation 및 Terraform만큼 널리 채택되지 않아 이 경우에는 적합하지 않습니다."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "조직은 AWS 서비스를 사용하여 네트워크 트래픽 및 보안 정책 준수를 모니터링하고 있습니다. 잠재적인 보안 문제를 나타낼 수 있는 비정상적인 트래픽이 감지될 때마다 네트워크 운영 팀에 알림을 보내는 메커니즘을 설정하고자 합니다.",
        "Question": "조직이 네트워크 트래픽 메트릭을 기반으로 경고를 생성하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
        "Options": {
            "1": "리소스 준수 추적을 위한 AWS Config",
            "2": "위협 탐지를 위한 Amazon GuardDuty",
            "3": "이벤트 선택기가 있는 AWS CloudTrail",
            "4": "사용자 정의 메트릭 및 알람이 있는 AWS CloudWatch"
        },
        "Correct Answer": "사용자 정의 메트릭 및 알람이 있는 AWS CloudWatch",
        "Explanation": "AWS CloudWatch를 사용하면 사용자 정의 메트릭을 생성하고 해당 메트릭을 기반으로 알람을 설정할 수 있습니다. 이를 통해 네트워크 트래픽을 모니터링하고 임계값이 초과될 때 알림을 트리거하도록 구성할 수 있어 비정상적인 네트워크 활동을 사전 모니터링하는 데 효과적인 선택입니다.",
        "Other Options": [
            "AWS CloudTrail은 AWS 서비스에 대한 API 호출을 기록하고 모니터링하는 데 주로 사용되며, 실시간 트래픽 모니터링이나 트래픽 메트릭을 기반으로 한 알림에는 적합하지 않습니다.",
            "AWS Config는 리소스 구성 및 준수를 시간에 따라 추적하도록 설계되었으며, 실시간 네트워크 트래픽 모니터링이나 트래픽 패턴에 기반한 알림 생성에는 적합하지 않습니다.",
            "Amazon GuardDuty는 계정 및 네트워크 활동을 분석하는 위협 탐지 서비스이지만, CloudWatch와 같이 특정 네트워크 트래픽 메트릭에 기반한 사용자 정의 알림을 설정할 수는 없습니다."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "회사가 서로 다른 환경(개발, 테스트 및 프로덕션)을 분리하면서도 VPC 간 연결성을 유지하기 위해 다중 VPC 아키텍처를 배포하고 있습니다. 회사는 이러한 VPC 간의 안전한 통신을 보장하고 특정 리소스에 대한 접근을 제한해야 합니다. 이 솔루션은 이러한 VPC 전반에 걸쳐 IP 주소 할당을 효율적으로 관리해야 합니다.",
        "Question": "안전한 VPC 간 통신과 효율적인 IP 주소 관리를 보장하면서 이 다중 VPC 네트워크 아키텍처를 구현하는 가장 좋은 접근 방식은 무엇입니까?",
        "Options": {
            "1": "각 VPC 쌍 간에 VPC 피어링을 설정하고 수동으로 보안 그룹을 구성하여 트래픽을 허용합니다.",
            "2": "각 VPC와 온프레미스 네트워크 간에 AWS Site-to-Site VPN 연결을 생성하여 연결성을 관리합니다.",
            "3": "AWS Transit Gateway를 구현하여 모든 VPC를 연결하고 라우트 테이블을 구성하여 트래픽 흐름을 제어합니다.",
            "4": "AWS PrivateLink를 사용하여 각 VPC에 대한 프라이빗 엔드포인트를 생성하고 IAM 정책으로 접근을 제한합니다."
        },
        "Correct Answer": "AWS Transit Gateway를 구현하여 모든 VPC를 연결하고 라우트 테이블을 구성하여 트래픽 흐름을 제어합니다.",
        "Explanation": "AWS Transit Gateway를 사용하면 여러 VPC 간의 트래픽을 라우팅할 수 있는 중앙 지점을 제공하여 VPC 간 연결성 관리를 간소화합니다. 이는 효율적인 IP 주소 관리를 가능하게 하고, 트래픽 흐름을 제어하기 위한 라우트 테이블 구성을 통해 보안을 강화합니다.",
        "Other Options": [
            "각 VPC 쌍 간에 VPC 피어링을 설정하면 VPC 수가 증가함에 따라 복잡한 구성 및 관리 문제가 발생할 수 있어 Transit Gateway를 사용하는 것보다 확장성이 떨어집니다.",
            "AWS PrivateLink는 AWS 네트워크를 통해 서비스를 안전하게 접근하는 데 주로 사용되지만, VPC 간 직접 통신을 촉진하지 않으므로 이 시나리오에 적합하지 않습니다.",
            "각 VPC와 온프레미스 네트워크 간에 Site-to-Site VPN 연결을 생성하면 네트워크 아키텍처가 복잡해지고 지연이 발생하며, 이 설정에 필요한 직접적인 VPC 간 통신을 제공하지 않습니다."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "공용 및 사설 서브넷이 모두 포함된 VPC를 구성하고 있습니다. 사설 서브넷의 리소스가 인터넷에 안전하게 접근할 수 있도록 하면서 AWS 네트워크 내에서만 사용할 수 있는 AWS 서비스와의 연결도 유지해야 합니다. 목표는 라우팅을 최적화하고 이러한 리소스에 대한 적절한 DNS 해석을 보장하는 것입니다.",
        "Question": "어떤 구성이 사설 서브넷의 리소스가 AWS 서비스에 접근할 수 있도록 하면서 아웃바운드 트래픽이 NAT 장치를 통해 올바르게 라우팅되도록 합니까?",
        "Options": {
            "1": "NAT 게이트웨이에 대한 경로가 포함된 라우트 테이블을 구성하고 VPC 설정에서 DNS 해석을 활성화합니다.",
            "2": "인터넷 게이트웨이를 사용하고 이를 사설 서브넷의 라우트 테이블에 연결하여 직접 인터넷 접근을 허용합니다.",
            "3": "사설 서브넷에 대한 VPC 엔드포인트를 설정하여 NAT 게이트웨이 없이 AWS 서비스에 직접 연결합니다.",
            "4": "가상 프라이빗 게이트웨이를 생성하여 NAT 장치를 통해 라우팅하지 않고 AWS 서비스에 직접 접근할 수 있도록 합니다."
        },
        "Correct Answer": "NAT 게이트웨이에 대한 경로가 포함된 라우트 테이블을 구성하고 VPC 설정에서 DNS 해석을 활성화합니다.",
        "Explanation": "사설 서브넷의 리소스가 AWS 서비스에 접근하면서 아웃바운드 트래픽을 안전하게 유지하기 위해서는 NAT 게이트웨이에 대한 경로가 포함된 라우트 테이블을 구성하는 것이 필수적입니다. DNS 해석을 활성화하면 인스턴스가 도메인 이름을 올바르게 해석할 수 있어 다양한 AWS 서비스와 통신할 수 있습니다.",
        "Other Options": [
            "사설 서브넷에 인터넷 게이트웨이를 사용하면 리소스가 인터넷에 직접 노출되어 사설 리소스의 보안을 유지하려는 목표에 반합니다.",
            "VPC 엔드포인트를 설정하는 것은 이 시나리오에 적용되지 않으며, VPC 엔드포인트는 리전별로 특정되어 다른 리전의 서비스에 직접 연결하는 데 사용할 수 없습니다.",
            "사설 서브넷에서 AWS 서비스에 접근하기 위해 가상 프라이빗 게이트웨이를 생성하는 것은 불필요하며, 이는 주로 온프레미스 네트워크를 VPC에 연결하는 데 사용됩니다."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "회사가 온프레미스 인프라와 AWS 리소스를 관리하기 위해 통합된 DNS 전략이 필요한 하이브리드 클라우드 솔루션을 배포할 계획입니다. 사용자가 내부 및 외부 도메인 이름을 원활하게 해석할 수 있도록 해야 합니다. 이 솔루션은 또한 높은 가용성을 제공하고 두 환경 간의 DNS 쿼리에 대한 지연을 줄여야 합니다.",
        "Question": "다음 DNS 구성 중 하이브리드 클라우드 솔루션에 대한 회사의 요구 사항을 가장 잘 충족하는 것은 무엇입니까?",
        "Options": {
            "1": "모든 내부 도메인 이름에 대해 AWS Route 53 공용 호스팅 영역을 구현하여 DNS 해석을 용이하게 합니다.",
            "2": "온프레미스와 AWS 리소스 간의 하이브리드 DNS 해석을 가능하게 하기 위해 AWS Route 53 Resolver를 배포합니다.",
            "3": "AWS 리소스에 대한 쿼리를 유도하기 위해 조건부 포워딩이 있는 온프레미스 DNS 서버를 활용합니다.",
            "4": "리소스 가용성에 따라 DNS 쿼리를 리디렉션하기 위해 Amazon Route 53 헬스 체크를 설정합니다."
        },
        "Correct Answer": "온프레미스와 AWS 리소스 간의 하이브리드 DNS 해석을 가능하게 하기 위해 AWS Route 53 Resolver를 배포합니다.",
        "Explanation": "AWS Route 53 Resolver는 하이브리드 환경에서 원활한 DNS 해석을 가능하게 하며, AWS와 온프레미스 네트워크 간의 DNS 쿼리를 포워딩합니다. 이를 통해 내부 및 외부 도메인 이름이 효율적으로 해석되어 높은 가용성과 낮은 지연 요구 사항을 충족합니다.",
        "Other Options": [
            "조건부 포워딩이 있는 온프레미스 DNS 서버를 활용하면 DNS 해석 기능이 제한되며, 높은 가용성 측면을 효율적으로 처리하지 못하고 AWS 리소스에 대한 추가 지연을 초래할 수 있습니다.",
            "내부 도메인 이름에 대해 AWS Route 53 공용 호스팅 영역을 구현하는 것은 잘못된 접근으로, 공용 호스팅 영역은 외부 DNS 해석을 위해 설계되었으며 하이브리드 설정 내에서 내부 DNS 쿼리를 지원하지 않습니다.",
            "Amazon Route 53 헬스 체크를 설정하여 DNS 쿼리를 리디렉션하는 것은 하이브리드 DNS 해석을 위한 실행 가능한 솔루션이 아니며, 헬스 체크는 주로 엔드포인트 모니터링을 위해 설계되었으며 내부 및 외부 도메인 이름의 원활한 해석을 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "한 회사가 하이브리드 클라우드 환경을 운영하고 있으며, AWS Direct Connect를 사용하여 온프레미스 데이터 센터를 Amazon VPC에 연결하고 있습니다. 네트워크 엔지니어는 네트워크의 신뢰성과 성능을 향상시키기 위해 업계 표준 라우팅 프로토콜을 구현하는 임무를 맡았습니다. 목표는 온프레미스 네트워크와 AWS 환경 간의 동적 라우팅을 보장하는 것입니다.",
        "Question": "하이브리드 네트워크에서 최적의 성능과 신뢰성을 달성하기 위해 구현해야 할 라우팅 프로토콜의 조합은 무엇입니까? (두 개 선택)",
        "Options": {
            "1": "두 네트워크 간의 라우팅 정보를 관리하기 위한 Routing Information Protocol (RIP)",
            "2": "온프레미스 네트워크와 AWS VPC 간의 모든 트래픽에 대한 정적 경로",
            "3": "온프레미스와 AWS 환경 간의 동적 라우팅을 위한 Open Shortest Path First (OSPF)",
            "4": "AWS Direct Connect를 통한 동적 라우팅을 용이하게 하기 위한 Border Gateway Protocol (BGP)",
            "5": "하이브리드 네트워크를 위한 표준 라우팅 프로토콜로서의 Intermediate System to Intermediate System (IS-IS)"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Direct Connect를 통한 동적 라우팅을 용이하게 하기 위한 Border Gateway Protocol (BGP)",
            "온프레미스와 AWS 환경 간의 동적 라우팅을 위한 Open Shortest Path First (OSPF)"
        ],
        "Explanation": "Border Gateway Protocol (BGP)를 사용하는 것은 AWS Direct Connect를 통한 동적 라우팅을 용이하게 하여 효율적인 경로 선택과 중복성을 허용하는 데 필수적입니다. Open Shortest Path First (OSPF)를 구현하면 온프레미스 네트워크 내에서 동적 라우팅 기능을 더욱 향상시켜 AWS 리소스와 통신할 때 최적의 성능과 신뢰성을 보장할 수 있습니다.",
        "Other Options": [
            "Routing Information Protocol (RIP)는 확장성과 수렴 속도에 한계가 있는 레거시 라우팅 프로토콜로 간주되며, BGP와 OSPF에 비해 현대 하이브리드 환경에 덜 적합합니다.",
            "Intermediate System to Intermediate System (IS-IS)는 AWS 환경에서 일반적으로 사용되지 않으며, 강력한 프로토콜이지만 BGP와 같은 수준의 통합 및 지원을 제공하지 않습니다.",
            "정적 경로는 라우팅에 대한 간단한 솔루션을 제공할 수 있지만, 효율적인 트래픽 관리 및 자동 장애 조치에 필요한 동적 기능이 부족하여 하이브리드 클라우드 설정에 덜 최적입니다."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "한 회사가 다양한 부서를 관리하기 위해 AWS Organization 아래에 여러 AWS 계정을 배포했습니다. 네트워크 아키텍트는 모든 계정이 네트워크 격리를 유지하면서 안전하게 리소스를 공유할 수 있도록 해야 합니다. 그들은 다중 계정 설정에서 계정 간 리소스 공유를 용이하게 하기 위해 AWS Resource Access Manager (AWS RAM)를 사용하는 것을 고려하고 있습니다.",
        "Question": "아키텍트가 적절한 세분화와 보안을 보장하면서 계정이 Transit Gateway를 공유할 수 있도록 하기 위해 구현해야 할 구성은 무엇입니까?",
        "Options": {
            "1": "마스터 계정에 Transit Gateway를 생성하고 AWS RAM을 사용하여 모든 연결된 계정과 공유합니다.",
            "2": "AWS Direct Connect를 사용하여 각 계정을 마스터 계정의 Transit Gateway에 직접 연결합니다.",
            "3": "각 계정에 Transit Gateway를 배포하고 VPC 피어링을 사용하여 연결합니다.",
            "4": "각 계정이 중앙 Transit Gateway에 연결할 수 있도록 AWS Site-to-Site VPN을 구성합니다."
        },
        "Correct Answer": "마스터 계정에 Transit Gateway를 생성하고 AWS RAM을 사용하여 모든 연결된 계정과 공유합니다.",
        "Explanation": "마스터 계정에 Transit Gateway를 생성하고 AWS RAM을 통해 연결된 계정과 공유함으로써 아키텍트는 중앙 집중식 연결 지점과 네트워크 세분화를 유지하면서 리소스 공유를 효율적으로 관리할 수 있습니다. 이 접근 방식은 서로 다른 계정이 단일 Transit Gateway를 통해 트래픽을 라우팅하면서 보안과 격리를 보장합니다.",
        "Other Options": [
            "각 계정에 Transit Gateway를 배포하고 VPC 피어링을 사용하는 것은 관리하기 어려운 복잡한 네트워크 토폴로지를 생성하며 Transit Gateway 기능을 효과적으로 활용하지 못합니다. 또한, VPC 피어링은 전이 라우팅에 대한 제한이 있습니다.",
            "각 계정에 대해 AWS Direct Connect를 사용하는 것은 각 계정에 대해 별도의 연결이 필요하므로 비용과 복잡성이 증가합니다. Direct Connect는 일반적으로 온프레미스 네트워크에 대한 전용 연결에 사용되며 계정 간 연결에는 적합하지 않습니다.",
            "각 계정이 중앙 Transit Gateway에 연결하기 위해 AWS Site-to-Site VPN을 구성하는 것은 리소스 공유를 위해 AWS RAM을 사용하는 것에 비해 불필요하고 복잡합니다. VPN은 또한 Transit Gateway를 사용하여 피할 수 있는 추가 지연과 오버헤드를 초래합니다."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "한 조직이 재해 복구를 위해 여러 AWS 리전에서 다중 계층 웹 애플리케이션을 배포하고 있습니다. 이 애플리케이션은 가상 사설 클라우드(VPC)를 통해 통신하는 여러 마이크로서비스로 구성되어 있습니다. 네트워크 운영 팀은 애플리케이션 성능을 위한 최적의 패킷 크기를 보장하고 서비스 간의 지연 시간을 최소화하는 것에 대해 우려하고 있습니다. 그들은 데이터 전송에서 잠재적인 병목 현상을 식별하기 위해 네트워크 성능 메트릭을 모니터링하고자 합니다.",
        "Question": "다중 리전 배포에서 서비스 간 패킷 크기를 효과적으로 관리하고 네트워크 성능을 최적화하기 위해 네트워크 운영 팀이 구현해야 할 전략은 무엇입니까?",
        "Options": {
            "1": "AWS Global Accelerator를 설정하여 라우팅 경로를 최적화하고 지연 시간을 줄입니다.",
            "2": "AWS Direct Connect를 활용하여 전용 네트워크 연결을 설정합니다.",
            "3": "TCP 윈도우 크기 조정을 구성하여 패킷 크기를 자동으로 조정합니다.",
            "4": "네트워크 로드 밸런서를 배포하여 인스턴스 간 트래픽을 고르게 분산합니다."
        },
        "Correct Answer": "AWS Global Accelerator를 설정하여 라우팅 경로를 최적화하고 지연 시간을 줄입니다.",
        "Explanation": "AWS Global Accelerator는 전 세계 사용자와의 애플리케이션 가용성과 성능을 개선하도록 설계되었습니다. 애플리케이션에 대한 경로를 최적화하고 지연 시간과 패킷 손실을 줄이는 데 도움을 줄 수 있어 다중 리전 배포에서 네트워크 성능을 관리하는 데 가장 적합한 옵션입니다.",
        "Other Options": [
            "TCP 윈도우 크기 조정을 구성하는 것은 성능 최적화에 도움이 될 수 있지만, 서로 다른 리전 간의 패킷 크기를 효과적으로 관리하지는 않습니다.",
            "AWS Direct Connect는 대역폭을 향상시키고 지연 시간을 줄일 수 있는 전용 네트워크 연결을 제공하지만, 여러 리전 간의 라우팅 경로 최적화를 구체적으로 다루지는 않습니다.",
            "각 계정이 중앙 Transit Gateway에 연결하기 위해 네트워크 로드 밸런서를 배포하는 것은 여러 대상을 통한 수신 트래픽 분산에 도움이 되지만, 다중 리전 설정에서 패킷 크기 관리나 전체 네트워크 성능에 직접적인 영향을 미치지 않습니다."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "한 회사가 온프레미스와 AWS에서 중요한 애플리케이션을 실행하는 하이브리드 클라우드 아키텍처를 가지고 있습니다. 온프레미스 데이터 센터는 VPN 연결을 통해 AWS와 연결되어 있습니다. 회사는 온프레미스 네트워크와 AWS 간의 모든 트래픽이 암호화되도록 하면서 실시간 애플리케이션을 위한 낮은 지연 시간을 유지해야 합니다. 또한, 회사는 AWS 리소스를 관리하기 위한 강력한 솔루션을 구현하고 향후 작업 부하에 대한 원활한 연결을 보장하고자 합니다. 네트워크 엔지니어는 기존 온프레미스 네트워크를 AWS 클라우드와 안전하고 효율적으로 연결하도록 구성하는 임무를 맡고 있습니다.",
        "Question": "온프레미스 네트워크를 AWS에 연결하기 위한 가장 효율적이고 안전한 네트워크 구성을 제공하는 단계의 조합은 무엇입니까? (두 가지 선택)",
        "Options": {
            "1": "온프레미스 네트워크와 AWS의 VPC 간에 VPC 피어링을 설정하여 직접 통신을 가능하게 합니다.",
            "2": "AWS Transit Gateway를 사용하여 온프레미스 네트워크와 AWS의 여러 VPC 간의 라우팅을 단순화합니다.",
            "3": "AWS Direct Connect를 VPN 백업과 함께 구현하여 안전하고 낮은 지연 시간의 연결을 보장합니다.",
            "4": "온프레미스 네트워크에서 하나의 VPC로 단일 VPN 연결을 구성하고 모든 트래픽을 거기서 관리합니다.",
            "5": "전용 Direct Connect 링크를 설정하고 온프레미스와 AWS 리소스 간의 모든 트래픽에 대한 암호화를 구성합니다."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Direct Connect를 VPN 백업과 함께 구현하여 안전하고 낮은 지연 시간의 연결을 보장합니다.",
            "AWS Transit Gateway를 사용하여 온프레미스 네트워크와 AWS의 여러 VPC 간의 라우팅을 단순화합니다."
        ],
        "Explanation": "AWS Direct Connect를 구현하면 AWS에 대한 전용 저지연 연결을 제공하며, VPN 백업은 트래픽이 안전하고 암호화된 상태를 유지하도록 보장하여 중복성을 제공합니다. AWS Transit Gateway를 사용하면 여러 VPC와 온프레미스 네트워크 간의 라우팅 관리를 단순화하여 작업 부하가 증가함에 따라 확장성과 연결성을 용이하게 합니다.",
        "Other Options": [
            "하나의 VPC에 대한 단일 VPN 연결을 구성하는 것은 확장성이나 중복성에 최적이 아닙니다. 이 접근 방식은 여러 VPC 간의 트래픽을 효율적으로 관리할 수 있는 네트워크의 능력을 제한하며 Direct Connect의 이점을 활용하지 않습니다.",
            "VPC 피어링은 온프레미스 네트워크를 AWS에 연결하는 데 적합하지 않습니다. 이는 동일한 지역 내 또는 지역 간 VPC를 연결하기 위한 것이며 온프레미스 리소스에 안전하거나 효율적으로 연결하는 방법을 제공하지 않습니다.",
            "전용 Direct Connect 링크를 설정하는 것은 유익하지만 중복성을 위해 VPN 백업이 필요합니다. 백업 없이 Direct Connect에만 의존하는 것은 Direct Connect 링크에 문제가 발생할 경우 안전한 트래픽 관리를 보장하지 않습니다."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "한 회사가 AWS에서 새로운 마이크로서비스 아키텍처를 배포하고 있으며 인프라의 프로비저닝을 코드로 자동화하고자 합니다. 그들은 AWS CloudFormation을 사용하여 리소스를 정의하고 배포를 관리하기로 선택했습니다. 팀은 Amazon VPC, 여러 서브넷 및 여러 EC2 인스턴스를 포함하는 CloudFormation 템플릿을 생성했습니다. 그러나 템플릿을 배포한 후 EC2 인스턴스가 서로 예상대로 통신할 수 없다는 것을 알게 되었습니다.",
        "Question": "EC2 인스턴스가 VPC 내에서 통신할 수 있도록 팀이 어떤 변경을 해야 합니까?",
        "Options": {
            "1": "인스턴스 유형을 VPC 트래픽을 지원하는 유형으로 변경합니다.",
            "2": "EC2 인스턴스 대신 Amazon RDS를 사용하여 통신합니다.",
            "3": "인스턴스 통신을 위해 CloudFormation 템플릿을 AWS Lambda를 사용하도록 수정합니다.",
            "4": "EC2 인스턴스 간의 트래픽을 허용하는 적절한 보안 그룹 규칙을 추가합니다."
        },
        "Correct Answer": "EC2 인스턴스 간의 트래픽을 허용하는 적절한 보안 그룹 규칙을 추가합니다.",
        "Explanation": "EC2 인스턴스가 서로 통신할 수 없는 이유는 제한적인 보안 그룹 설정 때문일 가능성이 높습니다. 인스턴스 간의 트래픽을 허용하는 필요한 보안 그룹 규칙을 추가함으로써 팀은 VPC 내에서 내부 통신을 활성화할 수 있습니다.",
        "Other Options": [
            "CloudFormation 템플릿을 AWS Lambda를 사용하도록 수정하는 것은 EC2 인스턴스 간의 통신 문제를 직접적으로 해결하지 않으며, Lambda는 동일한 VPC 내에서 인스턴스가 통신하는 데 필요하지 않습니다.",
            "인스턴스 유형을 변경하는 것은 통신 문제를 해결하지 않으며, 모든 EC2 인스턴스 유형은 본질적으로 VPC 트래픽을 지원하므로 문제는 보안 구성과 더 관련이 있을 가능성이 높습니다.",
            "EC2 인스턴스 대신 Amazon RDS를 사용하여 통신하는 것은 적용할 수 없으며, RDS는 관리형 데이터베이스 서비스로 EC2 인스턴스 간의 직접 통신을 촉진하지 않습니다."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "글로벌 전자상거래 회사가 고객을 위한 지연 시간과 신뢰성을 개선하기 위해 여러 AWS 리전에서 클라우드 인프라를 확장하고 있습니다. 네트워크 운영 팀은 네트워크 성능과 건강 상태에 대한 실시간 가시성을 제공하는 네트워크 모니터링 솔루션을 설계하는 임무를 맡고 있습니다. 그들은 네트워크가 최적으로 운영되고 있는지 확인하고 사용자에게 영향을 미치기 전에 잠재적인 문제를 식별하기 위해 모니터링해야 할 적절한 지표를 추천해야 합니다.",
        "Question": "네트워크 운영 팀이 네트워크 상태와 성능에 대한 포괄적인 가시성을 얻기 위해 모니터링해야 할 지표는 무엇입니까?",
        "Options": {
            "1": "네트워크 지연 시간과 시간당 전송된 총 데이터만 모니터링합니다.",
            "2": "모든 리전에서의 네트워크 지연 시간, 패킷 손실 및 처리량을 모니터링합니다.",
            "3": "활성 연결 수와 실행 중인 인스턴스 수를 모니터링합니다.",
            "4": "EC2 인스턴스의 CPU 사용률과 메모리 사용량을 모니터링합니다."
        },
        "Correct Answer": "모든 리전에서의 네트워크 지연 시간, 패킷 손실 및 처리량을 모니터링합니다.",
        "Explanation": "네트워크 지연 시간, 패킷 손실 및 처리량을 모니터링하면 여러 리전에서 네트워크의 성능과 건강 상태에 대한 포괄적인 뷰를 제공합니다. 이러한 지표는 연결 문제를 진단하고 네트워크가 필요한 데이터 부하를 효율적으로 처리할 수 있도록 보장하는 데 도움이 됩니다.",
        "Other Options": [
            "네트워크 지연 시간과 시간당 전송된 총 데이터만 모니터링하는 것은 네트워크의 건강 상태에 대한 완전한 그림을 제공하지 않으며, 패킷 손실과 같은 중요한 지표를 무시합니다.",
            "EC2 인스턴스의 CPU 사용률과 메모리 사용량은 애플리케이션 수준의 지표이며, 현재 작업에 중요한 네트워크 성능이나 건강 상태에 대한 통찰력을 제공하지 않습니다.",
            "활성 연결 수와 실행 중인 인스턴스 수를 모니터링하는 것은 네트워크 성능을 이해하는 데 충분하지 않으며, 이러한 지표는 네트워크 자체의 품질이나 신뢰성을 직접적으로 반영하지 않습니다."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "한 의료 제공자는 AWS에서 여러 VPC를 운영하여 다양한 부서의 환자 데이터 및 애플리케이션 서비스를 관리하고 있습니다. 그들은 VPC 간의 통신이 엄격한 규정 준수 규정을 준수하면서 공격 표면을 최소화하도록 보장해야 합니다. 제공자는 보안 정책 적용을 포함하여 VPC 간 트래픽을 관리하는 안전하고 통제된 방법을 구현하고자 합니다.",
        "Question": "의료 제공자가 규제 요구 사항을 준수하면서 VPC 간 트래픽을 보호하기 위해 구현해야 할 솔루션은 무엇입니까?",
        "Options": {
            "1": "여러 VPC 간의 트래픽 흐름을 안전하게 관리하기 위해 Transit Gateway를 라우팅 테이블 및 네트워크 ACL과 함께 구성합니다.",
            "2": "AWS PrivateLink를 구현하여 VPC 엔드포인트를 생성하고 엔드포인트 정책을 통해 접근 정책을 적용합니다.",
            "3": "VPC 간에 AWS VPN 연결을 설정하고 보안 그룹을 사용하여 인바운드 및 아웃바운드 트래픽을 관리합니다.",
            "4": "VPC Peering을 사용하고 보안 그룹을 적용하여 VPC 간의 트래픽을 제한하고 제어합니다."
        },
        "Correct Answer": "여러 VPC 간의 트래픽 흐름을 안전하게 관리하기 위해 Transit Gateway를 라우팅 테이블 및 네트워크 ACL과 함께 구성합니다.",
        "Explanation": "Transit Gateway를 사용하면 VPC 간 트래픽을 중앙 집중식으로 관리할 수 있어 라우팅을 위한 확장 가능한 솔루션을 제공합니다. 또한, 라우팅 테이블과 네트워크 ACL을 사용하면 트래픽이 규정 준수 요구 사항에 따라 제어되어 여러 VPC 간의 보안을 강화합니다.",
        "Other Options": [
            "VPC Peering을 사용하는 것은 확장성에 제한이 있으며 여러 피어링 연결을 관리해야 합니다. 이는 트래픽 흐름에 대한 중앙 집중식 제어를 제공하지 않으며 Transit Gateway가 제공하는 고급 라우팅 기능이 부족합니다.",
            "AWS PrivateLink를 구현하는 것은 주로 AWS 네트워크를 통해 서비스를 안전하게 접근하기 위한 것이지만, Transit Gateway처럼 여러 VPC 간의 직접 통신을 촉진하지 않습니다. 또한 서비스 검색 및 관리가 복잡해질 수 있습니다.",
            "AWS VPN 연결을 설정하면 VPC 간 통신에 추가적인 지연과 복잡성이 발생합니다. VPN은 일반적으로 온프레미스 네트워크를 AWS에 연결하는 데 사용되며, 직접 VPC 간 트래픽 관리를 위한 최적의 선택이 아닐 수 있습니다."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "한 회사는 여러 팀이 공통의 네트워크 리소스를 공유하면서 각자의 환경 간의 격리를 유지할 수 있도록 VPC 공유를 구현하고자 합니다. 네트워크 아키텍트는 이 솔루션을 설계하는 임무를 맡고 있습니다.",
        "Question": "이 시나리오에서 VPC 공유를 사용하는 주요 장점 중 하나는 무엇입니까?",
        "Options": {
            "1": "VPC 공유는 추가 구성 없이 IPv6 주소를 사용할 수 있게 합니다.",
            "2": "VPC 공유는 여러 VPC 피어링 연결 관리의 복잡성을 줄입니다.",
            "3": "VPC 공유는 여러 계정 간의 보안 그룹을 중앙 집중식으로 관리할 수 있게 합니다.",
            "4": "VPC 공유는 모든 네트워킹 리소스에 대한 단일 실패 지점을 제공합니다."
        },
        "Correct Answer": "VPC 공유는 여러 계정 간의 보안 그룹을 중앙 집중식으로 관리할 수 있게 합니다.",
        "Explanation": "VPC 공유는 보안 그룹의 중앙 집중식 관리를 촉진하여 팀이 일관된 보안 정책을 시행하고 공유 리소스에 대한 권한 관리를 간소화할 수 있게 합니다. 이는 여러 팀이 동일한 네트워킹 리소스에 접근하면서 서로 간의 격리를 유지해야 하는 환경에서 중요한 장점입니다.",
        "Other Options": [
            "VPC 공유는 본질적으로 IPv6 주소 지정을 가능하게 하지 않으며, IPv6를 지원하기 위해서는 별도의 구성이 여전히 필요합니다.",
            "VPC 공유는 단일 실패 지점을 생성하지 않으며, 실제로 적절하게 설계될 경우 리소스 격리 및 가용성을 향상시킵니다.",
            "VPC 공유는 여러 VPC 피어링 연결의 필요성을 줄여 관리의 간소화를 도와주지만, 모든 경우에 피어링 연결의 필요성을 없애지는 않습니다."
        ]
    }
]