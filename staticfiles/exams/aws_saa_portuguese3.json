[
    {
        "Question Number": "1",
        "Situation": "Uma empresa de e-commerce experimenta picos sazonais no tráfego do site durante as vendas de feriados. Para garantir alta disponibilidade e distribuir o tráfego de entrada de forma eficiente, a empresa deseja implementar uma solução de balanceamento de carga que possa direcionar solicitações com base no conteúdo das solicitações.",
        "Question": "Qual solução de balanceamento de carga da AWS o arquiteto de soluções deve recomendar?",
        "Options": {
            "1": "Classic Load Balancer configurado com roteamento round-robin",
            "2": "Network Load Balancer com endereços IP estáticos",
            "3": "Application Load Balancer com regras de roteamento baseadas em caminho",
            "4": "AWS Global Accelerator com roteamento baseado em DNS"
        },
        "Correct Answer": "Application Load Balancer com regras de roteamento baseadas em caminho",
        "Explanation": "O Application Load Balancer (ALB) é projetado para lidar com tráfego HTTP e HTTPS e pode direcionar solicitações com base no conteúdo das solicitações, como caminhos de URL ou cabeçalhos de host. Isso o torna ideal para uma empresa de e-commerce que precisa distribuir o tráfego de forma eficiente durante picos sazonais e direcionar solicitações para diferentes serviços com base no conteúdo. O roteamento baseado em caminho permite que o ALB direcione o tráfego para serviços de backend específicos com base no caminho da URL, o que é particularmente útil para uma aplicação com múltiplos serviços ou microsserviços.",
        "Other Options": [
            "O Classic Load Balancer é uma opção legada que não suporta roteamento baseado em conteúdo. Ele utiliza principalmente roteamento round-robin ou de sessão persistente, que é menos flexível para aplicações que requerem roteamento com base no conteúdo da solicitação.",
            "O Network Load Balancer é otimizado para lidar com tráfego TCP e é capaz de processar milhões de solicitações por segundo enquanto mantém latências ultra-baixas. No entanto, ele não suporta roteamento baseado em conteúdo, que é um requisito neste cenário.",
            "O AWS Global Accelerator é projetado para melhorar a disponibilidade e o desempenho de aplicações com usuários globais, roteando o tráfego para pontos finais ótimos com base na saúde, geografia e políticas de roteamento. No entanto, ele não fornece capacidades de roteamento baseado em conteúdo, tornando-o inadequado para a necessidade específica de direcionar solicitações com base em seu conteúdo."
        ]
    },
    {
        "Question Number": "2",
        "Situation": "Uma empresa deseja proteger seus dados em volumes do Amazon EBS anexados a instâncias EC2, garantindo que os dados permaneçam criptografados em repouso. Eles também estão planejando tirar snapshots desses volumes para fins de backup.",
        "Question": "Qual das seguintes opções descreve corretamente como a criptografia do EBS funciona para este caso de uso? (Escolha duas.)",
        "Options": {
            "1": "Os volumes do EBS só podem ser criptografados se estiverem anexados a instâncias dedicadas, e a criptografia deve ser aplicada manualmente a cada snapshot tirado.",
            "2": "Cada volume do EBS usa uma Chave de Criptografia de Dados (DEK) única gerada pelo AWS KMS, e todos os snapshots e futuros volumes criados a partir desses snapshots usarão a mesma DEK.",
            "3": "A criptografia do EBS depende exclusivamente da criptografia em nível de instância e não requer integração com o KMS, tornando a criptografia transparente para o volume.",
            "4": "Ative a criptografia por padrão para todos os volumes do EBS usando chaves gerenciadas pelo AWS KMS, garantindo que todos os snapshots existentes e novos sejam automaticamente criptografados.",
            "5": "A criptografia do EBS criptografa apenas snapshots, não os dados do volume ativo armazenados em repouso nas instâncias EC2."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Cada volume do EBS usa uma Chave de Criptografia de Dados (DEK) única gerada pelo AWS KMS, e todos os snapshots e futuros volumes criados a partir desses snapshots usarão a mesma DEK.",
            "Ative a criptografia por padrão para todos os volumes do EBS usando chaves gerenciadas pelo AWS KMS, garantindo que todos os snapshots existentes e novos sejam automaticamente criptografados."
        ],
        "Explanation": "Cada volume do EBS usa uma Chave de Criptografia de Dados (DEK) única gerada pelo AWS KMS. Esta DEK é usada para criptografar o volume, e todos os snapshots tirados do volume, bem como quaisquer futuros volumes criados a partir desses snapshots, também usarão a mesma DEK. Isso garante que os dados permaneçam criptografados em repouso. Além disso, a AWS permite que você ative a criptografia por padrão para todos os volumes do EBS usando chaves gerenciadas pelo AWS KMS. Isso garante que todos os snapshots existentes e novos sejam automaticamente criptografados, proporcionando uma camada adicional de segurança.",
        "Other Options": [
            "Os volumes do EBS só podem ser criptografados se estiverem anexados a instâncias dedicadas, e a criptografia deve ser aplicada manualmente a cada snapshot tirado. Isso está incorreto porque a criptografia do EBS não é limitada a instâncias dedicadas, e os snapshots tirados de volumes criptografados são automaticamente criptografados.",
            "A criptografia do EBS depende exclusivamente da criptografia em nível de instância e não requer integração com o KMS, tornando a criptografia transparente para o volume. Isso está incorreto porque a criptografia do EBS requer integração com o AWS KMS para gerar e gerenciar as chaves de criptografia.",
            "A criptografia do EBS criptografa apenas snapshots, não os dados do volume ativo armazenados em repouso nas instâncias EC2. Isso está incorreto porque a criptografia do EBS criptografa tanto os dados do volume ativo quanto os snapshots."
        ]
    },
    {
        "Question Number": "3",
        "Situation": "Uma empresa global de jogos está lançando um novo jogo multiplayer online que atrai jogadores de todo o mundo. A empresa deseja garantir latência mínima e uma experiência de jogo contínua para todos os jogadores, independentemente de sua localização geográfica. Além disso, eles visam proteger seus servidores de jogos contra ataques DDoS.",
        "Question": "Quais serviços da AWS o arquiteto de soluções deve recomendar para otimizar a entrega de conteúdo e melhorar a segurança na borda? (Escolha duas.)",
        "Options": {
            "1": "Amazon CloudFront com AWS Shield Advanced",
            "2": "AWS Global Accelerator com Amazon Route 53",
            "3": "AWS Direct Connect com AWS WAF",
            "4": "Amazon ElastiCache com AWS Firewall Manager",
            "5": "AWS Global Accelerator com AWS Shield Advanced"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Amazon CloudFront com AWS Shield Advanced",
            "AWS Global Accelerator com AWS Shield Advanced"
        ],
        "Explanation": "Amazon CloudFront com AWS Shield Advanced e AWS Global Accelerator com AWS Shield Advanced são as respostas corretas. O Amazon CloudFront é uma rede de entrega de conteúdo (CDN) que entrega dados, vídeos, aplicações e APIs para clientes globalmente com baixa latência e altas velocidades de transferência. O AWS Shield Advanced fornece proteção DDoS econômica para recursos em execução na AWS, o que é crucial para a empresa de jogos proteger seus servidores contra ataques DDoS. O AWS Global Accelerator é um serviço de rede que envia o tráfego do usuário pela infraestrutura de rede global da Amazon Web Services, melhorando o desempenho do usuário na internet em até 60%. Quando combinado com o AWS Shield Advanced, não apenas melhora o desempenho, mas também fornece proteção contra DDoS.",
        "Other Options": [
            "AWS Global Accelerator com Amazon Route 53 não é uma solução completa. Embora o AWS Global Accelerator melhore a disponibilidade e o desempenho das aplicações, o Amazon Route 53 é um serviço de Sistema de Nomes de Domínio (DNS) escalável, mas não fornece proteção contra DDoS.",
            "AWS Direct Connect com AWS WAF não é a melhor solução. O AWS Direct Connect é uma solução de serviço em nuvem que facilita o estabelecimento de uma conexão de rede dedicada de suas instalações para a AWS, e o AWS WAF é um firewall de aplicação web que ajuda a proteger suas aplicações web contra explorações comuns, mas nenhum desses serviços otimiza a entrega de conteúdo ou fornece proteção contra DDoS na borda.",
            "Amazon ElastiCache com AWS Firewall Manager não é a solução correta. O Amazon ElastiCache é um serviço web que facilita a implantação, operação e escalonamento de um cache em memória na nuvem, e o AWS Firewall Manager é um serviço de gerenciamento de segurança que permite configurar e gerenciar centralmente regras de firewall em suas contas e aplicações na AWS Organization. No entanto, nenhum desses serviços otimiza a entrega de conteúdo ou fornece proteção contra DDoS na borda."
        ]
    },
    {
        "Question Number": "4",
        "Situation": "Uma empresa de varejo deseja implementar um sistema de monitoramento onde ações específicas sejam acionadas automaticamente quando certos eventos ocorrerem em seu ambiente AWS. Por exemplo, se uma instância EC2 mudar de estado de \"parada\" para \"executando\", uma função Lambda deve ser acionada para registrar essa atividade. Eles também desejam agendar tarefas periódicas, como backups noturnos, usando o mesmo serviço.",
        "Question": "Qual configuração de serviço da AWS atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Amazon CloudWatch Logs com consultas agendadas",
            "2": "AWS Lambda com configurações de invocação periódica",
            "3": "Amazon EventBridge com regras de padrão de eventos e regras de agendamento",
            "4": "AWS Step Functions com padrões de repetição"
        },
        "Correct Answer": "Amazon EventBridge com regras de padrão de eventos e regras de agendamento",
        "Explanation": "O Amazon EventBridge é projetado para facilitar arquiteturas orientadas a eventos e pode reagir a mudanças de estado em recursos da AWS, como instâncias EC2. Ele permite que você crie padrões de eventos que acionam ações (como invocar uma função Lambda) quando eventos específicos ocorrem, como uma instância EC2 mudando de estado. Além disso, o EventBridge suporta eventos agendados, permitindo que você configure tarefas periódicas, como backups noturnos. Isso o torna a melhor opção para os requisitos descritos no cenário.",
        "Other Options": [
            "Amazon CloudWatch Logs com consultas agendadas é usado principalmente para registro e consulta de dados de log. Embora possa ajudar na monitoração de logs, não fornece inherentemente a capacidade de acionar ações com base em eventos ou agendar tarefas diretamente.",
            "AWS Lambda com configurações de invocação periódica pode executar funções em um cronograma, mas não lida nativamente com acionadores orientados a eventos com base em mudanças de estado de recursos. Isso exigiria configuração adicional para monitorar mudanças de estado do EC2.",
            "AWS Step Functions é um serviço para orquestrar fluxos de trabalho complexos e gerenciar estado entre vários serviços. Embora possa lidar com tentativas e gerenciar fluxos de trabalho, não é especificamente projetado para acionadores orientados a eventos ou agendamento de tarefas diretamente, tornando-o menos adequado para os requisitos declarados."
        ]
    },
    {
        "Question Number": "5",
        "Situation": "Uma aplicação web precisa lidar com cargas de tráfego flutuantes, e a empresa deseja usar uma estratégia de balanceamento de carga que minimize custos enquanto distribui o tráfego de forma eficiente entre as instâncias. Eles também querem otimizar custos usando balanceamento de carga de Camada 7 (Camada de Aplicação).",
        "Question": "Qual opção de balanceamento de carga seria a mais econômica para esse requisito?",
        "Options": {
            "1": "Usar um Classic Load Balancer com escalonamento manual",
            "2": "Implantar um Application Load Balancer (ALB) com escalonamento automático habilitado",
            "3": "Usar um Network Load Balancer (NLB) para lidar com tráfego HTTP/HTTPS",
            "4": "Implantar balanceadores de carga individuais para cada Zona de Disponibilidade"
        },
        "Correct Answer": "Implantar um Application Load Balancer (ALB) com escalonamento automático habilitado",
        "Explanation": "Um Application Load Balancer (ALB) é especificamente projetado para lidar com tráfego HTTP e HTTPS na Camada 7, o que permite roteamento avançado e gerenciamento de tráfego com base no conteúdo das solicitações. Ao habilitar o escalonamento automático, a aplicação pode ajustar automaticamente o número de instâncias com base na carga de tráfego atual, garantindo utilização eficiente de recursos e custo-efetividade. Essa combinação permite que a empresa distribua o tráfego de forma eficiente enquanto minimiza os custos associados ao provisionamento excessivo de recursos.",
        "Other Options": [
            "Usar um Classic Load Balancer com escalonamento manual não é econômico porque requer intervenção manual para ajustar o número de instâncias com base na carga de tráfego, o que pode levar a subutilização ou superutilização de recursos, aumentando os custos.",
            "Usar um Network Load Balancer (NLB) não é adequado para tráfego HTTP/HTTPS, pois opera na Camada 4 e não fornece as capacidades de roteamento avançado que um ALB oferece. Além disso, os NLBs são tipicamente mais caros e não otimizam custos de forma tão eficaz para aplicações web.",
            "Implantar balanceadores de carga individuais para cada Zona de Disponibilidade é ineficiente e caro. Essa abordagem exigiria a manutenção de múltiplos balanceadores de carga, levando a um aumento na sobrecarga operacional e custos, em vez de utilizar um único ALB que pode gerenciar eficientemente o tráfego entre várias zonas."
        ]
    },
    {
        "Question Number": "6",
        "Situation": "Uma empresa de análise de marketing deseja migrar seu data warehouse em larga escala para a AWS. Os dados estão estruturados para consultas analíticas complexas em vez de cargas de trabalho transacionais, e a empresa precisa de uma solução que possa se integrar facilmente com suas ferramentas de BI baseadas em SQL existentes. Além disso, a empresa quer consultar dados históricos armazenados no Amazon S3 diretamente, sem carregá-los no data warehouse.",
        "Question": "Qual combinação de serviço e recurso da AWS o arquiteto de soluções deve recomendar?",
        "Options": {
            "1": "Amazon Redshift com Redshift Spectrum",
            "2": "Amazon RDS com Réplicas de Leitura",
            "3": "Amazon DynamoDB com Tabelas Globais",
            "4": "Amazon S3 com Athena para consultas ad-hoc"
        },
        "Correct Answer": "Amazon Redshift com Redshift Spectrum",
        "Explanation": "Amazon Redshift é um serviço de data warehouse totalmente gerenciado que é projetado para consultas analíticas complexas, tornando-o adequado para as necessidades da empresa de análise de marketing. O Redshift Spectrum permite que os usuários executem consultas contra dados armazenados no Amazon S3 sem precisar carregá-los no Redshift, o que é ideal para consultar dados históricos. Essa combinação permite uma integração perfeita com as ferramentas de BI baseadas em SQL existentes, já que o Redshift utiliza SQL padrão para consultas.",
        "Other Options": [
            "Amazon RDS com Réplicas de Leitura é projetado principalmente para cargas de trabalho transacionais e gerenciamento de banco de dados relacional, o que não se alinha com a necessidade da empresa por consultas analíticas complexas e consulta direta de dados históricos no S3.",
            "Amazon DynamoDB com Tabelas Globais é um serviço de banco de dados NoSQL que é otimizado para cargas de trabalho transacionais de alta velocidade, não para consultas analíticas complexas. Ele não suporta ferramentas de BI baseadas em SQL tão efetivamente quanto o Redshift.",
            "Amazon S3 com Athena para consultas ad-hoc é uma opção viável para consultar dados diretamente no S3, mas pode não fornecer o mesmo nível de desempenho e otimização para consultas analíticas complexas que o Amazon Redshift com Redshift Spectrum."
        ]
    },
    {
        "Question Number": "7",
        "Situation": "Uma empresa de biotecnologia está realizando análises de sequenciamento genômico em larga escala que requerem recursos computacionais significativos de forma intermitente. A empresa deseja otimizar custos garantindo que os recursos computacionais sejam utilizados apenas quando necessário e possam escalar automaticamente com base nas demandas de carga de trabalho.",
        "Question": "Qual serviço de computação da AWS o arquiteto de soluções deve recomendar para esse cenário?",
        "Options": {
            "1": "Amazon EC2 Auto Scaling",
            "2": "AWS Lambda",
            "3": "AWS Batch",
            "4": "Amazon ECS em EC2"
        },
        "Correct Answer": "AWS Batch",
        "Explanation": "AWS Batch é projetado especificamente para executar cargas de trabalho de computação em lote de forma eficiente em qualquer escala. Ele provisiona automaticamente a quantidade e o tipo ideais de recursos computacionais (por exemplo, instâncias otimizadas para CPU ou memória) com base no volume e nas necessidades específicas de recursos dos trabalhos em lote submetidos. Isso o torna ideal para as necessidades da empresa de biotecnologia, pois pode lidar com análises de sequenciamento genômico em larga escala que requerem recursos computacionais significativos de forma intermitente, otimizando custos ao utilizar recursos apenas quando necessário e escalando automaticamente com base nas demandas de carga de trabalho.",
        "Other Options": [
            "Amazon EC2 Auto Scaling é útil para gerenciar instâncias EC2 e escalá-las com base na demanda, mas não é especificamente adaptado para cargas de trabalho de processamento em lote. Ele requer mais configuração e gerenciamento manual em comparação com o AWS Batch, que é projetado para trabalhos em lote.",
            "AWS Lambda é um serviço de computação sem servidor que executa código em resposta a eventos e gerencia automaticamente os recursos computacionais necessários. No entanto, não é adequado para trabalhos em lote de longa duração, como análises de sequenciamento genômico, pois tem um limite máximo de tempo de execução de 15 minutos por invocação.",
            "Amazon ECS em EC2 é um serviço de orquestração de contêineres que permite executar e gerenciar contêineres Docker. Embora possa escalar com base na demanda, requer mais gerenciamento e não é especificamente otimizado para cargas de trabalho de processamento em lote como o AWS Batch, tornando-o menos adequado para as necessidades intermitentes de recursos computacionais da empresa."
        ]
    },
    {
        "Question Number": "8",
        "Situation": "Uma plataforma de educação online experimenta um alto tráfego de leitura para o conteúdo dos cursos durante os horários de pico. Para melhorar os tempos de resposta e reduzir a carga no banco de dados, a empresa deseja implementar uma camada de cache.",
        "Question": "Qual solução de cache o arquiteto de soluções deve recomendar para alcançar a melhor melhoria de desempenho?",
        "Options": {
            "1": "Implementar Amazon S3 com Transfer Acceleration para entrega de conteúdo mais rápida.",
            "2": "Implantar Amazon ElastiCache usando Redis para armazenar em cache o conteúdo dos cursos frequentemente acessados.",
            "3": "Usar Amazon CloudFront para armazenar em cache consultas ao banco de dados em locais de borda.",
            "4": "Configurar um cache em memória em cada servidor de aplicação para armazenar o conteúdo dos cursos."
        },
        "Correct Answer": "Implantar Amazon ElastiCache usando Redis para armazenar em cache o conteúdo dos cursos frequentemente acessados.",
        "Explanation": "Amazon ElastiCache usando Redis é um armazenamento de dados em memória que fornece acesso de alta velocidade a dados frequentemente acessados. Ao armazenar em cache o conteúdo dos cursos na memória, ele reduz significativamente os tempos de resposta para solicitações de leitura e alivia a carga no banco de dados durante os horários de pico. O Redis é particularmente adequado para cenários onde baixa latência e alta taxa de transferência são necessárias, tornando-o uma escolha ideal para melhorar o desempenho em uma plataforma de educação online.",
        "Other Options": [
            "Implementar Amazon S3 com Transfer Acceleration é focado principalmente em melhorar a velocidade de uploads e downloads de arquivos, não em armazenar em cache conteúdo dinâmico ou consultas ao banco de dados. Embora possa melhorar a entrega de conteúdo para ativos estáticos, não aborda efetivamente a necessidade de armazenar em cache o conteúdo dos cursos frequentemente acessados.",
            "Usar Amazon CloudFront para armazenar em cache consultas ao banco de dados em locais de borda não é um caso de uso típico para o CloudFront, que é projetado para armazenar em cache conteúdo web estático e dinâmico, em vez de consultas ao banco de dados. Embora possa melhorar a entrega de conteúdo para ativos estáticos, não fornece o mesmo nível de melhoria de desempenho para conteúdo dinâmico frequentemente acessado como um cache em memória como o Redis.",
            "Configurar um cache em memória em cada servidor de aplicação pode levar a inconsistências e aumentar a complexidade na gestão da sincronização do cache entre vários servidores. Essa abordagem também pode não escalar bem à medida que o número de servidores de aplicação aumenta, tornando-a menos eficiente em comparação com uma solução de cache centralizada como o Amazon ElastiCache."
        ]
    },
    {
        "Question Number": "9",
        "Situation": "Uma empresa está construindo um aplicativo que envolve várias etapas, incluindo invocar funções Lambda, esperar por um período de tempo específico e passar dados entre diferentes tarefas. Eles querem garantir que as tarefas sejam executadas na sequência correta e sejam escaláveis, confiáveis e gerenciáveis. A empresa está considerando diferentes serviços da AWS para orquestrar o fluxo de trabalho dessas tarefas.",
        "Question": "Qual serviço da AWS a empresa deve usar para esse propósito?",
        "Options": {
            "1": "Usar AWS Step Functions para definir e executar uma máquina de estados que gerencia o fluxo de tarefas e as transições entre elas.",
            "2": "Usar AWS Lambda para orquestrar tarefas invocando outras funções Lambda em sequência, passando dados via variáveis de ambiente.",
            "3": "Usar Amazon SQS para enfileirar as tarefas e processá-las sequencialmente usando instâncias EC2.",
            "4": "Usar Amazon EC2 Auto Scaling para gerenciar a execução de tarefas e escalar automaticamente com base no número de tarefas a serem concluídas."
        },
        "Correct Answer": "Usar AWS Step Functions para definir e executar uma máquina de estados que gerencia o fluxo de tarefas e as transições entre elas.",
        "Explanation": "AWS Step Functions é projetado especificamente para orquestrar fluxos de trabalho complexos que envolvem várias etapas, incluindo invocar funções AWS Lambda, esperar por períodos de tempo específicos e passar dados entre tarefas. Ele permite que você defina uma máquina de estados que descreve claramente a sequência de tarefas e suas transições, garantindo que sejam executadas na ordem correta. O Step Functions também fornece tratamento de erros embutido, tentativas e a capacidade de gerenciar estado, tornando-o uma solução confiável e gerenciável para orquestrar fluxos de trabalho.",
        "Other Options": [
            "Usar AWS Lambda para orquestrar tarefas invocando outras funções Lambda em sequência não é ideal porque o Lambda é projetado principalmente para executar funções únicas, em vez de gerenciar fluxos de trabalho complexos. Embora você possa invocar funções em sequência, ele carece dos recursos embutidos de gerenciamento de estado e tratamento de erros que o Step Functions fornece.",
            "Usar Amazon SQS para enfileirar as tarefas e processá-las sequencialmente usando instâncias EC2 não é a melhor escolha para orquestrar fluxos de trabalho. O SQS é um serviço de mensagens que pode ajudar a desacoplar componentes, mas não gerencia inherentemente a ordem de execução ou o estado das tarefas, o que é crucial para o cenário descrito.",
            "Usar Amazon EC2 Auto Scaling para gerenciar a execução de tarefas e escalar automaticamente com base no número de tarefas a serem concluídas não é adequado para orquestrar fluxos de trabalho. O EC2 Auto Scaling foca em escalar instâncias EC2 com base na demanda, mas não fornece capacidades de orquestração de fluxos de trabalho, que são essenciais para gerenciar a sequência e as dependências das tarefas."
        ]
    },
    {
        "Question Number": "10",
        "Situation": "Uma empresa deseja garantir que seu ambiente AWS siga o princípio do menor privilégio para minimizar riscos de segurança. A empresa possui várias aplicações em execução na AWS, cada uma exigindo permissões específicas para acessar certos recursos.",
        "Question": "Qual é a abordagem MAIS eficaz para implementar essa melhor prática de segurança?",
        "Options": {
            "1": "Atribuir a cada aplicação a política AdministratorAccess para garantir que tenha permissões totais para todos os recursos.",
            "2": "Criar políticas IAM personalizadas que concedam apenas as permissões que cada aplicação precisa e anexá-las aos respectivos papéis IAM para as aplicações.",
            "3": "Usar a conta de usuário root para todas as aplicações e rastrear manualmente as permissões para cada aplicação.",
            "4": "Conceder a todos os usuários IAM na conta permissões totais e confiar nos controles internos da aplicação para restringir o acesso."
        },
        "Correct Answer": "Criar políticas IAM personalizadas que concedam apenas as permissões que cada aplicação precisa e anexá-las aos respectivos papéis IAM para as aplicações.",
        "Explanation": "Criar políticas IAM personalizadas que concedam apenas as permissões que cada aplicação precisa é a maneira mais eficaz de implementar o princípio do menor privilégio. Essa abordagem garante que cada aplicação tenha acesso apenas aos recursos necessários para sua operação, reduzindo o risco de acesso não autorizado ou alterações acidentais em outros recursos. Ao anexar essas políticas a papéis IAM específicos, a empresa pode gerenciar permissões de forma centralizada e ajustá-las conforme necessário, sem afetar outras aplicações.",
        "Other Options": [
            "Atribuir a cada aplicação a política AdministratorAccess não é uma prática segura, pois concede permissões totais a todos os recursos, o que contradiz o princípio do menor privilégio e aumenta significativamente os riscos de segurança.",
            "Usar a conta de usuário root para todas as aplicações é altamente desencorajado porque a conta root tem acesso irrestrito a todos os recursos da AWS. Essa prática representa um risco significativo de segurança, pois qualquer comprometimento da conta root levaria ao controle total sobre o ambiente AWS.",
            "Conceder a todos os usuários IAM na conta permissões totais e confiar nos controles internos da aplicação não é uma abordagem segura. Isso expõe o ambiente AWS a possíveis abusos, já que qualquer usuário IAM poderia acessar qualquer recurso sem restrições, minando o princípio do menor privilégio."
        ]
    },
    {
        "Question Number": "11",
        "Situation": "Uma plataforma de educação online precisa de uma solução de banco de dados que possa escalar automaticamente com base na demanda. O tráfego deles varia bastante, com picos em determinados horários do dia. Eles querem uma solução econômica que ajuste a capacidade automaticamente, sem intervenção manual.",
        "Question": "Qual estratégia de planejamento de capacidade de banco de dados atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Capacidade provisionada com escalonamento manual durante os horários de pico",
            "2": "Instâncias reservadas com um compromisso de 3 anos",
            "3": "Capacidade sob demanda com escalonamento automático habilitado",
            "4": "Usar réplicas de leitura para lidar com períodos de alto tráfego"
        },
        "Correct Answer": "Capacidade sob demanda com escalonamento automático habilitado",
        "Explanation": "Capacidade sob demanda com escalonamento automático habilitado é a melhor solução para a plataforma de educação online porque permite que o banco de dados ajuste automaticamente sua capacidade com base na demanda em tempo real, sem qualquer intervenção manual. Isso é particularmente importante para lidar com padrões de tráfego variáveis, pois garante que a plataforma possa gerenciar eficientemente cargas de pico, ao mesmo tempo em que é econômica durante os períodos de baixa demanda. O recurso de escalonamento automático aloca dinamicamente recursos conforme necessário, o que se alinha perfeitamente com o requisito de uma solução que possa se adaptar a níveis de tráfego flutuantes.",
        "Other Options": [
            "Capacidade provisionada com escalonamento manual durante os horários de pico requer intervenção manual para ajustar a capacidade, o que não atende ao requisito de escalonamento automático com base na demanda. Isso pode levar a problemas de desempenho durante picos de tráfego inesperados se o escalonamento não for feito a tempo.",
            "Instâncias reservadas com um compromisso de 3 anos bloqueiam a plataforma em uma capacidade e custo fixos, o que não é ideal para uma situação com tráfego altamente variável. Essa estratégia não fornece a flexibilidade necessária para escalar automaticamente com a demanda, potencialmente levando ao sobreprovisionamento e custos desnecessários durante períodos de baixo tráfego.",
            "Usar réplicas de leitura para lidar com períodos de alto tráfego pode ajudar a distribuir solicitações de leitura, mas não aborda o planejamento geral de capacidade para o banco de dados. Essa estratégia pode não ser suficiente se o banco de dados primário não puder escalar para lidar com operações de gravação aumentadas ou carga geral, e também requer configuração e gerenciamento manuais."
        ]
    },
    {
        "Question Number": "12",
        "Situation": "Uma empresa está migrando seu banco de dados Oracle local para a AWS. Eles querem minimizar as mudanças no aplicativo enquanto se mudam para um serviço de banco de dados gerenciado.",
        "Question": "Qual serviço de banco de dados da AWS o arquiteto de soluções deve recomendar para essa migração heterogênea?",
        "Options": {
            "1": "Amazon Aurora com compatibilidade PostgreSQL",
            "2": "Amazon RDS para Oracle",
            "3": "Amazon DynamoDB",
            "4": "Amazon Redshift"
        },
        "Correct Answer": "Amazon RDS para Oracle",
        "Explanation": "Amazon RDS para Oracle é a melhor escolha para migrar um banco de dados Oracle local para a AWS enquanto minimiza as mudanças no aplicativo. O RDS para Oracle fornece um serviço de banco de dados gerenciado que suporta recursos do banco de dados Oracle, permitindo uma transição mais suave sem exigir mudanças significativas no código do aplicativo ou nas consultas do banco de dados. Este serviço também lida com tarefas rotineiras do banco de dados, como backups, correções e escalonamento, o que pode ajudar a reduzir a sobrecarga operacional.",
        "Other Options": [
            "Amazon Aurora com compatibilidade PostgreSQL é um serviço de banco de dados relacional que oferece compatibilidade com PostgreSQL. No entanto, exigiria mudanças no aplicativo para se adaptar ao dialeto e recursos do PostgreSQL, tornando-o menos adequado para uma migração sem costura do Oracle.",
            "Amazon DynamoDB é um serviço de banco de dados NoSQL projetado para alto desempenho e escalabilidade. Migrar de um banco de dados relacional Oracle para um banco de dados NoSQL exigiria mudanças significativas na arquitetura do aplicativo e no modelo de dados, o que contradiz o objetivo de minimizar mudanças durante a migração.",
            "Amazon Redshift é um serviço de armazenamento de dados otimizado para análises e relatórios. Não é projetado para cargas de trabalho transacionais, como aquelas normalmente tratadas por um banco de dados Oracle. Migrar para o Redshift exigiria um redesenho completo do aplicativo e dos padrões de acesso a dados, tornando-o uma escolha inadequada para este cenário."
        ]
    },
    {
        "Question Number": "13",
        "Situation": "Uma empresa está solucionando problemas de desempenho em seu aplicativo baseado em microserviços implantado na AWS. Eles querem obter uma visibilidade profunda na arquitetura de seu aplicativo para identificar gargalos e melhorar os tempos de resposta.",
        "Question": "Qual serviço da AWS a empresa deve usar para rastrear e analisar solicitações através de seus microserviços e obter insights detalhados sobre o desempenho do aplicativo?",
        "Options": {
            "1": "Usar AWS X-Ray para rastrear e analisar o fluxo de solicitações através do aplicativo, fornecendo insights sobre latências e gargalos em tempo real.",
            "2": "Usar Amazon CloudWatch Logs para monitorar e armazenar logs do aplicativo, mas analisar manualmente os dados de desempenho usando instâncias EC2.",
            "3": "Usar AWS CloudTrail para rastrear solicitações de API, mas configurar logs personalizados adicionais para insights específicos de desempenho.",
            "4": "Usar Amazon RDS Performance Insights para analisar o desempenho do banco de dados e identificar consultas lentas no aplicativo."
        },
        "Correct Answer": "Usar AWS X-Ray para rastrear e analisar o fluxo de solicitações através do aplicativo, fornecendo insights sobre latências e gargalos em tempo real.",
        "Explanation": "AWS X-Ray é especificamente projetado para rastrear solicitações em arquiteturas de microserviços. Ele fornece insights detalhados sobre o desempenho dos aplicativos, permitindo que os desenvolvedores visualizem o fluxo de solicitações através de vários serviços, identifiquem latências e localizem gargalos. Essa visibilidade profunda é crucial para solucionar problemas de desempenho e otimizar os tempos de resposta em um ambiente de microserviços.",
        "Other Options": [
            "Amazon CloudWatch Logs é útil para monitorar e armazenar logs, mas não fornece o mesmo nível de rastreamento e análise para fluxos de solicitações como o AWS X-Ray. A análise manual usando instâncias EC2 seria demorada e menos eficaz para identificar gargalos de desempenho.",
            "AWS CloudTrail é focado principalmente em rastrear solicitações de API e mudanças em recursos da AWS, não em analisar o desempenho do aplicativo. Embora possa fornecer alguns insights sobre o uso da API, não oferece o rastreamento detalhado de solicitações necessário para identificar problemas de desempenho em microserviços.",
            "Amazon RDS Performance Insights é voltado para analisar o desempenho do banco de dados e identificar consultas lentas, mas não fornece insights sobre o desempenho geral do aplicativo ou o fluxo de solicitações através de microserviços. É limitado à análise em nível de banco de dados e não aborda a arquitetura mais ampla do aplicativo."
        ]
    },
    {
        "Question Number": "14",
        "Situation": "Uma empresa está desenvolvendo um aplicativo orientado a eventos onde vários componentes precisam responder a eventos em tempo real, como pedidos de clientes e atualizações de inventário. O sistema precisa garantir que os componentes estejam fracamente acoplados para melhorar a escalabilidade e a confiabilidade. A empresa também deseja a capacidade de lidar com eventos de forma assíncrona, para que cada serviço possa processá-los de forma independente.",
        "Question": "Qual serviço da AWS a empresa deve usar para implementar um padrão de mensagens de publicação/assinatura? (Escolha dois.)",
        "Options": {
            "1": "Usar Amazon SNS (Simple Notification Service) para publicar eventos e assinar diferentes componentes do aplicativo (como funções AWS Lambda) aos tópicos SNS para processamento.",
            "2": "Usar Amazon SQS (Simple Queue Service) para filas de mensagens diretas entre componentes sem implementar um modelo de publicação/assinatura.",
            "3": "Usar AWS Direct Connect para estabelecer uma conexão privada entre componentes e publicar os eventos diretamente sobre o link de rede dedicado.",
            "4": "Usar Amazon EventBridge para criar barramentos de eventos e definir regras para direcionar eventos a múltiplos alvos, permitindo um padrão de publicação/assinatura.",
            "5": "Usar Amazon S3 para armazenar eventos e permitir que os componentes verifiquem o bucket S3 para processar novos eventos."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Usar Amazon SNS (Simple Notification Service) para publicar eventos e assinar diferentes componentes do aplicativo (como funções AWS Lambda) aos tópicos SNS para processamento.",
            "Usar Amazon EventBridge para criar barramentos de eventos e definir regras para direcionar eventos a múltiplos alvos, permitindo um padrão de publicação/assinatura."
        ],
        "Explanation": "Amazon SNS (Simple Notification Service) é um serviço web que coordena e gerencia a entrega ou envio de mensagens para endpoints ou clientes que se inscrevem. Ele é projetado para suportar o padrão de mensagens de publicação/assinatura, que é exatamente o que a empresa precisa. Funções AWS Lambda podem ser assinadas aos tópicos SNS e processar os eventos de forma assíncrona. Amazon EventBridge é um serviço de barramento de eventos sem servidor que facilita a conexão de aplicativos usando dados de seus próprios aplicativos, aplicativos integrados de Software como Serviço (SaaS) e serviços da AWS. Ele permite que você crie um paradigma de mensagens pub/sub, com barramentos de eventos e regras para direcionar eventos a múltiplos alvos.",
        "Other Options": [
            "Amazon SQS (Simple Queue Service) é um serviço de enfileiramento de mensagens totalmente gerenciado que permite desacoplar e escalar microserviços, sistemas distribuídos e aplicativos sem servidor. No entanto, não suporta inerentemente um modelo de publicação/assinatura, que é um requisito no cenário apresentado.",
            "AWS Direct Connect é uma solução de serviço em nuvem que facilita o estabelecimento de uma conexão de rede dedicada de suas instalações para a AWS. Não suporta um padrão de mensagens de publicação/assinatura e não fornece, por si só, tratamento assíncrono de eventos.",
            "Amazon S3 (Simple Storage Service) é um serviço de armazenamento de objetos que oferece escalabilidade, disponibilidade de dados, segurança e desempenho líderes do setor. No entanto, não é projetado para aplicativos orientados a eventos em tempo real ou para implementar um padrão de mensagens de publicação/assinatura. Usar o S3 exigiria que os componentes verificassem continuamente novos eventos, o que é ineficiente e não em tempo real."
        ]
    },
    {
        "Question Number": "15",
        "Situation": "Uma empresa está usando Amazon Elastic Container Service (ECS) para implantar um aplicativo baseado em microserviços em um ambiente de produção. O aplicativo lida com dados sensíveis de clientes, e a empresa quer garantir que a segurança seja implementada adequadamente em todas as camadas do aplicativo.",
        "Question": "Quais das seguintes práticas devem ser implementadas para proteger os contêineres ECS e garantir que os dados estejam protegidos?",
        "Options": {
            "1": "Usar Amazon ECS com AWS Fargate para gerenciamento de contêineres sem servidor e garantir que todos os dados sensíveis sejam armazenados no Amazon S3 com criptografia habilitada.",
            "2": "Usar funções IAM para tarefas ECS para atribuir as permissões mínimas necessárias para acessar recursos da AWS e configurar os grupos de segurança para instâncias de contêiner para restringir o tráfego de entrada.",
            "3": "Confiar exclusivamente na criptografia em nível de tarefa do Amazon ECS para proteger dados sensíveis em repouso, pois isso fornece criptografia de ponta a ponta para todo o aplicativo.",
            "4": "Habilitar endereços IP públicos para instâncias ECS para garantir acesso aos contêineres pela internet e configurar grupos de segurança para um fluxo de tráfego flexível."
        },
        "Correct Answer": "Usar funções IAM para tarefas ECS para atribuir as permissões mínimas necessárias para acessar recursos da AWS e configurar os grupos de segurança para instâncias de contêiner para restringir o tráfego de entrada.",
        "Explanation": "Usar funções IAM para tarefas ECS permite atribuir as permissões de menor privilégio necessárias para que os contêineres acessem recursos da AWS, que é um princípio fundamental de segurança. Isso minimiza o risco de acesso não autorizado a dados sensíveis. Além disso, configurar grupos de segurança para instâncias de contêiner ajuda a controlar o tráfego de entrada e saída, garantindo que apenas fontes confiáveis possam se comunicar com os contêineres, aumentando ainda mais a segurança.",
        "Other Options": [
            "Usar Amazon ECS com AWS Fargate para gerenciamento de contêineres sem servidor e armazenar dados sensíveis no Amazon S3 com criptografia habilitada é uma boa prática, mas não aborda a necessidade de controles de acesso adequados e segurança de rede para os próprios contêineres ECS. Embora a criptografia seja importante, deve fazer parte de uma estratégia de segurança mais ampla que inclua funções IAM e grupos de segurança.",
            "Confiar exclusivamente na criptografia em nível de tarefa do Amazon ECS não é suficiente para proteger dados sensíveis em repouso. Embora a criptografia em nível de tarefa possa ajudar, não fornece segurança abrangente para todo o aplicativo e não aborda outros aspectos críticos, como controle de acesso e segurança de rede.",
            "Habilitar endereços IP públicos para instâncias ECS representa um risco significativo de segurança ao expor os contêineres à internet. Isso pode levar a acessos não autorizados e ataques. Em vez disso, as melhores práticas de segurança recomendam restringir o acesso por meio de grupos de segurança e usar IPs privados sempre que possível."
        ]
    },
    {
        "Question Number": "16",
        "Situation": "Uma plataforma de negociação financeira processa milhares de transações por segundo e requer um serviço de enfileiramento altamente escalável para lidar com um extenso volume de mensagens com throughput quase ilimitado. O sistema de negociação não requer ordenação de mensagens e pode tolerar mensagens duplicadas ocasionais, desde que garanta que cada mensagem seja processada pelo menos uma vez.",
        "Question": "Qual configuração do Amazon SQS atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Configurar uma Fila FIFO do Amazon SQS para garantir o processamento exatamente uma vez e manter a ordem das mensagens",
            "2": "Usar uma Fila Padrão do Amazon SQS com entrega pelo menos uma vez, permitindo alto throughput e duplicatas ocasionais",
            "3": "Configurar um Tópico do Amazon SNS com entrega de mensagens FIFO para garantir alto throughput e baixa latência",
            "4": "Implantar Amazon Kinesis Data Streams para fornecer processamento de mensagens ordenadas e entrega pelo menos uma vez para manuseio de transações em tempo real"
        },
        "Correct Answer": "Usar uma Fila Padrão do Amazon SQS com entrega pelo menos uma vez, permitindo alto throughput e duplicatas ocasionais",
        "Explanation": "Uma Fila Padrão do Amazon SQS é projetada para alto throughput e pode lidar com um extenso volume de mensagens com escalabilidade quase ilimitada. Ela fornece entrega pelo menos uma vez, o que significa que, embora as mensagens possam ser entregues mais de uma vez, garante que cada mensagem será processada pelo menos uma vez. Isso se alinha perfeitamente com os requisitos do sistema de negociação, que não precisa de ordenação de mensagens e pode tolerar duplicatas ocasionais.",
        "Other Options": [
            "Configurar uma Fila FIFO do Amazon SQS não seria adequado porque filas FIFO são projetadas para cenários onde a ordem das mensagens é crítica e garantem o processamento exatamente uma vez. Isso vem à custa de um throughput mais baixo em comparação com Filas Padrão, o que não é ideal para uma plataforma de negociação de alto volume.",
            "Configurar um Tópico do Amazon SNS com entrega de mensagens FIFO não é apropriado porque o SNS é usado principalmente para mensagens pub/sub e não é projetado para enfileirar mensagens da mesma forma que o SQS. Além disso, tópicos FIFO também são limitados em throughput em comparação com Filas Padrão.",
            "Implantar Amazon Kinesis Data Streams forneceria processamento de mensagens ordenadas e entrega pelo menos uma vez, mas é mais complexo e tipicamente usado para análises em tempo real, em vez de necessidades simples de enfileiramento. Os requisitos do sistema de negociação não necessitam da complexidade adicional do Kinesis quando uma Fila Padrão seria suficiente."
        ]
    },
    {
        "Question Number": "17",
        "Situation": "Uma organização está usando o Amazon S3 para armazenar dados confidenciais e requer um método de criptografia do lado do servidor que permita ao AWS Key Management Service (KMS) gerenciar chaves. Além disso, eles desejam recursos como controle de rotação de chaves e separação de funções.",
        "Question": "Qual opção de criptografia do S3 atende melhor a essas necessidades?",
        "Options": {
            "1": "Criptografia do Lado do Cliente",
            "2": "Criptografia do Lado do Servidor com Chaves Gerenciadas pelo S3 (SSE-S3)",
            "3": "Criptografia do Lado do Servidor com Chaves Fornecidas pelo Cliente (SSE-C)",
            "4": "Criptografia do Lado do Servidor com Chaves Gerenciadas pelo AWS KMS (SSE-KMS)"
        },
        "Correct Answer": "Criptografia do Lado do Servidor com Chaves Gerenciadas pelo AWS KMS (SSE-KMS)",
        "Explanation": "SSE-KMS é a melhor opção para este cenário porque permite que o AWS Key Management Service (KMS) gerencie as chaves de criptografia. Este método fornece recursos de segurança aprimorados, como controle de rotação de chaves, que permite à organização rotacionar automaticamente as chaves em um cronograma, e separação de funções, que garante que diferentes funções possam ser atribuídas permissões para uso e gerenciamento de chaves. Isso se alinha perfeitamente com os requisitos da organização para gerenciar dados confidenciais de forma segura.",
        "Other Options": [
            "A Criptografia do Lado do Cliente exige que o cliente gerencie as chaves de criptografia, o que não utiliza o AWS KMS para gerenciamento de chaves e carece dos recursos de rotação de chaves e separação de funções que a organização precisa.",
            "A Criptografia do Lado do Servidor com Chaves Gerenciadas pelo S3 (SSE-S3) usa o Amazon S3 para gerenciar as chaves de criptografia, mas não fornece o mesmo nível de controle sobre o gerenciamento de chaves, como rotação de chaves e separação de funções, que o SSE-KMS oferece.",
            "A Criptografia do Lado do Servidor com Chaves Fornecidas pelo Cliente (SSE-C) permite que os clientes gerenciem suas próprias chaves de criptografia, o que significa que a organização teria que lidar com o gerenciamento e a rotação de chaves sozinha, novamente não utilizando o AWS KMS e carecendo dos recursos desejados."
        ]
    },
    {
        "Question Number": "18",
        "Situation": "Uma startup está desenvolvendo um backend móvel que requer o processamento de uploads de usuários, realizando transformações de imagem e armazenando os resultados. A equipe deseja minimizar a sobrecarga operacional e garantir que o backend possa escalar de forma contínua com a demanda dos usuários.",
        "Question": "Qual serviço serverless da AWS o arquiteto de soluções deve usar para lidar com as tarefas de processamento de imagem? (Escolha dois.)",
        "Options": {
            "1": "AWS Fargate",
            "2": "Amazon EC2",
            "3": "AWS Lambda",
            "4": "Amazon ECS",
            "5": "Notificações de Eventos do Amazon S3"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambda",
            "Notificações de Eventos do Amazon S3"
        ],
        "Explanation": "AWS Lambda é um serviço de computação serverless que permite executar seu código sem provisionar ou gerenciar servidores. Ele escala automaticamente sua aplicação com alta disponibilidade, e você paga apenas pelo tempo de computação que consome. Isso o torna uma escolha perfeita para lidar com tarefas de processamento de imagem de maneira escalável e econômica. As Notificações de Eventos do Amazon S3 podem ser usadas em conjunto com o AWS Lambda para acionar as tarefas de processamento de imagem sempre que uma nova imagem é carregada em um bucket S3. Isso permite que o sistema responda imediatamente aos uploads dos usuários, reduzindo ainda mais a sobrecarga operacional.",
        "Other Options": [
            "AWS Fargate é um mecanismo de computação serverless para contêineres. Embora possa ser usado para executar tarefas de processamento de imagem, não é tão simples ou econômico quanto o AWS Lambda para este caso específico. Também não fornece a resposta imediata aos uploads dos usuários que pode ser alcançada com Notificações de Eventos do S3.",
            "Amazon EC2 é um serviço web que fornece capacidade de computação redimensionável na nuvem. Não é serverless, o que significa que requer escalonamento manual e gerenciamento de servidores, o que contradiz o desejo da equipe de minimizar a sobrecarga operacional.",
            "Amazon ECS (Elastic Container Service) é um serviço de orquestração de contêineres altamente escalável e de alto desempenho. Embora possa ser usado para tarefas de processamento de imagem, não é serverless e requer mais sobrecarga operacional do que o AWS Lambda. Também não fornece a resposta imediata aos uploads dos usuários que pode ser alcançada com Notificações de Eventos do S3."
        ]
    },
    {
        "Question Number": "19",
        "Situation": "Uma empresa está configurando o controle de acesso para seu ambiente AWS e deseja garantir que cada membro da equipe tenha o nível apropriado de acesso aos serviços da AWS. A empresa possui vários departamentos, como desenvolvimento, finanças e RH, cada um precisando de diferentes níveis de permissões.",
        "Question": "Qual estrutura IAM seria a maneira mais eficaz e gerenciável de atribuir permissões aos usuários nesses departamentos?",
        "Options": {
            "1": "Criar usuários IAM individuais para cada membro da equipe e anexar políticas diretamente a cada usuário.",
            "2": "Criar grupos IAM para cada departamento, atribuir usuários ao grupo apropriado e anexar políticas específicas do departamento a cada grupo.",
            "3": "Usar um único papel IAM com permissões totais e fazer com que todos os usuários assumam esse papel conforme necessário.",
            "4": "Criar contas AWS separadas para cada departamento e gerenciar o acesso no nível da conta."
        },
        "Correct Answer": "Criar grupos IAM para cada departamento, atribuir usuários ao grupo apropriado e anexar políticas específicas do departamento a cada grupo.",
        "Explanation": "Criar grupos IAM para cada departamento é a maneira mais eficaz e gerenciável de atribuir permissões, pois permite o gerenciamento centralizado das permissões. Ao anexar políticas a grupos em vez de usuários individuais, a empresa pode gerenciar facilmente os níveis de acesso à medida que os membros da equipe entram ou saem da organização ou mudam de função. Essa abordagem reduz a sobrecarga administrativa de gerenciar permissões e garante que todos os usuários em um departamento tenham direitos de acesso consistentes que se alinham com suas funções de trabalho.",
        "Other Options": [
            "Criar usuários IAM individuais para cada membro da equipe e anexar políticas diretamente a cada usuário pode levar a uma situação complexa e ingovernável à medida que o número de usuários cresce. Torna-se difícil manter permissões consistentes entre os usuários, e quaisquer alterações nos níveis de acesso precisariam ser feitas individualmente para cada usuário.",
            "Usar um único papel IAM com permissões totais para todos os usuários não é uma prática segura. Isso viola o princípio do menor privilégio, pois concede a todos os usuários acesso a todos os recursos, aumentando o risco de ações acidentais ou maliciosas que poderiam comprometer o ambiente AWS.",
            "Criar contas AWS separadas para cada departamento complica o gerenciamento e pode levar a custos e sobrecarga administrativa aumentados. Também dificulta o compartilhamento de recursos entre departamentos e requer estratégias de faturamento e gerenciamento de acesso mais complexas."
        ]
    },
    {
        "Question Number": "20",
        "Situation": "Uma empresa está usando um Grupo de Auto Scaling (ASG) para gerenciar instâncias EC2 com base na demanda flutuante. Eles desejam ajustar automaticamente a capacidade das instâncias para manter uma utilização agregada de CPU de 40%.",
        "Question": "Qual tipo de política de escalonamento eles devem implementar e por quê?",
        "Options": {
            "1": "Escalonamento Manual, pois permite controle direto sobre a capacidade desejada com base em monitoramento em tempo real.",
            "2": "Escalonamento Programado, que ajustará a capacidade em horários específicos de acordo com padrões de demanda previstos.",
            "3": "Escalonamento Dinâmico com Rastreamento de Meta, pois ajusta a capacidade para manter automaticamente a meta de CPU especificada.",
            "4": "Escalonamento Simples, que permite aumentar ou diminuir a capacidade com base em condições de limiar de CPU únicas."
        },
        "Correct Answer": "Escalonamento Dinâmico com Rastreamento de Meta",
        "Explanation": "Escalonamento Dinâmico com Rastreamento de Meta é a opção mais adequada para este cenário porque ajusta automaticamente o número de instâncias EC2 no Grupo de Auto Scaling para manter uma meta especificada de utilização de CPU—neste caso, 40%. Esse tipo de política de escalonamento monitora continuamente a utilização de CPU e faz ajustes conforme necessário, garantindo que a aplicação possa responder à demanda flutuante sem intervenção manual.",
        "Other Options": [
            "O Escalonamento Manual requer intervenção humana para ajustar a capacidade desejada, o que não é eficiente para manter uma meta específica de utilização de CPU, especialmente em um ambiente dinâmico.",
            "O Escalonamento Programado é útil para cargas de trabalho previsíveis onde a demanda pode ser antecipada em horários específicos, mas não responde a mudanças em tempo real na utilização de CPU, tornando-o menos eficaz para manter um nível de utilização alvo.",
            "O Escalonamento Simples reage a limiares específicos, mas não fornece o ajuste contínuo necessário para manter uma meta média de utilização de CPU como 40%. Pode levar a sobreprovisionamento ou subprovisionamento se a demanda flutuar com frequência."
        ]
    },
    {
        "Question Number": "21",
        "Situation": "Uma empresa deseja proteger seu bucket do Amazon S3 e restringir o acesso apenas através de sua distribuição do CloudFront. Eles decidem usar uma Identidade de Acesso de Origem (OAI) para alcançar isso.",
        "Question": "Qual é a função principal da OAI nesta configuração?",
        "Options": {
            "1": "A OAI atua como um usuário que pode ser adicionado às políticas do IAM para restringir o acesso aos buckets do S3.",
            "2": "A OAI se torna uma identidade associada ao CloudFront, permitindo que apenas solicitações do CloudFront acessem o bucket do S3, com todo o acesso direto bloqueado por padrão.",
            "3": "A OAI permite acesso direto ao bucket do S3 de qualquer local, contornando as restrições do CloudFront.",
            "4": "A OAI é usada para fornecer acesso público ao bucket do S3 através de um cabeçalho personalizado."
        },
        "Correct Answer": "A OAI se torna uma identidade associada ao CloudFront, permitindo que apenas solicitações do CloudFront acessem o bucket do S3, com todo o acesso direto bloqueado por padrão.",
        "Explanation": "A Identidade de Acesso de Origem (OAI) é um recurso especial do CloudFront que permite restringir o acesso ao seu bucket do Amazon S3 para que apenas o CloudFront possa acessá-lo. Ao associar uma OAI à sua distribuição do CloudFront, você garante que as solicitações ao bucket do S3 possam vir apenas do CloudFront, bloqueando efetivamente todo o acesso direto ao bucket do S3 a partir da internet. Isso aumenta a segurança ao prevenir o acesso não autorizado ao conteúdo do S3, enquanto ainda permite que os usuários acessem através do CloudFront.",
        "Other Options": [
            "A OAI não atua como um usuário que pode ser adicionado às políticas do IAM. Em vez disso, é um recurso do CloudFront que fornece uma maneira de restringir o acesso aos buckets do S3 especificamente para o CloudFront.",
            "Esta opção é na verdade a resposta correta, pois descreve com precisão a função da OAI neste contexto.",
            "A OAI não permite acesso direto ao bucket do S3 de qualquer local. Na verdade, ela faz o oposto, garantindo que apenas o CloudFront possa acessar o bucket do S3, bloqueando todo o outro acesso direto."
        ]
    },
    {
        "Question Number": "22",
        "Situation": "Uma empresa de tecnologia hospeda uma aplicação crítica em instâncias do Amazon EC2. Para aumentar a segurança, eles precisam controlar o acesso às instâncias e garantir a proteção dos dados em múltiplos níveis, incluindo camadas de rede e de aplicação. Eles também estão preocupados com o acesso não autorizado, então querem impor políticas de acesso seguro e monitorar potenciais ameaças.",
        "Question": "Quais das seguintes melhores práticas eles devem implementar para garantir a segurança de seu ambiente EC2? (Escolha duas.)",
        "Options": {
            "1": "Anexar grupos de segurança às instâncias do EC2 para restringir o tráfego de entrada e saída, usar funções do IAM para gerenciar permissões e habilitar o registro do CloudTrail para monitorar acesso e atividade.",
            "2": "Implantar todas as instâncias do EC2 em uma sub-rede pública com acesso irrestrito, permitindo uma gestão e acesso remoto mais fácil para os usuários.",
            "3": "Habilitar o AWS Shield nas instâncias do EC2 para lidar com todos os requisitos de segurança e prevenir acesso não autorizado bloqueando todo o tráfego de entrada.",
            "4": "Usar pares de chaves do EC2 para gerenciar o acesso de todos os usuários e armazenar as chaves diretamente nas instâncias para facilitar logins rápidos.",
            "5": "Implementar ACLs de Rede além de grupos de segurança para segurança em camadas na rede e habilitar o Amazon GuardDuty para detecção de ameaças."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Anexar grupos de segurança às instâncias do EC2 para restringir o tráfego de entrada e saída, usar funções do IAM para gerenciar permissões e habilitar o registro do CloudTrail para monitorar acesso e atividade.",
            "Implementar ACLs de Rede além de grupos de segurança para segurança em camadas na rede e habilitar o Amazon GuardDuty para detecção de ameaças."
        ],
        "Explanation": "Os grupos de segurança atuam como um firewall virtual para as instâncias do EC2, controlando o tráfego de entrada e saída. As funções do IAM fornecem acesso seguro e controlado aos serviços e recursos da AWS. O registro do CloudTrail ajuda a monitorar e registrar a atividade da conta relacionada a ações na infraestrutura da AWS. As ACLs de Rede fornecem uma camada adicional de segurança, permitindo controlar o tráfego dentro e fora de uma ou mais sub-redes. O Amazon GuardDuty é um serviço de detecção de ameaças que monitora continuamente comportamentos maliciosos ou não autorizados.",
        "Other Options": [
            "Implantar todas as instâncias do EC2 em uma sub-rede pública com acesso irrestrito não é uma melhor prática para segurança. Isso expõe as instâncias a potenciais ameaças da internet e não fornece controle sobre quem pode acessar as instâncias.",
            "Embora o AWS Shield forneça proteção contra DDoS, ele não lida com todos os requisitos de segurança para instâncias do EC2. Ele não bloqueia todo o tráfego de entrada, o que não é desejável, pois impediria o acesso legítimo às instâncias.",
            "Usar pares de chaves do EC2 para gerenciar o acesso é uma boa prática, mas armazenar as chaves diretamente nas instâncias não é. Se uma instância for comprometida, as chaves podem ser acessadas, levando a um acesso não autorizado adicional."
        ]
    },
    {
        "Question Number": "23",
        "Situation": "Uma organização de notícias global precisa implantar seu aplicativo de entrega de conteúdo em várias regiões geográficas para reduzir a latência e melhorar a experiência do usuário para os espectadores em todo o mundo. O aplicativo requer sincronização de atualizações de conteúdo em tempo real em todas as regiões.",
        "Question": "Qual serviço da AWS o arquiteto de soluções deve recomendar para atender a esse requisito de computação distribuída?",
        "Options": {
            "1": "Amazon CloudFront",
            "2": "AWS Global Accelerator",
            "3": "Amazon Route 53",
            "4": "Amazon ElastiCache"
        },
        "Correct Answer": "Amazon CloudFront",
        "Explanation": "O Amazon CloudFront é um serviço de rede de entrega de conteúdo (CDN) que armazena em cache o conteúdo em locais de borda ao redor do mundo, o que ajuda a reduzir a latência para os usuários que acessam o aplicativo de diferentes regiões geográficas. Ele também suporta atualizações de conteúdo em tempo real, permitindo a sincronização em todas as regiões, tornando-o ideal para uma organização de notícias global que precisa fornecer atualizações oportunas aos seus espectadores.",
        "Other Options": [
            "O AWS Global Accelerator melhora a disponibilidade e o desempenho de aplicativos direcionando o tráfego para pontos finais otimizados, mas não fornece entrega de conteúdo ou capacidades de cache como o CloudFront.",
            "O Amazon Route 53 é um serviço web de Sistema de Nomes de Domínio (DNS) escalável que fornece registro de domínio e roteamento, mas não lida com entrega de conteúdo ou sincronização de atualizações de conteúdo.",
            "O Amazon ElastiCache é um serviço que fornece cache em memória para melhorar o desempenho do aplicativo, mas não é projetado para entrega de conteúdo em regiões geográficas e não suporta sincronização em tempo real de atualizações de conteúdo."
        ]
    },
    {
        "Question Number": "24",
        "Situation": "Uma empresa financeira internacional precisa garantir alta disponibilidade para seu aplicativo central que deve permanecer operacional mesmo durante interrupções regionais. Eles pretendem implementar uma estratégia de failover que minimize o tempo de inatividade e redirecione automaticamente o tráfego para um ambiente de espera em outra região se a região primária falhar.",
        "Question": "Dadas suas necessidades, qual estratégia de failover da AWS seria mais adequada e por quê?",
        "Options": {
            "1": "Pilot Light, pois mantém uma versão mínima do aplicativo em outra região, permitindo uma rápida ativação durante eventos de failover.",
            "2": "Warm Standby, porque executa uma versão reduzida do aplicativo em outra região, permitindo um failover mais rápido com tempo de configuração mínimo.",
            "3": "Failover Ativo-Ativo, onde ambas as regiões executam a carga total do aplicativo, permitindo o roteamento imediato de tráfego para a região secundária em caso de falha.",
            "4": "Backup e Restauração, pois envolve a restauração de backups armazenados em outra região, oferecendo uma solução econômica para aplicativos não críticos."
        },
        "Correct Answer": "Failover Ativo-Ativo, onde ambas as regiões executam a carga total do aplicativo, permitindo o roteamento imediato de tráfego para a região secundária em caso de falha.",
        "Explanation": "A estratégia de Failover Ativo-Ativo é a mais adequada para a empresa financeira internacional porque permite que ambas as regiões executem a carga total do aplicativo simultaneamente. Isso significa que, se uma região sofrer uma interrupção, o tráfego pode ser imediatamente redirecionado para a outra região sem qualquer tempo de inatividade. Essa abordagem garante alta disponibilidade e atende à exigência da empresa por tempo de inatividade mínimo durante interrupções regionais, tornando-a a solução mais eficaz para seu aplicativo central.",
        "Other Options": [
            "Pilot Light não é adequado porque mantém apenas uma versão mínima do aplicativo em outra região, o que exigiria tempo para escalar durante um evento de failover, levando a um potencial tempo de inatividade.",
            "Warm Standby, embora melhor que o Pilot Light, ainda executa uma versão reduzida do aplicativo. Embora permita um failover mais rápido do que o Pilot Light, pode não fornecer o roteamento imediato de tráfego necessário para alta disponibilidade, pois requer algum tempo de configuração para escalar à capacidade total.",
            "Backup e Restauração não é apropriado para este cenário, pois envolve a restauração de backups, o que pode levar tempo significativo e não é projetado para alta disponibilidade. Essa estratégia é mais adequada para aplicativos não críticos onde o tempo de inatividade pode ser tolerado."
        ]
    },
    {
        "Question Number": "25",
        "Situation": "Uma empresa está armazenando dados sensíveis de clientes em um banco de dados Amazon RDS MySQL. Para cumprir com requisitos de segurança e regulamentação, eles precisam garantir que os dados estejam criptografados em repouso, com controle rigoroso sobre quem pode acessar as chaves de criptografia. Além disso, eles precisam garantir que os backups e instantâneas do banco de dados também estejam criptografados.",
        "Question": "Qual solução atenderia melhor a esses requisitos? (Escolha duas.)",
        "Options": {
            "1": "Habilitar a criptografia RDS em repouso usando o AWS Key Management Service (KMS) com uma CMK gerenciada pelo cliente, garantindo que apenas funções específicas do IAM tenham permissões para acessar a chave.",
            "2": "Usar o recurso de criptografia integrado do MySQL para criptografar dados em repouso e configurar o RDS para habilitar a criptografia em backups automatizados e instantâneas.",
            "3": "Habilitar a Criptografia de Dados Transparente (TDE) no MySQL e gerenciar chaves de criptografia usando o AWS CloudHSM para garantir que as chaves de criptografia não sejam acessíveis pela AWS.",
            "4": "Armazenar dados em texto simples dentro do banco de dados RDS, mas habilitar SSL/TLS para acesso seguro, confiando na segurança da rede para proteger dados em repouso.",
            "5": "Configurar o RDS para usar criptografia em trânsito com SSL/TLS e criptografar manualmente os backups antes de armazená-los no Amazon S3."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Habilitar a criptografia RDS em repouso usando o AWS Key Management Service (KMS) com uma CMK gerenciada pelo cliente, garantindo que apenas funções específicas do IAM tenham permissões para acessar a chave.",
            "Habilitar a Criptografia de Dados Transparente (TDE) no MySQL e gerenciar chaves de criptografia usando o AWS CloudHSM para garantir que as chaves de criptografia não sejam acessíveis pela AWS."
        ],
        "Explanation": "O AWS Key Management Service (KMS) permite a criptografia em repouso e dá ao cliente controle sobre quem pode acessar as chaves de criptografia, atribuindo permissões a funções específicas do IAM. Isso atende ao requisito de controle rigoroso sobre o acesso às chaves de criptografia. A opção 3 está correta porque a Criptografia de Dados Transparente (TDE) no MySQL fornece criptografia em repouso, e o AWS CloudHSM permite o gerenciamento de chaves de criptografia de forma que não sejam acessíveis pela AWS, atendendo ao requisito de controle rigoroso sobre o acesso às chaves de criptografia.",
        "Other Options": [
            "Embora o recurso de criptografia integrado do MySQL possa criptografar dados em repouso, ele não fornece o nível de controle sobre o acesso às chaves de criptografia que é necessário neste cenário.",
            "Armazenar dados em texto simples dentro do banco de dados RDS não fornece criptografia em repouso, que é um requisito neste cenário. Embora o SSL/TLS forneça acesso seguro, não protege os dados em repouso.",
            "Embora forneça criptografia em trânsito com SSL/TLS e permita a criptografia manual de backups, não fornece criptografia em repouso para os dados no banco de dados RDS, que é um requisito neste cenário."
        ]
    },
    {
        "Question Number": "26",
        "Situation": "Uma agência governamental precisa ingerir dados sensíveis de vários escritórios regionais em um lago de dados Amazon S3. Os pontos de ingestão de dados devem ser seguros para evitar acesso não autorizado e garantir a integridade dos dados durante a transferência.",
        "Question": "Qual solução o arquiteto de soluções deve implementar para garantir o acesso seguro aos pontos de ingestão de dados?",
        "Options": {
            "1": "Usar URLs pré-assinadas do Amazon S3 para cada escritório regional fazer upload de dados diretamente para o S3.",
            "2": "Configurar uma conexão VPN entre cada escritório regional e a AWS VPC, e restringir o acesso ao S3 aos pontos finais da VPC.",
            "3": "Implementar usuários IAM com chaves de acesso ao S3 para cada escritório regional.",
            "4": "Habilitar acesso público ao bucket S3 e usar criptografia em nível de objeto."
        },
        "Correct Answer": "Configurar uma conexão VPN entre cada escritório regional e a AWS VPC, e restringir o acesso ao S3 aos pontos finais da VPC.",
        "Explanation": "Configurar uma conexão VPN entre cada escritório regional e a AWS VPC garante que todas as transferências de dados ocorram por um canal seguro e criptografado. Isso protege dados sensíveis de acesso não autorizado durante a transmissão. Ao restringir o acesso ao S3 aos pontos finais da VPC, você melhora ainda mais a segurança, garantindo que apenas o tráfego originado da VPC possa acessar o bucket S3, isolando-o efetivamente da internet pública e reduzindo o risco de exposição a ameaças potenciais.",
        "Other Options": [
            "Usar URLs pré-assinadas do Amazon S3 permite acesso temporário para fazer upload de dados diretamente para o S3, mas não fornece um canal seguro para a transferência de dados. Se a URL pré-assinada for interceptada, usuários não autorizados podem obter acesso ao bucket S3, comprometendo a segurança dos dados.",
            "Implementar usuários IAM com chaves de acesso ao S3 para cada escritório regional pode fornecer controle de acesso, mas não garante a segurança da própria transferência de dados. Se as chaves de acesso forem comprometidas, usuários não autorizados podem acessar o bucket S3. Além disso, esse método não criptografa os dados em trânsito, deixando-os vulneráveis à interceptação.",
            "Habilitar acesso público ao bucket S3 e usar criptografia em nível de objeto é altamente inseguro. O acesso público significa que qualquer pessoa na internet pode potencialmente acessar os dados, o que contradiz o requisito de evitar acesso não autorizado. A criptografia em nível de objeto protege os dados em repouso, mas não garante a segurança dos dados durante a transferência, deixando-os vulneráveis à interceptação."
        ]
    },
    {
        "Question Number": "27",
        "Situation": "Uma empresa de streaming de mídia deseja melhorar o desempenho de seu aplicativo, que entrega conteúdo de vídeo para usuários em todo o mundo. A empresa precisa minimizar a latência e reduzir a carga nos servidores de backend.",
        "Question": "Qual estratégia de cache a empresa deve usar para garantir uma entrega rápida de conteúdo e manter alta disponibilidade?",
        "Options": {
            "1": "Usar o Amazon CloudFront como uma rede de entrega de conteúdo (CDN) para armazenar em cache o conteúdo de vídeo em locais de borda e armazenar conteúdo frequentemente acessado no Amazon S3 para armazenamento a longo prazo.",
            "2": "Usar o Amazon ElastiCache para armazenar em cache consultas de banco de dados e armazenar conteúdo de vídeo no Amazon DynamoDB, garantindo tempos de acesso rápidos para os usuários.",
            "3": "Usar instâncias do Amazon EC2 com um balanceador de carga para armazenar em cache o conteúdo de vídeo e armazenar o conteúdo em um sistema de arquivos tradicional para fácil recuperação.",
            "4": "Usar o Amazon RDS com réplicas de leitura para armazenar dados em cache e otimizar a entrega de vídeo, e armazenar conteúdo de mídia no Amazon EFS para acesso compartilhado."
        },
        "Correct Answer": "Usar o Amazon CloudFront como uma rede de entrega de conteúdo (CDN) para armazenar em cache o conteúdo de vídeo em locais de borda e armazenar conteúdo frequentemente acessado no Amazon S3 para armazenamento a longo prazo.",
        "Explanation": "Usar o Amazon CloudFront como uma CDN permite que a empresa de streaming de mídia armazene em cache o conteúdo de vídeo em locais de borda ao redor do mundo. Isso reduz significativamente a latência para os usuários, entregando conteúdo de um local mais próximo deles, em vez de um servidor centralizado. Além disso, armazenar conteúdo frequentemente acessado no Amazon S3 fornece uma solução de armazenamento escalável e durável, garantindo que o conteúdo esteja prontamente disponível para recuperação. Essa combinação otimiza o desempenho e mantém alta disponibilidade, tornando-se a melhor escolha para entrega rápida de conteúdo.",
        "Other Options": [
            "Usar o Amazon ElastiCache para armazenar em cache consultas de banco de dados e armazenar conteúdo de vídeo no Amazon DynamoDB não é ideal para entrega de conteúdo de vídeo. O ElastiCache é usado principalmente para armazenar em cache dados em memória para acelerar consultas de banco de dados, enquanto o DynamoDB é um banco de dados NoSQL que pode não ser otimizado para servir grandes arquivos de vídeo de forma eficiente.",
            "Usar instâncias do Amazon EC2 com um balanceador de carga para armazenar em cache o conteúdo de vídeo e armazenar o conteúdo em um sistema de arquivos tradicional não é uma estratégia eficiente. Essa abordagem exigiria mais gerenciamento e esforços de escalonamento, e sistemas de arquivos tradicionais podem não fornecer os mesmos benefícios de desempenho que uma CDN para entrega de conteúdo global.",
            "Usar o Amazon RDS com réplicas de leitura para armazenar dados em cache e otimizar a entrega de vídeo não é adequado para conteúdo de vídeo. O RDS é projetado para bancos de dados relacionais e não é otimizado para servir grandes arquivos de mídia. Além disso, o Amazon EFS é um serviço de armazenamento de arquivos que pode não fornecer os mesmos benefícios de desempenho que uma CDN para streaming de vídeo."
        ]
    },
    {
        "Question Number": "28",
        "Situation": "Uma empresa está executando um aplicativo em instâncias do Amazon EC2 que precisam acessar dados armazenados em um bucket do Amazon S3. Para evitar gerenciar credenciais de longo prazo, a empresa deseja fornecer de forma segura as permissões necessárias para as instâncias.",
        "Question": "Qual configuração atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Anexar um papel IAM com as permissões necessárias para acessar o bucket S3 a cada instância EC2. O papel fornecerá credenciais temporárias que são automaticamente rotacionadas.",
            "2": "Gerar manualmente uma chave de acesso IAM e uma chave de acesso secreta com permissões S3 e armazená-las em cada instância EC2 para que o aplicativo use.",
            "3": "Criar um usuário IAM com permissões de acesso ao S3, configurar as credenciais do usuário em cada instância EC2 e configurar um trabalho agendado para rotacionar as credenciais manualmente.",
            "4": "Usar o AWS Secrets Manager para armazenar credenciais de acesso ao S3 e recuperá-las no código do aplicativo em execução nas instâncias EC2."
        },
        "Correct Answer": "Anexar um papel IAM com as permissões necessárias para acessar o bucket S3 a cada instância EC2. O papel fornecerá credenciais temporárias que são automaticamente rotacionadas.",
        "Explanation": "Anexar um papel IAM a uma instância EC2 é a melhor prática para fornecer permissões para acessar recursos da AWS, como o S3. Esse método permite que a instância assuma o papel e receba credenciais de segurança temporárias que são automaticamente rotacionadas pela AWS. Isso elimina a necessidade de credenciais de longo prazo, melhora a segurança e simplifica o gerenciamento, uma vez que as credenciais são tratadas pela AWS e não precisam ser armazenadas ou rotacionadas manualmente.",
        "Other Options": [
            "Gerar manualmente uma chave de acesso IAM e uma chave de acesso secreta e armazená-las em cada instância EC2 não é seguro. Se essas credenciais forem comprometidas, podem ser usadas indefinidamente até serem revogadas manualmente. Além disso, gerenciar e rotacionar essas credenciais pode ser trabalhoso e propenso a erros.",
            "Criar um usuário IAM com permissões de acesso ao S3 e configurar as credenciais do usuário em cada instância EC2 também é inseguro. Semelhante à opção anterior, essa abordagem requer gerenciamento manual de credenciais de longo prazo, o que pode levar a vulnerabilidades de segurança se as credenciais forem vazadas ou não rotacionadas adequadamente.",
            "Usar o AWS Secrets Manager para armazenar credenciais de acesso ao S3 e recuperá-las no código do aplicativo é uma abordagem melhor do que armazenar credenciais diretamente na instância. No entanto, ainda envolve gerenciar credenciais, o que é desnecessário quando papéis IAM podem fornecer credenciais temporárias automaticamente. Isso adiciona complexidade sem benefícios significativos neste cenário."
        ]
    },
    {
        "Question Number": "29",
        "Situation": "Uma instituição financeira, a SecureBank, tem requisitos rigorosos de conformidade para criptografia de dados e gerenciamento de chaves. Para atender aos padrões regulatórios, a SecureBank deve usar um módulo de segurança de hardware (HSM) que cumpra o FIPS 140-2 Nível 3 para armazenamento e gerenciamento de chaves. Eles estão considerando o AWS CloudHSM e o AWS Key Management Service (KMS) para atender a esses requisitos. A SecureBank deseja controle total sobre o processo de gerenciamento de chaves e a capacidade de integrar com APIs padrão da indústria para fluxos de trabalho de criptografia personalizados. Eles também querem entender as diferenças no controle do cliente, níveis de conformidade e integração com serviços da AWS entre o AWS CloudHSM e o AWS KMS.",
        "Question": "Qual das seguintes opções explica melhor as principais diferenças entre o AWS CloudHSM e o AWS Key Management Service (KMS) em relação ao controle do cliente e níveis de conformidade, particularmente ao lidar com padrões de segurança rigorosos como o FIPS 140-2 Nível 3?",
        "Options": {
            "1": "O AWS CloudHSM e o AWS KMS fornecem ambos conformidade com o FIPS 140-2 Nível 3; no entanto, apenas o AWS CloudHSM é um serviço totalmente gerenciado e multi-inquilino, permitindo que os clientes gerenciem suas chaves de criptografia em um ambiente compartilhado.",
            "2": "O AWS CloudHSM é um módulo de segurança de hardware (HSM) de inquilino único provisionado pela AWS, mas totalmente gerenciado pelo cliente, oferecendo conformidade com o FIPS 140-2 Nível 3. Em contraste, o AWS KMS geralmente fornece conformidade com o Nível 2 e oferece uma integração mais profunda com os serviços da AWS, mas com menos controle do cliente sobre o gerenciamento de chaves.",
            "3": "O AWS CloudHSM é projetado para se integrar nativamente com serviços da AWS, como a Criptografia do Lado do Servidor do S3, proporcionando gerenciamento de criptografia sem costura. O AWS KMS, no entanto, é mais adequado para ambientes orientados à conformidade que necessitam de HSM controlado pelo cliente.",
            "4": "Ao contrário do AWS CloudHSM, o AWS KMS permite que os clientes usem APIs padrão da indústria, incluindo bibliotecas PKCS#11 e CNG, para integrar com outros fluxos de trabalho de criptografia, tornando-o mais adequado para implementações criptográficas personalizadas."
        },
        "Correct Answer": "O AWS CloudHSM é um módulo de segurança de hardware (HSM) de inquilino único provisionado pela AWS, mas totalmente gerenciado pelo cliente, oferecendo conformidade com o FIPS 140-2 Nível 3. Em contraste, o AWS KMS geralmente fornece conformidade com o Nível 2 e oferece uma integração mais profunda com os serviços da AWS, mas com menos controle do cliente sobre o gerenciamento de chaves.",
        "Explanation": "O AWS CloudHSM fornece aos clientes controle total sobre suas chaves de criptografia e é projetado para atender a requisitos rigorosos de conformidade, incluindo o FIPS 140-2 Nível 3. É uma solução de inquilino único, o que significa que o hardware é dedicado a um único cliente, o que aumenta a segurança e o controle. Por outro lado, o AWS Key Management Service (KMS) é um serviço multi-inquilino que simplifica o gerenciamento de chaves e se integra perfeitamente com outros serviços da AWS, mas não fornece o mesmo nível de controle sobre o gerenciamento de chaves que o CloudHSM. O KMS geralmente atende à conformidade com o FIPS 140-2 Nível 2, o que pode não satisfazer os requisitos regulatórios mais rigorosos que a SecureBank está enfrentando.",
        "Other Options": [
            "A opção 1 afirma incorretamente que tanto o AWS CloudHSM quanto o AWS KMS fornecem conformidade com o FIPS 140-2 Nível 3. Embora o CloudHSM atenda a esse padrão, o KMS normalmente atende à conformidade com o Nível 2, o que é uma distinção crítica para as necessidades da SecureBank.",
            "A opção 3 distorce as capacidades do AWS CloudHSM e do AWS KMS. O CloudHSM não é projetado principalmente para integração com serviços da AWS, como o S3; em vez disso, é focado em fornecer um ambiente seguro para gerenciamento de chaves. O KMS é, de fato, mais integrado com os serviços da AWS, mas não oferece o mesmo nível de controle que o CloudHSM.",
            "A opção 4 afirma incorretamente que o AWS KMS permite o uso de APIs padrão da indústria, como bibliotecas PKCS#11 e CNG, para implementações criptográficas personalizadas. Na realidade, o AWS CloudHSM suporta essas APIs, proporcionando a flexibilidade necessária para fluxos de trabalho de criptografia personalizados, enquanto o KMS não oferece o mesmo nível de controle ou suporte a APIs."
        ]
    },
    {
        "Question Number": "30",
        "Situation": "Um aplicativo móvel experimenta grandes picos de uso durante eventos importantes, exigindo que o aplicativo escale rapidamente. O aplicativo deve lidar com esses picos de forma eficiente, mantendo os custos sob controle.",
        "Question": "Quais estratégias de escalonamento atenderiam melhor a essas necessidades? (Escolha duas.)",
        "Options": {
            "1": "Escalonamento vertical ao atualizar para tipos de instância maiores durante tráfego intenso",
            "2": "Escalonamento horizontal com um grupo de Auto Scaling e políticas de escalonamento dinâmico",
            "3": "Escalonamento programado para adicionar recursos durante os horários dos eventos",
            "4": "Escalonamento manual adicionando instâncias com base na demanda projetada",
            "5": "Implementação de escalonamento preditivo usando o Amazon CloudWatch para antecipar picos de tráfego e ajustar a capacidade proativamente"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Escalonamento horizontal com um grupo de Auto Scaling e políticas de escalonamento dinâmico",
            "Implementação de escalonamento preditivo usando o Amazon CloudWatch para antecipar picos de tráfego e ajustar a capacidade proativamente"
        ],
        "Explanation": "O escalonamento horizontal com um grupo de Auto Scaling e políticas de escalonamento dinâmico é uma resposta correta porque permite que o aplicativo adicione mais instâncias à medida que a demanda aumenta e as remova à medida que a demanda diminui, o que é ideal para lidar com grandes picos de uso. A implementação de escalonamento preditivo usando o Amazon CloudWatch também é correta, pois usa algoritmos de aprendizado de máquina para prever a demanda futura e ajustar a capacidade proativamente, o que pode ajudar a lidar com picos de tráfego de forma eficiente e manter os custos sob controle.",
        "Other Options": [
            "O escalonamento vertical ao atualizar para tipos de instância maiores durante tráfego intenso não é uma solução ideal porque envolve aumentar a capacidade de uma única instância, o que pode ser caro e pode não fornecer a flexibilidade necessária para lidar com grandes picos de uso.",
            "O escalonamento programado para adicionar recursos durante os horários dos eventos pode não ser eficiente porque requer previsão precisa de quando os picos ocorrerão, o que pode nem sempre ser possível.",
            "O escalonamento manual adicionando instâncias com base na demanda projetada não é a melhor estratégia porque requer intervenção manual e pode não ser capaz de responder rapidamente a picos repentinos na demanda."
        ]
    },
    {
        "Question Number": "31",
        "Situation": "Uma empresa, XYZ Corp, está gerenciando informações sensíveis, como credenciais de banco de dados, chaves de API e outros segredos necessários para vários microsserviços em sua aplicação. Eles querem armazenar esses segredos de forma segura e garantir que cada aplicação possa acessá-los apenas quando necessário. Além disso, a XYZ Corp deseja que os segredos sejam rotacionados automaticamente, sem exigir atualizações manuais nas aplicações ou tempo de inatividade para mudanças de configuração. A equipe de segurança escolheu o AWS Secrets Manager para gerenciar e rotacionar esses segredos. Eles também querem garantir que os segredos sejam criptografados enquanto estão em repouso e acessíveis apenas a serviços e aplicações autorizados.",
        "Question": "Qual das seguintes etapas descreve corretamente como o AWS Secrets Manager lida com a recuperação e rotação de segredos para acesso seguro pelas aplicações?",
        "Options": {
            "1": "O Secrets Manager recupera segredos do AWS Key Management Service (KMS) e os atualiza periodicamente na aplicação diretamente para manter a sincronização.",
            "2": "A aplicação recupera segredos do Secrets Manager usando um SDK, e o Secrets Manager utiliza o AWS Lambda para a rotação automática de segredos, com segredos criptografados em repouso usando o KMS.",
            "3": "O Secrets Manager fornece rotação automática armazenando todos os segredos dentro de funções IAM, que são rotacionadas periodicamente através de políticas do AWS Identity and Access Management (IAM).",
            "4": "O AWS Secrets Manager recupera credenciais diretamente do IAM para autorização, e os segredos são rotacionados automaticamente sem a necessidade de funções Lambda."
        },
        "Correct Answer": "A aplicação recupera segredos do Secrets Manager usando um SDK, e o Secrets Manager utiliza o AWS Lambda para a rotação automática de segredos, com segredos criptografados em repouso usando o KMS.",
        "Explanation": "O AWS Secrets Manager permite que as aplicações recuperem segredos de forma segura usando os SDKs da AWS. Quando uma aplicação precisa de um segredo, ela chama a API do Secrets Manager, que recupera o segredo de um armazenamento seguro. O Secrets Manager também suporta a rotação automática de segredos, que pode ser implementada usando funções do AWS Lambda. Isso significa que os segredos podem ser atualizados sem intervenção manual, e as aplicações podem continuar a funcionar sem tempo de inatividade. Além disso, os segredos são criptografados em repouso usando o AWS Key Management Service (KMS), garantindo que informações sensíveis estejam protegidas.",
        "Other Options": [
            "O AWS Secrets Manager não recupera segredos do KMS diretamente. Em vez disso, ele gerencia os segredos por conta própria e usa o KMS para criptografia em repouso. Os segredos não são atualizados periodicamente na aplicação diretamente; em vez disso, as aplicações recuperam a versão mais recente do segredo quando necessário.",
            "O AWS Secrets Manager não armazena segredos dentro de funções IAM. O IAM é usado para gerenciar permissões e controle de acesso, mas o Secrets Manager gerencia os segredos em si e usa o Lambda para rotação, não políticas do IAM.",
            "O AWS Secrets Manager não recupera credenciais diretamente do IAM. Em vez disso, ele gerencia segredos de forma independente e usa funções Lambda para rotação automática. O IAM é usado para autorização e controle de acesso, mas não lida com a recuperação de segredos."
        ]
    },
    {
        "Question Number": "32",
        "Situation": "Uma empresa está gerenciando suas chaves de criptografia usando o AWS Key Management Service (AWS KMS) e deseja controlar o acesso a essas chaves com base nos papéis dos usuários.",
        "Question": "Qual método a empresa deve usar para definir permissões de acesso para as chaves KMS?",
        "Options": {
            "1": "Atribuir permissões diretamente aos usuários IAM",
            "2": "Usar políticas baseadas em recursos nas chaves KMS",
            "3": "Ativar a exclusão MFA nas chaves KMS",
            "4": "Configurar listas de controle de acesso (ACLs) para as chaves KMS"
        },
        "Correct Answer": "Usar políticas baseadas em recursos nas chaves KMS",
        "Explanation": "O AWS Key Management Service (KMS) permite que você defina permissões de acesso para chaves KMS usando políticas baseadas em recursos. Essas políticas são anexadas diretamente às chaves KMS e especificam quais usuários IAM, papéis ou serviços podem realizar ações específicas nas chaves. Esse método fornece controle detalhado sobre o acesso e é a abordagem recomendada para gerenciar permissões para chaves KMS, pois permite definir permissões no nível do recurso, em vez de no nível do usuário.",
        "Other Options": [
            "Atribuir permissões diretamente aos usuários IAM não é a melhor prática para gerenciar o acesso às chaves KMS, pois não fornece a granularidade necessária e pode levar a uma complexidade de gerenciamento. Políticas baseadas em recursos são preferidas para gerenciamento de chaves.",
            "Ativar a exclusão MFA é um recurso associado principalmente ao Amazon S3 e não se aplica às chaves KMS. Embora a MFA (Autenticação Multifator) possa aumentar a segurança, não controla diretamente as permissões de acesso às chaves KMS.",
            "Configurar listas de controle de acesso (ACLs) não é aplicável às chaves KMS. O KMS usa políticas IAM e políticas baseadas em recursos para controle de acesso, enquanto as ACLs são tipicamente usadas em outros serviços da AWS, como o S3."
        ]
    },
    {
        "Question Number": "33",
        "Situation": "Uma empresa precisa armazenar conteúdo gerado por usuários, incluindo imagens, vídeos e documentos, com a capacidade de escalar o armazenamento facilmente e fornecer acesso rápido. A empresa está em busca de uma solução que possa lidar com grandes quantidades de dados não estruturados e suportar alta disponibilidade. Eles também querem garantir que a solução de armazenamento seja econômica e facilmente acessível por vários serviços.",
        "Question": "Qual tipo de armazenamento da AWS a empresa deve usar para armazenar esses dados e quais são suas características?",
        "Options": {
            "1": "Usar o Amazon S3 (armazenamento de objetos) para armazenar arquivos, pois é altamente escalável e adequado para dados não estruturados com fácil acesso via HTTP/HTTPS.",
            "2": "Usar o Amazon EBS (armazenamento em bloco) para armazenar grandes arquivos de vídeo, pois fornece acesso de baixa latência aos dados e alta taxa de transferência para aplicações sensíveis ao desempenho.",
            "3": "Usar o Amazon EFS (armazenamento de arquivos) para armazenar conteúdo gerado por usuários, pois fornece acesso compartilhado a arquivos entre várias instâncias EC2 com capacidade de armazenamento escalável.",
            "4": "Usar o Amazon RDS (banco de dados relacional) para armazenar conteúdo gerado por usuários devido à sua forte consistência e modelo de dados estruturado."
        },
        "Correct Answer": "Usar o Amazon S3 (armazenamento de objetos) para armazenar arquivos, pois é altamente escalável e adequado para dados não estruturados com fácil acesso via HTTP/HTTPS.",
        "Explanation": "O Amazon S3 (Simple Storage Service) é projetado para armazenar e recuperar qualquer quantidade de dados de qualquer lugar na web. É um serviço de armazenamento de objetos que é altamente escalável, tornando-o ideal para conteúdo gerado por usuários, como imagens, vídeos e documentos. O S3 suporta dados não estruturados e fornece alta disponibilidade, permitindo fácil acesso via HTTP/HTTPS. Além disso, é econômico, pois os usuários pagam apenas pelo armazenamento que utilizam, e se integra bem com vários serviços da AWS, tornando-o acessível para várias aplicações.",
        "Other Options": [
            "Usar o Amazon EBS (Elastic Block Store) não é ideal para armazenar grandes arquivos de vídeo neste cenário, pois o EBS é um armazenamento em bloco que é usado principalmente para dados que requerem acesso de baixa latência e alta taxa de transferência, tipicamente para aplicações em execução em instâncias EC2. Não é projetado para armazenamento de dados não estruturados em grande escala e é mais adequado para bancos de dados ou aplicações que precisam de acesso rápido a blocos de dados.",
            "Usar o Amazon EFS (Elastic File System) poderia fornecer acesso compartilhado a arquivos entre várias instâncias EC2, mas é mais adequado para cenários onde o armazenamento de arquivos é necessário, em vez de armazenamento de objetos. O EFS também é geralmente mais caro que o S3 para grandes quantidades de dados não estruturados e não oferece o mesmo nível de escalabilidade e custo-benefício que o S3 para armazenar grandes volumes de conteúdo gerado por usuários.",
            "Usar o Amazon RDS (Relational Database Service) é inadequado para armazenar conteúdo gerado por usuários porque o RDS é projetado para dados estruturados e bancos de dados relacionais. Não é otimizado para dados não estruturados, como imagens e vídeos, e usá-lo para tais fins não seria econômico ou eficiente, pois exigiria esquemas de banco de dados complexos e gerenciamento."
        ]
    },
    {
        "Question Number": "34",
        "Situation": "Uma organização federou seu provedor de identidade local com a AWS para permitir que os usuários assumam papéis usando SAML. A organização deseja impor autenticação multifator (MFA) para todos os usuários federados que acessam o AWS Management Console.",
        "Question": "Qual é a melhor abordagem para impor MFA neste cenário? (Escolha dois.)",
        "Options": {
            "1": "Configurar as configurações de MFA nas funções IAM da AWS usadas para acesso federado",
            "2": "Exigir MFA através do provedor de identidade local da organização",
            "3": "Ativar MFA no nível da conta raiz da AWS",
            "4": "Configurar um pool de usuários do Amazon Cognito com requisitos de MFA",
            "5": "Usar políticas IAM da AWS para exigir autenticação MFA para a assunção de papéis"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Exigir MFA através do provedor de identidade local da organização",
            "Usar políticas IAM da AWS para exigir autenticação MFA para a assunção de papéis"
        ],
        "Explanation": "Neste cenário, a melhor abordagem para impor MFA para todos os usuários federados que acessam o AWS Management Console é exigir MFA através do provedor de identidade local da organização e usar políticas IAM da AWS para exigir autenticação MFA para a assunção de papéis. O provedor de identidade local é responsável pela autenticação inicial do usuário, incluindo MFA. Após a autenticação do usuário, o provedor de identidade gera uma asserção SAML que é usada para solicitar credenciais de segurança temporárias e assumir um papel IAM. As políticas IAM da AWS podem ser usadas para impor MFA no momento da assunção do papel, garantindo que o usuário tenha se autenticado com MFA antes de poder assumir o papel.",
        "Other Options": [
            "Configurar as configurações de MFA nas funções IAM da AWS usadas para acesso federado não é possível, pois a imposição de MFA não é uma configuração que pode ser definida diretamente nas funções IAM.",
            "Ativar MFA no nível da conta raiz da AWS não imporia MFA para usuários federados. A MFA no nível da conta raiz se aplica apenas ao usuário raiz da conta, não a usuários IAM ou usuários federados.",
            "Configurar um pool de usuários do Amazon Cognito com requisitos de MFA não imporia MFA para usuários federados que acessam o AWS Management Console. O Amazon Cognito é usado para construir, proteger e escalar a autenticação de usuários em aplicações móveis e web, não para impor MFA para usuários federados que acessam o AWS Management Console."
        ]
    },
    {
        "Question Number": "35",
        "Situation": "Uma aplicação para processar dados de negociação de ações em tempo real requer alto desempenho de CPU, mas não precisa de muita memória. A empresa deseja otimizar custos escolhendo o tipo de instância mais adequado.",
        "Question": "Qual família de instâncias atenderia melhor a esses requisitos de desempenho e custo?",
        "Options": {
            "1": "Otimizado para Memória",
            "2": "Otimizado para Computação",
            "3": "Otimizado para Armazenamento",
            "4": "Computação Acelerada"
        },
        "Correct Answer": "Otimizado para Computação",
        "Explanation": "A família de instâncias Otimizado para Computação é especificamente projetada para aplicações que requerem alto desempenho de CPU. Como a aplicação em questão está processando dados de negociação de ações em tempo real, ela se beneficiará do aumento de poder de processamento fornecido por essas instâncias. Além disso, as instâncias Otimizadas para Computação são geralmente mais econômicas para cargas de trabalho intensivas em CPU em comparação com outros tipos de instâncias que podem oferecer mais memória ou capacidades de armazenamento do que o necessário.",
        "Other Options": [
            "As instâncias Otimizadas para Memória são projetadas para aplicações que requerem alto desempenho de memória. Como a aplicação não precisa de muita memória, essa opção não seria adequada e provavelmente incorreria em custos desnecessários.",
            "As instâncias Otimizadas para Armazenamento são adaptadas para cargas de trabalho que requerem alta taxa de transferência de armazenamento e IOPS. Dado que a aplicação não tem necessidades significativas de armazenamento, esse tipo de instância não seria apropriado e não otimizaría custos.",
            "As instâncias de Computação Acelerada são projetadas para cargas de trabalho que se beneficiam de aceleradores de hardware, como GPUs. Essas instâncias são tipicamente usadas para aprendizado de máquina, renderização gráfica ou outras tarefas especializadas. Como a aplicação se concentra no desempenho da CPU e não requer aceleração, essa opção não atenderia aos requisitos de forma eficaz."
        ]
    },
    {
        "Question Number": "36",
        "Situation": "Uma plataforma de e-commerce experimenta um alto tráfego de leitura para catálogos de produtos, o que impacta o desempenho do banco de dados principal. A empresa deseja descarregar operações de leitura para melhorar a escalabilidade sem comprometer a consistência dos dados.",
        "Question": "Qual estratégia o arquiteto de soluções deve implementar para alcançar isso?",
        "Options": {
            "1": "Habilitar a implantação Multi-AZ para a instância do Amazon RDS para distribuir o tráfego de leitura.",
            "2": "Criar Réplicas de Leitura do Amazon RDS e configurar o aplicativo para direcionar consultas de leitura para as réplicas.",
            "3": "Usar o Amazon DynamoDB com Tabelas Globais para lidar com a escalabilidade de leitura.",
            "4": "Implementar uma configuração de replicação mestre-escravo usando instâncias do Amazon EC2 e MySQL."
        },
        "Correct Answer": "Criar Réplicas de Leitura do Amazon RDS e configurar o aplicativo para direcionar consultas de leitura para as réplicas.",
        "Explanation": "Criar Réplicas de Leitura do Amazon RDS permite que a plataforma de e-commerce descarregue o tráfego de leitura do banco de dados principal. As réplicas de leitura são projetadas especificamente para lidar com operações de leitura, o que ajuda a melhorar a escalabilidade e o desempenho sem comprometer a consistência dos dados. As réplicas replicam os dados do banco de dados principal de forma assíncrona, garantindo que as consultas de leitura possam ser direcionadas a essas réplicas, reduzindo assim a carga na instância principal e melhorando o desempenho geral do aplicativo.",
        "Other Options": [
            "Habilitar a implantação Multi-AZ para a instância do Amazon RDS foca principalmente na alta disponibilidade e nas capacidades de failover, em vez de escalar operações de leitura. Embora forneça redundância, não ajuda a distribuir o tráfego de leitura de forma eficaz.",
            "Usar o Amazon DynamoDB com Tabelas Globais é uma solução de banco de dados diferente que pode não ser adequada se a arquitetura existente depender do Amazon RDS. Além disso, pode introduzir complexidade na migração de dados e garantir compatibilidade com o aplicativo atual.",
            "Implementar uma configuração de replicação mestre-escravo usando instâncias do Amazon EC2 e MySQL requer mais gerenciamento e não aproveita as capacidades integradas do Amazon RDS. Essa abordagem também pode introduzir desafios de consistência e é menos eficiente em comparação com o uso de Réplicas de Leitura do RDS."
        ]
    },
    {
        "Question Number": "37",
        "Situation": "Uma equipe de marketing precisa analisar dados de clickstream armazenados no Amazon S3 para obter insights sobre o comportamento do usuário e melhorar o engajamento no site. Eles querem executar consultas SQL diretamente nesses dados sem configurar um data warehouse completo ou gerenciar servidores. Além disso, desejam uma solução que permita pagar apenas pelos dados que realmente consultam, possibilitando economia de custos enquanto mantêm a infraestrutura mínima e sem servidor.",
        "Question": "Qual serviço da AWS atenderia melhor às suas necessidades?",
        "Options": {
            "1": "Amazon Redshift",
            "2": "Amazon EMR",
            "3": "Amazon RDS",
            "4": "Amazon Athena"
        },
        "Correct Answer": "Amazon Athena",
        "Explanation": "O Amazon Athena é um serviço de consulta interativa sem servidor que permite aos usuários analisar dados diretamente no Amazon S3 usando SQL padrão. É projetado para consultas ad-hoc e não requer gerenciamento de infraestrutura, tornando-o ideal para as necessidades da equipe de marketing. Com o Athena, os usuários pagam apenas pelas consultas que executam, o que se alinha ao seu objetivo de economia de custos enquanto mantém a infraestrutura mínima.",
        "Other Options": [
            "O Amazon Redshift é um serviço de data warehouse totalmente gerenciado que requer a configuração de um cluster e gerenciamento de recursos. Não é sem servidor e envolveria custos e complexidade mais altos para a equipe de marketing, que busca uma solução mais simples.",
            "O Amazon EMR (Elastic MapReduce) é uma plataforma de big data em nuvem que permite processar grandes quantidades de dados usando frameworks como Apache Hadoop e Apache Spark. No entanto, requer mais gerenciamento e configuração em comparação com uma solução sem servidor como o Athena, tornando-o menos adequado para as necessidades da equipe.",
            "O Amazon RDS (Relational Database Service) é um serviço de banco de dados relacional gerenciado que requer a provisão e gerenciamento de instâncias de banco de dados. Não é projetado para consultar dados diretamente do S3 e envolveria mais sobrecarga do que a equipe de marketing deseja."
        ]
    },
    {
        "Question Number": "38",
        "Situation": "Uma empresa de produção de vídeo armazena milhares de arquivos de vídeo, que raramente são acessados após a produção inicial. Eles desejam uma solução de armazenamento econômica que permita arquivar esses arquivos, mas ainda recuperá-los dentro de alguns minutos quando necessário.",
        "Question": "Qual serviço de armazenamento da AWS atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Amazon EFS",
            "2": "Amazon S3 Glacier Instant Retrieval",
            "3": "Amazon FSx for Windows File Server",
            "4": "Amazon EBS Provisioned IOPS"
        },
        "Correct Answer": "Amazon S3 Glacier Instant Retrieval",
        "Explanation": "O Amazon S3 Glacier Instant Retrieval é projetado especificamente para arquivamento de dados a longo prazo com a capacidade de recuperar dados rapidamente, normalmente em milissegundos. Este serviço é ideal para a empresa de produção de vídeo, pois permite armazenar grandes quantidades de arquivos de vídeo raramente acessados de forma econômica, enquanto ainda fornece a capacidade de acessar esses arquivos dentro de alguns minutos quando necessário. O recurso 'Instant Retrieval' garante que o tempo de recuperação esteja alinhado com a necessidade da empresa de acesso rápido a arquivos arquivados.",
        "Other Options": [
            "O Amazon EFS (Elastic File System) é projetado para acesso de baixa latência a armazenamento de arquivos compartilhados e não é econômico para arquivamento a longo prazo de dados raramente acessados. É mais adequado para aplicativos que requerem acesso frequente a dados.",
            "O Amazon FSx for Windows File Server fornece sistemas de arquivos Windows totalmente gerenciados, mas também não é otimizado para arquivamento a longo prazo. É mais adequado para aplicativos que requerem armazenamento de arquivos compartilhados com compatibilidade com Windows e acesso de baixa latência.",
            "O Amazon EBS (Elastic Block Store) Provisioned IOPS é projetado para armazenamento em bloco de alto desempenho para instâncias do EC2. Não é adequado para arquivar grandes quantidades de dados raramente acessados, pois é mais caro e destinado a cargas de trabalho que requerem desempenho consistente e de baixa latência."
        ]
    },
    {
        "Question Number": "39",
        "Situation": "Uma organização usa um Auto Scaling Group (ASG) para gerenciar sua frota de instâncias do EC2, respondendo a níveis de demanda variados. Seu objetivo é ajustar automaticamente o número de instâncias para manter uma média geral de utilização de CPU de 40%.",
        "Question": "Que tipo de política de escalonamento a organização deve implementar para alcançar esse objetivo de forma eficaz, e por quê?",
        "Options": {
            "1": "Escalonamento Manual: Fornece controle direto sobre a capacidade desejada com base em monitoramento em tempo real.",
            "2": "Escalonamento Programado: Ajusta a capacidade em horários predeterminados de acordo com as tendências de demanda previstas.",
            "3": "Escalonamento Dinâmico com Rastreamento de Meta: Modifica automaticamente a capacidade para manter a meta de utilização de CPU especificada.",
            "4": "Escalonamento Simples: Aumenta ou diminui a capacidade com base em gatilhos de limite de CPU individuais."
        },
        "Correct Answer": "Escalonamento Dinâmico com Rastreamento de Meta",
        "Explanation": "O Escalonamento Dinâmico com Rastreamento de Meta é a política de escalonamento mais eficaz para o objetivo da organização de manter uma média geral de utilização de CPU de 40%. Essa política ajusta automaticamente o número de instâncias do EC2 no Auto Scaling Group com base em métricas em tempo real, visando especificamente o nível de utilização de CPU especificado. Ao monitorar continuamente a utilização da CPU e fazer ajustes conforme necessário, a organização pode garantir que atenda às suas metas de desempenho sem intervenção manual, otimizando assim o uso de recursos e custos.",
        "Other Options": [
            "O Escalonamento Manual requer intervenção humana direta para ajustar a capacidade desejada, o que não é eficiente para responder a níveis de demanda variados. Essa abordagem não fornece a automação necessária para manter uma meta específica de utilização de CPU de forma eficaz.",
            "O Escalonamento Programado ajusta a capacidade em horários predeterminados, o que pode não se alinhar com as flutuações reais da demanda. Esse método é menos responsivo a mudanças em tempo real na carga de trabalho e pode levar a sobrecarga ou subprovisionamento de recursos.",
            "O Escalonamento Simples aumenta ou diminui a capacidade com base em gatilhos de limite de CPU individuais, o que pode levar a ações de escalonamento rápidas que podem não estabilizar a utilização da CPU na média desejada de 40%. Esse método carece do recurso de ajuste contínuo do rastreamento de metas, tornando-o menos adequado para manter um nível específico de utilização."
        ]
    },
    {
        "Question Number": "40",
        "Situation": "Uma empresa está implantando um banco de dados altamente disponível na AWS usando o Amazon RDS e deseja garantir failover automático para uma instância de espera em caso de uma falha. Eles também precisam descarregar algum tráfego de leitura e melhorar o desempenho de leitura.",
        "Question": "Qual configuração do Amazon RDS eles devem escolher, e quais benefícios isso oferece? (Escolha dois.)",
        "Options": {
            "1": "Usar a Arquitetura de Instância Multi-AZ do Amazon RDS para replicação síncrona para uma instância de espera, proporcionando failover automático na mesma região, com backups feitos a partir da instância de espera para melhorar o desempenho.",
            "2": "Configurar a Arquitetura de Cluster Multi-AZ do Amazon RDS com uma instância escritora e duas instâncias leitoras em diferentes Zonas de Disponibilidade, permitindo que o tráfego de leitura seja descarregado e proporcionando tempos de failover mais rápidos com replicação baseada em log de transações.",
            "3": "Configurar o Amazon RDS em uma única Zona de Disponibilidade com snapshots frequentes para o S3 para backup, garantindo durabilidade dos dados, mas não fornecendo failover automático.",
            "4": "Implantar o Amazon RDS com replicação entre regiões para permitir failover para outra região da AWS, reduzindo o risco de falhas regionais, mas não suportando replicação síncrona.",
            "5": "Implementar Réplicas de Leitura do Amazon RDS na mesma região para distribuir o tráfego de leitura e melhorar o desempenho de leitura, enquanto mantém uma configuração Multi-AZ para failover automático."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Usar a Arquitetura de Instância Multi-AZ do Amazon RDS para replicação síncrona para uma instância de espera, proporcionando failover automático na mesma região, com backups feitos a partir da instância de espera para melhorar o desempenho.",
            "Implementar Réplicas de Leitura do Amazon RDS na mesma região para distribuir o tráfego de leitura e melhorar o desempenho de leitura, enquanto mantém uma configuração Multi-AZ para failover automático."
        ],
        "Explanation": "A primeira resposta correta é válida porque as implantações Multi-AZ do Amazon RDS fornecem alta disponibilidade e suporte a failover para instâncias de banco de dados. Elas funcionam replicando automaticamente os dados para uma instância de espera em uma Zona de Disponibilidade (AZ) diferente. No caso de uma falha, o Amazon RDS realiza um failover automático para a instância de espera, permitindo que você retome as operações do banco de dados assim que o failover estiver completo. A segunda resposta correta é válida porque as Réplicas de Leitura do Amazon RDS fornecem desempenho e durabilidade aprimorados para instâncias de banco de dados (DB). Esse recurso facilita a escalabilidade elástica além das restrições de capacidade de uma única instância de banco de dados para cargas de trabalho de banco de dados com alta demanda de leitura.",
        "Other Options": [
            "A opção 'Configurar a Arquitetura de Cluster Multi-AZ do Amazon RDS com uma instância escritora e duas instâncias leitoras em diferentes Zonas de Disponibilidade, permitindo que o tráfego de leitura seja descarregado e proporcionando tempos de failover mais rápidos com replicação baseada em log de transações.' está incorreta porque o Amazon RDS não suporta uma configuração com uma instância escritora e duas instâncias leitoras em uma implantação Multi-AZ.",
            "A opção 'Configurar o Amazon RDS em uma única Zona de Disponibilidade com snapshots frequentes para o S3 para backup, garantindo durabilidade dos dados, mas não fornecendo failover automático.' está incorreta porque essa configuração não fornece failover automático, que é um requisito na pergunta.",
            "A opção 'Implantar o Amazon RDS com replicação entre regiões para permitir failover para outra região da AWS, reduzindo o risco de falhas regionais, mas não suportando replicação síncrona.' está incorreta porque a replicação entre regiões não suporta replicação síncrona, que é necessária para failover automático."
        ]
    },
    {
        "Question Number": "41",
        "Situation": "Um aplicativo em execução em instâncias do Amazon EC2 em uma sub-rede pública precisa se comunicar de forma segura com um banco de dados Amazon RDS hospedado em uma sub-rede privada.",
        "Question": "Como o aplicativo deve ser configurado para permitir acesso seguro ao banco de dados?",
        "Options": {
            "1": "Adicionar uma regra de entrada ao grupo de segurança do RDS para permitir todo o tráfego da internet",
            "2": "Usar um NAT gateway para rotear o tráfego da sub-rede pública para a sub-rede privada",
            "3": "Criar uma conexão de VPC peering entre as sub-redes pública e privada",
            "4": "Configurar as instâncias do EC2 para usar o endereço IP privado do banco de dados e permitir acesso através do grupo de segurança do RDS"
        },
        "Correct Answer": "Configurar as instâncias do EC2 para usar o endereço IP privado do banco de dados e permitir acesso através do grupo de segurança do RDS",
        "Explanation": "Para permitir acesso seguro das instâncias do EC2 na sub-rede pública ao banco de dados RDS na sub-rede privada, as instâncias do EC2 devem se conectar usando o endereço IP privado do banco de dados. Isso garante que o tráfego não atravesse a internet pública, mantendo a segurança. Além disso, o grupo de segurança do RDS deve ser configurado para permitir tráfego de entrada do grupo de segurança das instâncias do EC2, garantindo que apenas o tráfego autorizado seja permitido.",
        "Other Options": [
            "Adicionar uma regra de entrada ao grupo de segurança do RDS para permitir todo o tráfego da internet é inseguro e não recomendado. Isso exporia o banco de dados RDS a potenciais ataques de qualquer fonte da internet, comprometendo sua segurança.",
            "Usar um NAT gateway para rotear o tráfego da sub-rede pública para a sub-rede privada não é necessário para este cenário. NAT gateways são tipicamente usados para permitir que instâncias em uma sub-rede privada acessem a internet, não para comunicação entre sub-redes públicas e privadas dentro da mesma VPC.",
            "Criar uma conexão de VPC peering entre as sub-redes pública e privada é desnecessário porque ambas as sub-redes já fazem parte da mesma VPC. O VPC peering é usado para conectar diferentes VPCs, não sub-redes dentro da mesma VPC."
        ]
    },
    {
        "Question Number": "42",
        "Situation": "Uma empresa de biotecnologia está implantando um aplicativo de alto desempenho que requer orquestração de contêineres em várias Zonas de Disponibilidade para resiliência e escalabilidade. Eles preferem uma solução gerenciada que se integre com serviços da AWS como IAM para segurança e EBS para armazenamento. A plataforma também deve ser de código aberto e independente de nuvem para proporcionar flexibilidade para implantações futuras fora da AWS.",
        "Question": "Qual configuração de serviço da AWS atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Amazon ECS com Fargate e integração com EBS",
            "2": "Amazon EKS com grupos de nós gerenciados e plano de controle multi-AZ",
            "3": "Instâncias do Amazon EC2 com Docker e replicação entre AZs",
            "4": "AWS Batch com replicação entre regiões"
        },
        "Correct Answer": "Amazon EKS com grupos de nós gerenciados e plano de controle multi-AZ",
        "Explanation": "O Amazon EKS (Elastic Kubernetes Service) é um serviço gerenciado de Kubernetes que fornece orquestração de contêineres em várias Zonas de Disponibilidade, garantindo resiliência e escalabilidade. Ele se integra perfeitamente com serviços da AWS como IAM para segurança e EBS para armazenamento. O EKS também é de código aberto e independente de nuvem, permitindo flexibilidade em implantações futuras fora da AWS. Os grupos de nós gerenciados simplificam a gestão das instâncias EC2 subjacentes, e o plano de controle multi-AZ melhora a disponibilidade e a tolerância a falhas.",
        "Other Options": [
            "Amazon ECS com Fargate e integração com EBS é uma opção viável para orquestração de contêineres, mas não é tão independente de nuvem quanto o EKS. O ECS está mais integrado aos serviços da AWS e não oferece o mesmo nível de flexibilidade para implantações futuras fora da AWS.",
            "Instâncias do Amazon EC2 com Docker e replicação entre AZs exigiriam mais gerenciamento manual e configuração em comparação com um serviço gerenciado como o EKS. Embora possa alcançar os resultados desejados, não oferece o mesmo nível de integração com os serviços da AWS ou a facilidade de uso que vem com uma solução gerenciada.",
            "AWS Batch com replicação entre regiões é projetado para processamento em lote, em vez de aplicações contínuas de alto desempenho. Não fornece as capacidades de orquestração de contêineres necessárias para o cenário descrito e não é adequado para aplicações que requerem escalabilidade e resiliência em tempo real."
        ]
    },
    {
        "Question Number": "43",
        "Situation": "Uma empresa de serviços financeiros requer uma conexão segura e de baixa latência entre seu data center local e a AWS para suportar processamento de dados em tempo real e operações de trading. Para reduzir custos de rede enquanto garante confiabilidade, a empresa está buscando uma conexão privada e consistente para transferências de dados críticas que evitem a internet pública, evitando riscos de segurança e desempenho associados.",
        "Question": "Qual opção de conectividade de rede atenderia melhor a essas necessidades?",
        "Options": {
            "1": "Estabelecer uma VPN Site-to-Site da AWS, permitindo transferência de dados criptografados pela internet pública para uma solução de baixo custo",
            "2": "Configurar o AWS Direct Connect para uma conexão de rede dedicada e privada que fornece largura de banda segura e consistente",
            "3": "Usar uma conexão de internet regular com AWS Shield para proteger contra ataques DDoS e garantir segurança",
            "4": "Configurar VPC Peering para estabelecer um link direto entre o data center local e a AWS, proporcionando conectividade segura"
        },
        "Correct Answer": "Configurar o AWS Direct Connect para uma conexão de rede dedicada e privada que fornece largura de banda segura e consistente",
        "Explanation": "O AWS Direct Connect é projetado especificamente para fornecer uma conexão dedicada e privada entre um data center local e a AWS. Esta opção evita a internet pública, garantindo menor latência, maior confiabilidade e segurança aprimorada para transferências de dados críticas. É ideal para processamento de dados em tempo real e operações de trading, pois oferece largura de banda consistente e redução de custos de rede em comparação com conexões de internet tradicionais.",
        "Other Options": [
            "Estabelecer uma VPN Site-to-Site da AWS permite a transferência de dados criptografados pela internet pública, o que não atende ao requisito de uma conexão privada. Embora seja uma solução de baixo custo, introduz latência e potenciais riscos de segurança associados ao tráfego da internet pública.",
            "Usar uma conexão de internet regular com AWS Shield fornece proteção contra ataques DDoS, mas não oferece a conexão dedicada e privada que a empresa requer. Esta opção ainda depende da internet pública, o que pode levar a problemas de desempenho e vulnerabilidades de segurança.",
            "Configurar VPC Peering cria um link direto entre duas VPCs, mas não estabelece uma conexão entre um data center local e a AWS. Não é adequado para as necessidades da empresa, pois não fornece a conexão de rede dedicada e privada necessária para transferências de dados seguras e consistentes."
        ]
    },
    {
        "Question Number": "44",
        "Situation": "Uma empresa está projetando um aplicativo globalmente resiliente que requer alta disponibilidade e baixa latência para usuários em várias regiões geográficas. Eles também querem garantir que falhas em uma região ou Zona de Disponibilidade (AZ) não impactem a disponibilidade do aplicativo em outros locais.",
        "Question": "Qual serviço ou recurso da AWS melhor apoia essas necessidades aproveitando a infraestrutura global da AWS?",
        "Options": {
            "1": "Usar o Amazon Route 53 com roteamento baseado em latência para direcionar usuários à região da AWS mais próxima, melhorando a baixa latência e permitindo isolamento de falhas regionais.",
            "2": "Implantar o aplicativo em uma única Zona de Disponibilidade dentro de uma região da AWS, usando snapshots para fazer backup de dados para resiliência.",
            "3": "Usar o Amazon S3 com replicação entre regiões para espelhar dados em várias Zonas de Disponibilidade dentro de uma única região.",
            "4": "Implantar globalmente usando locais de borda do Amazon CloudFront para garantir acesso de baixa latência, sem isolamento total de falhas no nível regional ou de AZ."
        },
        "Correct Answer": "Usar o Amazon Route 53 com roteamento baseado em latência para direcionar usuários à região da AWS mais próxima, melhorando a baixa latência e permitindo isolamento de falhas regionais.",
        "Explanation": "O Amazon Route 53 é um serviço de sistema de nomes de domínio (DNS) altamente disponível e escalável que fornece roteamento baseado em latência. Este recurso permite que o aplicativo direcione usuários à região da AWS mais próxima, minimizando a latência e melhorando o desempenho. Além disso, ao rotear o tráfego para diferentes regiões, garante que, se uma região sofrer uma falha, os usuários ainda possam acessar o aplicativo de outra região, proporcionando assim isolamento de falhas regionais e alta disponibilidade em locais geográficos.",
        "Other Options": [
            "Implantar o aplicativo em uma única Zona de Disponibilidade dentro de uma região da AWS não fornece a resiliência ou alta disponibilidade necessárias. Se essa AZ falhar, o aplicativo ficaria completamente indisponível, o que contradiz o requisito de isolamento de falhas.",
            "Usar o Amazon S3 com replicação entre regiões aborda apenas a durabilidade e disponibilidade dos dados, mas não garante baixa latência para os usuários ou fornece isolamento de falhas em nível de aplicativo. É focado principalmente no armazenamento de dados, em vez de desempenho de aplicativo entre regiões.",
            "Implantar globalmente usando locais de borda do Amazon CloudFront pode melhorar a latência para entrega de conteúdo, mas não fornece isolamento total de falhas no nível regional ou de AZ. Se o servidor de origem em uma região específica falhar, os usuários ainda podem experimentar tempo de inatividade, o que não atende ao requisito de alta disponibilidade."
        ]
    },
    {
        "Question Number": "45",
        "Situation": "Uma empresa de mídia precisa entregar conteúdo rapidamente a um público global, reduzindo a latência e melhorando a experiência do usuário. Eles também querem armazenar em cache o conteúdo mais próximo dos usuários para reduzir a carga em seus servidores de origem.",
        "Question": "Qual serviço da AWS atenderia melhor a esses requisitos e que benefício ele proporciona?",
        "Options": {
            "1": "Amazon CloudFront",
            "2": "Amazon S3",
            "3": "AWS Direct Connect",
            "4": "Amazon API Gateway"
        },
        "Correct Answer": "Amazon CloudFront",
        "Explanation": "O Amazon CloudFront é um serviço de rede de entrega de conteúdo (CDN) que armazena em cache o conteúdo em locais de borda ao redor do mundo. Isso permite reduzir a latência e acelerar a entrega de conteúdo aos usuários, uma vez que o conteúdo é servido de um local mais próximo deles. Ao armazenar em cache o conteúdo mais próximo dos usuários, o CloudFront também reduz a carga nos servidores de origem, melhorando o desempenho geral e a experiência do usuário. Isso o torna a melhor escolha para a empresa de mídia que busca entregar conteúdo de forma rápida e eficiente a um público global.",
        "Other Options": [
            "O Amazon S3 é um serviço de armazenamento escalável que permite armazenar e recuperar qualquer quantidade de dados. Embora possa ser usado para armazenar conteúdo, não fornece os recursos de cache e distribuição global que são essenciais para reduzir a latência e melhorar a experiência do usuário neste cenário.",
            "O AWS Direct Connect é um serviço que fornece uma conexão de rede dedicada de suas instalações para a AWS. É usado principalmente para estabelecer uma conexão privada com os serviços da AWS, o que pode melhorar a largura de banda e reduzir a latência para transferência de dados, mas não aborda a necessidade de entrega de conteúdo e cache para um público global.",
            "O Amazon API Gateway é um serviço para criar, publicar e gerenciar APIs. Embora possa ajudar na construção de aplicações serverless e no gerenciamento de chamadas de API, não fornece as capacidades de entrega de conteúdo e cache necessárias para entregar rapidamente conteúdo de mídia a um público global."
        ]
    },
    {
        "Question Number": "46",
        "Situation": "Um prestador de serviços de saúde armazena dados de pacientes na AWS e precisa cumprir com as regulamentações de proteção de dados e privacidade, que exigem controle de acesso rigoroso e gerenciamento do ciclo de vida dos dados. O prestador precisa garantir que o acesso aos dados seja limitado a usuários autorizados, que os dados sejam criptografados e que dados antigos sejam arquivados ou excluídos de acordo com a política.",
        "Question": "Quais ações o prestador de serviços de saúde deve tomar para implementar políticas de acesso seguro aos dados, gerenciamento do ciclo de vida e proteção?",
        "Options": {
            "1": "Usar políticas IAM para controlar o acesso aos dados, implementar Políticas de Ciclo de Vida do S3 para gerenciar a idade dos dados e configurar a criptografia através do AWS KMS.",
            "2": "Armazenar todos os dados no Amazon Glacier para garantir que sejam arquivados e excluir automaticamente os dados após cinco anos.",
            "3": "Habilitar o registro do AWS CloudTrail para arquivar automaticamente todos os dados, garantindo o gerenciamento do ciclo de vida dos dados sem políticas adicionais.",
            "4": "Usar o AWS Shield para gerenciamento do ciclo de vida e controlar o acesso a dados sensíveis em conformidade com as regulamentações."
        },
        "Correct Answer": "Usar políticas IAM para controlar o acesso aos dados, implementar Políticas de Ciclo de Vida do S3 para gerenciar a idade dos dados e configurar a criptografia através do AWS KMS.",
        "Explanation": "Esta opção está correta porque aborda de forma abrangente as necessidades do prestador de serviços de saúde em relação ao acesso seguro aos dados, gerenciamento do ciclo de vida e proteção dos dados. As políticas IAM (Identity and Access Management) permitem que o prestador defina quem pode acessar dados específicos, garantindo que apenas usuários autorizados tenham acesso. As Políticas de Ciclo de Vida do S3 permitem que o prestador automatize a transição de dados para diferentes classes de armazenamento ou exclua-os após um período especificado, gerenciando assim a idade dos dados de forma eficaz. Além disso, usar o AWS KMS (Key Management Service) para criptografia garante que os dados estejam protegidos tanto em repouso quanto em trânsito, em conformidade com as regulamentações de proteção de dados.",
        "Other Options": [
            "Esta opção está incorreta porque, embora armazenar dados no Amazon Glacier seja uma boa maneira de arquivar dados, não fornece uma solução abrangente para controle de acesso ou criptografia. Também não aborda a necessidade de gerenciar o acesso aos dados ou políticas de ciclo de vida além do simples arquivamento e exclusão após cinco anos.",
            "Esta opção está incorreta porque habilitar o registro do AWS CloudTrail é principalmente para auditoria e monitoramento de chamadas de API e não gerencia diretamente o ciclo de vida dos dados ou controle de acesso. O CloudTrail não arquiva automaticamente os dados ou impõe políticas de gerenciamento do ciclo de vida; requer configurações adicionais para alcançar esses objetivos.",
            "Esta opção está incorreta porque o AWS Shield é um serviço projetado para proteger aplicativos contra ataques DDoS e não fornece recursos para gerenciamento do ciclo de vida ou controle de acesso. Não aborda as necessidades específicas de proteção de dados e regulamentações de conformidade descritas no cenário."
        ]
    },
    {
        "Question Number": "47",
        "Situation": "Uma empresa de e-commerce está redesenhando seu sistema de processamento de pedidos para melhorar a confiabilidade e escalabilidade. O sistema precisa lidar com um alto volume de pedidos e garantir que cada pedido seja processado exatamente uma vez, mesmo em caso de falhas de componentes.",
        "Question": "Qual serviço da AWS o arquiteto de soluções deve implementar para desacoplar efetivamente a submissão de pedidos dos componentes de processamento de pedidos?",
        "Options": {
            "1": "Amazon SNS (Simple Notification Service)",
            "2": "Amazon SQS (Simple Queue Service)",
            "3": "AWS Step Functions",
            "4": "Amazon MQ"
        },
        "Correct Answer": "Amazon SQS (Simple Queue Service)",
        "Explanation": "O Amazon SQS é um serviço de enfileiramento de mensagens totalmente gerenciado que permite o desacoplamento de microsserviços, sistemas distribuídos e aplicações sem servidor. Ele permite que o componente de submissão de pedidos envie mensagens para uma fila, que pode então ser processada pelo componente de processamento de pedidos de forma independente. Isso garante que cada pedido seja processado exatamente uma vez, mesmo em caso de falhas de componentes, já que o SQS fornece entrega de pelo menos uma vez e pode ser configurado para processamento exatamente uma vez com o uso de recursos de deduplicação. Além disso, o SQS pode lidar com um alto volume de mensagens, tornando-o adequado para os requisitos de escalabilidade do sistema de e-commerce.",
        "Other Options": [
            "O Amazon SNS (Simple Notification Service) é usado principalmente para mensagens pub/sub e não é projetado para desacoplar a submissão de pedidos do processamento de uma maneira que garanta o processamento exatamente uma vez. O SNS é mais adequado para transmitir mensagens para vários assinantes do que para enfileirar mensagens para processamento.",
            "O AWS Step Functions é um serviço de orquestração sem servidor que permite coordenar vários serviços da AWS em fluxos de trabalho sem servidor. Embora possa gerenciar fluxos de trabalho complexos, não é especificamente projetado para desacoplar componentes como o SQS. É mais adequado para orquestrar tarefas do que para lidar com enfileiramento de mensagens.",
            "O Amazon MQ é um serviço de corretor de mensagens gerenciado que suporta vários protocolos de mensagens. Embora possa ser usado para desacoplar componentes, é mais complexo de configurar e gerenciar em comparação com o SQS. Além disso, pode não fornecer o mesmo nível de escalabilidade e confiabilidade para processamento de pedidos de alto volume como o SQS."
        ]
    },
    {
        "Question Number": "48",
        "Situation": "Uma empresa de mídia usa o Amazon RDS para várias aplicações em diferentes departamentos. Eles querem rastrear e alocar os custos do banco de dados para cada departamento para entender as despesas e otimizar o uso.",
        "Question": "Qual recurso de gerenciamento de custos da AWS ajudaria melhor a alcançar isso? (Escolha dois.)",
        "Options": {
            "1": "Habilitar faturamento multi-conta entre departamentos",
            "2": "Aplicar tags de alocação de custos a cada instância de banco de dados RDS por departamento",
            "3": "Configurar orçamentos separados da AWS para cada departamento",
            "4": "Usar o AWS Free Tier para todos os bancos de dados do departamento",
            "5": "Implementar Categorias de Custos da AWS para agrupar custos com base em critérios específicos de cada departamento"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Aplicar tags de alocação de custos a cada instância de banco de dados RDS por departamento",
            "Implementar Categorias de Custos da AWS para agrupar custos com base em critérios específicos de cada departamento"
        ],
        "Explanation": "Aplicar tags de alocação de custos a cada instância de banco de dados RDS por departamento permite que a empresa rastreie e aloque custos a cada departamento. Essas tags podem ser usadas para categorizar custos em relatórios de faturamento detalhados. As Categorias de Custos da AWS podem ser usadas para agrupar custos com base em critérios específicos de cada departamento. Isso permite que a empresa personalize como visualiza e gerencia custos, e pode ajudá-los a entender os custos associados ao uso de recursos da AWS por cada departamento.",
        "Other Options": [
            "Habilitar faturamento multi-conta entre departamentos não é a melhor solução porque exigiria que cada departamento tivesse sua própria conta AWS, o que pode não ser prático ou eficiente. Esta opção também não ajuda diretamente a rastrear e alocar custos a cada departamento.",
            "Configurar orçamentos separados da AWS para cada departamento poderia ajudar a gerenciar custos, mas não ajuda diretamente a rastrear e alocar custos a cada departamento. É mais sobre definir e gerenciar limites de gastos do que rastrear e alocar custos.",
            "Usar o AWS Free Tier para todos os bancos de dados do departamento não é uma solução viável porque o Free Tier tem limites de uso, e uma empresa de mídia com várias aplicações em diferentes departamentos provavelmente excederá esses limites. Além disso, esta opção não ajuda a rastrear e alocar custos."
        ]
    },
    {
        "Question Number": "49",
        "Situation": "Uma organização precisa fornecer acesso temporário a um fornecedor terceirizado para acessar certos recursos dentro de sua conta AWS. O acesso do fornecedor deve ser limitado a uma duração específica, e a organização deseja garantir que o fornecedor não possa fazer login diretamente como um usuário IAM.",
        "Question": "Quais abordagens a organização deve adotar para conceder ao fornecedor acesso seguro e temporário? (Escolha duas.)",
        "Options": {
            "1": "Criar um usuário IAM para o fornecedor com as permissões necessárias e excluir a conta do usuário assim que o acesso não for mais necessário.",
            "2": "Configurar um grupo IAM com as permissões necessárias, adicionar o fornecedor ao grupo e removê-lo assim que o acesso não for mais necessário.",
            "3": "Usar funções IAM e o Serviço de Token Seguro (STS) para fornecer ao fornecedor acesso temporário através da assunção de função.",
            "4": "Anexar uma política à conta raiz para permitir temporariamente o acesso do fornecedor e removê-la após a duração necessária.",
            "5": "Usar o AWS IAM Identity Center (AWS Single Sign-On) para atribuir um papel de acesso temporário ao fornecedor."
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "Usar funções IAM e o Serviço de Token Seguro (STS) para fornecer ao fornecedor acesso temporário através da assunção de função.",
            "Usar o AWS IAM Identity Center (AWS Single Sign-On) para atribuir um papel de acesso temporário ao fornecedor."
        ],
        "Explanation": "As funções IAM e o Serviço de Token Seguro (STS) são projetados para fornecer acesso temporário aos recursos da AWS. Ao usar a assunção de função, o fornecedor pode receber as permissões necessárias sem precisar criar um usuário IAM permanente. As permissões podem ser revogadas simplesmente removendo a função. O AWS IAM Identity Center (AWS Single Sign-On) também permite a atribuição de acesso temporário, que pode ser revogada assim que o acesso do fornecedor não for mais necessário. Ambos os métodos garantem que o fornecedor não possa fazer login diretamente como um usuário IAM, atendendo aos requisitos da organização.",
        "Other Options": [
            "Criar um usuário IAM para o fornecedor e excluí-lo assim que o acesso não for mais necessário não é uma abordagem recomendada, pois envolve criar e gerenciar usuários IAM permanentes, o que pode ser um risco de segurança. Além disso, isso não impede que o fornecedor faça login diretamente como um usuário IAM.",
            "Configurar um grupo IAM e adicionar o fornecedor ao grupo também não é uma abordagem recomendada. Embora permita que as permissões sejam gerenciadas em nível de grupo, ainda envolve criar um usuário IAM permanente para o fornecedor, o que não é desejado neste cenário.",
            "Anexar uma política à conta raiz para permitir temporariamente o acesso do fornecedor não é uma boa prática. A conta raiz tem acesso total a todos os recursos na conta AWS, e não é recomendado usá-la para interações diárias ou para conceder acesso temporário a terceiros."
        ]
    },
    {
        "Question Number": "50",
        "Situation": "Uma empresa de produção de mídia precisa migrar 20 PB de filmagens de vídeo em alta definição arquivadas de seu armazenamento local para a AWS para armazenamento de longo prazo e processamento ocasional. Os dados estão localizados em vários sites, e a empresa prefere uma solução que seja econômica e forneça alguma capacidade de processamento de dados durante o processo de transferência.",
        "Question": "Qual solução de migração de dados da AWS se adequaria melhor às necessidades da empresa?",
        "Options": {
            "1": "AWS Snowball com dispositivos de 80 TB",
            "2": "AWS Snowball Edge com dispositivos otimizados para armazenamento",
            "3": "AWS Snowmobile",
            "4": "AWS Direct Connect com uma conexão dedicada"
        },
        "Correct Answer": "AWS Snowball Edge com dispositivos otimizados para armazenamento",
        "Explanation": "O AWS Snowball Edge com dispositivos otimizados para armazenamento é a melhor opção para as necessidades da empresa porque permite a transferência de grandes quantidades de dados (até 100 TB por dispositivo) enquanto também fornece capacidades de processamento no dispositivo. Isso significa que a empresa pode realizar algum processamento de dados durante a transferência, o que é essencial dado seu requisito de processamento ocasional das filmagens arquivadas. Além disso, os dispositivos Snowball Edge são projetados para computação de borda, tornando-os adequados para lidar com dados em vários sites de forma eficiente.",
        "Other Options": [
            "O AWS Snowball com dispositivos de 80 TB não é a melhor opção porque, embora possa lidar com grandes transferências de dados, não fornece o mesmo nível de capacidades de processamento que os dispositivos Snowball Edge. A empresa precisa especificamente de alguma capacidade de processamento durante a transferência, o que o Snowball não oferece.",
            "O AWS Snowmobile é uma opção viável para migrações de dados extremamente grandes (até 100 PB), mas é mais adequado para cenários onde os dados estão localizados em um único site e requerem uma transferência física em grande escala. Dado que os dados estão espalhados em vários sites e a empresa prefere uma solução mais flexível, o Snowmobile não é a melhor opção.",
            "O AWS Direct Connect fornece uma conexão de rede dedicada à AWS, o que pode facilitar a transferência de dados, mas não oferece inherentemente um meio de migrar grandes quantidades de dados de forma eficiente ou oferecer capacidades de processamento durante a transferência. Esta opção provavelmente seria mais cara e menos eficaz para as necessidades específicas da empresa em comparação com o uso do Snowball Edge."
        ]
    },
    {
        "Question Number": "51",
        "Situation": "Uma empresa está configurando a segurança da rede para seu ambiente AWS e deseja entender o comportamento de firewalls com estado e sem estado. A equipe de segurança precisa permitir que os clientes iniciem conexões HTTPS com o servidor web da empresa e garantir que as respostas sejam retornadas corretamente.",
        "Question": "Como a empresa deve configurar as regras de segurança para permitir essa conexão enquanto entende a diferença entre filtragem com estado e sem estado?",
        "Options": {
            "1": "Usar um firewall com estado que automaticamente permite respostas de entrada a uma solicitação de saída, configurando apenas uma regra de saída para HTTPS (porta 443) do cliente para o servidor.",
            "2": "Usar um firewall sem estado, configurando regras de saída e entrada na porta 443 para permitir o tráfego HTTPS do cliente para o servidor e a resposta do servidor para o cliente.",
            "3": "Usar um firewall com estado, configurando regras de saída e entrada na porta 443, já que firewalls com estado não rastreiam automaticamente os estados de conexão.",
            "4": "Usar um firewall sem estado, configurando apenas uma regra de entrada na porta 443, já que a resposta de saída será permitida automaticamente."
        },
        "Correct Answer": "Usar um firewall com estado que automaticamente permite respostas de entrada a uma solicitação de saída, configurando apenas uma regra de saída para HTTPS (porta 443) do cliente para o servidor.",
        "Explanation": "Um firewall com estado rastreia o estado das conexões ativas e permite automaticamente o tráfego de retorno para conexões estabelecidas. Neste cenário, quando um cliente inicia uma conexão HTTPS com o servidor web, o firewall com estado permitirá a resposta de entrada do servidor de volta ao cliente sem precisar de uma regra de entrada separada. Portanto, apenas uma regra de saída para o tráfego HTTPS do cliente para o servidor é necessária, pois o firewall com estado lidará automaticamente com o tráfego de entrada correspondente.",
        "Other Options": [
            "Usar um firewall sem estado requer regras explícitas para tráfego de entrada e saída. Portanto, configurar apenas uma regra de saída para HTTPS não permitiria que a resposta do servidor chegasse ao cliente, já que o firewall sem estado não rastreia os estados de conexão e bloquearia a resposta de entrada.",
            "Esta opção afirma incorretamente que firewalls com estado não rastreiam automaticamente os estados de conexão. Na verdade, firewalls com estado rastreiam os estados de conexão, razão pela qual apenas uma regra de saída é necessária para a solicitação inicial, permitindo a resposta de entrada automaticamente.",
            "Esta opção está incorreta porque um firewall sem estado não permite automaticamente respostas de saída. Ele requer regras explícitas para ambas as direções. Configurar apenas uma regra de entrada não permitiria que a resposta do servidor chegasse ao cliente, já que a solicitação de saída não teria uma regra correspondente para permitir o tráfego de retorno."
        ]
    },
    {
        "Question Number": "52",
        "Situation": "Uma empresa de varejo deseja coletar dados de clickstream em tempo real de seu site de comércio eletrônico de alto tráfego para analisar padrões de comportamento do usuário e melhorar o engajamento do cliente. Os dados devem ser transformados em tempo real, incluindo limpeza e etiquetagem de dados, antes de serem entregues ao Amazon Redshift para análises e ao Amazon S3 para arquivamento a longo prazo. A empresa busca uma solução gerenciada e escalável que possa lidar com fluxo contínuo de dados com mínima sobrecarga operacional e capacidades de transformação em tempo real.",
        "Question": "Qual configuração de serviço AWS atenderia melhor a esses requisitos?",
        "Options": {
            "1": "Usar Amazon Kinesis Data Streams em conjunto com AWS Lambda para transformar dados em tempo real e, em seguida, entregá-los ao Amazon S3 para armazenamento",
            "2": "Implementar Amazon Kinesis Data Firehose com uma função AWS Lambda para transformação em tempo real e configurá-lo para entregar os dados transformados tanto ao Amazon Redshift quanto ao Amazon S3",
            "3": "Usar Amazon S3 como o principal armazenamento de dados e processar transformações de dados em lote usando AWS Glue antes de carregar no Amazon Redshift",
            "4": "Configurar Amazon Managed Streaming for Apache Kafka para lidar com ingestão de dados em streaming, com AWS Lambda realizando a transformação e, em seguida, entregando-a ao Redshift"
        },
        "Correct Answer": "Implementar Amazon Kinesis Data Firehose com uma função AWS Lambda para transformação em tempo real e configurá-lo para entregar os dados transformados tanto ao Amazon Redshift quanto ao Amazon S3",
        "Explanation": "Amazon Kinesis Data Firehose é projetado especificamente para ingestão e transformação de dados em tempo real. Ele permite uma integração perfeita com AWS Lambda, que pode ser usado para realizar a limpeza e etiquetagem de dados necessárias em tempo real. Essa configuração permite que a empresa de varejo colete e processe eficientemente dados de clickstream em tempo real, entregando os dados transformados tanto ao Amazon Redshift para análises quanto ao Amazon S3 para armazenamento a longo prazo. Essa solução é gerenciada e escalável, minimizando a sobrecarga operacional enquanto atende ao requisito de fluxo contínuo de dados.",
        "Other Options": [
            "Usar Amazon Kinesis Data Streams com AWS Lambda é uma opção viável para processamento de dados em tempo real; no entanto, requer etapas adicionais para gerenciar a entrega de dados tanto ao Amazon Redshift quanto ao Amazon S3, tornando-a menos direta do que usar Kinesis Data Firehose, que pode lidar com isso diretamente.",
            "Usar Amazon S3 como o principal armazenamento de dados e processar transformações de dados em lote com AWS Glue não atende ao requisito de transformação de dados em tempo real, pois depende de processamento em lote, o que introduz latência e não é adequado para fluxo contínuo de dados.",
            "Configurar Amazon Managed Streaming for Apache Kafka pode lidar efetivamente com a ingestão de dados em streaming, mas adiciona complexidade em termos de gerenciamento e sobrecarga operacional em comparação com Kinesis Data Firehose. Além disso, exigiria mais configuração para integrar com AWS Lambda para transformações e para entregar dados ao Redshift."
        ]
    },
    {
        "Question Number": "53",
        "Situation": "Uma instituição financeira opera aplicações críticas que requerem conectividade estável, de alta largura de banda e baixa latência entre seus data centers locais e a AWS para suportar processamento de dados em tempo real e atividades de negociação. Eles querem garantir que todas as transferências de dados ocorram através de uma conexão segura e privada que evite a internet pública, protegendo contra potenciais riscos de segurança e variabilidade de desempenho.",
        "Question": "Qual opção atenderia melhor aos seus requisitos?",
        "Options": {
            "1": "Usar uma linha dedicada de alta velocidade de um provedor de telecomunicações diretamente para a AWS",
            "2": "Estabelecer uma VPN Site-to-Site da AWS pela internet pública",
            "3": "Implantar AWS Direct Connect para uma conexão de rede privada e dedicada",
            "4": "Configurar um protocolo de transferência de arquivos criptografado (FTP) para sincronizações periódicas de dados"
        },
        "Correct Answer": "Implantar AWS Direct Connect para uma conexão de rede privada e dedicada",
        "Explanation": "AWS Direct Connect fornece uma conexão dedicada e privada entre os data centers locais e a AWS. Esta opção atende aos requisitos da instituição financeira para conectividade estável, de alta largura de banda e baixa latência, essenciais para aplicações críticas como processamento de dados em tempo real e negociação. O Direct Connect evita a internet pública, reduzindo significativamente os riscos de segurança e a variabilidade de desempenho, tornando-se a melhor escolha para transferências de dados seguras e confiáveis.",
        "Other Options": [
            "Usar uma linha dedicada de alta velocidade de um provedor de telecomunicações diretamente para a AWS pode fornecer alta largura de banda, mas não garante o mesmo nível de integração e confiabilidade que o AWS Direct Connect. Além disso, pode envolver custos mais altos e complexidade na configuração e gerenciamento.",
            "Estabelecer uma VPN Site-to-Site da AWS pela internet pública oferece criptografia e segurança, mas não fornece os requisitos de baixa latência e alta largura de banda necessários para aplicações em tempo real. VPNs também podem estar sujeitas a variabilidade de desempenho devido à sua dependência da internet pública.",
            "Configurar um protocolo de transferência de arquivos criptografado (FTP) para sincronizações periódicas de dados não atende ao requisito de processamento de dados em tempo real e atividades de negociação. Este método é mais adequado para processamento em lote do que para transferência contínua de dados de baixa latência, que é crítica para as operações da instituição."
        ]
    },
    {
        "Question Number": "54",
        "Situation": "Uma empresa possui duas contas AWS: uma conta de desenvolvimento e uma conta de produção. Os desenvolvedores na conta de desenvolvimento precisam de acesso temporário a recursos específicos na conta de produção para fins de teste. A empresa deseja aplicar o princípio do menor privilégio e garantir que os desenvolvedores possam acessar apenas os recursos necessários por um tempo limitado.",
        "Question": "Qual abordagem a empresa deve usar para atender a esse requisito?",
        "Options": {
            "1": "Criar usuários IAM na conta de produção e anexar políticas que concedam acesso aos recursos necessários.",
            "2": "Usar o AWS Security Token Service (STS) para criar credenciais de segurança temporárias, permitindo que os desenvolvedores assumam um papel na conta de produção com permissões para acessar os recursos necessários.",
            "3": "Configurar acesso entre contas criando um grupo IAM na conta de desenvolvimento e anexando uma política que conceda acesso a recursos na conta de produção.",
            "4": "Usar AWS Organizations para replicar automaticamente permissões da conta de desenvolvimento para a conta de produção para todos os desenvolvedores."
        },
        "Correct Answer": "Usar o AWS Security Token Service (STS) para criar credenciais de segurança temporárias, permitindo que os desenvolvedores assumam um papel na conta de produção com permissões para acessar os recursos necessários.",
        "Explanation": "Usar o AWS Security Token Service (STS) para criar credenciais de segurança temporárias é a melhor abordagem para este cenário porque permite que os desenvolvedores assumam um papel na conta de produção com permissões específicas. Este método adere ao princípio do menor privilégio, concedendo acesso apenas aos recursos necessários por um tempo limitado. As credenciais temporárias fornecidas pelo STS expiram após um período especificado, garantindo que o acesso não seja permanente e reduzindo o risco de acesso não autorizado aos recursos de produção.",
        "Other Options": [
            "Criar usuários IAM na conta de produção e anexar políticas que concedam acesso aos recursos necessários não é ideal porque envolveria a criação de contas de usuário permanentes, o que contradiz o princípio do menor privilégio e não fornece acesso temporário.",
            "Configurar acesso entre contas criando um grupo IAM na conta de desenvolvimento e anexando uma política que conceda acesso a recursos na conta de produção está incorreto porque grupos IAM não suportam permissões entre contas diretamente. Em vez disso, papéis devem ser usados para acesso entre contas.",
            "Usar AWS Organizations para replicar automaticamente permissões da conta de desenvolvimento para a conta de produção para todos os desenvolvedores não é adequado porque concederia acesso mais amplo do que o necessário, violando o princípio do menor privilégio. Esta abordagem não permite o controle detalhado necessário para acesso temporário."
        ]
    },
    {
        "Question Number": "55",
        "Situation": "Uma empresa deseja projetar uma arquitetura de aplicação escalável que possa lidar com altos volumes de tarefas assíncronas e requer que os componentes se comuniquem sem dependências diretas entre si.",
        "Question": "Qual serviço AWS seria mais apropriado para implementar uma arquitetura orientada a eventos e desacoplada, e por quê?",
        "Options": {
            "1": "Amazon SQS",
            "2": "Amazon RDS",
            "3": "Amazon DynamoDB",
            "4": "AWS Lambda"
        },
        "Correct Answer": "Amazon SQS",
        "Explanation": "Amazon SQS (Simple Queue Service) é projetado especificamente para desacoplar componentes de uma aplicação distribuída. Ele permite a comunicação assíncrona entre diferentes partes de uma aplicação usando filas de mensagens. Isso significa que os componentes podem enviar mensagens para a fila sem precisar conhecer os outros componentes que processarão essas mensagens, permitindo assim uma arquitetura desacoplada. O SQS pode lidar com altos volumes de mensagens, tornando-o adequado para aplicações que requerem escalabilidade e confiabilidade no processamento de tarefas assíncronas.",
        "Other Options": [
            "Amazon RDS (Relational Database Service) é um serviço de banco de dados relacional gerenciado que é usado principalmente para armazenar dados estruturados. Ele não fornece a arquitetura orientada a eventos ou o desacoplamento de componentes que o SQS oferece, pois requer conexões diretas entre a aplicação e o banco de dados.",
            "Amazon DynamoDB é um serviço de banco de dados NoSQL que fornece desempenho rápido e previsível com escalabilidade sem costura. Embora possa lidar com altos volumes de dados, não é especificamente projetado para gerenciar tarefas assíncronas ou para desacoplar componentes em uma arquitetura orientada a eventos como o SQS.",
            "AWS Lambda é um serviço de computação sem servidor que executa código em resposta a eventos. Embora possa ser parte de uma arquitetura orientada a eventos, não serve como um serviço de mensagens em si. Frequentemente é usado em conjunto com SQS ou outros serviços para processar mensagens, mas não fornece o mecanismo de enfileiramento que permite o desacoplamento entre os componentes."
        ]
    },
    {
        "Question Number": "56",
        "Situation": "Um arquiteto de soluções precisa garantir que apenas certos papéis do IAM dentro da conta AWS da empresa possam acessar dados sensíveis específicos armazenados no Amazon S3. A empresa segue um modelo rigoroso de acesso ao menor privilégio.",
        "Question": "Qual método é o MAIS apropriado para impor esse requisito?",
        "Options": {
            "1": "Usar políticas de bucket do S3 que concedem acesso apenas a papéis IAM específicos",
            "2": "Ativar MFA Delete no bucket S3",
            "3": "Configurar um alarme do Amazon CloudWatch para tentativas de acesso não autorizadas",
            "4": "Ativar S3 Transfer Acceleration"
        },
        "Correct Answer": "Usar políticas de bucket do S3 que concedem acesso apenas a papéis IAM específicos",
        "Explanation": "Usar políticas de bucket do S3 para conceder acesso apenas a papéis IAM específicos é o método mais apropriado para impor o requisito de limitar o acesso a dados sensíveis. As políticas de bucket permitem um controle detalhado sobre quem pode acessar os dados armazenados no bucket S3, alinhando-se ao modelo de acesso ao menor privilégio. Ao especificar quais papéis IAM podem acessar o bucket, o arquiteto de soluções pode garantir que apenas papéis autorizados tenham as permissões necessárias para acessar dados sensíveis, aumentando assim a segurança.",
        "Other Options": [
            "Ativar MFA Delete no bucket S3 é um recurso de segurança que previne a exclusão acidental de objetos no bucket e requer autenticação multifatorial para operações de exclusão. Embora adicione uma camada de segurança, não controla o acesso aos dados em si, tornando-se menos relevante para o requisito de restringir o acesso com base em papéis IAM.",
            "Configurar um alarme do Amazon CloudWatch para tentativas de acesso não autorizadas pode ajudar a monitorar e alertar sobre atividades suspeitas, mas não impede o acesso. Essa abordagem é mais sobre detecção do que imposição de controle de acesso, que é a principal preocupação neste cenário.",
            "Ativar S3 Transfer Acceleration melhora a velocidade de transferência de dados para e do S3, mas não se relaciona ao controle de acesso. Esta opção não aborda o requisito de restringir o acesso a dados sensíveis com base em papéis IAM."
        ]
    },
    {
        "Question Number": "57",
        "Situation": "Um portal de notícias online recebe milhões de interações de usuários diariamente, incluindo cliques, visualizações e compartilhamentos. Essas interações precisam ser ingeridas em tempo real para análises e entrega de conteúdo personalizado. A empresa espera que o volume de interações cresça rapidamente no próximo ano.",
        "Question": "Qual padrão de ingestão de dados o arquiteto de soluções deve projetar para lidar com esse cenário de forma eficaz?",
        "Options": {
            "1": "Ingestão em lote com transferências diárias de dados",
            "2": "Ingestão em streaming em tempo real",
            "3": "Uploads manuais de dados através do AWS Management Console",
            "4": "Ingestão programada usando AWS Data Pipeline"
        },
        "Correct Answer": "Ingestão em streaming em tempo real",
        "Explanation": "A ingestão em streaming em tempo real é o padrão mais adequado para este cenário porque o portal de notícias online requer processamento imediato das interações dos usuários, como cliques, visualizações e compartilhamentos. Dado o crescimento rápido esperado no volume de interações, uma abordagem em tempo real permite um fluxo contínuo de dados e análises imediatas, possibilitando a entrega de conteúdo personalizado e insights oportunos. Este método garante que os dados sejam processados à medida que chegam, o que é essencial para manter uma experiência de usuário envolvente e se adaptar ao comportamento do usuário em tempo real.",
        "Other Options": [
            "A ingestão em lote com transferências diárias de dados não é apropriada para este cenário porque envolve coletar dados ao longo de um período e processá-los de uma só vez. Isso levaria a atrasos nas análises e na entrega de conteúdo, o que não é adequado para uma plataforma que depende de interações de usuários em tempo real.",
            "Uploads manuais de dados através do AWS Management Console são impraticáveis para lidar com milhões de interações diárias. Este método é intensivo em mão de obra e não escala bem, tornando-se inadequado para um ambiente de alto volume onde automação e velocidade são críticas.",
            "A ingestão programada usando AWS Data Pipeline pode fornecer algum nível de automação, mas ainda opera em um cronograma predefinido em vez de em tempo real. Isso não atenderia às necessidades do portal de notícias para processamento imediato de dados e poderia resultar em análises e entrega de conteúdo desatualizados."
        ]
    },
    {
        "Question Number": "58",
        "Situation": "Uma startup está construindo uma plataforma de análises em tempo real na AWS. A plataforma precisa ingerir dados de milhares de dispositivos IoT, processar os dados em tempo real e armazenar os dados processados para análise posterior. A solução deve ser altamente escalável e minimizar a sobrecarga operacional.",
        "Question": "Qual combinação de serviços da AWS o arquiteto de soluções deve usar para construir esta plataforma? (Escolha DOIS.)",
        "Options": {
            "1": "AWS Lambda",
            "2": "Amazon Kinesis Data Streams",
            "3": "Amazon RDS for MySQL",
            "4": "Amazon S3",
            "5": "Amazon QuickSight"
        },
        "Is_Multiple": true,
        "Correct Answer": [
            "AWS Lambda",
            "Amazon Kinesis Data Streams"
        ],
        "Explanation": "AWS Lambda é um serviço de computação sem servidor que permite executar seu código sem provisionar ou gerenciar servidores. Pode ser usado para processar os dados em tempo real, que é um requisito no cenário apresentado. Amazon Kinesis Data Streams é um serviço de streaming de dados em tempo real escalável e durável que pode capturar continuamente gigabytes de dados por segundo de centenas de milhares de fontes, como fluxos de cliques de sites, fluxos de eventos de banco de dados, transações financeiras, feeds de redes sociais, logs de TI e eventos de rastreamento de localização. Isso o torna uma escolha adequada para ingerir dados de milhares de dispositivos IoT em tempo real.",
        "Other Options": [
            "Amazon RDS for MySQL é um serviço de banco de dados relacional. Embora possa ser usado para armazenar dados, não é projetado para ingestão e processamento de dados em tempo real, que é um requisito no cenário apresentado.",
            "Amazon S3 é um serviço de armazenamento. Embora possa ser usado para armazenar dados processados, não suporta ingestão e processamento de dados em tempo real.",
            "Amazon QuickSight é um serviço de análise de negócios. Embora possa ser usado para analisar dados, não suporta ingestão, processamento e armazenamento de dados em tempo real, que são requisitos no cenário apresentado."
        ]
    },
    {
        "Question Number": "59",
        "Situation": "Uma empresa usa instâncias do Amazon EC2 para hospedar um aplicativo legado. O aplicativo requer acesso a arquivos armazenados em um sistema de arquivos de rede e deve suportar várias conexões simultâneas com baixa latência. A empresa precisa de uma solução gerenciada que forneça armazenamento escalável com alta disponibilidade.",
        "Question": "Qual serviço da AWS o arquiteto de soluções deve recomendar?",
        "Options": {
            "1": "Amazon S3",
            "2": "Amazon EFS (Elastic File System)",
            "3": "Amazon FSx for Windows File Server",
            "4": "Amazon EBS (Elastic Block Store)"
        },
        "Correct Answer": "Amazon EFS (Elastic File System)",
        "Explanation": "Amazon EFS (Elastic File System) é um serviço de armazenamento de arquivos totalmente gerenciado, escalável e elástico que é projetado para ser usado com instâncias do Amazon EC2. Ele suporta várias conexões simultâneas e fornece acesso de baixa latência a arquivos, tornando-o ideal para aplicativos que requerem acesso compartilhado a um sistema de arquivos. O EFS escala automaticamente à medida que arquivos são adicionados ou removidos, garantindo alta disponibilidade e durabilidade, o que se alinha perfeitamente com os requisitos do aplicativo legado descrito na situação.",
        "Other Options": [
            "Amazon S3 é um serviço de armazenamento de objetos que não é adequado para aplicativos que requerem uma interface de sistema de arquivos e acesso de baixa latência. É projetado para armazenar e recuperar grandes quantidades de dados não estruturados, mas não suporta a semântica de sistema de arquivos necessária para acesso simultâneo por várias instâncias.",
            "Amazon FSx for Windows File Server fornece um sistema de arquivos Windows totalmente gerenciado que suporta o protocolo SMB e é adequado para aplicativos baseados em Windows. Embora ofereça alta disponibilidade e escalabilidade, é especificamente adaptado para ambientes Windows e pode não ser necessário se o aplicativo legado não exigir recursos específicos do Windows.",
            "Amazon EBS (Elastic Block Store) fornece armazenamento em bloco para instâncias do EC2 e é adequado para casos de uso de instância única. Não suporta várias conexões simultâneas de diferentes instâncias, que é um requisito para o aplicativo legado. O EBS também não é um sistema de arquivos gerenciado, pois requer gerenciamento manual de volumes."
        ]
    },
    {
        "Question Number": "60",
        "Situation": "Uma empresa de análises possui várias instâncias do Amazon EC2 dentro de uma sub-rede privada que requerem acesso à internet para atualizações de software e sincronização de dados externos. Para manter os custos de rede baixos, estão considerando opções para configurar a Tradução de Endereço de Rede (NAT) para permitir acesso à internet para essas instâncias. A empresa deseja uma abordagem econômica para fornecer conectividade à internet sem implantar infraestrutura excessiva.",
        "Question": "Qual abordagem seria a mais econômica?",
        "Options": {
            "1": "Implantar um gateway NAT em cada Zona de Disponibilidade, garantindo redundância e equilibrando o tráfego entre várias zonas",
            "2": "Usar uma única instância NAT para lidar com o tráfego de todas as instâncias EC2 dentro da sub-rede privada, minimizando os custos de infraestrutura",
            "3": "Implantar gateways NAT separados para cada VPC, permitindo que cada rede virtual gerencie suas próprias necessidades de acesso à internet de forma independente",
            "4": "Usar gateways NAT com IPs Elásticos em várias regiões para fornecer acesso à internet e garantir alta disponibilidade"
        },
        "Correct Answer": "Usar uma única instância NAT para lidar com o tráfego de todas as instâncias EC2 dentro da sub-rede privada, minimizando os custos de infraestrutura",
        "Explanation": "Usar uma única instância NAT é a solução mais econômica para fornecer acesso à internet a várias instâncias EC2 em uma sub-rede privada. Instâncias NAT são geralmente mais baratas do que gateways NAT, e uma única instância pode lidar com o tráfego de saída para todas as instâncias na sub-rede. Essa abordagem minimiza os custos de infraestrutura enquanto ainda permite a conectividade necessária à internet para atualizações de software e sincronização de dados.",
        "Other Options": [
            "Implantar um gateway NAT em cada Zona de Disponibilidade proporcionaria redundância e balanceamento de carga, mas aumentaria significativamente os custos devido ao preço mais alto dos gateways NAT em comparação com as instâncias NAT. Esta opção não é econômica para as necessidades da empresa.",
            "Implantar gateways NAT separados para cada VPC também levaria a custos aumentados, já que cada gateway gera cobranças. Essa abordagem é desnecessária se o objetivo é minimizar os custos de infraestrutura enquanto ainda se fornece acesso à internet.",
            "Usar gateways NAT com IPs Elásticos em várias regiões garantiria alta disponibilidade, mas seria muito caro. Os gateways NAT são cobrados por hora e por GB de dados processados, tornando essa opção impraticável para um requisito sensível a custos."
        ]
    },
    {
        "Question Number": "61",
        "Situation": "Uma empresa está usando várias contas da AWS para gerenciar diferentes ambientes, como desenvolvimento, teste e produção. A equipe de segurança deseja impor políticas de segurança consistentes em todas as contas, permitindo ao mesmo tempo gerenciamento e monitoramento centralizados.",
        "Question": "Qual serviço da AWS a empresa deve usar para configurar um ambiente multi-conta seguro, e qual recurso pode ajudar a impor controles de segurança específicos em cada conta?",
        "Options": {
            "1": "Usar AWS Identity and Access Management (IAM) com limites de permissão para cada conta.",
            "2": "Usar AWS Control Tower com Service Control Policies (SCPs) para gerenciar políticas de segurança entre as contas.",
            "3": "Implementar AWS Shield para impor regras de segurança entre as diferentes contas.",
            "4": "Usar Amazon GuardDuty para gerenciar e aplicar políticas de segurança entre as contas."
        },
        "Correct Answer": "Usar AWS Control Tower com Service Control Policies (SCPs) para gerenciar políticas de segurança entre as contas.",
        "Explanation": "AWS Control Tower é projetado especificamente para ajudar organizações a configurar e governar um ambiente multi-conta seguro na AWS. Ele fornece uma maneira centralizada de gerenciar contas e impor políticas entre elas. As Service Control Policies (SCPs) são um recurso do AWS Organizations que permite definir limites de permissão para suas contas, garantindo que controles de segurança específicos sejam aplicados de forma consistente em todas as contas. Isso faz dele a melhor escolha para a necessidade da empresa de impor políticas de segurança consistentes, permitindo ao mesmo tempo gerenciamento e monitoramento centralizados.",
        "Other Options": [
            "AWS Identity and Access Management (IAM) com limites de permissão é útil para gerenciar permissões dentro de uma única conta, mas não fornece uma maneira centralizada de impor políticas entre várias contas. Portanto, não é adequado para o ambiente multi-conta da empresa.",
            "AWS Shield é um serviço gerenciado de proteção contra DDoS que ajuda a proteger aplicações contra ataques DDoS. Embora melhore a segurança, não fornece um mecanismo para impor políticas de segurança entre várias contas, tornando-o irrelevante para as necessidades da empresa.",
            "Amazon GuardDuty é um serviço de detecção de ameaças que monitora continuamente atividades maliciosas e comportamentos não autorizados. Embora forneça insights de segurança, não impõe políticas de segurança entre as contas, o que é um requisito chave para a empresa."
        ]
    },
    {
        "Question Number": "62",
        "Situation": "Uma empresa está projetando um sistema altamente disponível e tolerante a falhas que precisa lidar com picos de tráfego e possíveis falhas de componentes, mantendo um serviço consistente. O sistema usará microserviços e precisa garantir resiliência e escalabilidade.",
        "Question": "Qual padrão de design distribuído a empresa deve usar para alcançar isso?",
        "Options": {
            "1": "Usar o padrão de disjuntor para garantir que falhas de serviço sejam detectadas e gerenciadas proativamente, permitindo que o sistema mantenha desempenho durante falhas parciais.",
            "2": "Usar o padrão monolítico para reduzir a complexidade e garantir que todos os componentes estejam fortemente integrados e dependam uns dos outros.",
            "3": "Usar o padrão de repetição para tentar continuamente operações falhadas, mesmo que o sistema esteja enfrentando alto tráfego ou falhas de componentes.",
            "4": "Usar o padrão stateful para garantir que os serviços mantenham dados de sessão entre solicitações, permitindo que eles lidem com picos de tráfego."
        },
        "Correct Answer": "Usar o padrão de disjuntor para garantir que falhas de serviço sejam detectadas e gerenciadas proativamente, permitindo que o sistema mantenha desempenho durante falhas parciais.",
        "Explanation": "O padrão de disjuntor é projetado para detectar falhas e impedir que o sistema faça chamadas a um serviço que provavelmente falhará. Isso é particularmente útil em uma arquitetura de microserviços onde os serviços são interdependentes. Ao implementar um disjuntor, o sistema pode falhar rapidamente e redirecionar o tráfego ou fornecer opções de fallback, mantendo assim o desempenho e a disponibilidade geral do sistema durante falhas parciais. Esse padrão melhora a resiliência ao permitir que o sistema se recupere de forma elegante de falhas e gerencie picos de tráfego de forma eficaz.",
        "Other Options": [
            "O padrão monolítico não é adequado para um sistema altamente disponível e tolerante a falhas que usa microserviços. Arquiteturas monolíticas acoplam todos os componentes, dificultando a escalabilidade e o gerenciamento de serviços individuais de forma independente, o que contradiz os objetivos de resiliência e escalabilidade.",
            "O padrão de repetição, embora útil em certos cenários, pode agravar problemas durante alto tráfego ou falhas de componentes. Tentar continuamente operações falhadas sem uma estratégia pode levar a uma carga aumentada no sistema e potenciais falhas em cascata, o que não é ideal para manter um serviço consistente durante falhas.",
            "O padrão stateful pode complicar a escalabilidade e a resiliência em uma arquitetura de microserviços. Manter dados de sessão entre solicitações pode levar a desafios na distribuição de carga e no gerenciamento de falhas, já que serviços stateful podem não escalar facilmente ou se recuperar de falhas sem perder informações de sessão."
        ]
    },
    {
        "Question Number": "63",
        "Situation": "Uma empresa está usando Amazon Kinesis para processar dados de streaming em tempo real. Eles querem garantir que apenas usuários autorizados possam acessar os fluxos de dados e que os dados sejam criptografados tanto em trânsito quanto em repouso.",
        "Question": "Quais das seguintes ações a empresa deve tomar para proteger seus fluxos de dados do Kinesis?",
        "Options": {
            "1": "Ativar a criptografia do lado do servidor (SSE) usando o AWS Key Management Service (KMS) para criptografar dados em repouso e usar políticas do IAM para controlar o acesso aos fluxos.",
            "2": "Configurar os Fluxos de Dados do Kinesis para usar criptografia apenas em repouso, mas não ativar a criptografia em trânsito, pois não é necessária para comunicações internas da AWS.",
            "3": "Ativar o emparelhamento de VPC entre o Kinesis e outros serviços da AWS, garantindo que os dados sejam transmitidos por conexões de rede privadas para aumentar a segurança.",
            "4": "Permitir acesso aberto aos fluxos do Kinesis sem criptografia para garantir que os dados possam ser acessados rapidamente por vários aplicativos, e usar o CloudTrail para monitorar os logs de acesso."
        },
        "Correct Answer": "Ativar a criptografia do lado do servidor (SSE) usando o AWS Key Management Service (KMS) para criptografar dados em repouso e usar políticas do IAM para controlar o acesso aos fluxos.",
        "Explanation": "Ativar a criptografia do lado do servidor (SSE) usando o AWS Key Management Service (KMS) garante que os dados armazenados nos Fluxos de Dados do Kinesis sejam criptografados em repouso, proporcionando uma camada de segurança contra acesso não autorizado. Além disso, usar políticas do IAM permite que a empresa defina quem pode acessar os fluxos e quais ações podem ser realizadas, garantindo que apenas usuários autorizados tenham acesso a dados sensíveis. Essa combinação de criptografia e controle de acesso é essencial para proteger dados em um ambiente de nuvem.",
        "Other Options": [
            "Configurar os Fluxos de Dados do Kinesis para usar criptografia apenas em repouso, mas não ativar a criptografia em trânsito é insuficiente, pois os dados podem ser interceptados durante a transmissão. A criptografia em trânsito é crucial para proteger dados enquanto viajam pela rede, especialmente em um contexto de streaming em tempo real.",
            "Ativar o emparelhamento de VPC pode aumentar a segurança ao permitir comunicação privada entre serviços da AWS, mas não aborda a necessidade de criptografia em repouso ou em trânsito. Sem criptografia, os dados ainda podem estar vulneráveis a acesso não autorizado, tornando essa opção incompleta para proteger os fluxos de dados do Kinesis.",
            "Permitir acesso aberto aos fluxos do Kinesis sem criptografia representa um risco significativo à segurança, pois expõe dados sensíveis a qualquer pessoa que possa acessar os fluxos. Monitorar logs de acesso com o CloudTrail não impede o acesso não autorizado; apenas fornece visibilidade após o fato. Essa abordagem é contrária às melhores práticas para segurança de dados."
        ]
    },
    {
        "Question Number": "64",
        "Situation": "Imagine que você está lançando um site global para streaming de conteúdo de mídia de alta qualidade. Você precisa garantir que seus usuários tenham uma experiência com latência mínima e reprodução suave, independentemente de sua localização geográfica. Para alcançar isso, você decide usar o Amazon CloudFront para entrega de conteúdo.",
        "Question": "Qual componente do CloudFront é responsável por armazenar em cache o conteúdo mais próximo dos usuários para acesso mais rápido, e como isso contribui para a redução da latência?",
        "Options": {
            "1": "Distribuição, porque fornece a configuração principal e define o comportamento de cache.",
            "2": "Edge Location, pois armazena conteúdo em cache mais próximo dos usuários, resultando em tempos de acesso mais rápidos para dados frequentemente solicitados.",
            "3": "Regional Edge Cache, que funciona como uma versão maior das Edge Locations para armazenar mais dados para melhorar a eficiência do cache.",
            "4": "Origin, pois mantém o conteúdo original que é buscado pelo CloudFront quando solicitado pelo usuário."
        },
        "Correct Answer": "Edge Location, pois armazena conteúdo em cache mais próximo dos usuários, resultando em tempos de acesso mais rápidos para dados frequentemente solicitados.",
        "Explanation": "Edge Locations são o componente chave do Amazon CloudFront que armazenam em cache conteúdo em várias localizações geográficas ao redor do mundo. Ao armazenar cópias do conteúdo mais próximo dos usuários, as Edge Locations reduzem significativamente a distância que os dados precisam percorrer, o que minimiza a latência e melhora a velocidade de entrega de conteúdo. Isso é particularmente importante para streaming de mídia de alta qualidade, pois os usuários esperam acesso rápido ao conteúdo sem buffering.",
        "Other Options": [
            "Distribuição é uma configuração que define como o CloudFront entrega conteúdo, incluindo configurações para comportamento de cache, mas não armazena conteúdo em cache diretamente. É mais sobre a configuração geral do que sobre o armazenamento físico de conteúdo em cache.",
            "Regional Edge Cache serve como um intermediário entre a origem e as Edge Locations, armazenando maiores quantidades de dados para melhorar a eficiência do cache. No entanto, não é o componente principal responsável por armazenar conteúdo mais próximo dos usuários; esse papel é especificamente cumprido pelas Edge Locations.",
            "Origin refere-se à fonte original do conteúdo, como um bucket S3 ou um servidor web. Embora seja essencial para buscar conteúdo quando não está disponível no cache, não contribui para a redução da latência, pois geralmente está localizado mais longe dos usuários finais em comparação com as Edge Locations."
        ]
    },
    {
        "Question Number": "65",
        "Situation": "Você está projetando um sistema de processamento de trabalhos onde as mensagens precisam ser processadas em uma ordem específica, e duplicatas não são permitidas. No entanto, você quer equilibrar essa necessidade de ordenação com alta escalabilidade, já que o volume de mensagens pode variar muito.",
        "Question": "Qual tipo de fila do Amazon SQS você deve escolher para atender a esses requisitos, e por quê?",
        "Options": {
            "1": "Fila Padrão, porque permite throughput ilimitado e é otimizada para alta escalabilidade sem ordenação rigorosa.",
            "2": "Fila FIFO, porque fornece processamento exatamente uma vez e preserva a ordem estrita das mensagens, o que é crucial para seus requisitos.",
            "3": "Fila Padrão, porque oferece entrega de pelo menos uma vez, tornando-a adequada para lidar com volumes variáveis de mensagens.",
            "4": "Fila FIFO, porque não impõe limites em TPS e é otimizada para ordenação de melhor esforço, tornando-a ideal para aplicações de alto volume."
        },
        "Correct Answer": "Fila FIFO, porque fornece processamento exatamente uma vez e preserva a ordem estrita das mensagens, o que é crucial para seus requisitos.",
        "Explanation": "Uma Fila FIFO (First-In-First-Out) no Amazon SQS é projetada especificamente para garantir que as mensagens sejam processadas na exata ordem em que são enviadas e que cada mensagem seja processada exatamente uma vez. Isso é essencial para cenários onde a ordem do processamento das mensagens é crítica e duplicatas devem ser evitadas. Dadas as exigências de manter a ordenação estrita e prevenir duplicatas, uma Fila FIFO é a escolha mais adequada.",
        "Other Options": [
            "Fila Padrão, porque permite throughput ilimitado e é otimizada para alta escalabilidade sem ordenação rigorosa. No entanto, essa opção não atende ao requisito de ordenação estrita e pode levar à duplicação de mensagens.",
            "Fila FIFO, porque fornece processamento exatamente uma vez e preserva a ordem estrita das mensagens, o que é crucial para seus requisitos. Esta opção é realmente correta, mas é repetida na pergunta, tornando-a enganosa.",
            "Fila Padrão, porque oferece entrega de pelo menos uma vez, tornando-a adequada para lidar com volumes variáveis de mensagens. Embora essa opção permita alta escalabilidade, não garante a ordem das mensagens e pode resultar em duplicatas, o que não atende aos requisitos."
        ]
    }
]